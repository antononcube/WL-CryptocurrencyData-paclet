(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   2595211,      50033]
NotebookOptionsPosition[   2563849,      49344]
NotebookOutlinePosition[   2564392,      49362]
CellTagsIndexPosition[   2564349,      49359]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Cryptocurrencies data explorations", "Title",
 CellID->443633144,ExpressionUUID->"e5fdd3a4-67a4-4981-8e2a-4591aed66139"],

Cell[CellGroupData[{

Cell["Introduction", "Section",
 CellChangeTimes->{{3.833272003897187*^9, 3.833272006248767*^9}},
 CellID->362479408,ExpressionUUID->"d0cfcadf-3dac-4784-87e6-f0fe8b803f90"],

Cell[TextData[{
 "The main goal of this notebook is to provide some basic views and insights \
into the landscape of cryptocurrencies. The \[OpenCurlyDoubleQuote]landscape\
\[CloseCurlyDoubleQuote] we consider consists of price action and trading \
volume time series for cryptocurrencies found in ",
 ButtonBox["Yahoo Finance",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://finance.yahoo.com/cryptocurrencies"], None},
  ButtonNote->"https://finance.yahoo.com/cryptocurrencies"],
 "."
}], "Text",
 CellChangeTimes->{{3.83327212462845*^9, 3.833272137656361*^9}, 
   3.833272959286886*^9, {3.833354577232863*^9, 3.8333546408831244`*^9}, {
   3.8333565475978193`*^9, 3.833356630008667*^9}, {3.833370353647689*^9, 
   3.8333703716700706`*^9}},
 CellID->1927787364,ExpressionUUID->"b527cd70-7886-4731-afed-2a302e89d0bb"],

Cell["Here is the work plan followed in this notebook:", "Text",
 CellChangeTimes->{{3.833356649000926*^9, 3.8333566991209917`*^9}, {
  3.833358976721277*^9, 3.83335898694689*^9}},
 CellID->1236444459,ExpressionUUID->"54a3dab9-5595-44a3-8aab-44c977cae162"],

Cell["Get cryptocurrency data", "ItemNumbered",
 CellChangeTimes->{{3.833307214600623*^9, 3.833307233335806*^9}},
 CellID->1870254041,ExpressionUUID->"2ecf6c7d-c357-42aa-8a38-a023ef48a582"],

Cell["Do basic data analysis over suitable date ranges", "ItemNumbered",
 CellChangeTimes->{{3.833307214600623*^9, 3.83330725951423*^9}},
 CellID->641525948,ExpressionUUID->"5aa396dc-77a7-4dda-a402-32e7e0a31c19"],

Cell["Gather important cryptocurrency events", "ItemNumbered",
 CellChangeTimes->{{3.833307214600623*^9, 3.8333072793040648`*^9}},
 CellID->1758700096,ExpressionUUID->"6f28b443-7913-4665-a7f5-5b6ec0530e1b"],

Cell["\<\
Plot together cryptocurrency prices and trading volume time series together \
with the events\
\>", "ItemNumbered",
 CellChangeTimes->{{3.833307214600623*^9, 3.833307323865259*^9}},
 CellID->507596164,ExpressionUUID->"a596bfe9-7c88-464b-a018-0c605206f071"],

Cell["Make observations and conjectures over the plots", "ItemNumbered",
 CellChangeTimes->{{3.833307214600623*^9, 3.833307343025127*^9}},
 CellID->1363682464,ExpressionUUID->"34eec393-16c7-4bf5-9297-088dd2b437b8"],

Cell["\<\
Find \[OpenCurlyDoubleQuote]global\[CloseCurlyDoubleQuote] correlations \
between the different cryptocurrencies\
\>", "ItemNumbered",
 CellChangeTimes->{{3.833307214600623*^9, 3.833307378641919*^9}},
 CellID->1465691664,ExpressionUUID->"3ab9ad88-852c-4cd9-a3be-f76a44e8edd0"],

Cell["\<\
Find clusters of cryptocurrencies based on time series correlations\
\>", "ItemNumbered",
 CellChangeTimes->{{3.833307214600623*^9, 3.833307400307089*^9}},
 CellID->94882111,ExpressionUUID->"66da6198-93bd-4cea-8f15-811362d4dcd5"],

Cell["Here are some details for the steps above:", "Text",
 CellChangeTimes->{{3.833358878586897*^9, 3.8333588842684526`*^9}, {
  3.833358916690729*^9, 3.833358926882456*^9}},
 CellID->1250773503,ExpressionUUID->"9765b1d1-76f6-47b5-b147-dd02e4783767"],

Cell[TextData[{
 "The procedure of obtaining the cryptocurrencies data, point 1, is explained \
in detail in [",
 ButtonBox["AA1",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://mathematicaforprediction.wordpress.com/2021/06/19/crypto-\
currencies-data-acquisition-with-visualization/"], None},
  ButtonNote->
   "https://mathematicaforprediction.wordpress.com/2021/06/19/crypto-\
currencies-data-acquisition-with-visualization/"],
 "]. "
}], "Item",
 CellChangeTimes->{{3.833356720900276*^9, 3.8333568741368093`*^9}, {
  3.833356935284419*^9, 3.8333569604871817`*^9}, {3.833357092756042*^9, 
  3.833357138263094*^9}, {3.833357196224511*^9, 3.8333572514846907`*^9}, {
  3.8333587718236103`*^9, 3.833358872253572*^9}, {3.833358937788621*^9, 
  3.8333589377888927`*^9}, {3.8333590145592957`*^9, 3.833359014559449*^9}},
 CellID->32844438,ExpressionUUID->"7a5bac39-790b-406d-a87b-0cbd158c6b7b"],

Cell[TextData[{
 "There is a dedicated resource object ",
 StyleBox[ButtonBox["CrypocurrencyData",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://www.wolframcloud.com/obj/antononcube/DeployedResources/\
Function/CryptocurrencyData"], None},
  ButtonNote->
   "https://www.wolframcloud.com/obj/antononcube/DeployedResources/Function/\
CryptocurrencyData"], "Program"],
 " that provides cryptocurrency data and related documentation. "
}], "Subitem",
 CellChangeTimes->{{3.833356720900276*^9, 3.8333568741368093`*^9}, {
  3.833356935284419*^9, 3.8333569604871817`*^9}, {3.833357092756042*^9, 
  3.833357138263094*^9}, {3.833357196224511*^9, 3.8333572514846907`*^9}, {
  3.8333587718236103`*^9, 3.833358872253572*^9}, {3.833358937788621*^9, 
  3.8333589377888927`*^9}, {3.8333590207660847`*^9, 3.833359059791664*^9}, {
  3.833370393766458*^9, 3.833370394194009*^9}},
 CellID->113172187,ExpressionUUID->"df51f116-e51a-4f8a-8d66-5360c57ba93a"],

Cell["\<\
The cryptocurrency events data, point 3, is taken from different news sites.\
\>", "Item",
 CellChangeTimes->{{3.833356720900276*^9, 3.8333568741368093`*^9}, {
  3.833356935284419*^9, 3.8333569604871817`*^9}, {3.833357092756042*^9, 
  3.833357138263094*^9}, {3.833357196224511*^9, 3.8333572514846907`*^9}, {
  3.8333587718236103`*^9, 3.833358872253572*^9}, {3.833358942164596*^9, 
  3.833358947617461*^9}, {3.8333589999651117`*^9, 3.83335900571694*^9}},
 CellID->1561919314,ExpressionUUID->"d5e34c44-d7b6-46d6-ae7c-d884cd4229be"],

Cell["Links are provided in the corresponding dataset.", "Subitem",
 CellChangeTimes->{{3.833356720900276*^9, 3.8333568741368093`*^9}, {
  3.833356935284419*^9, 3.8333569604871817`*^9}, {3.833357092756042*^9, 
  3.833357138263094*^9}, {3.833357196224511*^9, 3.8333572514846907`*^9}, {
  3.8333587718236103`*^9, 3.833358872253572*^9}, {3.833358942164596*^9, 
  3.833358947617461*^9}, {3.8333589999651117`*^9, 3.8333590071636*^9}},
 CellID->337809470,ExpressionUUID->"c45da308-fe9d-40cd-84ca-82d06ea91a6e"],

Cell[TextData[{
 "The points 6 and 7 follow similar explorations (and code) described in [",
 ButtonBox["AA2",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://mathematicaforprediction.wordpress.com/2021/01/15/ny-times-\
covid-19-data-visualization-update/"], None},
  ButtonNote->
   "https://mathematicaforprediction.wordpress.com/2021/01/15/ny-times-covid-\
19-data-visualization-update/"],
 ", ",
 ButtonBox["AA3",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://mathematicaforprediction.wordpress.com/2020/04/17/apple-\
mobility-trends-data-visualization-for-covid-19/"], None},
  ButtonNote->
   "https://mathematicaforprediction.wordpress.com/2020/04/17/apple-mobility-\
trends-data-visualization-for-covid-19/"],
 "]. "
}], "Item",
 CellChangeTimes->{{3.833356720900276*^9, 3.8333568741368093`*^9}, {
  3.833356935284419*^9, 3.8333569604871817`*^9}, {3.833357092756042*^9, 
  3.833357138263094*^9}, {3.833357196224511*^9, 3.8333572514846907`*^9}, {
  3.8333587718236103`*^9, 3.833358872253572*^9}, {3.833359009528182*^9, 
  3.833359009778881*^9}},
 CellID->1764483269,ExpressionUUID->"1c30b718-a494-4ff5-a8cc-c37269e415c6"],

Cell["Those two articles deal with COVID-19 time series.", "Subitem",
 CellChangeTimes->{{3.833356720900276*^9, 3.8333568741368093`*^9}, {
  3.833356935284419*^9, 3.8333569604871817`*^9}, {3.833357092756042*^9, 
  3.833357138263094*^9}, {3.833357196224511*^9, 3.8333572514846907`*^9}, {
  3.8333587718236103`*^9, 3.833358872253572*^9}, {3.833359009528182*^9, 
  3.833359010878539*^9}},
 CellID->1068620660,ExpressionUUID->"c34b99d9-797c-491a-ba5f-2ce3f22caa14"],

Cell[TextData[{
 StyleBox["Remark:",
  FontWeight->"Bold"],
 " Note that in this notebook we do not discuss philosophical, \
macro-economic, and environmental issues with cryptocurrencies. We only \
discuss financial time series data."
}], "Text",
 CellChangeTimes->{{3.833356703980357*^9, 3.833356718775176*^9}, {
  3.833356963929562*^9, 3.833357078602066*^9}, {3.833359072292769*^9, 
  3.833359073157426*^9}, {3.833370417663033*^9, 3.8333704571050158`*^9}},
 CellID->901692759,ExpressionUUID->"d428b2b2-6dfc-40f0-8fce-3d626bedcaa0"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Cryptocurrencies data", "Section",
 CellChangeTimes->{{3.8332730056268797`*^9, 3.833273013693905*^9}},
 CellID->2105587281,ExpressionUUID->"0dd32104-9d92-43af-b14e-feef4218e0dd"],

Cell[TextData[{
 "The cryptocurrencies data used in this notebook is obtained from found in \
",
 ButtonBox["Yahoo Finance",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://finance.yahoo.com/cryptocurrencies"], None},
  ButtonNote->"https://finance.yahoo.com/cryptocurrencies"],
 " . The procedure of obtaining the cryptocurrencies data is explained in \
detail in [",
 ButtonBox["AA1",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://mathematicaforprediction.wordpress.com/2021/06/19/crypto-\
currencies-data-acquisition-with-visualization/"], None},
  ButtonNote->
   "https://mathematicaforprediction.wordpress.com/2021/06/19/crypto-\
currencies-data-acquisition-with-visualization/"],
 "]. There is a dedicated function provided by this paclet, ",
 Cell[BoxData[
  ButtonBox["CryptocurrencyData",
   BaseStyle->"Link",
   ButtonData->
    "paclet:AntonAntonov/CryptocurrencyData/ref/CryptocurrencyData"]], 
  "InlineFormula",ExpressionUUID->"75c30693-922e-4c51-928e-1b21fbe5ad49"],
 ", that provides the cryptocurrency data (and related documentation.) "
}], "Text",
 CellChangeTimes->{{3.8332730171471167`*^9, 3.833273018430113*^9}, 
   3.8332930810619*^9, {3.83335869069974*^9, 3.8333587607408667`*^9}, {
   3.833359090581121*^9, 3.833359105879279*^9}, {3.8333704662981253`*^9, 
   3.833370469278634*^9}, {3.890860861027238*^9, 3.89086094916917*^9}},
 CellID->222412854,ExpressionUUID->"f1b20729-f1be-477e-a5e3-21fa6083f829"],

Cell[CellGroupData[{

Cell["Load the paclet", "MathCaption",
 CellChangeTimes->{{3.89085859645085*^9, 3.8908586009933043`*^9}},
 CellID->45557952,ExpressionUUID->"e27fa627-5975-4b38-ad12-b31ceb93cfd8"],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<AntonAntonov`CryptocurrencyData`\>\"", 
  "]"}]], "Input",
 CellChangeTimes->{3.8908586028315773`*^9},
 CellLabel->"In[136]:=",
 CellID->1188320932,ExpressionUUID->"c0984499-a9b8-4752-9e70-c5544aa150d6"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Here are all cryptocurrencies we have data for:", "Text",
 CellChangeTimes->{{3.833296706483737*^9, 3.8332967253787746`*^9}},
 CellID->1471291398,ExpressionUUID->"6f9aa651-111d-4363-9237-69672ed8a917"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CryptocurrencyData", "[", "\"\<CryptocurrencyNames\>\"", 
  "]"}]], "Input",
 CellChangeTimes->{{3.833369715387217*^9, 3.833369718007853*^9}, {
  3.89085864885323*^9, 3.890858651900552*^9}},
 CellLabel->"In[137]:=",
 CellID->1867814628,ExpressionUUID->"00130bf0-5f76-4144-b712-b349911678a6"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"BTC\"\>", "\[Rule]", "\<\"Bitcoin\"\>"}], ",", 
   RowBox[{"\<\"ETH\"\>", "\[Rule]", "\<\"Ethereum\"\>"}], ",", 
   RowBox[{"\<\"USDT\"\>", "\[Rule]", "\<\"Tether\"\>"}], ",", 
   RowBox[{"\<\"BNB\"\>", "\[Rule]", "\<\"BinanceCoin\"\>"}], ",", 
   RowBox[{"\<\"ADA\"\>", "\[Rule]", "\<\"Cardano\"\>"}], ",", 
   RowBox[{"\<\"XRP\"\>", "\[Rule]", "\<\"XRP\"\>"}], ",", 
   RowBox[{"\<\"USDC\"\>", "\[Rule]", "\<\"Coin\"\>"}], ",", 
   RowBox[{"\<\"DOGE\"\>", "\[Rule]", "\<\"Dogecoin\"\>"}], ",", 
   RowBox[{"\<\"DOT1\"\>", "\[Rule]", "\<\"Polkadot\"\>"}], ",", 
   RowBox[{"\<\"HEX\"\>", "\[Rule]", "\<\"HEX\"\>"}], ",", 
   RowBox[{"\<\"UNI3\"\>", "\[Rule]", "\<\"Uniswap\"\>"}], ",", 
   RowBox[{"\<\"BCH\"\>", "\[Rule]", "\<\"BitcoinCash\"\>"}], ",", 
   RowBox[{"\<\"LTC\"\>", "\[Rule]", "\<\"Litecoin\"\>"}], ",", 
   RowBox[{"\<\"LINK\"\>", "\[Rule]", "\<\"Chainlink\"\>"}], ",", 
   RowBox[{"\<\"SOL1\"\>", "\[Rule]", "\<\"Solana\"\>"}], ",", 
   RowBox[{"\<\"MATIC\"\>", "\[Rule]", "\<\"MaticNetwork\"\>"}], ",", 
   RowBox[{"\<\"THETA\"\>", "\[Rule]", "\<\"THETA\"\>"}], ",", 
   RowBox[{"\<\"XLM\"\>", "\[Rule]", "\<\"Stellar\"\>"}], ",", 
   RowBox[{"\<\"VET\"\>", "\[Rule]", "\<\"VeChain\"\>"}], ",", 
   RowBox[{"\<\"ICP1\"\>", "\[Rule]", "\<\"InternetComputer\"\>"}], ",", 
   RowBox[{"\<\"ETC\"\>", "\[Rule]", "\<\"EthereumClassic\"\>"}], ",", 
   RowBox[{"\<\"TRX\"\>", "\[Rule]", "\<\"TRON\"\>"}], ",", 
   RowBox[{"\<\"FIL\"\>", "\[Rule]", "\<\"FilecoinFutures\"\>"}], ",", 
   RowBox[{"\<\"XMR\"\>", "\[Rule]", "\<\"Monero\"\>"}], ",", 
   RowBox[{"\<\"EOS\"\>", "\[Rule]", "\<\"EOS\"\>"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.8908587156815166`*^9},
 CellLabel->"Out[137]=",
 CellID->1860420078,ExpressionUUID->"86061a57-48b4-4a0d-ab97-f2398579fc70"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["Remark:",
  FontWeight->"Bold"],
 " ",
 StyleBox[ButtonBox["FinancialData",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://reference.wolfram.com/language/ref/FinancialData.html"], 
    None},
  ButtonNote->
   "https://reference.wolfram.com/language/ref/FinancialData.html"], 
  "Program"],
 " is \[OpenCurlyDoubleQuote]aware\[CloseCurlyDoubleQuote] of 10 \
cryptocurrencies, but that is not documented (as far as I can tell) and only \
prices are provided. (For more details see the discussion in ",
 Cell[BoxData[
  ButtonBox["CryptocurrencyData",
   BaseStyle->"Link",
   ButtonData->
    "paclet:AntonAntonov/CryptocurrencyData/ref/CryptocurrencyData"]], 
  "InlineFormula",ExpressionUUID->"078e45ee-3445-415e-85ff-7ca2cd4b39bb"],
 ".) Here are examples:"
}], "Text",
 CellChangeTimes->{{3.833370511062059*^9, 3.833370605486368*^9}, {
  3.833370685949071*^9, 3.833370686644606*^9}, {3.8908610031480637`*^9, 
  3.89086102550784*^9}},
 CellID->444500950,ExpressionUUID->"e2c95732-d0e7-4fc3-8b59-7bda7d352bed"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Row", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"DateListPlot", "[", 
     RowBox[{
      RowBox[{"FinancialData", "[", 
       RowBox[{"#", ",", "\"\<Jan 1 2021\>\""}], "]"}], ",", 
      RowBox[{"ImageSize", "->", "Medium"}], ",", 
      RowBox[{"AspectRatio", "\[Rule]", 
       RowBox[{"1", "/", "4"}]}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", "#"}]}], "]"}], "&"}], "/@", 
   RowBox[{"{", 
    RowBox[{"\"\<BTC\>\"", ",", "\"\<ETH\>\""}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8333705918419027`*^9, 3.833370675812554*^9}},
 CellLabel->"In[138]:=",
 CellID->1779342384,ExpressionUUID->"4cf8a913-18d8-4edd-8ffc-3f4ce1bbdfc3"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"DateListPlot", "[", 
     RowBox[{
       RowBox[{"Missing", "[", "\"NotAvailable\"", "]"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
       RowBox[{"AspectRatio", "\[Rule]", 
         FractionBox["1", "4"]}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", "\"BTC\""}]}], "]"}], 
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.0055000000000000005`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxVWXlUlPcVnZikaa2JGNHEntRizKIxTac17ksmaa2JMXFIbFMbYkaNxjan
ZtwJxjjuG8q4Igg4ivuCo4Aiio4grkQHRRHchqiAgjDuqKjVd9/1nJ9/yLnn
ffN99/fefff9vu/XrP/3nw2sY7FY3nv03+O/j/6FLR5e+f6jv7a6X7xre/TX
ngtsKTwv2FXNeGGbx9jbZATiFp/gwF+BfTcHC3ZmK86r1/Yx9lQCB6J6C/Y3
HinYFVol11veB3Zk9G33GFu/G6n3K5frgw1HKV4t8bCuivPyBNsHAztisgW7
5o5Sfrb2j3FIg9GCwyLqC7Z1AraVRAl2DjSxJ2Y0+Qr2bwN2DFop93e0j0Q8
2SvY3R/Y1aWHXO+LjjR+H9wSqXxcgsNK9PqKfMHer3/gejtIPqcD21q3FhyS
BmxpmQD+Z4E93fuB/6+j9Pl1BVs3RenzC8D3VJSur6PE3c+OMbDvT2OUn0We
Z09R3PIVwa6TY1gv8K3zI/MBvm//aFwf8oXGM5IEe45rvLB5R8nnQ+BAeHvB
lrfG4v7ZN+V6a++xer/T8jzHT4yPlHiwVnFFg06Szzd/0no45X72cOCwlH0S
d43ReHiNYO+Kn6jfzpLP18Zp/g4Kdn46Tp8fIdgTOU71HyvYvwzY1/TZLsL/
53Faj6USd3/sUr31Euwb6VL+6fL84BKX1me+8A076NL8DJC4/YaL+hIcGDae
+RIckjhe7x8j2LZvPPUh2Hl1PPMp2Bo/gfoTPo49E7R+peBbNUH1kCnX+16e
qOvrBr4fTGS+kM/djOcinxUTlV8k+DaapPWZA762SYwj3//VeOg7kj9/ObAn
rkjiloaTtX7dBVu7AHucWeD/7WQz33P0+ogjgsNCptAPBNs7AodNrhDs+maK
3m/se8J/9hTNd7Cr8M+YwnpBD+2mMt8S9/SbyvrL7/0zGT8iccuWqbqeJhK3
BhQ77wv29Z3GegsOTpvG9Uk+wlKnsd7gf0ZxslXiruemsx6CQ6ZM5/oE27zT
qR/wL9Z4ynPQ8zMz2O/Q8zsz2E/I74YZ+vwMqZ+7UOOhQ6CPp2ZSX3J9sNVM
rgf8/zlT+/+sxAMPZjI/4NsymvkE38+jeX/BzrHRrB/6qzaa9ZD8Wt+YxXkg
2GGfpfnuI9gdNYv5EuxbrjgqVPJtbz6b+kU+P5nN/hHsHT3byF9g6WzVWzPo
OW+29std+FuPGOoH/jYihvWBvy2J4XxAPx6IoX4FO67HGP0fHOqmX8LfEtys
H/xhr1vXG4d+DLo5T9CPv5uj+W8KP8iZw3khfDxX5mg+24DvS3PZ/7Ieywdz
Nf8TJO72zeXzBPsuz2U+BAdD55Ef/Oy9edQj5sl/5tFvxM8DZfPoL5jPL86n
PjDfOs+nX2O+DZpPP5d55nHPV34fYF7UX8DnC3Z0WED+mHcDFhjz0Tdrgeqn
Bebz1gXUA/YPbRcyH4K9joXUh+DADGBfXk/BIekLOT8E284xjv2J/6tYzjPB
lmmxJv/Nsfq8KMmf43SskW/3rxbxecjv5EXUM/K7cRH9E/yLFlFf4P90nBEP
/DGOv0d+15vYc4LXx2H/Y4nX+feFYEureGN91n/Ea72/Q36PxdO/kN/78fRL
7H9aLKb+BNs/W6x8S8D/x8VGvmyvJ6h+Bgl29iJ+A3r4IUH7JRn5Tk4w+Dle
TaSesF/rmajXnxfsG5VIfwZfT6Kx3rBDifQX7H8+StL1toKehyfRD6CHpCT6
D/S8n9iJfF/j9ZnI59Al9H/oYfESXR/2V47cJexfwe5qYFvrVPBv4mF/YT+8
yGPk25VNjH7zVnqMfAQaL6X/oB/fX2r0i2fXUmO9/kt6fctXwD90maE3a9dl
6n8u5H/wMvWncMHB0mWqt/nYzzdINvjaOyVrfrA/dQ1MNvTkjUk29Gp7Ybne
fw7y23650Y+e/ss1X9fx/hHN6/MFW7Yupx6hjzYrqDfo+esVRv2D01eoPmKh
j7QV6j/dwf/sCs4/6CNipeFvIVNXUu/gv2mlzr8U8D+1kvpE/p9dRT/F/n7S
KvoX9JGySvUzFvo4ucrkX2c15zn4v71a+eB9yLVutdG/3uOr6e/g/5AY/Wnr
vYb9gX47uoZ6Rj7vr2H9BVvfXEt+gh3ha5X/YOR7zJM49HB3rZnP19bxfuD7
6Trt73qyXm/kOiM/gWXrtN54f3I2W69+m418frze6Hf/yPXMN+afZz37Ff14
0Lze9+EGzmfkc9gG6gl6SNzA/oc/79ugfIbj/ciZouuxiJ/b4lP0/l0EO/ek
kC/mdVUK6415/fJG1XcPzItYxdkjMS92b2Q/Yb9WsZHrwbxu5KXeME9sxEME
e3d6mW/BgXIv8ys4pOEm9hf4d9lEPwH/bzep/vsKtoZs1ud7wbfjZj4Pev1m
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
m3Wy/R/3LLi/
         "]]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, DisplayFunction -> 
     Identity, AspectRatio -> NCache[
       Rational[1, 4], 0.25], Axes -> {False, False}, 
     AxesLabel -> {None, None}, 
     AxesOrigin -> {3.8187072*^9, 19.555554601881283`}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {
        Charting`DateTicksFunction[Automatic, DateTicksFormat -> {Automatic}], 
        Charting`DateTicksFunction[
        Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
     Method -> {
      "NoShowPlotTheme" -> Automatic, "AxisPadding" -> Scaled[0.02], 
       "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.647624, 0.37816, 0.614037], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.571589, 0.586483, 0.], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.915, 0.3325, 0.2125], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
          AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
       "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
       Scaled[0.05], "AllowMicroRanges" -> {True, False}, 
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"ETH\"", TraditionalForm], 
     PlotRange -> {{3.8187072*^9, 3.8906784*^9}, {19.555554601881283`, 
      31.989999771118164`}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {{}, Automatic}}]},
  "RowDefault"]], "Output",
 CellChangeTimes->{3.8908587169809217`*^9},
 CellLabel->"Out[138]=",
 CellID->718350626,ExpressionUUID->"2f836043-dea7-421c-a419-7c6bee42ba62"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Significant cryptocurrencies", "Section",
 CellChangeTimes->{{3.833296001844453*^9, 3.833296011868417*^9}, {
  3.833297297022421*^9, 3.833297307732682*^9}},
 CellID->1697663413,ExpressionUUID->"a2c49c41-a8b0-4468-91af-da1eb7bd3564"],

Cell["\<\
In this section we analyze the summaries of cryptocurrencies data in order to \
derive a list of the most significant ones. \
\>", "Text",
 CellChangeTimes->{{3.833369026343617*^9, 3.833369117125572*^9}},
 CellID->1161248249,ExpressionUUID->"309c06c9-a839-4114-8e3e-f993002dbcf5"],

Cell["\<\
We choose the phrase \"significant cryptocurrency\" to mean \"a \
cryptocurrency with high market capitalization, price, or trading volume.\
\[CloseCurlyDoubleQuote]\
\>", "Text",
 CellChangeTimes->{{3.833369026343617*^9, 3.83336915563161*^9}, {
  3.833369487326255*^9, 3.833369498076971*^9}},
 CellID->767937007,ExpressionUUID->"9b5021c9-9303-4ee4-b73c-e93f1e2de30d"],

Cell[TextData[{
 "Together with the summaries we look into the ",
 ButtonBox["Pareto principle",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://en.wikipedia.org/wiki/Pareto_principle"], None},
  ButtonNote->"https://en.wikipedia.org/wiki/Pareto_principle"],
 " adherence of the corresponding values."
}], "Text",
 CellChangeTimes->{{3.833369163216044*^9, 3.833369182867414*^9}, {
  3.833369479210677*^9, 3.833369550163598*^9}, {3.833370719145553*^9, 
  3.8333707196433897`*^9}},
 CellID->340558179,ExpressionUUID->"dd8c0ae8-3bef-4ace-a626-db02059f3f3d"],

Cell[TextData[{
 StyleBox["Remark:",
  FontWeight->"Bold"],
 " The Pareto principle adherence should be interpreted carefully here -- the \
cryptocurrencies ",
 StyleBox["are not",
  FontSlant->"Italic"],
 " mutually exclusive when in comes to money invested and trading volumes. \
Nevertheless, we can interpret the corresponding value ratios as indicators \
of \[OpenCurlyDoubleQuote]mind share\[CloseCurlyDoubleQuote] or \
\[OpenCurlyDoubleQuote]significance.\[CloseCurlyDoubleQuote]"
}], "Text",
 CellChangeTimes->{{3.8333695265170918`*^9, 3.8333696808024807`*^9}, {
  3.833370732187621*^9, 3.833370733154694*^9}},
 CellID->717395198,ExpressionUUID->"61e5f50a-0c7b-44f1-8b39-2647255653a1"],

Cell[CellGroupData[{

Cell["By summaries", "Subsection",
 CellChangeTimes->{{3.833307418982259*^9, 3.833307427779859*^9}},
 CellID->1287898528,ExpressionUUID->"5f5a23da-2f93-45c0-bdb0-9fe712b0ea05"],

Cell[CellGroupData[{

Cell[TextData[{
 "Here is a summary of the cryptocurrencies we consider (from ",
 ButtonBox["Yahoo Finance",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://finance.yahoo.com/cryptocurrencies"], None},
  ButtonNote->"https://finance.yahoo.com/cryptocurrencies"],
 ") ordered by \[OpenCurlyDoubleQuote]Market Cap\[CloseCurlyDoubleQuote] \
(largest first):"
}], "Text",
 CellChangeTimes->{{3.833354121297373*^9, 3.833354171113145*^9}, {
  3.833354204194002*^9, 3.833354204194871*^9}},
 CellID->1222881983,ExpressionUUID->"cb14e7d0-745b-4e85-8af7-f3721b19259a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dsCCSummary", "=", 
  RowBox[{"CryptocurrencyData", "[", 
   RowBox[{"All", ",", "\"\<Summary\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8333074247015047`*^9, 3.833307440706575*^9}, {
   3.8333540692331667`*^9, 3.833354102375211*^9}, {3.833354281062953*^9, 
   3.8333542863380947`*^9}, 3.8908586579125013`*^9},
 CellLabel->"In[139]:=",
 CellID->1558986491,ExpressionUUID->"f293f207-76ca-4aca-b0be-4de267c080c0"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|
       "Symbol" -> "BTC-USD", "Name" -> "Bitcoin USD", "Price (Intraday)" -> 
        30374.08, "Change" -> 911.25, "% Change" -> 0.0309, "Market Cap" -> 
        5.87741*^11, "Volume in Currency (Since 0:00 UTC)" -> 1.9211*^10, 
        "Volume in Currency (24Hr)" -> 1.9211*^10, 
        "Total Volume All Currencies (24Hr)" -> 1.9211*^10, 
        "Circulating Supply" -> 1.935*^7|>, <|
       "Symbol" -> "ETH-USD", "Name" -> "Ethereum USD", "Price (Intraday)" -> 
        2092.67, "Change" -> 15.72, "% Change" -> 0.0076, "Market Cap" -> 
        2.49799*^11, "Volume in Currency (Since 0:00 UTC)" -> 9.007*^9, 
        "Volume in Currency (24Hr)" -> 9.007*^9, 
        "Total Volume All Currencies (24Hr)" -> 9.007*^9, 
        "Circulating Supply" -> 1.19368*^8|>, <|
       "Symbol" -> "USDT-USD", "Name" -> "Tether USD", "Price (Intraday)" -> 
        1.0001, "Change" -> -0.0002, "% Change" -> -0.0002, "Market Cap" -> 
        8.1067*^10, "Volume in Currency (Since 0:00 UTC)" -> 3.2085*^10, 
        "Volume in Currency (24Hr)" -> 3.2085*^10, 
        "Total Volume All Currencies (24Hr)" -> 3.2085*^10, 
        "Circulating Supply" -> 8.1061*^10|>, <|
       "Symbol" -> "BNB-USD", "Name" -> "BNB USD", "Price (Intraday)" -> 
        342.11, "Change" -> 1.62, "% Change" -> 0.0048, "Market Cap" -> 
        5.3323*^10, "Volume in Currency (Since 0:00 UTC)" -> 7.40656*^8, 
        "Volume in Currency (24Hr)" -> 7.40656*^8, 
        "Total Volume All Currencies (24Hr)" -> 7.40656*^8, 
        "Circulating Supply" -> 1.55865*^8|>, <|
       "Symbol" -> "USDC-USD", "Name" -> "USD Coin USD", "Price (Intraday)" -> 
        0.999832, "Change" -> 0.00013, "% Change" -> 0.0001, "Market Cap" -> 
        3.1369*^10, "Volume in Currency (Since 0:00 UTC)" -> 4.332*^9, 
        "Volume in Currency (24Hr)" -> 4.332*^9, 
        "Total Volume All Currencies (24Hr)" -> 4.332*^9, 
        "Circulating Supply" -> 3.1375*^10|>, <|
       "Symbol" -> "XRP-USD", "Name" -> "XRP USD", "Price (Intraday)" -> 
        0.522732, "Change" -> 0.011203, "% Change" -> 0.0219, "Market Cap" -> 
        2.7052*^10, "Volume in Currency (Since 0:00 UTC)" -> 
        1.0369999999999999`*^9, "Volume in Currency (24Hr)" -> 
        1.0369999999999999`*^9, "Total Volume All Currencies (24Hr)" -> 
        1.0369999999999999`*^9, "Circulating Supply" -> 5.1751*^10|>, <|
       "Symbol" -> "ADA-USD", "Name" -> "Cardano USD", "Price (Intraday)" -> 
        0.44122, "Change" -> 0.006899, "% Change" -> 0.0159, "Market Cap" -> 
        1.5346*^10, "Volume in Currency (Since 0:00 UTC)" -> 3.41734*^8, 
        "Volume in Currency (24Hr)" -> 3.41734*^8, 
        "Total Volume All Currencies (24Hr)" -> 3.41734*^8, 
        "Circulating Supply" -> 3.4782*^10|>, <|
       "Symbol" -> "DOGE-USD", "Name" -> "Dogecoin USD", "Price (Intraday)" -> 
        0.093092, "Change" -> 0.001517, "% Change" -> 0.0166, "Market Cap" -> 
        1.2939*^10, "Volume in Currency (Since 0:00 UTC)" -> 8.2152*^8, 
        "Volume in Currency (24Hr)" -> 8.2152*^8, 
        "Total Volume All Currencies (24Hr)" -> 8.2152*^8, 
        "Circulating Supply" -> 1.38994*^11|>, <|
       "Symbol" -> "STETH-USD", "Name" -> "Lido Staked ETH USD", 
        "Price (Intraday)" -> 2077.85, "Change" -> 3.47, "% Change" -> 
        0.0017000000000000001`, "Market Cap" -> 1.2557*^10, 
        "Volume in Currency (Since 0:00 UTC)" -> 2.0073*^7, 
        "Volume in Currency (24Hr)" -> 2.0073*^7, 
        "Total Volume All Currencies (24Hr)" -> 2.0073*^7, 
        "Circulating Supply" -> 6.043*^6|>, <|
       "Symbol" -> "HEX-USD", "Name" -> "HEX USD", "Price (Intraday)" -> 
        0.068559, "Change" -> -0.001679, "% Change" -> -0.0239, "Market Cap" -> 
        1.1889*^10, "Volume in Currency (Since 0:00 UTC)" -> 8.422*^6, 
        "Volume in Currency (24Hr)" -> 8.422*^6, 
        "Total Volume All Currencies (24Hr)" -> 8.422*^6, 
        "Circulating Supply" -> 1.73411*^11|>, <|
       "Symbol" -> "MATIC-USD", "Name" -> "Polygon USD", "Price (Intraday)" -> 
        1.1671, "Change" -> 0.0137, "% Change" -> 0.0118, "Market Cap" -> 
        1.076*^10, "Volume in Currency (Since 0:00 UTC)" -> 3.12021*^8, 
        "Volume in Currency (24Hr)" -> 3.12021*^8, 
        "Total Volume All Currencies (24Hr)" -> 3.12021*^8, 
        "Circulating Supply" -> 9.219*^9|>, <|
       "Symbol" -> "SOL-USD", "Name" -> "Solana USD", "Price (Intraday)" -> 
        24.77, "Change" -> 0.09, "% Change" -> 0.0034999999999999996`, 
        "Market Cap" -> 9.717*^9, "Volume in Currency (Since 0:00 UTC)" -> 
        4.84643*^8, "Volume in Currency (24Hr)" -> 4.84643*^8, 
        "Total Volume All Currencies (24Hr)" -> 4.84643*^8, 
        "Circulating Supply" -> 3.92327*^8|>, <|
       "Symbol" -> "DOT-USD", "Name" -> "Polkadot USD", "Price (Intraday)" -> 
        6.8911, "Change" -> 0.2107, "% Change" -> 0.0315, "Market Cap" -> 
        8.114000000000001*^9, "Volume in Currency (Since 0:00 UTC)" -> 
        2.40466*^8, "Volume in Currency (24Hr)" -> 2.40466*^8, 
        "Total Volume All Currencies (24Hr)" -> 2.40466*^8, 
        "Circulating Supply" -> 1.177*^9|>, <|
       "Symbol" -> "LTC-USD", "Name" -> "Litecoin USD", "Price (Intraday)" -> 
        101.4, "Change" -> 2.94, "% Change" -> 0.0298, "Market Cap" -> 
        7.376*^9, "Volume in Currency (Since 0:00 UTC)" -> 6.97029*^8, 
        "Volume in Currency (24Hr)" -> 6.97029*^8, 
        "Total Volume All Currencies (24Hr)" -> 6.97029*^8, 
        "Circulating Supply" -> 7.2734*^7|>, <|
       "Symbol" -> "AVAX-USD", "Name" -> "Avalanche USD", "Price (Intraday)" -> 
        21.12, "Change" -> 0.54, "% Change" -> 0.026000000000000002`, 
        "Market Cap" -> 6.897*^9, "Volume in Currency (Since 0:00 UTC)" -> 
        2.92323*^8, "Volume in Currency (24Hr)" -> 2.92323*^8, 
        "Total Volume All Currencies (24Hr)" -> 2.92323*^8, 
        "Circulating Supply" -> 3.26613*^8|>, <|
       "Symbol" -> "SHIB-USD", "Name" -> "Shiba Inu USD", "Price (Intraday)" -> 
        0.000012, "Change" -> 0., "% Change" -> 0.0138, "Market Cap" -> 
        6.799*^9, "Volume in Currency (Since 0:00 UTC)" -> 2.14908*^8, 
        "Volume in Currency (24Hr)" -> 2.14908*^8, 
        "Total Volume All Currencies (24Hr)" -> 2.14908*^8, 
        "Circulating Supply" -> 5.89544*^14|>, <|
       "Symbol" -> "WTRX-USD", "Name" -> "Wrapped TRON USD", 
        "Price (Intraday)" -> 0.066435, "Change" -> 0.000463, "% Change" -> 
        0.006999999999999999, "Market Cap" -> 6.755*^9, 
        "Volume in Currency (Since 0:00 UTC)" -> 395077, 
        "Volume in Currency (24Hr)" -> 395077, 
        "Total Volume All Currencies (24Hr)" -> 395077, "Circulating Supply" -> 
        1.01676*^11|>, <|
       "Symbol" -> "BUSD-USD", "Name" -> "Binance USD USD", 
        "Price (Intraday)" -> 1.0001, "Change" -> 0.0004, "% Change" -> 
        0.0004, "Market Cap" -> 6.657*^9, 
        "Volume in Currency (Since 0:00 UTC)" -> 3.334*^9, 
        "Volume in Currency (24Hr)" -> 3.334*^9, 
        "Total Volume All Currencies (24Hr)" -> 3.334*^9, 
        "Circulating Supply" -> 6.656*^9|>, <|
       "Symbol" -> "TRX-USD", "Name" -> "TRON USD", "Price (Intraday)" -> 
        0.066522, "Change" -> 0.000713, "% Change" -> 0.0108, "Market Cap" -> 
        6.038*^9, "Volume in Currency (Since 0:00 UTC)" -> 1.81383*^8, 
        "Volume in Currency (24Hr)" -> 1.81383*^8, 
        "Total Volume All Currencies (24Hr)" -> 1.81383*^8, 
        "Circulating Supply" -> 9.0773*^10|>, <|
       "Symbol" -> "DAI-USD", "Name" -> "Dai USD", "Price (Intraday)" -> 
        0.999808, "Change" -> 0.000287, "% Change" -> 0.0003, "Market Cap" -> 
        5.057*^9, "Volume in Currency (Since 0:00 UTC)" -> 1.20063*^8, 
        "Volume in Currency (24Hr)" -> 1.20063*^8, 
        "Total Volume All Currencies (24Hr)" -> 1.20063*^8, 
        "Circulating Supply" -> 5.058*^9|>, <|
       "Symbol" -> "WBTC-USD", "Name" -> "Wrapped Bitcoin USD", 
        "Price (Intraday)" -> 30327.29, "Change" -> 840.57, "% Change" -> 
        0.0285, "Market Cap" -> 4.653*^9, 
        "Volume in Currency (Since 0:00 UTC)" -> 1.17389*^8, 
        "Volume in Currency (24Hr)" -> 1.17389*^8, 
        "Total Volume All Currencies (24Hr)" -> 1.17389*^8, 
        "Circulating Supply" -> 153412|>, <|
       "Symbol" -> "LINK-USD", "Name" -> "Chainlink USD", "Price (Intraday)" -> 
        8.5886, "Change" -> 0.36, "% Change" -> 0.0437, "Market Cap" -> 
        4.441*^9, "Volume in Currency (Since 0:00 UTC)" -> 5.14264*^8, 
        "Volume in Currency (24Hr)" -> 5.14264*^8, 
        "Total Volume All Currencies (24Hr)" -> 5.14264*^8, 
        "Circulating Supply" -> 5.171*^8|>, <|
       "Symbol" -> "UNI7083-USD", "Name" -> "Uniswap USD", "Price (Intraday)" -> 
        6.3213, "Change" -> 0.1903, "% Change" -> 0.031000000000000003`, 
        "Market Cap" -> 3.65*^9, "Volume in Currency (Since 0:00 UTC)" -> 
        1.00615*^8, "Volume in Currency (24Hr)" -> 1.00615*^8, 
        "Total Volume All Currencies (24Hr)" -> 1.00615*^8, 
        "Circulating Supply" -> 5.77487*^8|>, <|
       "Symbol" -> "ATOM-USD", "Name" -> "Cosmos USD", "Price (Intraday)" -> 
        12.52, "Change" -> 0.13, "% Change" -> 0.0102, "Market Cap" -> 
        3.585*^9, "Volume in Currency (Since 0:00 UTC)" -> 1.4276*^8, 
        "Volume in Currency (24Hr)" -> 1.4276*^8, 
        "Total Volume All Currencies (24Hr)" -> 1.4276*^8, 
        "Circulating Supply" -> 2.8637*^8|>, <|
       "Symbol" -> "OKB-USD", "Name" -> "OKB USD", "Price (Intraday)" -> 
        54.31, "Change" -> 1.84, "% Change" -> 0.0351, "Market Cap" -> 
        3.259*^9, "Volume in Currency (Since 0:00 UTC)" -> 4.455*^7, 
        "Volume in Currency (24Hr)" -> 4.455*^7, 
        "Total Volume All Currencies (24Hr)" -> 4.455*^7, 
        "Circulating Supply" -> 60000000|>}, "AllowEmbedding" -> True, 
     "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "Symbol"} -> 
        1, {All, "Name"} -> 1, {All, "Price (Intraday)"} -> 
        1, {All, "Change"} -> 1, {All, "% Change"} -> 1, {All, "Market Cap"} -> 
        1, {All, "Volume in Currency (Since 0:00 UTC)"} -> 
        1, {All, "Volume in Currency (24Hr)"} -> 
        1, {All, "Total Volume All Currencies (24Hr)"} -> 
        1, {All, "Circulating Supply"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "Symbol" -> TypeSystem`PackageScope`AtomShape[100.80000000000001`],
             "Name" -> TypeSystem`PackageScope`AtomShape[212.8], 
            "Price (Intraday)" -> TypeSystem`PackageScope`AtomShape[60], 
            "Change" -> TypeSystem`PackageScope`AtomShape[60], "% Change" -> 
            TypeSystem`PackageScope`AtomShape[60], "Market Cap" -> 
            TypeSystem`PackageScope`AtomShape[60], 
            "Volume in Currency (Since 0:00 UTC)" -> 
            TypeSystem`PackageScope`AtomShape[60], 
            "Volume in Currency (24Hr)" -> 
            TypeSystem`PackageScope`AtomShape[60], 
            "Total Volume All Currencies (24Hr)" -> 
            TypeSystem`PackageScope`AtomShape[60], "Circulating Supply" -> 
            TypeSystem`PackageScope`AtomShape[60]|>], 
          DirectedInfinity[1], 10, {All}]], 20, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "Symbol", "Name", "Price (Intraday)", "Change", "% Change", 
         "Market Cap", "Volume in Currency (Since 0:00 UTC)", 
         "Volume in Currency (24Hr)", "Total Volume All Currencies (24Hr)", 
         "Circulating Supply"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real]}], 25], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "Symbol"} -> 
        1, {All, "Name"} -> 1, {All, "Price (Intraday)"} -> 
        1, {All, "Change"} -> 1, {All, "% Change"} -> 1, {All, "Market Cap"} -> 
        1, {All, "Volume in Currency (Since 0:00 UTC)"} -> 
        1, {All, "Volume in Currency (24Hr)"} -> 
        1, {All, "Total Volume All Currencies (24Hr)"} -> 
        1, {All, "Circulating Supply"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "Symbol" -> TypeSystem`PackageScope`AtomShape[100.80000000000001`],
             "Name" -> TypeSystem`PackageScope`AtomShape[212.8], 
            "Price (Intraday)" -> TypeSystem`PackageScope`AtomShape[60], 
            "Change" -> TypeSystem`PackageScope`AtomShape[60], "% Change" -> 
            TypeSystem`PackageScope`AtomShape[60], "Market Cap" -> 
            TypeSystem`PackageScope`AtomShape[60], 
            "Volume in Currency (Since 0:00 UTC)" -> 
            TypeSystem`PackageScope`AtomShape[60], 
            "Volume in Currency (24Hr)" -> 
            TypeSystem`PackageScope`AtomShape[60], 
            "Total Volume All Currencies (24Hr)" -> 
            TypeSystem`PackageScope`AtomShape[60], "Circulating Supply" -> 
            TypeSystem`PackageScope`AtomShape[60]|>], 
          DirectedInfinity[1], 10, {All}]], 20, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "Symbol", "Name", "Price (Intraday)", "Change", "% Change", 
         "Market Cap", "Volume in Currency (Since 0:00 UTC)", 
         "Volume in Currency (24Hr)", "Total Volume All Currencies (24Hr)", 
         "Circulating Supply"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real]}], 25], "Path" -> {}, "DisplayedRowCount" -> 
     20, "DisplayedColumnCount" -> 10, "DataRowCount" -> 25, 
     "DataColumnCount" -> 10, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Symbol", 
                  Style[
                  "Symbol", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Symbol"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Symbol"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Name", 
                  Style[
                  "Name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Name"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Name"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Price (Intraday)", 
                  Style[
                  "Price (Intraday)", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Price (Intraday)"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Price (Intraday)"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Change", 
                  Style[
                  "Change", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Change"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Change"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["% Change", 
                  Style[
                  "% Change", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "% Change"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "% Change"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Market Cap", 
                  Style[
                  "Market Cap", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Market Cap"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Market Cap"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Volume in Currency (Since 0:00 UTC)", 
                  Style[
                  "Volume in Currency (Since 0:00 UTC)", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Volume in Currency (Since 0:00 UTC)"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Volume in Currency (Since 0:00 UTC)"}, "ColumnHeader", 
                True], "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Volume in Currency (24Hr)", 
                  Style[
                  "Volume in Currency (24Hr)", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Volume in Currency (24Hr)"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Volume in Currency (24Hr)"}, "ColumnHeader", True], 
               "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Total Volume All Currencies (24Hr)", 
                  Style[
                  "Total Volume All Currencies (24Hr)", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Total Volume All Currencies (24Hr)"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Total Volume All Currencies (24Hr)"}, "ColumnHeader", 
                True], "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Circulating Supply", 
                  Style[
                  "Circulating Supply", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Circulating Supply"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Circulating Supply"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation["BTC-USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Bitcoin USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{212.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["30374.1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Price (Intraday)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["911.25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0309"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["% Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["587741000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Market Cap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["19211000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Volume in Currency (Since 0:00 UTC)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["19211000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Volume in Currency (24Hr)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["19211000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Total Volume All Currencies (24Hr)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["19350000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Circulating Supply"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["ETH-USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Ethereum USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{212.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2092.67"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Price (Intraday)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["15.72"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0076"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["% Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["249799000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Market Cap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["9007000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Volume in Currency (Since 0:00 UTC)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["9007000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Volume in Currency (24Hr)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["9007000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Total Volume All Currencies (24Hr)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["119368000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Circulating Supply"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["USDT-USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Tether USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{212.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0001"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Price (Intraday)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-0.0002"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-0.0002"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["% Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["81067000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Market Cap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["32085000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Volume in Currency (Since 0:00 UTC)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["32085000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Volume in Currency (24Hr)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["32085000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Total Volume All Currencies (24Hr)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["81061000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Circulating Supply"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["BNB-USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["BNB USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{212.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["342.11"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Price (Intraday)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.62"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0048"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["% Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["53323000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Market Cap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["740656000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Volume in Currency (Since 0:00 UTC)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["740656000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Volume in Currency (24Hr)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["740656000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Total Volume All Currencies (24Hr)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["155865000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Circulating Supply"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["USDC-USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["USD Coin USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{212.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.999832"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Price (Intraday)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00013"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0001"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["% Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["31369000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Market Cap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4332000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Volume in Currency (Since 0:00 UTC)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4332000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Volume in Currency (24Hr)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4332000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Total Volume All Currencies (24Hr)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["31375000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Circulating Supply"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["XRP-USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["XRP USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{212.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.522732"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Price (Intraday)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.011203"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0219"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["% Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["27052000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Market Cap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1037000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Volume in Currency (Since 0:00 UTC)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1037000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Volume in Currency (24Hr)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1037000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Total Volume All Currencies (24Hr)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["51751000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Circulating Supply"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["ADA-USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Cardano USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{212.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.44122"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Price (Intraday)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.006899"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0159"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["% Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["15346000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Market Cap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["341734000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Volume in Currency (Since 0:00 UTC)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["341734000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Volume in Currency (24Hr)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["341734000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Total Volume All Currencies (24Hr)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["34782000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Circulating Supply"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["DOGE-USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Dogecoin USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{212.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.093092"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Price (Intraday)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.001517"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0166"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["% Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["12939000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Market Cap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["821520000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Volume in Currency (Since 0:00 UTC)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["821520000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Volume in Currency (24Hr)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["821520000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Total Volume All Currencies (24Hr)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["138994000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Circulating Supply"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["STETH-USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Lido Staked ETH USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{212.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2077.85"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Price (Intraday)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3.47"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0017"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["% Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["12557000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Market Cap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20073000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Volume in Currency (Since 0:00 UTC)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20073000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Volume in Currency (24Hr)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20073000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Total Volume All Currencies (24Hr)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6043000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Circulating Supply"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["HEX-USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["HEX USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{212.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.068559"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Price (Intraday)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-0.001679"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-0.0239"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["% Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["11889000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Market Cap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8422000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Volume in Currency (Since 0:00 UTC)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8422000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Volume in Currency (24Hr)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8422000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Total Volume All Currencies (24Hr)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["173411000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Circulating Supply"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["MATIC-USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Polygon USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{212.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.1671"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Price (Intraday)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0137"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0118"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["% Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10760000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Market Cap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["312021000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Volume in Currency (Since 0:00 UTC)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["312021000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Volume in Currency (24Hr)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["312021000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Total Volume All Currencies (24Hr)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["9219000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Circulating Supply"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["SOL-USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Solana USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{212.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["24.77"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Price (Intraday)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.09"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0035"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["% Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["9717000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Market Cap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["484643000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Volume in Currency (Since 0:00 UTC)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["484643000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Volume in Currency (24Hr)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["484643000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Total Volume All Currencies (24Hr)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["392327000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Circulating Supply"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["DOT-USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Polkadot USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{212.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6.8911"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Price (Intraday)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.2107"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0315"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["% Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8114000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Market Cap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["240466000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Volume in Currency (Since 0:00 UTC)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["240466000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Volume in Currency (24Hr)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["240466000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Total Volume All Currencies (24Hr)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1177000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Circulating Supply"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["LTC-USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Litecoin USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{212.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["101.4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Price (Intraday)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.94"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0298"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["% Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7376000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Market Cap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["697029000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Volume in Currency (Since 0:00 UTC)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["697029000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Volume in Currency (24Hr)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["697029000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Total Volume All Currencies (24Hr)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["72734000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Circulating Supply"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["AVAX-USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Avalanche USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{212.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["21.12"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Price (Intraday)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.54"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.026"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["% Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6897000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Market Cap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["292323000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Volume in Currency (Since 0:00 UTC)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["292323000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Volume in Currency (24Hr)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["292323000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Total Volume All Currencies (24Hr)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["326613000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Circulating Supply"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["SHIB-USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Shiba Inu USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{212.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000012"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Price (Intraday)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0138"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["% Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6799000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Market Cap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["214908000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Volume in Currency (Since 0:00 UTC)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["214908000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Volume in Currency (24Hr)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["214908000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Total Volume All Currencies (24Hr)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["589544000000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Circulating Supply"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["WTRX-USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Wrapped TRON USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{212.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.066435"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["Price (Intraday)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000463"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.007"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["% Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6755000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["Market Cap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["395077"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["Volume in Currency (Since 0:00 UTC)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["395077"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["Volume in Currency (24Hr)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["395077"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["Total Volume All Currencies (24Hr)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["101676000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["Circulating Supply"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["BUSD-USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Binance USD USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{212.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0001"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["Price (Intraday)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0004"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0004"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["% Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6657000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["Market Cap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3334000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["Volume in Currency (Since 0:00 UTC)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3334000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["Volume in Currency (24Hr)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3334000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["Total Volume All Currencies (24Hr)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6656000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["Circulating Supply"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["TRX-USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["TRON USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{212.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.066522"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["Price (Intraday)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000713"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0108"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["% Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6038000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["Market Cap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["181383000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["Volume in Currency (Since 0:00 UTC)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["181383000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["Volume in Currency (24Hr)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["181383000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["Total Volume All Currencies (24Hr)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["90773000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["Circulating Supply"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["DAI-USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Dai USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{212.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.999808"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["Price (Intraday)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000287"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0003"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["% Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5057000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["Market Cap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["120063000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["Volume in Currency (Since 0:00 UTC)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["120063000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["Volume in Currency (24Hr)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["120063000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["Total Volume All Currencies (24Hr)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5058000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["Circulating Supply"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[True, 25, 1], {1, 25 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[False, 25, 1], {1, 25 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[25, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[25, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 25, 1], {1, 25 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 25, 1], {1, 25 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
               ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{1400., {300.8544921875, 306.1455078125}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{1400., {300.8544921875, 306.1455078125}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.890858717154709*^9},
 CellLabel->"Out[139]=",
 CellID->165907748,ExpressionUUID->"8d8df739-99bd-4c2f-a1d8-fe4160700b90"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Here is the summary of summary dataset above:", "Text",
 CellChangeTimes->{{3.833368917891753*^9, 3.8333689262620983`*^9}, {
  3.8333707621364927`*^9, 3.83337080157938*^9}},
 CellID->437977190,ExpressionUUID->"439a611d-d1cf-4faa-b88f-39fc5bb61aee"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<RecordsSummary\>\"", "]"}], "[", 
  "dsCCSummary", "]"}]], "Input",
 CellChangeTimes->{{3.833362287915503*^9, 3.833362294855155*^9}},
 CellLabel->"In[140]:=",
 CellID->1656174061,ExpressionUUID->"6ec12c71-8df1-4d37-a65b-a15d3acef00b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[GridBox[{
      {
       StyleBox["\<\"1 Symbol\"\>",
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontFamily->"Times",
        FontColor->RGBColor[0, 0, 1]]},
      {
       TagBox[GridBox[{
          {"\<\"ADA-USD\"\>", "1"},
          {"\<\"ATOM-USD\"\>", "1"},
          {"\<\"AVAX-USD\"\>", "1"},
          {"\<\"BNB-USD\"\>", "1"},
          {"\<\"BTC-USD\"\>", "1"},
          {"\<\"BUSD-USD\"\>", "1"},
          {"\<\"(Other)\"\>", "19"}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"], ",", 
   TagBox[GridBox[{
      {
       StyleBox["\<\"2 Name\"\>",
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontFamily->"Times",
        FontColor->RGBColor[0, 0, 1]]},
      {
       TagBox[GridBox[{
          {"\<\"Avalanche USD\"\>", "1"},
          {"\<\"Binance USD USD\"\>", "1"},
          {"\<\"Bitcoin USD\"\>", "1"},
          {"\<\"BNB USD\"\>", "1"},
          {"\<\"Cardano USD\"\>", "1"},
          {"\<\"Chainlink USD\"\>", "1"},
          {"\<\"(Other)\"\>", "19"}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"], ",", 
   TagBox[GridBox[{
      {
       StyleBox["\<\"3 Price (Intraday)\"\>",
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontFamily->"Times",
        FontColor->RGBColor[0, 0, 1]]},
      {
       TagBox[GridBox[{
          {"\<\"Min\"\>", "0.000012`"},
          {"\<\"1st Qu\"\>", "0.502354`"},
          {"\<\"Median\"\>", "6.3213`"},
          {"\<\"3rd Qu\"\>", "66.08250000000001`"},
          {"\<\"Mean\"\>", "2618.2538604799997`"},
          {"\<\"Max\"\>", "30374.08`"}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"], ",", 
   TagBox[GridBox[{
      {
       StyleBox["\<\"4 Change\"\>",
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontFamily->"Times",
        FontColor->RGBColor[0, 0, 1]]},
      {
       TagBox[GridBox[{
          {"\<\"Min\"\>", 
           RowBox[{"-", "0.001679`"}]},
          {"\<\"1st Qu\"\>", "0.00044725`"},
          {"\<\"Median\"\>", "0.09`"},
          {"\<\"3rd Qu\"\>", "1.675`"},
          {"\<\"Mean\"\>", "71.15857732`"},
          {"\<\"Max\"\>", "911.25`"}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"], ",", 
   TagBox[GridBox[{
      {
       StyleBox["\<\"5 % Change\"\>",
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontFamily->"Times",
        FontColor->RGBColor[0, 0, 1]]},
      {
       TagBox[GridBox[{
          {"\<\"Min\"\>", 
           RowBox[{"-", "0.0239`"}]},
          {"\<\"1st Qu\"\>", "0.0030499999999999998`"},
          {"\<\"Median\"\>", "0.0118`"},
          {"\<\"Mean\"\>", "0.014352000000000002`"},
          {"\<\"3rd Qu\"\>", "0.028825`"},
          {"\<\"Max\"\>", "0.0437`"}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"], ",", 
   TagBox[GridBox[{
      {
       StyleBox["\<\"6 Market Cap\"\>",
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontFamily->"Times",
        FontColor->RGBColor[0, 0, 1]]},
      {
       TagBox[GridBox[{
          {"\<\"Min\"\>", "3.259`*^9"},
          {"\<\"1st Qu\"\>", "5.79275`*^9"},
          {"\<\"Median\"\>", "8.114000000000001`*^9"},
          {"\<\"3rd Qu\"\>", "1.82725`*^10"},
          {"\<\"Mean\"\>", "4.70736`*^10"},
          {"\<\"Max\"\>", "5.87741`*^11"}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"], ",", 
   TagBox[GridBox[{
      {
       StyleBox["\<\"7 Volume in Currency (Since 0:00 UTC)\"\>",
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontFamily->"Times",
        FontColor->RGBColor[0, 0, 1]]},
      {
       TagBox[GridBox[{
          {"\<\"Min\"\>", "395077"},
          {"\<\"1st Qu\"\>", "1.193945`*^8"},
          {"\<\"Median\"\>", "3.12021`*^8"},
          {"\<\"3rd Qu\"\>", "8.7539`*^8"},
          {"\<\"Mean\"\>", "2.97604856308`*^9"},
          {"\<\"Max\"\>", "3.2085`*^10"}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"], ",", 
   TagBox[GridBox[{
      {
       StyleBox["\<\"8 Volume in Currency (24Hr)\"\>",
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontFamily->"Times",
        FontColor->RGBColor[0, 0, 1]]},
      {
       TagBox[GridBox[{
          {"\<\"Min\"\>", "395077"},
          {"\<\"1st Qu\"\>", "1.193945`*^8"},
          {"\<\"Median\"\>", "3.12021`*^8"},
          {"\<\"3rd Qu\"\>", "8.7539`*^8"},
          {"\<\"Mean\"\>", "2.97604856308`*^9"},
          {"\<\"Max\"\>", "3.2085`*^10"}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"], ",", 
   TagBox[GridBox[{
      {
       StyleBox["\<\"9 Total Volume All Currencies (24Hr)\"\>",
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontFamily->"Times",
        FontColor->RGBColor[0, 0, 1]]},
      {
       TagBox[GridBox[{
          {"\<\"Min\"\>", "395077"},
          {"\<\"1st Qu\"\>", "1.193945`*^8"},
          {"\<\"Median\"\>", "3.12021`*^8"},
          {"\<\"3rd Qu\"\>", "8.7539`*^8"},
          {"\<\"Mean\"\>", "2.97604856308`*^9"},
          {"\<\"Max\"\>", "3.2085`*^10"}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"], ",", 
   TagBox[GridBox[{
      {
       StyleBox["\<\"10 Circulating Supply\"\>",
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontFamily->"Times",
        FontColor->RGBColor[0, 0, 1]]},
      {
       TagBox[GridBox[{
          {"\<\"Min\"\>", "153412"},
          {"\<\"1st Qu\"\>", "1.4674075`*^8"},
          {"\<\"Median\"\>", "1.177`*^9"},
          {"\<\"3rd Qu\"\>", "5.90785`*^10"},
          {"\<\"Mean\"\>", "2.361089865641648`*^13"},
          {"\<\"Max\"\>", "5.89544`*^14"}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"]}], "}"}]], "Output",
 CellChangeTimes->{3.890858717356757*^9},
 CellLabel->"Out[140]=",
 CellID->977746830,ExpressionUUID->"70cf8bcf-cd79-42be-b551-840facf42e99"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Here is a Pareto principle adherence plot for the cryptocurrency market caps:\
\
\>", "Text",
 CellChangeTimes->{{3.8333542255305357`*^9, 3.833354254853479*^9}},
 CellID->1781894460,ExpressionUUID->"38217457-51ee-46ee-ab3f-3ac336df3ce4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"aMCaps", "=", 
   RowBox[{"Normal", "[", 
    RowBox[{"dsCCSummary", "[", 
     RowBox[{"Association", ",", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"StringSplit", "[", 
          RowBox[{"#Symbol", ",", "\"\<-\>\""}], "]"}], 
         "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "->", 
        RowBox[{"#", "[", "\"\<Market Cap\>\"", "]"}]}], "&"}]}], "]"}], 
    "]"}]}], ";", 
  RowBox[{
   RowBox[{"ResourceFunction", "[", "\"\<ParetoPrinciplePlot\>\"", "]"}], "[", 
   RowBox[{"aMCaps", ",", 
    RowBox[{"PlotRange", "->", "All"}], ",", 
    RowBox[{
    "PlotLabel", "->", 
     "\"\<Pareto principle for cryptocurrency market caps\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8333542604738092`*^9, 3.8333543993707457`*^9}, {
  3.8333591824640903`*^9, 3.8333592840598707`*^9}, {3.833359404744568*^9, 
  3.8333594321841373`*^9}, {3.833360519433146*^9, 3.8333605247544003`*^9}, {
  3.833369200895585*^9, 3.833369215183769*^9}},
 CellLabel->"In[141]:=",
 CellID->1640731805,ExpressionUUID->"1d94215a-afaa-4993-befd-fa0b5054b145"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`], 
    AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGCQBGIQDQEf7JtU81l6vt23hwo4nG7/tFvh2DMon8PhuUXb
jvxfL6B8AYeT2jui5uW+gvJFHLqVQtt/ub+G8iUcru+J2+nJ8gbKl3GQLfo9
QyYfxldwCHOMUNM7CeMrOQjrFP6YpvAWyldxsKp/kxZZDOOrOayZ+/Wd/T4Y
X8NhaXDdxceM76B8LQfZRgOFeCsYX8fhT1CV7/ZcGF/PoXpe8pOdc2F8A4fJ
1/9e5z0L4xs6cOx6kyT8B8Y3chDr6vHK0noP5Rs7HPQ2UygKgfFNHK4/mXZm
aTmMb+qg8C62k3MGjG/mEH8qvubzNhjf3OHw//bb0RdgfAuHHYsfpga8hPEt
HWDxAADg43S6
     "]]}, {{}, {{GraphicsGroupBox[{
        {GrayLevel[1], AbsoluteThickness[4], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
         "Round"], 
         BSplineCurveBox[{
          Offset[{1.8369701987210297`*^-16, 3.}, {25., 1.012816895750592}], 
           Offset[{4.898587196589413*^-16, 8.}, {25., 1.012816895750592}], 
           Offset[{4.898587196589413*^-16, 10.}, {25., 1.012816895750592}], 
           Offset[{4.898587196589413*^-16, 12.}, {25., 1.012816895750592}], 
           Offset[{4.898587196589413*^-16, 12.}, {25., 1.012816895750592}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], 
         BSplineCurveBox[{
          Offset[{1.8369701987210297`*^-16, 3.}, {25., 1.012816895750592}], 
           Offset[{4.898587196589413*^-16, 8.}, {25., 1.012816895750592}], 
           Offset[{4.898587196589413*^-16, 10.}, {25., 1.012816895750592}], 
           Offset[{4.898587196589413*^-16, 12.}, {25., 1.012816895750592}], 
           Offset[{4.898587196589413*^-16, 12.}, {25., 1.012816895750592}]}]}, 
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{13.499999999999998`, 25.000000000000004`}, {25., 
            1.012816895750592}], 
           Offset[{13.500000000000002`, 12.000000000000004`}, {25., 
            1.012816895750592}], 
           Offset[{-13.499999999999998`, 11.999999999999996`}, {25., 
            1.012816895750592}], 
           Offset[{-13.500000000000002`, 24.999999999999996`}, {25., 
            1.012816895750592}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox["\<\"OKB\"\>",
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{4.898587196589413*^-16, 18.5}, {25., 1.012816895750592}], 
         NCache[ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]]}], GraphicsGroupBox[{
        {GrayLevel[1], AbsoluteThickness[4], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
         "Round"], 
         BSplineCurveBox[{
          Offset[{-2.1213203435596424`, 2.121320343559643}, {
            23.870309741681126`, 1.0062936334530646`}], 
           Offset[{-5.65685424949238, 5.656854249492381}, {
            23.870309741681126`, 1.0062936334530646`}], 
           Offset[{-7.65685424949238, 5.656854249492381}, {
            23.870309741681126`, 1.0062936334530646`}], 
           Offset[{-9.65685424949238, 5.656854249492381}, {
            23.870309741681126`, 1.0062936334530646`}], 
           Offset[{-9.65685424949238, 5.656854249492381}, {
            23.870309741681126`, 1.0062936334530646`}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], 
         BSplineCurveBox[{
          Offset[{-2.1213203435596424`, 2.121320343559643}, {
            23.870309741681126`, 1.0062936334530646`}], 
           Offset[{-5.65685424949238, 5.656854249492381}, {
            23.870309741681126`, 1.0062936334530646`}], 
           Offset[{-7.65685424949238, 5.656854249492381}, {
            23.870309741681126`, 1.0062936334530646`}], 
           Offset[{-9.65685424949238, 5.656854249492381}, {
            23.870309741681126`, 1.0062936334530646`}], 
           Offset[{-9.65685424949238, 5.656854249492381}, {
            23.870309741681126`, 1.0062936334530646`}]}]}, 
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{-9.65685424949238, 13.456854249492384`}, {
            23.870309741681126`, 1.0062936334530646`}], 
           Offset[{-9.65685424949238, 0.45685424949238396`}, {
            23.870309741681126`, 1.0062936334530646`}], 
           Offset[{-43.65685424949238, 0.45685424949237685`}, {
            23.870309741681126`, 1.0062936334530646`}], 
           Offset[{-43.65685424949238, 13.456854249492377`}, {
            23.870309741681126`, 1.0062936334530646`}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox["\<\"ATOM\"\>",
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{-26.65685424949238, 6.95685424949238}, \
{23.870309741681126, 1.0062936334530646}], NCache[
         ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]]}], 
      {Opacity[0], 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.012833333333333334`], AbsoluteThickness[1.6]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.012833333333333334`], AbsoluteThickness[1.6], 
        TagBox[
         TooltipBox[PointBox[{23., 0.9941844260902076}],
          StyleBox[
           PaneBox[
            FrameBox[
            "\"UNI7083\"", LabelStyle -> {}, Background -> None, 
             ContentPadding -> False, LabelStyle -> {}, Frame -> True, 
             RoundingRadius -> 4, Background -> GrayLevel[1, 0.65], 
             FrameStyle -> None, FrameMargins -> 2, BaselinePosition -> 
             Automatic, LabelingSize -> DirectedInfinity[1], StripOnInput -> 
             False], FrameMargins -> 0], {}, StripOnInput -> False]],
         Annotation[#, 
          Style[
           Pane[
            Framed[
            "UNI7083", LabelStyle -> {}, Background -> None, ContentPadding -> 
             False, {LabelStyle -> {}, Frame -> True, RoundingRadius -> 4, 
              Background -> GrayLevel[1, 0.65], FrameStyle -> None, 
              FrameMargins -> 2, BaselinePosition -> Automatic, LabelingSize -> 
              DirectedInfinity[1]}], FrameMargins -> 0], {}], "Tooltip"]& ]}},
       GraphicsGroupBox[{
        {GrayLevel[1], AbsoluteThickness[4], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
         "Round"], 
         BSplineCurveBox[{
          Offset[{2.121320343559642, -2.121320343559643}, {
            22.129690258318874`, 0.9820199860704049}], 
           Offset[{5.656854249492379, -5.6568542494923815`}, {
            22.129690258318874`, 0.9820199860704049}], 
           Offset[{7.65685424949238, -5.6568542494923815`}, {
            22.129690258318874`, 0.9820199860704049}], 
           Offset[{9.65685424949238, -5.6568542494923815`}, {
            22.129690258318874`, 0.9820199860704049}], 
           Offset[{9.65685424949238, -5.6568542494923815`}, {
            22.129690258318874`, 0.9820199860704049}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], 
         BSplineCurveBox[{
          Offset[{2.121320343559642, -2.121320343559643}, {
            22.129690258318874`, 0.9820199860704049}], 
           Offset[{5.656854249492379, -5.6568542494923815`}, {
            22.129690258318874`, 0.9820199860704049}], 
           Offset[{7.65685424949238, -5.6568542494923815`}, {
            22.129690258318874`, 0.9820199860704049}], 
           Offset[{9.65685424949238, -5.6568542494923815`}, {
            22.129690258318874`, 0.9820199860704049}], 
           Offset[{9.65685424949238, -5.6568542494923815`}, {
            22.129690258318874`, 0.9820199860704049}]}]}, 
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{37.656854249492376`, -0.45685424949237774`}, {
            22.129690258318874`, 0.9820199860704049}], 
           Offset[{37.65685424949238, -13.456854249492377`}, {
            22.129690258318874`, 0.9820199860704049}], 
           Offset[{9.656854249492381, -13.456854249492384`}, {
            22.129690258318874`, 0.9820199860704049}], 
           Offset[{9.656854249492378, -0.45685424949238485`}, {
            22.129690258318874`, 0.9820199860704049}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox["\<\"LINK\"\>",
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{23.65685424949238, -6.956854249492381}, \
{22.129690258318874, 0.9820199860704049}], NCache[
         ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]]}], GraphicsGroupBox[{
        {GrayLevel[1], AbsoluteThickness[4], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
         "Round"], 
         BSplineCurveBox[{
          Offset[{-2.1213203435596424`, 2.121320343559643}, {
            20.870309741681126`, 0.996372148799246}], 
           Offset[{-5.65685424949238, 5.656854249492381}, {
            20.870309741681126`, 0.996372148799246}], 
           Offset[{-7.65685424949238, 5.656854249492381}, {
            20.870309741681126`, 0.996372148799246}], 
           Offset[{-9.65685424949238, 5.656854249492381}, {
            20.870309741681126`, 0.996372148799246}], 
           Offset[{-9.65685424949238, 5.656854249492381}, {
            20.870309741681126`, 0.996372148799246}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], 
         BSplineCurveBox[{
          Offset[{-2.1213203435596424`, 2.121320343559643}, {
            20.870309741681126`, 0.996372148799246}], 
           Offset[{-5.65685424949238, 5.656854249492381}, {
            20.870309741681126`, 0.996372148799246}], 
           Offset[{-7.65685424949238, 5.656854249492381}, {
            20.870309741681126`, 0.996372148799246}], 
           Offset[{-9.65685424949238, 5.656854249492381}, {
            20.870309741681126`, 0.996372148799246}], 
           Offset[{-9.65685424949238, 5.656854249492381}, {
            20.870309741681126`, 0.996372148799246}]}]}, 
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{-9.65685424949238, 13.456854249492384`}, {
            20.870309741681126`, 0.996372148799246}], 
           Offset[{-9.65685424949238, 0.45685424949238396`}, {
            20.870309741681126`, 0.996372148799246}], 
           Offset[{-44.65685424949238, 0.45685424949237685`}, {
            20.870309741681126`, 0.996372148799246}], 
           Offset[{-44.65685424949238, 13.456854249492377`}, {
            20.870309741681126`, 0.996372148799246}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox["\<\"WBTC\"\>",
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{-27.15685424949238, 6.95685424949238}, \
{20.870309741681126, 0.996372148799246}], NCache[
         ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]]}], 
      {Opacity[0], 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.012833333333333334`], AbsoluteThickness[1.6]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.012833333333333334`], AbsoluteThickness[1.6], 
        TagBox[
         TooltipBox[PointBox[{20., 0.9833554263961116}],
          StyleBox[
           PaneBox[
            FrameBox[
            "\"DAI\"", LabelStyle -> {}, Background -> None, ContentPadding -> 
             False, LabelStyle -> {}, Frame -> True, RoundingRadius -> 4, 
             Background -> GrayLevel[1, 0.65], FrameStyle -> None, 
             FrameMargins -> 2, BaselinePosition -> Automatic, LabelingSize -> 
             DirectedInfinity[1], StripOnInput -> False], FrameMargins -> 
            0], {}, StripOnInput -> False]],
         Annotation[#, 
          Style[
           Pane[
            Framed[
            "DAI", LabelStyle -> {}, Background -> None, ContentPadding -> 
             False, {LabelStyle -> {}, Frame -> True, RoundingRadius -> 4, 
              Background -> GrayLevel[1, 0.65], FrameStyle -> None, 
              FrameMargins -> 2, BaselinePosition -> Automatic, LabelingSize -> 
              DirectedInfinity[1]}], FrameMargins -> 0], {}], "Tooltip"]& ]}}, 
      {Opacity[0], 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.012833333333333334`], AbsoluteThickness[1.6]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.012833333333333334`], AbsoluteThickness[1.6], 
        TagBox[
         TooltipBox[PointBox[{19., 0.9790583256857347}],
          StyleBox[
           PaneBox[
            FrameBox[
            "\"TRX\"", LabelStyle -> {}, Background -> None, ContentPadding -> 
             False, LabelStyle -> {}, Frame -> True, RoundingRadius -> 4, 
             Background -> GrayLevel[1, 0.65], FrameStyle -> None, 
             FrameMargins -> 2, BaselinePosition -> Automatic, LabelingSize -> 
             DirectedInfinity[1], StripOnInput -> False], FrameMargins -> 
            0], {}, StripOnInput -> False]],
         Annotation[#, 
          Style[
           Pane[
            Framed[
            "TRX", LabelStyle -> {}, Background -> None, ContentPadding -> 
             False, {LabelStyle -> {}, Frame -> True, RoundingRadius -> 4, 
              Background -> GrayLevel[1, 0.65], FrameStyle -> None, 
              FrameMargins -> 2, BaselinePosition -> Automatic, LabelingSize -> 
              DirectedInfinity[1]}], FrameMargins -> 0], {}], "Tooltip"]& ]}},
       GraphicsGroupBox[{
        {GrayLevel[1], AbsoluteThickness[4], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
         "Round"], 
         BSplineCurveBox[{
          Offset[{2.121320343559642, -2.121320343559643}, {
            18.129690258318874`, 0.9648647228230646}], 
           Offset[{5.656854249492379, -5.6568542494923815`}, {
            18.129690258318874`, 0.9648647228230646}], 
           Offset[{7.65685424949238, -5.6568542494923815`}, {
            18.129690258318874`, 0.9648647228230646}], 
           Offset[{9.65685424949238, -5.6568542494923815`}, {
            18.129690258318874`, 0.9648647228230646}], 
           Offset[{9.65685424949238, -5.6568542494923815`}, {
            18.129690258318874`, 0.9648647228230646}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], 
         BSplineCurveBox[{
          Offset[{2.121320343559642, -2.121320343559643}, {
            18.129690258318874`, 0.9648647228230646}], 
           Offset[{5.656854249492379, -5.6568542494923815`}, {
            18.129690258318874`, 0.9648647228230646}], 
           Offset[{7.65685424949238, -5.6568542494923815`}, {
            18.129690258318874`, 0.9648647228230646}], 
           Offset[{9.65685424949238, -5.6568542494923815`}, {
            18.129690258318874`, 0.9648647228230646}], 
           Offset[{9.65685424949238, -5.6568542494923815`}, {
            18.129690258318874`, 0.9648647228230646}]}]}, 
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{42.65685424949238, -0.45685424949237774`}, {
            18.129690258318874`, 0.9648647228230646}], 
           Offset[{42.65685424949238, -13.456854249492377`}, {
            18.129690258318874`, 0.9648647228230646}], 
           Offset[{9.65685424949238, -13.456854249492384`}, {
            18.129690258318874`, 0.9648647228230646}], 
           Offset[{9.65685424949238, -0.45685424949238485`}, {
            18.129690258318874`, 0.9648647228230646}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox["\<\"BUSD\"\>",
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{26.15685424949238, -6.956854249492381}, \
{18.129690258318874, 0.9648647228230646}], NCache[
         ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]]}], 
      {Opacity[0], 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.012833333333333334`], AbsoluteThickness[1.6]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.012833333333333334`], AbsoluteThickness[1.6], 
        TagBox[
         TooltipBox[PointBox[{17., 0.9682709629176438}],
          StyleBox[
           PaneBox[
            FrameBox[
            "\"WTRX\"", LabelStyle -> {}, Background -> None, ContentPadding -> 
             False, LabelStyle -> {}, Frame -> True, RoundingRadius -> 4, 
             Background -> GrayLevel[1, 0.65], FrameStyle -> None, 
             FrameMargins -> 2, BaselinePosition -> Automatic, LabelingSize -> 
             DirectedInfinity[1], StripOnInput -> False], FrameMargins -> 
            0], {}, StripOnInput -> False]],
         Annotation[#, 
          Style[
           Pane[
            Framed[
            "WTRX", LabelStyle -> {}, Background -> None, ContentPadding -> 
             False, {LabelStyle -> {}, Frame -> True, RoundingRadius -> 4, 
              Background -> GrayLevel[1, 0.65], FrameStyle -> None, 
              FrameMargins -> 2, BaselinePosition -> Automatic, LabelingSize -> 
              DirectedInfinity[1]}], FrameMargins -> 0], {}], "Tooltip"]& ]}},
       GraphicsGroupBox[{
        {GrayLevel[1], AbsoluteThickness[4], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
         "Round"], 
         BSplineCurveBox[{
          Offset[{-2.1213203435596424`, 2.121320343559643}, {
            15.870309741681126`, 0.9715939291602127}], 
           Offset[{-5.65685424949238, 5.656854249492381}, {
            15.870309741681126`, 0.9715939291602127}], 
           Offset[{-7.65685424949238, 5.656854249492381}, {
            15.870309741681126`, 0.9715939291602127}], 
           Offset[{-9.65685424949238, 5.656854249492381}, {
            15.870309741681126`, 0.9715939291602127}], 
           Offset[{-9.65685424949238, 5.656854249492381}, {
            15.870309741681126`, 0.9715939291602127}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], 
         BSplineCurveBox[{
          Offset[{-2.1213203435596424`, 2.121320343559643}, {
            15.870309741681126`, 0.9715939291602127}], 
           Offset[{-5.65685424949238, 5.656854249492381}, {
            15.870309741681126`, 0.9715939291602127}], 
           Offset[{-7.65685424949238, 5.656854249492381}, {
            15.870309741681126`, 0.9715939291602127}], 
           Offset[{-9.65685424949238, 5.656854249492381}, {
            15.870309741681126`, 0.9715939291602127}], 
           Offset[{-9.65685424949238, 5.656854249492381}, {
            15.870309741681126`, 0.9715939291602127}]}]}, 
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{-9.656854249492381, 13.456854249492384`}, {
            15.870309741681126`, 0.9715939291602127}], 
           Offset[{-9.656854249492378, 0.45685424949238396`}, {
            15.870309741681126`, 0.9715939291602127}], 
           Offset[{-38.656854249492376`, 0.45685424949237685`}, {
            15.870309741681126`, 0.9715939291602127}], 
           Offset[{-38.65685424949238, 13.456854249492377`}, {
            15.870309741681126`, 0.9715939291602127}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox["\<\"SHIB\"\>",
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{-24.15685424949238, 6.95685424949238}, \
{15.870309741681126, 0.9715939291602127}], NCache[
         ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]]}], GraphicsGroupBox[{
        {GrayLevel[1], AbsoluteThickness[4], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
         "Round"], 
         BSplineCurveBox[{
          Offset[{2.121320343559642, -2.121320343559643}, {
            15.129690258318874`, 0.947690765445681}], 
           Offset[{5.656854249492379, -5.6568542494923815`}, {
            15.129690258318874`, 0.947690765445681}], 
           Offset[{7.65685424949238, -5.6568542494923815`}, {
            15.129690258318874`, 0.947690765445681}], 
           Offset[{9.65685424949238, -5.6568542494923815`}, {
            15.129690258318874`, 0.947690765445681}], 
           Offset[{9.65685424949238, -5.6568542494923815`}, {
            15.129690258318874`, 0.947690765445681}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], 
         BSplineCurveBox[{
          Offset[{2.121320343559642, -2.121320343559643}, {
            15.129690258318874`, 0.947690765445681}], 
           Offset[{5.656854249492379, -5.6568542494923815`}, {
            15.129690258318874`, 0.947690765445681}], 
           Offset[{7.65685424949238, -5.6568542494923815`}, {
            15.129690258318874`, 0.947690765445681}], 
           Offset[{9.65685424949238, -5.6568542494923815`}, {
            15.129690258318874`, 0.947690765445681}], 
           Offset[{9.65685424949238, -5.6568542494923815`}, {
            15.129690258318874`, 0.947690765445681}]}]}, 
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{41.656854249492376`, -0.45685424949237774`}, {
            15.129690258318874`, 0.947690765445681}], 
           Offset[{41.65685424949238, -13.456854249492377`}, {
            15.129690258318874`, 0.947690765445681}], 
           Offset[{9.656854249492381, -13.456854249492384`}, {
            15.129690258318874`, 0.947690765445681}], 
           Offset[{9.65685424949238, -0.45685424949238485`}, {
            15.129690258318874`, 0.947690765445681}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox["\<\"AVAX\"\>",
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{25.65685424949238, -6.956854249492381}, \
{15.129690258318874, 0.947690765445681}], NCache[
         ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]]}], 
      {Opacity[0], 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.012833333333333334`], AbsoluteThickness[1.6]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.012833333333333334`], AbsoluteThickness[1.6], 
        TagBox[
         TooltipBox[PointBox[{14., 0.950893069576153}],
          StyleBox[
           PaneBox[
            FrameBox[
            "\"LTC\"", LabelStyle -> {}, Background -> None, ContentPadding -> 
             False, LabelStyle -> {}, Frame -> True, RoundingRadius -> 4, 
             Background -> GrayLevel[1, 0.65], FrameStyle -> None, 
             FrameMargins -> 2, BaselinePosition -> Automatic, LabelingSize -> 
             DirectedInfinity[1], StripOnInput -> False], FrameMargins -> 
            0], {}, StripOnInput -> False]],
         Annotation[#, 
          Style[
           Pane[
            Framed[
            "LTC", LabelStyle -> {}, Background -> None, ContentPadding -> 
             False, {LabelStyle -> {}, Frame -> True, RoundingRadius -> 4, 
              Background -> GrayLevel[1, 0.65], FrameStyle -> None, 
              FrameMargins -> 2, BaselinePosition -> Automatic, LabelingSize -> 
              DirectedInfinity[1]}], FrameMargins -> 0], {}], "Tooltip"]& ]}},
       GraphicsGroupBox[{
        {GrayLevel[1], AbsoluteThickness[4], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
         "Round"], 
         BSplineCurveBox[{
          Offset[{-2.1213203435596424`, 2.121320343559643}, {
            12.870309741681126`, 0.9536883515115944}], 
           Offset[{-5.65685424949238, 5.656854249492381}, {
            12.870309741681126`, 0.9536883515115944}], 
           Offset[{-7.65685424949238, 5.656854249492381}, {
            12.870309741681126`, 0.9536883515115944}], 
           Offset[{-9.65685424949238, 5.656854249492381}, {
            12.870309741681126`, 0.9536883515115944}], 
           Offset[{-9.65685424949238, 5.656854249492381}, {
            12.870309741681126`, 0.9536883515115944}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], 
         BSplineCurveBox[{
          Offset[{-2.1213203435596424`, 2.121320343559643}, {
            12.870309741681126`, 0.9536883515115944}], 
           Offset[{-5.65685424949238, 5.656854249492381}, {
            12.870309741681126`, 0.9536883515115944}], 
           Offset[{-7.65685424949238, 5.656854249492381}, {
            12.870309741681126`, 0.9536883515115944}], 
           Offset[{-9.65685424949238, 5.656854249492381}, {
            12.870309741681126`, 0.9536883515115944}], 
           Offset[{-9.65685424949238, 5.656854249492381}, {
            12.870309741681126`, 0.9536883515115944}]}]}, 
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{-9.656854249492381, 13.456854249492384`}, {
            12.870309741681126`, 0.9536883515115944}], 
           Offset[{-9.656854249492378, 0.45685424949238307`}, {
            12.870309741681126`, 0.9536883515115944}], 
           Offset[{-36.656854249492376`, 0.45685424949237774`}, {
            12.870309741681126`, 0.9536883515115944}], 
           Offset[{-36.65685424949238, 13.456854249492377`}, {
            12.870309741681126`, 0.9536883515115944}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox["\<\"DOT\"\>",
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{-23.15685424949238, 6.95685424949238}, \
{12.870309741681126, 0.9536883515115944}], NCache[
         ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]]}], GraphicsGroupBox[{
        {GrayLevel[1], AbsoluteThickness[4], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
         "Round"], 
         BSplineCurveBox[{
          Offset[{2.121320343559642, -2.121320343559643}, {
            12.129690258318874`, 0.9286677886603916}], 
           Offset[{5.656854249492379, -5.6568542494923815`}, {
            12.129690258318874`, 0.9286677886603916}], 
           Offset[{7.65685424949238, -5.6568542494923815`}, {
            12.129690258318874`, 0.9286677886603916}], 
           Offset[{9.65685424949238, -5.6568542494923815`}, {
            12.129690258318874`, 0.9286677886603916}], 
           Offset[{9.65685424949238, -5.6568542494923815`}, {
            12.129690258318874`, 0.9286677886603916}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], 
         BSplineCurveBox[{
          Offset[{2.121320343559642, -2.121320343559643}, {
            12.129690258318874`, 0.9286677886603916}], 
           Offset[{5.656854249492379, -5.6568542494923815`}, {
            12.129690258318874`, 0.9286677886603916}], 
           Offset[{7.65685424949238, -5.6568542494923815`}, {
            12.129690258318874`, 0.9286677886603916}], 
           Offset[{9.65685424949238, -5.6568542494923815`}, {
            12.129690258318874`, 0.9286677886603916}], 
           Offset[{9.65685424949238, -5.6568542494923815`}, {
            12.129690258318874`, 0.9286677886603916}]}]}, 
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{35.656854249492376`, -0.45685424949237863`}, {
            12.129690258318874`, 0.9286677886603916}], 
           Offset[{35.65685424949238, -13.456854249492379`}, {
            12.129690258318874`, 0.9286677886603916}], 
           Offset[{9.656854249492381, -13.456854249492384`}, {
            12.129690258318874`, 0.9286677886603916}], 
           Offset[{9.656854249492378, -0.45685424949238396`}, {
            12.129690258318874`, 0.9286677886603916}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox["\<\"SOL\"\>",
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{22.65685424949238, -6.956854249492381}, \
{12.129690258318874, 0.9286677886603916}], NCache[
         ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]]}], 
      {Opacity[0], 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.012833333333333334`], AbsoluteThickness[1.6]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.012833333333333334`], AbsoluteThickness[1.6], 
        TagBox[
         TooltipBox[PointBox[{11., 0.9294738452126032}],
          StyleBox[
           PaneBox[
            FrameBox[
            "\"MATIC\"", LabelStyle -> {}, Background -> None, ContentPadding -> 
             False, LabelStyle -> {}, Frame -> True, RoundingRadius -> 4, 
             Background -> GrayLevel[1, 0.65], FrameStyle -> None, 
             FrameMargins -> 2, BaselinePosition -> Automatic, LabelingSize -> 
             DirectedInfinity[1], StripOnInput -> False], FrameMargins -> 
            0], {}, StripOnInput -> False]],
         Annotation[#, 
          Style[
           Pane[
            Framed[
            "MATIC", LabelStyle -> {}, Background -> None, ContentPadding -> 
             False, {LabelStyle -> {}, Frame -> True, RoundingRadius -> 4, 
              Background -> GrayLevel[1, 0.65], FrameStyle -> None, 
              FrameMargins -> 2, BaselinePosition -> Automatic, LabelingSize -> 
              DirectedInfinity[1]}], FrameMargins -> 0], {}], "Tooltip"]& ]}},
       GraphicsGroupBox[{
        {GrayLevel[1], AbsoluteThickness[4], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
         "Round"], 
         BSplineCurveBox[{
          Offset[{-2.1213203435596424`, 2.121320343559643}, {
            9.870309741681126, 0.929393630054132}], 
           Offset[{-5.65685424949238, 5.656854249492381}, {9.870309741681126, 
            0.929393630054132}], 
           Offset[{-7.65685424949238, 5.656854249492381}, {9.870309741681126, 
            0.929393630054132}], 
           Offset[{-9.65685424949238, 5.656854249492381}, {9.870309741681126, 
            0.929393630054132}], 
           Offset[{-9.65685424949238, 5.656854249492381}, {9.870309741681126, 
            0.929393630054132}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], 
         BSplineCurveBox[{
          Offset[{-2.1213203435596424`, 2.121320343559643}, {
            9.870309741681126, 0.929393630054132}], 
           Offset[{-5.65685424949238, 5.656854249492381}, {9.870309741681126, 
            0.929393630054132}], 
           Offset[{-7.65685424949238, 5.656854249492381}, {9.870309741681126, 
            0.929393630054132}], 
           Offset[{-9.65685424949238, 5.656854249492381}, {9.870309741681126, 
            0.929393630054132}], 
           Offset[{-9.65685424949238, 5.656854249492381}, {9.870309741681126, 
            0.929393630054132}]}]}, 
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{-9.656854249492381, 13.456854249492384`}, {
            9.870309741681126, 0.929393630054132}], 
           Offset[{-9.656854249492378, 0.45685424949238307`}, {
            9.870309741681126, 0.929393630054132}], 
           Offset[{-35.656854249492376`, 0.45685424949237774`}, {
            9.870309741681126, 0.929393630054132}], 
           Offset[{-35.65685424949238, 13.456854249492377`}, {
            9.870309741681126, 0.929393630054132}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox["\<\"HEX\"\>",
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{-22.65685424949238, 6.95685424949238}, \
{9.870309741681126, 0.929393630054132}], NCache[
         ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]]}], GraphicsGroupBox[{
        {GrayLevel[1], AbsoluteThickness[4], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
         "Round"], 
         BSplineCurveBox[{
          Offset[{2.121320343559642, -2.121320343559643}, {9.129690258318874, 
            0.9011653244341586}], 
           Offset[{5.656854249492379, -5.6568542494923815`}, {
            9.129690258318874, 0.9011653244341586}], 
           Offset[{7.65685424949238, -5.6568542494923815`}, {
            9.129690258318874, 0.9011653244341586}], 
           Offset[{9.65685424949238, -5.6568542494923815`}, {
            9.129690258318874, 0.9011653244341586}], 
           Offset[{9.65685424949238, -5.6568542494923815`}, {
            9.129690258318874, 0.9011653244341586}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], 
         BSplineCurveBox[{
          Offset[{2.121320343559642, -2.121320343559643}, {9.129690258318874, 
            0.9011653244341586}], 
           Offset[{5.656854249492379, -5.6568542494923815`}, {
            9.129690258318874, 0.9011653244341586}], 
           Offset[{7.65685424949238, -5.6568542494923815`}, {
            9.129690258318874, 0.9011653244341586}], 
           Offset[{9.65685424949238, -5.6568542494923815`}, {
            9.129690258318874, 0.9011653244341586}], 
           Offset[{9.65685424949238, -5.6568542494923815`}, {
            9.129690258318874, 0.9011653244341586}]}]}, 
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{47.65685424949238, -0.45685424949237685`}, {
            9.129690258318874, 0.9011653244341586}], 
           Offset[{47.65685424949238, -13.456854249492377`}, {
            9.129690258318874, 0.9011653244341586}], 
           Offset[{9.65685424949238, -13.456854249492386`}, {
            9.129690258318874, 0.9011653244341586}], 
           Offset[{9.65685424949238, -0.45685424949238573`}, {
            9.129690258318874, 0.9011653244341586}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox["\<\"STETH\"\>",
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{28.65685424949238, -6.956854249492381}, \
{9.129690258318874, 0.9011653244341586}], NCache[
         ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]]}], 
      {Opacity[0], 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.012833333333333334`], AbsoluteThickness[1.6]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.012833333333333334`], AbsoluteThickness[1.6], 
        TagBox[
         TooltipBox[PointBox[{8., 0.8995581387444342}],
          StyleBox[
           PaneBox[
            FrameBox[
            "\"DOGE\"", LabelStyle -> {}, Background -> None, ContentPadding -> 
             False, LabelStyle -> {}, Frame -> True, RoundingRadius -> 4, 
             Background -> GrayLevel[1, 0.65], FrameStyle -> None, 
             FrameMargins -> 2, BaselinePosition -> Automatic, LabelingSize -> 
             DirectedInfinity[1], StripOnInput -> False], FrameMargins -> 
            0], {}, StripOnInput -> False]],
         Annotation[#, 
          Style[
           Pane[
            Framed[
            "DOGE", LabelStyle -> {}, Background -> None, ContentPadding -> 
             False, {LabelStyle -> {}, Frame -> True, RoundingRadius -> 4, 
              Background -> GrayLevel[1, 0.65], FrameStyle -> None, 
              FrameMargins -> 2, BaselinePosition -> Automatic, LabelingSize -> 
              DirectedInfinity[1]}], FrameMargins -> 0], {}], "Tooltip"]& ]}},
       GraphicsGroupBox[{
        {GrayLevel[1], AbsoluteThickness[4], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
         "Round"], 
         BSplineCurveBox[{
          Offset[{-2.1213203435596424`, 2.121320343559643}, {
            6.870309741681126, 0.8976263549785057}], 
           Offset[{-5.65685424949238, 5.656854249492381}, {6.870309741681126, 
            0.8976263549785057}], 
           Offset[{-7.65685424949238, 5.656854249492381}, {6.870309741681126, 
            0.8976263549785057}], 
           Offset[{-9.65685424949238, 5.656854249492381}, {6.870309741681126, 
            0.8976263549785057}], 
           Offset[{-9.65685424949238, 5.656854249492381}, {6.870309741681126, 
            0.8976263549785057}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], 
         BSplineCurveBox[{
          Offset[{-2.1213203435596424`, 2.121320343559643}, {
            6.870309741681126, 0.8976263549785057}], 
           Offset[{-5.65685424949238, 5.656854249492381}, {6.870309741681126, 
            0.8976263549785057}], 
           Offset[{-7.65685424949238, 5.656854249492381}, {6.870309741681126, 
            0.8976263549785057}], 
           Offset[{-9.65685424949238, 5.656854249492381}, {6.870309741681126, 
            0.8976263549785057}], 
           Offset[{-9.65685424949238, 5.656854249492381}, {6.870309741681126, 
            0.8976263549785057}]}]}, 
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{-9.656854249492381, 13.456854249492384`}, {
            6.870309741681126, 0.8976263549785057}], 
           Offset[{-9.656854249492378, 0.45685424949238307`}, {
            6.870309741681126, 0.8976263549785057}], 
           Offset[{-35.656854249492376`, 0.45685424949237774`}, {
            6.870309741681126, 0.8976263549785057}], 
           Offset[{-35.65685424949238, 13.456854249492377`}, {
            6.870309741681126, 0.8976263549785057}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox["\<\"ADA\"\>",
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{-22.65685424949238, 6.95685424949238}, \
{6.870309741681126, 0.8976263549785057}], NCache[
         ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]]}], GraphicsGroupBox[{
        {GrayLevel[1], AbsoluteThickness[4], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
         "Round"], 
         BSplineCurveBox[{
          Offset[{2.121320343559642, -2.121320343559643}, {6.129690258318874, 
            0.8664605217422039}], 
           Offset[{5.656854249492379, -5.6568542494923815`}, {
            6.129690258318874, 0.8664605217422039}], 
           Offset[{7.65685424949238, -5.6568542494923815`}, {
            6.129690258318874, 0.8664605217422039}], 
           Offset[{9.65685424949238, -5.6568542494923815`}, {
            6.129690258318874, 0.8664605217422039}], 
           Offset[{9.65685424949238, -5.6568542494923815`}, {
            6.129690258318874, 0.8664605217422039}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], 
         BSplineCurveBox[{
          Offset[{2.121320343559642, -2.121320343559643}, {6.129690258318874, 
            0.8664605217422039}], 
           Offset[{5.656854249492379, -5.6568542494923815`}, {
            6.129690258318874, 0.8664605217422039}], 
           Offset[{7.65685424949238, -5.6568542494923815`}, {
            6.129690258318874, 0.8664605217422039}], 
           Offset[{9.65685424949238, -5.6568542494923815`}, {
            6.129690258318874, 0.8664605217422039}], 
           Offset[{9.65685424949238, -5.6568542494923815`}, {
            6.129690258318874, 0.8664605217422039}]}]}, 
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{35.656854249492376`, -0.45685424949237863`}, {
            6.129690258318874, 0.8664605217422039}], 
           Offset[{35.65685424949238, -13.456854249492379`}, {
            6.129690258318874, 0.8664605217422039}], 
           Offset[{9.656854249492381, -13.456854249492384`}, {
            6.129690258318874, 0.8664605217422039}], 
           Offset[{9.656854249492378, -0.45685424949238396`}, {
            6.129690258318874, 0.8664605217422039}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox["\<\"XRP\"\>",
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{22.65685424949238, -6.956854249492381}, \
{6.129690258318874, 0.8664605217422039}], NCache[
         ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]]}], GraphicsGroupBox[{
        {GrayLevel[1], AbsoluteThickness[4], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
         "Round"], 
         BSplineCurveBox[{
          Offset[{-2.1213203435596424`, 2.121320343559643}, {
            4.870309741681126, 0.8615993674525888}], 
           Offset[{-5.65685424949238, 5.656854249492381}, {4.870309741681126, 
            0.8615993674525888}], 
           Offset[{-7.65685424949238, 5.656854249492381}, {4.870309741681126, 
            0.8615993674525888}], 
           Offset[{-9.65685424949238, 5.656854249492381}, {4.870309741681126, 
            0.8615993674525888}], 
           Offset[{-9.65685424949238, 5.656854249492381}, {4.870309741681126, 
            0.8615993674525888}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], 
         BSplineCurveBox[{
          Offset[{-2.1213203435596424`, 2.121320343559643}, {
            4.870309741681126, 0.8615993674525888}], 
           Offset[{-5.65685424949238, 5.656854249492381}, {4.870309741681126, 
            0.8615993674525888}], 
           Offset[{-7.65685424949238, 5.656854249492381}, {4.870309741681126, 
            0.8615993674525888}], 
           Offset[{-9.65685424949238, 5.656854249492381}, {4.870309741681126, 
            0.8615993674525888}], 
           Offset[{-9.65685424949238, 5.656854249492381}, {4.870309741681126, 
            0.8615993674525888}]}]}, 
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{-9.65685424949238, 13.456854249492384`}, {4.870309741681126,
             0.8615993674525888}], 
           Offset[{-9.65685424949238, 0.45685424949238396`}, {
            4.870309741681126, 0.8615993674525888}], 
           Offset[{-43.65685424949238, 0.45685424949237685`}, {
            4.870309741681126, 0.8615993674525888}], 
           Offset[{-43.65685424949238, 13.456854249492377`}, {
            4.870309741681126, 0.8615993674525888}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox["\<\"USDC\"\>",
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{-26.65685424949238, 6.95685424949238}, \
{4.870309741681126, 0.8615993674525888}], NCache[
         ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]]}], GraphicsGroupBox[{
        {GrayLevel[1], AbsoluteThickness[4], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
         "Round"], 
         BSplineCurveBox[{
          Offset[{-3., 3.6739403974420594`*^-16}, {3.816590277777778, 
            0.8258811733115802}], 
           Offset[{-8., 9.797174393178826*^-16}, {3.816590277777778, 
            0.8258811733115802}], 
           Offset[{-10., 9.797174393178826*^-16}, {3.816590277777778, 
            0.8258811733115802}], 
           Offset[{-12., 9.797174393178826*^-16}, {3.816590277777778, 
            0.8258811733115802}], 
           Offset[{-12., 9.797174393178826*^-16}, {3.816590277777778, 
            0.8258811733115802}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], 
         BSplineCurveBox[{
          Offset[{-3., 3.6739403974420594`*^-16}, {3.816590277777778, 
            0.8258811733115802}], 
           Offset[{-8., 9.797174393178826*^-16}, {3.816590277777778, 
            0.8258811733115802}], 
           Offset[{-10., 9.797174393178826*^-16}, {3.816590277777778, 
            0.8258811733115802}], 
           Offset[{-12., 9.797174393178826*^-16}, {3.816590277777778, 
            0.8258811733115802}], 
           Offset[{-12., 9.797174393178826*^-16}, {3.816590277777778, 
            0.8258811733115802}]}]}, 
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{-12.000000000000002`, 6.5000000000000036`}, {
            3.816590277777778, 0.8258811733115802}], 
           Offset[{-11.999999999999998`, -6.4999999999999964`}, {
            3.816590277777778, 0.8258811733115802}], 
           Offset[{-38., -6.500000000000002}, {3.816590277777778, 
            0.8258811733115802}], 
           Offset[{-38., 6.499999999999998}, {3.816590277777778, 
            0.8258811733115802}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox["\<\"BNB\"\>",
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{-25., 9.797174393178826*^-16}, \
{3.816590277777778, 0.8258811733115802}], NCache[
         ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]]}], GraphicsGroupBox[{
        {GrayLevel[1], AbsoluteThickness[4], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
         "Round"], 
         BSplineCurveBox[{
          Offset[{2.121320343559642, -2.121320343559643}, {
            3.1296902583188744`, 0.7715079368538589}], 
           Offset[{5.656854249492379, -5.6568542494923815`}, {
            3.1296902583188744`, 0.7715079368538589}], 
           Offset[{7.65685424949238, -5.6568542494923815`}, {
            3.1296902583188744`, 0.7715079368538589}], 
           Offset[{9.65685424949238, -5.6568542494923815`}, {
            3.1296902583188744`, 0.7715079368538589}], 
           Offset[{9.65685424949238, -5.6568542494923815`}, {
            3.1296902583188744`, 0.7715079368538589}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], 
         BSplineCurveBox[{
          Offset[{2.121320343559642, -2.121320343559643}, {
            3.1296902583188744`, 0.7715079368538589}], 
           Offset[{5.656854249492379, -5.6568542494923815`}, {
            3.1296902583188744`, 0.7715079368538589}], 
           Offset[{7.65685424949238, -5.6568542494923815`}, {
            3.1296902583188744`, 0.7715079368538589}], 
           Offset[{9.65685424949238, -5.6568542494923815`}, {
            3.1296902583188744`, 0.7715079368538589}], 
           Offset[{9.65685424949238, -5.6568542494923815`}, {
            3.1296902583188744`, 0.7715079368538589}]}]}, 
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{42.65685424949238, -0.45685424949237774`}, {
            3.1296902583188744`, 0.7715079368538589}], 
           Offset[{42.65685424949238, -13.456854249492377`}, {
            3.1296902583188744`, 0.7715079368538589}], 
           Offset[{9.65685424949238, -13.456854249492384`}, {
            3.1296902583188744`, 0.7715079368538589}], 
           Offset[{9.65685424949238, -0.45685424949238485`}, {
            3.1296902583188744`, 0.7715079368538589}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox["\<\"USDT\"\>",
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{26.15685424949238, -6.956854249492381}, \
{3.1296902583188744, 0.7715079368538589}], NCache[
         ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]]}], GraphicsGroupBox[{
        {GrayLevel[1], AbsoluteThickness[4], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
         "Round"], 
         BSplineCurveBox[{
          Offset[{2.121320343559642, -2.121320343559643}, {
            2.1296902583188744`, 0.7026226168443419}], 
           Offset[{5.656854249492379, -5.6568542494923815`}, {
            2.1296902583188744`, 0.7026226168443419}], 
           Offset[{7.65685424949238, -5.6568542494923815`}, {
            2.1296902583188744`, 0.7026226168443419}], 
           Offset[{9.65685424949238, -5.6568542494923815`}, {
            2.1296902583188744`, 0.7026226168443419}], 
           Offset[{9.65685424949238, -5.6568542494923815`}, {
            2.1296902583188744`, 0.7026226168443419}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], 
         BSplineCurveBox[{
          Offset[{2.121320343559642, -2.121320343559643}, {
            2.1296902583188744`, 0.7026226168443419}], 
           Offset[{5.656854249492379, -5.6568542494923815`}, {
            2.1296902583188744`, 0.7026226168443419}], 
           Offset[{7.65685424949238, -5.6568542494923815`}, {
            2.1296902583188744`, 0.7026226168443419}], 
           Offset[{9.65685424949238, -5.6568542494923815`}, {
            2.1296902583188744`, 0.7026226168443419}], 
           Offset[{9.65685424949238, -5.6568542494923815`}, {
            2.1296902583188744`, 0.7026226168443419}]}]}, 
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{34.656854249492376`, -0.45685424949237863`}, {
            2.1296902583188744`, 0.7026226168443419}], 
           Offset[{34.65685424949238, -13.456854249492379`}, {
            2.1296902583188744`, 0.7026226168443419}], 
           Offset[{9.656854249492381, -13.456854249492384`}, {
            2.1296902583188744`, 0.7026226168443419}], 
           Offset[{9.656854249492378, -0.45685424949238396`}, {
            2.1296902583188744`, 0.7026226168443419}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox["\<\"ETH\"\>",
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{22.15685424949238, -6.956854249492381}, \
{2.1296902583188744, 0.7026226168443419}], NCache[
         ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]]}], GraphicsGroupBox[{
        {GrayLevel[1], AbsoluteThickness[4], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
         "Round"], 
         BSplineCurveBox[{
          Offset[{2.121320343559642, -2.121320343559643}, {
            1.1296902583188744`, 0.49036011726920853`}], 
           Offset[{5.656854249492379, -5.6568542494923815`}, {
            1.1296902583188744`, 0.49036011726920853`}], 
           Offset[{7.65685424949238, -5.6568542494923815`}, {
            1.1296902583188744`, 0.49036011726920853`}], 
           Offset[{9.65685424949238, -5.6568542494923815`}, {
            1.1296902583188744`, 0.49036011726920853`}], 
           Offset[{9.65685424949238, -5.6568542494923815`}, {
            1.1296902583188744`, 0.49036011726920853`}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], 
         BSplineCurveBox[{
          Offset[{2.121320343559642, -2.121320343559643}, {
            1.1296902583188744`, 0.49036011726920853`}], 
           Offset[{5.656854249492379, -5.6568542494923815`}, {
            1.1296902583188744`, 0.49036011726920853`}], 
           Offset[{7.65685424949238, -5.6568542494923815`}, {
            1.1296902583188744`, 0.49036011726920853`}], 
           Offset[{9.65685424949238, -5.6568542494923815`}, {
            1.1296902583188744`, 0.49036011726920853`}], 
           Offset[{9.65685424949238, -5.6568542494923815`}, {
            1.1296902583188744`, 0.49036011726920853`}]}]}, 
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{34.656854249492376`, -0.45685424949237863`}, {
            1.1296902583188744`, 0.49036011726920853`}], 
           Offset[{34.65685424949238, -13.456854249492379`}, {
            1.1296902583188744`, 0.49036011726920853`}], 
           Offset[{9.656854249492381, -13.456854249492384`}, {
            1.1296902583188744`, 0.49036011726920853`}], 
           Offset[{9.656854249492378, -0.45685424949238396`}, {
            1.1296902583188744`, 0.49036011726920853`}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox["\<\"BTC\"\>",
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{22.15685424949238, -6.956854249492381}, \
{1.1296902583188744, 0.49036011726920853}], NCache[
         ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]]}]}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.5000000000000011, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, {{0., 
       FormBox["\"0%\"", TraditionalForm]}, {2.5, 
       FormBox["\"10%\"", TraditionalForm]}, {5., 
       FormBox["\"20%\"", TraditionalForm]}, {7.500000000000001, 
       FormBox["\"30%\"", TraditionalForm]}, {10., 
       FormBox["\"40%\"", TraditionalForm]}, {12.5, 
       FormBox["\"50%\"", TraditionalForm]}}}},
  GridLines->{{0., 2.5, 5., 7.500000000000001, 10., 12.5}, {0.8}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->{{All, All}, {All, All}},
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
   "\"Pareto principle for cryptocurrency market caps\"", TraditionalForm],
  PlotRange->{{0.5000000000000011, 25.}, {0, 1.}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.08]}, {
     Scaled[0.02], 
     Scaled[0.12944271909999158`]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.890858717513773*^9},
 CellLabel->"Out[141]=",
 CellID->820751885,ExpressionUUID->"e7e3ca31-4af2-4135-93fd-9bd779c1fc66"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Here is the Pareto statistic for the top 12 cryptocurrencies:\
\>", "Text",
 CellChangeTimes->{{3.83336898751989*^9, 3.833369005047235*^9}},
 CellID->2089419155,ExpressionUUID->"97366aac-e3d4-4517-a10c-539eabf8aef9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Take", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"AssociationThread", "[", 
     RowBox[{
      RowBox[{"Keys", "@", "aMCaps"}], ",", 
      RowBox[{"Accumulate", "[", 
       RowBox[{"Values", "@", "aMCaps"}], "]"}]}], "]"}], "/", 
    RowBox[{"Total", "[", "aMCaps", "]"}]}], ",", "12"}], "]"}]], "Input",
 CellChangeTimes->{{3.833360780304775*^9, 3.833360899539651*^9}, {
  3.833361045656767*^9, 3.8333610579717484`*^9}, {3.8333616257876673`*^9, 
  3.833361629715273*^9}},
 CellLabel->"In[142]:=",
 CellID->1215142341,ExpressionUUID->"53429138-04d0-44bc-a921-186775eb7497"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"BTC\"\>", "\[Rule]", "0.4994230311682132`"}], ",", 
   RowBox[{"\<\"ETH\"\>", "\[Rule]", "0.7116855307433466`"}], ",", 
   RowBox[{"\<\"USDT\"\>", "\[Rule]", "0.7805708507528636`"}], ",", 
   RowBox[{"\<\"BNB\"\>", "\[Rule]", "0.8258811733115802`"}], ",", 
   RowBox[{"\<\"USDC\"\>", "\[Rule]", "0.8525364535535841`"}], ",", 
   RowBox[{"\<\"XRP\"\>", "\[Rule]", "0.8755234356412086`"}], ",", 
   RowBox[{"\<\"ADA\"\>", "\[Rule]", "0.888563441079501`"}], ",", 
   RowBox[{"\<\"DOGE\"\>", "\[Rule]", "0.8995581387444342`"}], ",", 
   RowBox[{"\<\"STETH\"\>", "\[Rule]", "0.9102282383331634`"}], ",", 
   RowBox[{"\<\"HEX\"\>", "\[Rule]", "0.9203307161551273`"}], ",", 
   RowBox[{"\<\"MATIC\"\>", "\[Rule]", "0.9294738452126032`"}], ",", 
   RowBox[{"\<\"SOL\"\>", "\[Rule]", "0.9377307025593963`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.890858717541082*^9},
 CellLabel->"Out[142]=",
 CellID->1089466514,ExpressionUUID->"5be1f4a4-7139-4c06-99ba-deed11abf1a8"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["By price", "Subsection",
 CellChangeTimes->{{3.83329731960144*^9, 3.833297321075262*^9}},
 CellID->327842217,ExpressionUUID->"8d6a1d7b-8dc5-47ed-86d4-3f8774e9a7d1"],

Cell[CellGroupData[{

Cell["\<\
Get the mean daily closing prices data for the last two weeks and show the \
corresponding data summary:\
\>", "Text",
 CellChangeTimes->{{3.833369274692601*^9, 3.833369357235436*^9}},
 CellID->1748586564,ExpressionUUID->"a9a3d7bb-3e0f-4517-8e9a-b701a280c456"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"startDate", "=", 
   RowBox[{"DatePlus", "[", 
    RowBox[{"Now", ",", 
     RowBox[{"-", 
      RowBox[{"Quantity", "[", 
       RowBox[{"2", ",", "\"\<Weeks\>\""}], "]"}]}]}], "]"}]}], ";", 
  RowBox[{"aMeans", "=", 
   RowBox[{"ReverseSort", "[", 
    RowBox[{"Select", "[", 
     RowBox[{
      RowBox[{"Association", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"#", "->", 
          RowBox[{"Mean", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
             "ResourceFunction", "[", "\"\<CryptocurrencyData\>\"", "]"}], 
             "[", 
             RowBox[{"#", ",", "\"\<Close\>\"", ",", "startDate"}], "]"}], 
            "[", "\"\<Values\>\"", "]"}], "]"}]}], "&"}], "/@", 
        RowBox[{
        "CryptocurrencyData", "[", "\"\<Cryptocurrencies\>\"", "]"}]}], "]"}],
       ",", "NumberQ"}], "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<RecordsSummary\>\"", "]"}], "[", 
  RowBox[{"aMeans", ",", 
   RowBox[{"Thread", "->", "True"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.833369303077483*^9, 3.8333693361805162`*^9}, 
   3.890858666271048*^9, {3.890858859840322*^9, 3.890858867051774*^9}},
 CellLabel->"In[204]:=",
 CellID->180671953,ExpressionUUID->"c87afafa-c8d4-4288-87f1-f3d13093f69e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   TagBox[GridBox[{
      {
       StyleBox["\<\"1 column 1\"\>",
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontFamily->"Times",
        FontColor->RGBColor[0, 0, 1]]},
      {
       TagBox[GridBox[{
          {"\<\"ADA\"\>", "1"},
          {"\<\"BCH\"\>", "1"},
          {"\<\"BNB\"\>", "1"},
          {"\<\"BTC\"\>", "1"},
          {"\<\"DOGE\"\>", "1"},
          {"\<\"EOS\"\>", "1"},
          {"\<\"(Other)\"\>", "15"}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"], "}"}], "\[Rule]", 
  RowBox[{"{", 
   TagBox[GridBox[{
      {
       StyleBox["\<\"1 column 1\"\>",
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontFamily->"Times",
        FontColor->RGBColor[0, 0, 1]]},
      {
       TagBox[GridBox[{
          {"\<\"Min\"\>", "0.02495430769230769`"},
          {"\<\"1st Qu\"\>", "0.33468105769230777`"},
          {"\<\"Median\"\>", "1.132183692307692`"},
          {"\<\"3rd Qu\"\>", "102.7304095`"},
          {"\<\"Mean\"\>", "1526.090960692308`"},
          {"\<\"Max\"\>", "29339.967998846158`"}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"], "}"}]}]], "Output",
 CellChangeTimes->{3.8908587328997183`*^9, 3.890858867752461*^9},
 CellLabel->"Out[205]=",
 CellID->299903841,ExpressionUUID->"82831958-37b1-403e-9f58-388a3168e78c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Pareto principle adherence plot:", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.8332160865913143`*^9, 3.833216126898992*^9}, {
  3.833216317595963*^9, 3.833216334952779*^9}, {3.833216455821968*^9, 
  3.8332164572886066`*^9}, {3.833260796441327*^9, 3.833260797384853*^9}, {
  3.833296776647985*^9, 3.8332968335183687`*^9}, {3.8333693694537077`*^9, 
  3.833369374246167*^9}},
 CellID->1894663852,ExpressionUUID->"5e66c5e4-bcc4-447f-832d-d15dc6a0300a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<ParetoPrinciplePlot\>\"", "]"}], "[", 
  
  RowBox[{"aMeans", ",", 
   RowBox[{"PlotRange", "->", "All"}], ",", 
   RowBox[{
   "PlotLabel", "->", 
    "\"\<Pareto principle for cryptocurrency closing prices\>\""}]}], 
  "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.833216129168705*^9, 3.833216302500484*^9}, {
  3.833216375346168*^9, 3.833216415600854*^9}, {3.833216452392619*^9, 
  3.8332164526843147`*^9}, {3.833296015649021*^9, 3.833296071269555*^9}, {
  3.833296822705689*^9, 3.8332969078815947`*^9}, {3.8332970666095657`*^9, 
  3.833297189078123*^9}, {3.8332972722850523`*^9, 3.83329727522036*^9}, {
  3.833302549361073*^9, 3.833302562304397*^9}, {3.8333026041112967`*^9, 
  3.83330261182796*^9}, {3.83336926974695*^9, 3.833369270665318*^9}},
 CellLabel->"In[206]:=",
 CellID->1500293889,ExpressionUUID->"1de176fb-e314-48e2-b41c-7b2b3c71e6d7"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`], 
    AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQEf7Df4TZ191vutPVTAoSO5PfGRw3son8Mh+1rK
lLTJML6Ag+LC+gVxe2B8EYem+z7/g+7C+BIO7c+m60R9hfFlHDQ0Mzqu/ILx
FRy2CV8/sf8PjK/kwDdXksvjH4yv4pBfkyI2A85Xc7j48pHOIzhfw2H6QhsX
zf8wvpbDjIvT92XB+ToOtd/rdNbA+XoODbUnd5+F8w0cVJZuW/ACzjd0yAzI
6XkP5xs5vPA1M/sK5xs7rLj6g/MXnG/ikOv1LfYfnG/qAAtHADX1av4=
     "]]}, {{}, {{GraphicsGroupBox[{
        {GrayLevel[1], AbsoluteThickness[4], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
         "Round"], 
         BSplineCurveBox[{
          Offset[{1.8369701987210297`*^-16, 3.}, {21., 1.0011849452451183`}], 
           Offset[{4.898587196589413*^-16, 8.}, {21., 1.0011849452451183`}], 
           Offset[{4.898587196589413*^-16, 10.}, {21., 1.0011849452451183`}], 
           Offset[{4.898587196589413*^-16, 12.}, {21., 1.0011849452451183`}], 
           Offset[{4.898587196589413*^-16, 12.}, {21., 
            1.0011849452451183`}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], 
         BSplineCurveBox[{
          Offset[{1.8369701987210297`*^-16, 3.}, {21., 1.0011849452451183`}], 
           Offset[{4.898587196589413*^-16, 8.}, {21., 1.0011849452451183`}], 
           Offset[{4.898587196589413*^-16, 10.}, {21., 1.0011849452451183`}], 
           Offset[{4.898587196589413*^-16, 12.}, {21., 1.0011849452451183`}], 
           Offset[{4.898587196589413*^-16, 12.}, {21., 
            1.0011849452451183`}]}]}, 
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{12.499999999999998`, 25.000000000000004`}, {21., 
            1.0011849452451183`}], 
           Offset[{12.500000000000002`, 12.000000000000004`}, {21., 
            1.0011849452451183`}], 
           Offset[{-12.499999999999998`, 11.999999999999996`}, {21., 
            1.0011849452451183`}], 
           Offset[{-12.500000000000002`, 24.999999999999996`}, {21., 
            1.0011849452451183`}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox["\<\"VET\"\>",
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{4.898587196589413*^-16, 18.5}, {21., 1.0011849452451183}], 
         NCache[ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]]}], 
      {Opacity[0], 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.012833333333333334`], AbsoluteThickness[1.6]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.012833333333333334`], AbsoluteThickness[1.6], 
        TagBox[
         TooltipBox[PointBox[{20., 0.9999992213436834}],
          StyleBox[
           PaneBox[
            FrameBox[
            "\"TRX\"", LabelStyle -> {}, Background -> None, ContentPadding -> 
             False, LabelStyle -> {}, Frame -> True, RoundingRadius -> 4, 
             Background -> GrayLevel[1, 0.65], FrameStyle -> None, 
             FrameMargins -> 2, BaselinePosition -> Automatic, LabelingSize -> 
             DirectedInfinity[1], StripOnInput -> False], FrameMargins -> 
            0], {}, StripOnInput -> False]],
         Annotation[#, 
          Style[
           Pane[
            Framed[
            "TRX", LabelStyle -> {}, Background -> None, ContentPadding -> 
             False, {LabelStyle -> {}, Frame -> True, RoundingRadius -> 4, 
              Background -> GrayLevel[1, 0.65], FrameStyle -> None, 
              FrameMargins -> 2, BaselinePosition -> Automatic, LabelingSize -> 
              DirectedInfinity[1]}], FrameMargins -> 0], {}], "Tooltip"]& ]}},
       GraphicsGroupBox[{
        {GrayLevel[1], AbsoluteThickness[4], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
         "Round"], 
         BSplineCurveBox[{
          Offset[{1.8369701987210297`*^-16, 3.}, {19., 1.0011821027964853`}], 
           Offset[{4.898587196589413*^-16, 8.}, {19., 1.0011821027964853`}], 
           Offset[{4.898587196589413*^-16, 10.}, {19., 1.0011821027964853`}], 
           Offset[{4.898587196589413*^-16, 12.}, {19., 1.0011821027964853`}], 
           Offset[{4.898587196589413*^-16, 12.}, {19., 
            1.0011821027964853`}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], 
         BSplineCurveBox[{
          Offset[{1.8369701987210297`*^-16, 3.}, {19., 1.0011821027964853`}], 
           Offset[{4.898587196589413*^-16, 8.}, {19., 1.0011821027964853`}], 
           Offset[{4.898587196589413*^-16, 10.}, {19., 1.0011821027964853`}], 
           Offset[{4.898587196589413*^-16, 12.}, {19., 1.0011821027964853`}], 
           Offset[{4.898587196589413*^-16, 12.}, {19., 
            1.0011821027964853`}]}]}, 
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{12.999999999999998`, 25.000000000000004`}, {19., 
            1.0011821027964853`}], 
           Offset[{13.000000000000002`, 12.000000000000004`}, {19., 
            1.0011821027964853`}], 
           Offset[{-12.999999999999998`, 11.999999999999996`}, {19., 
            1.0011821027964853`}], 
           Offset[{-13.000000000000002`, 24.999999999999996`}, {19., 
            1.0011821027964853`}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox["\<\"HEX\"\>",
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{4.898587196589413*^-16, 18.5}, {19., 1.0011821027964853}], 
         NCache[ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]]}], GraphicsGroupBox[{
        {GrayLevel[1], AbsoluteThickness[4], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
         "Round"], 
         BSplineCurveBox[{
          Offset[{2.121320343559642, -2.121320343559643}, {18.10807521526573, 
            0.9991569729510559}], 
           Offset[{5.656854249492379, -5.6568542494923815`}, {
            18.10807521526573, 0.9991569729510559}], 
           Offset[{7.65685424949238, -5.6568542494923815`}, {
            18.10807521526573, 0.9991569729510559}], 
           Offset[{9.65685424949238, -5.6568542494923815`}, {
            18.10807521526573, 0.9991569729510559}], 
           Offset[{9.65685424949238, -5.6568542494923815`}, {
            18.10807521526573, 0.9991569729510559}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], 
         BSplineCurveBox[{
          Offset[{2.121320343559642, -2.121320343559643}, {18.10807521526573, 
            0.9991569729510559}], 
           Offset[{5.656854249492379, -5.6568542494923815`}, {
            18.10807521526573, 0.9991569729510559}], 
           Offset[{7.65685424949238, -5.6568542494923815`}, {
            18.10807521526573, 0.9991569729510559}], 
           Offset[{9.65685424949238, -5.6568542494923815`}, {
            18.10807521526573, 0.9991569729510559}], 
           Offset[{9.65685424949238, -5.6568542494923815`}, {
            18.10807521526573, 0.9991569729510559}]}]}, 
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{44.65685424949238, -0.45685424949237774`}, {
            18.10807521526573, 0.9991569729510559}], 
           Offset[{44.65685424949238, -13.456854249492377`}, {
            18.10807521526573, 0.9991569729510559}], 
           Offset[{9.65685424949238, -13.456854249492384`}, {
            18.10807521526573, 0.9991569729510559}], 
           Offset[{9.65685424949238, -0.45685424949238485`}, {
            18.10807521526573, 0.9991569729510559}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox["\<\"DOGE\"\>",
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{27.15685424949238, -6.956854249492381}, \
{18.10807521526573, 0.9991569729510559}], NCache[
         ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]]}], GraphicsGroupBox[{
        {GrayLevel[1], AbsoluteThickness[4], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
         "Round"], 
         BSplineCurveBox[{
          Offset[{1.8369701987210297`*^-16, 3.}, {17., 1.0011771005718384`}], 
           Offset[{4.898587196589413*^-16, 8.}, {17., 1.0011771005718384`}], 
           Offset[{4.898587196589413*^-16, 10.}, {17., 1.0011771005718384`}], 
           Offset[{4.898587196589413*^-16, 12.}, {17., 1.0011771005718384`}], 
           Offset[{4.898587196589413*^-16, 12.}, {17., 
            1.0011771005718384`}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], 
         BSplineCurveBox[{
          Offset[{1.8369701987210297`*^-16, 3.}, {17., 1.0011771005718384`}], 
           Offset[{4.898587196589413*^-16, 8.}, {17., 1.0011771005718384`}], 
           Offset[{4.898587196589413*^-16, 10.}, {17., 1.0011771005718384`}], 
           Offset[{4.898587196589413*^-16, 12.}, {17., 1.0011771005718384`}], 
           Offset[{4.898587196589413*^-16, 12.}, {17., 
            1.0011771005718384`}]}]}, 
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{12.999999999999998`, 25.000000000000004`}, {17., 
            1.0011771005718384`}], 
           Offset[{13.000000000000002`, 12.000000000000004`}, {17., 
            1.0011771005718384`}], 
           Offset[{-12.999999999999998`, 11.999999999999996`}, {17., 
            1.0011771005718384`}], 
           Offset[{-13.000000000000002`, 24.999999999999996`}, {17., 
            1.0011771005718384`}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox["\<\"XLM\"\>",
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{4.898587196589413*^-16, 18.5}, {17., 1.0011771005718384}], 
         NCache[ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]]}], GraphicsGroupBox[{
        {GrayLevel[1], AbsoluteThickness[4], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
         "Round"], 
         BSplineCurveBox[{
          Offset[{2.121320343559642, -2.121320343559643}, {16.10807521526573, 
            0.999150972442187}], 
           Offset[{5.656854249492379, -5.6568542494923815`}, {
            16.10807521526573, 0.999150972442187}], 
           Offset[{7.65685424949238, -5.6568542494923815`}, {
            16.10807521526573, 0.999150972442187}], 
           Offset[{9.65685424949238, -5.6568542494923815`}, {
            16.10807521526573, 0.999150972442187}], 
           Offset[{9.65685424949238, -5.6568542494923815`}, {
            16.10807521526573, 0.999150972442187}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], 
         BSplineCurveBox[{
          Offset[{2.121320343559642, -2.121320343559643}, {16.10807521526573, 
            0.999150972442187}], 
           Offset[{5.656854249492379, -5.6568542494923815`}, {
            16.10807521526573, 0.999150972442187}], 
           Offset[{7.65685424949238, -5.6568542494923815`}, {
            16.10807521526573, 0.999150972442187}], 
           Offset[{9.65685424949238, -5.6568542494923815`}, {
            16.10807521526573, 0.999150972442187}], 
           Offset[{9.65685424949238, -5.6568542494923815`}, {
            16.10807521526573, 0.999150972442187}]}]}, 
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{35.656854249492376`, -0.45685424949237863`}, {
            16.10807521526573, 0.999150972442187}], 
           Offset[{35.65685424949238, -13.456854249492379`}, {
            16.10807521526573, 0.999150972442187}], 
           Offset[{9.656854249492381, -13.456854249492384`}, {
            16.10807521526573, 0.999150972442187}], 
           Offset[{9.656854249492378, -0.45685424949238396`}, {
            16.10807521526573, 0.999150972442187}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox["\<\"ADA\"\>",
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{22.65685424949238, -6.956854249492381}, \
{16.10807521526573, 0.999150972442187}], NCache[
         ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]]}], GraphicsGroupBox[{
        {GrayLevel[1], AbsoluteThickness[4], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
         "Round"], 
         BSplineCurveBox[{
          Offset[{1.8369701987210297`*^-16, 3.}, {15., 1.0011609763307272`}], 
           Offset[{4.898587196589413*^-16, 8.}, {15., 1.0011609763307272`}], 
           Offset[{4.898587196589413*^-16, 10.}, {15., 1.0011609763307272`}], 
           Offset[{4.898587196589413*^-16, 12.}, {15., 1.0011609763307272`}], 
           Offset[{4.898587196589413*^-16, 12.}, {15., 
            1.0011609763307272`}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], 
         BSplineCurveBox[{
          Offset[{1.8369701987210297`*^-16, 3.}, {15., 1.0011609763307272`}], 
           Offset[{4.898587196589413*^-16, 8.}, {15., 1.0011609763307272`}], 
           Offset[{4.898587196589413*^-16, 10.}, {15., 1.0011609763307272`}], 
           Offset[{4.898587196589413*^-16, 12.}, {15., 1.0011609763307272`}], 
           Offset[{4.898587196589413*^-16, 12.}, {15., 
            1.0011609763307272`}]}]}, 
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{12.999999999999998`, 25.000000000000004`}, {15., 
            1.0011609763307272`}], 
           Offset[{13.000000000000002`, 12.000000000000004`}, {15., 
            1.0011609763307272`}], 
           Offset[{-12.999999999999998`, 11.999999999999996`}, {15., 
            1.0011609763307272`}], 
           Offset[{-13.000000000000002`, 24.999999999999996`}, {15., 
            1.0011609763307272`}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox["\<\"XRP\"\>",
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{4.898587196589413*^-16, 18.5}, {15., 1.0011609763307272}], 
         NCache[ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]]}], GraphicsGroupBox[{
        {GrayLevel[1], AbsoluteThickness[4], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
         "Round"], 
         BSplineCurveBox[{
          Offset[{-2.1213203435596424`, 2.121320343559643}, {
            13.891924784734272`, 1.00079791137706}], 
           Offset[{-5.65685424949238, 5.656854249492381}, {
            13.891924784734272`, 1.00079791137706}], 
           Offset[{-7.65685424949238, 5.656854249492381}, {
            13.891924784734272`, 1.00079791137706}], 
           Offset[{-9.65685424949238, 5.656854249492381}, {
            13.891924784734272`, 1.00079791137706}], 
           Offset[{-9.65685424949238, 5.656854249492381}, {
            13.891924784734272`, 1.00079791137706}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], 
         BSplineCurveBox[{
          Offset[{-2.1213203435596424`, 2.121320343559643}, {
            13.891924784734272`, 1.00079791137706}], 
           Offset[{-5.65685424949238, 5.656854249492381}, {
            13.891924784734272`, 1.00079791137706}], 
           Offset[{-7.65685424949238, 5.656854249492381}, {
            13.891924784734272`, 1.00079791137706}], 
           Offset[{-9.65685424949238, 5.656854249492381}, {
            13.891924784734272`, 1.00079791137706}], 
           Offset[{-9.65685424949238, 5.656854249492381}, {
            13.891924784734272`, 1.00079791137706}]}]}, 
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{-9.65685424949238, 13.456854249492384`}, {
            13.891924784734272`, 1.00079791137706}], 
           Offset[{-9.65685424949238, 0.45685424949238396`}, {
            13.891924784734272`, 1.00079791137706}], 
           Offset[{-43.65685424949238, 0.45685424949237685`}, {
            13.891924784734272`, 1.00079791137706}], 
           Offset[{-43.65685424949238, 13.456854249492377`}, {
            13.891924784734272`, 1.00079791137706}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox["\<\"USDC\"\>",
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{-26.65685424949238, 6.95685424949238}, \
{13.891924784734272, 1.00079791137706}], NCache[
         ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]]}], 
      {Opacity[0], 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.012833333333333334`], AbsoluteThickness[1.6]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.012833333333333334`], AbsoluteThickness[1.6], 
        TagBox[
         TooltipBox[PointBox[{13., 0.9999288294334745}],
          StyleBox[
           PaneBox[
            FrameBox[
            "\"USDT\"", LabelStyle -> {}, Background -> None, ContentPadding -> 
             False, LabelStyle -> {}, Frame -> True, RoundingRadius -> 4, 
             Background -> GrayLevel[1, 0.65], FrameStyle -> None, 
             FrameMargins -> 2, BaselinePosition -> Automatic, LabelingSize -> 
             DirectedInfinity[1], StripOnInput -> False], FrameMargins -> 
            0], {}, StripOnInput -> False]],
         Annotation[#, 
          Style[
           Pane[
            Framed[
            "USDT", LabelStyle -> {}, Background -> None, ContentPadding -> 
             False, {LabelStyle -> {}, Frame -> True, RoundingRadius -> 4, 
              Background -> GrayLevel[1, 0.65], FrameStyle -> None, 
              FrameMargins -> 2, BaselinePosition -> Automatic, LabelingSize -> 
              DirectedInfinity[1]}], FrameMargins -> 0], {}], "Tooltip"]& ]}},
       GraphicsGroupBox[{
        {GrayLevel[1], AbsoluteThickness[4], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
         "Round"], 
         BSplineCurveBox[{
          Offset[{2.121320343559642, -2.121320343559643}, {
            12.108075215265728`, 0.9990597242938487}], 
           Offset[{5.656854249492379, -5.6568542494923815`}, {
            12.108075215265728`, 0.9990597242938487}], 
           Offset[{7.65685424949238, -5.6568542494923815`}, {
            12.108075215265728`, 0.9990597242938487}], 
           Offset[{9.65685424949238, -5.6568542494923815`}, {
            12.108075215265728`, 0.9990597242938487}], 
           Offset[{9.65685424949238, -5.6568542494923815`}, {
            12.108075215265728`, 0.9990597242938487}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], 
         BSplineCurveBox[{
          Offset[{2.121320343559642, -2.121320343559643}, {
            12.108075215265728`, 0.9990597242938487}], 
           Offset[{5.656854249492379, -5.6568542494923815`}, {
            12.108075215265728`, 0.9990597242938487}], 
           Offset[{7.65685424949238, -5.6568542494923815`}, {
            12.108075215265728`, 0.9990597242938487}], 
           Offset[{9.65685424949238, -5.6568542494923815`}, {
            12.108075215265728`, 0.9990597242938487}], 
           Offset[{9.65685424949238, -5.6568542494923815`}, {
            12.108075215265728`, 0.9990597242938487}]}]}, 
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{47.65685424949238, -0.45685424949237685`}, {
            12.108075215265728`, 0.9990597242938487}], 
           Offset[{47.65685424949238, -13.456854249492377`}, {
            12.108075215265728`, 0.9990597242938487}], 
           Offset[{9.65685424949238, -13.456854249492386`}, {
            12.108075215265728`, 0.9990597242938487}], 
           Offset[{9.65685424949238, -0.45685424949238573`}, {
            12.108075215265728`, 0.9990597242938487}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox["\<\"THETA\"\>",
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{28.65685424949238, -6.956854249492381}, \
{12.108075215265728, 0.9990597242938487}], NCache[
         ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]]}], GraphicsGroupBox[{
        {GrayLevel[1], AbsoluteThickness[4], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
         "Round"], 
         BSplineCurveBox[{
          Offset[{-2.1213203435596424`, 2.121320343559643}, {
            10.891924784734272`, 1.0007015909983101`}], 
           Offset[{-5.65685424949238, 5.656854249492381}, {
            10.891924784734272`, 1.0007015909983101`}], 
           Offset[{-7.65685424949238, 5.656854249492381}, {
            10.891924784734272`, 1.0007015909983101`}], 
           Offset[{-9.65685424949238, 5.656854249492381}, {
            10.891924784734272`, 1.0007015909983101`}], 
           Offset[{-9.65685424949238, 5.656854249492381}, {
            10.891924784734272`, 1.0007015909983101`}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], 
         BSplineCurveBox[{
          Offset[{-2.1213203435596424`, 2.121320343559643}, {
            10.891924784734272`, 1.0007015909983101`}], 
           Offset[{-5.65685424949238, 5.656854249492381}, {
            10.891924784734272`, 1.0007015909983101`}], 
           Offset[{-7.65685424949238, 5.656854249492381}, {
            10.891924784734272`, 1.0007015909983101`}], 
           Offset[{-9.65685424949238, 5.656854249492381}, {
            10.891924784734272`, 1.0007015909983101`}], 
           Offset[{-9.65685424949238, 5.656854249492381}, {
            10.891924784734272`, 1.0007015909983101`}]}]}, 
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{-9.65685424949238, 13.456854249492384`}, {
            10.891924784734272`, 1.0007015909983101`}], 
           Offset[{-9.65685424949238, 0.45685424949238485`}, {
            10.891924784734272`, 1.0007015909983101`}], 
           Offset[{-46.65685424949238, 0.45685424949237596`}, {
            10.891924784734272`, 1.0007015909983101`}], 
           Offset[{-46.65685424949238, 13.456854249492377`}, {
            10.891924784734272`, 1.0007015909983101`}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox["\<\"MATIC\"\>",
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{-28.15685424949238, 6.95685424949238}, \
{10.891924784734272, 1.0007015909983101}], NCache[
         ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]]}], GraphicsGroupBox[{
        {GrayLevel[1], AbsoluteThickness[4], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
         "Round"], 
         BSplineCurveBox[{
          Offset[{2.121320343559642, -2.121320343559643}, {
            10.108075215265728`, 0.9989904975142146}], 
           Offset[{5.656854249492379, -5.6568542494923815`}, {
            10.108075215265728`, 0.9989904975142146}], 
           Offset[{7.65685424949238, -5.6568542494923815`}, {
            10.108075215265728`, 0.9989904975142146}], 
           Offset[{9.65685424949238, -5.6568542494923815`}, {
            10.108075215265728`, 0.9989904975142146}], 
           Offset[{9.65685424949238, -5.6568542494923815`}, {
            10.108075215265728`, 0.9989904975142146}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], 
         BSplineCurveBox[{
          Offset[{2.121320343559642, -2.121320343559643}, {
            10.108075215265728`, 0.9989904975142146}], 
           Offset[{5.656854249492379, -5.6568542494923815`}, {
            10.108075215265728`, 0.9989904975142146}], 
           Offset[{7.65685424949238, -5.6568542494923815`}, {
            10.108075215265728`, 0.9989904975142146}], 
           Offset[{9.65685424949238, -5.6568542494923815`}, {
            10.108075215265728`, 0.9989904975142146}], 
           Offset[{9.65685424949238, -5.6568542494923815`}, {
            10.108075215265728`, 0.9989904975142146}]}]}, 
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{36.656854249492376`, -0.45685424949237863`}, {
            10.108075215265728`, 0.9989904975142146}], 
           Offset[{36.65685424949238, -13.456854249492379`}, {
            10.108075215265728`, 0.9989904975142146}], 
           Offset[{9.656854249492381, -13.456854249492384`}, {
            10.108075215265728`, 0.9989904975142146}], 
           Offset[{9.656854249492378, -0.45685424949238396`}, {
            10.108075215265728`, 0.9989904975142146}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox["\<\"EOS\"\>",
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{23.15685424949238, -6.956854249492381}, \
{10.108075215265728, 0.9989904975142146}], NCache[
         ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]]}], GraphicsGroupBox[{
        {GrayLevel[1], AbsoluteThickness[4], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
         "Round"], 
         BSplineCurveBox[{
          Offset[{-5.51091059616309*^-16, -3.}, {9., 0.9986052652180866}], 
           Offset[{-1.4695761589768238`*^-15, -8.}, {9., 0.9986052652180866}],
            Offset[{-1.4695761589768238`*^-15, -10.}, {9., 
            0.9986052652180866}], 
           Offset[{-1.4695761589768238`*^-15, -12.}, {9., 
            0.9986052652180866}], 
           Offset[{-1.4695761589768238`*^-15, -12.}, {9., 
            0.9986052652180866}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], 
         BSplineCurveBox[{
          Offset[{-5.51091059616309*^-16, -3.}, {9., 0.9986052652180866}], 
           Offset[{-1.4695761589768238`*^-15, -8.}, {9., 0.9986052652180866}],
            Offset[{-1.4695761589768238`*^-15, -10.}, {9., 
            0.9986052652180866}], 
           Offset[{-1.4695761589768238`*^-15, -12.}, {9., 
            0.9986052652180866}], 
           Offset[{-1.4695761589768238`*^-15, -12.}, {9., 
            0.9986052652180866}]}]}, 
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{9.999999999999996, -11.999999999999998`}, {9., 
            0.9986052652180866}], 
           Offset[{10., -25.}, {9., 0.9986052652180866}], 
           Offset[{-10., -25.}, {9., 0.9986052652180866}], 
           Offset[{-10.000000000000004`, -12.000000000000002`}, {9., 
            0.9986052652180866}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox["\<\"FIL\"\>",
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{-1.4695761589768238*^-15, -18.5}, {9., 0.9986052652180866}], 
         NCache[ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]]}], GraphicsGroupBox[{
        {GrayLevel[1], AbsoluteThickness[4], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
         "Round"], 
         BSplineCurveBox[{
          Offset[{-2.1213203435596424`, 2.121320343559643}, {
            7.891924784734272, 1.0004410515592956`}], 
           Offset[{-5.65685424949238, 5.656854249492381}, {7.891924784734272, 
            1.0004410515592956`}], 
           Offset[{-7.65685424949238, 5.656854249492381}, {7.891924784734272, 
            1.0004410515592956`}], 
           Offset[{-9.65685424949238, 5.656854249492381}, {7.891924784734272, 
            1.0004410515592956`}], 
           Offset[{-9.65685424949238, 5.656854249492381}, {7.891924784734272, 
            1.0004410515592956`}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], 
         BSplineCurveBox[{
          Offset[{-2.1213203435596424`, 2.121320343559643}, {
            7.891924784734272, 1.0004410515592956`}], 
           Offset[{-5.65685424949238, 5.656854249492381}, {7.891924784734272, 
            1.0004410515592956`}], 
           Offset[{-7.65685424949238, 5.656854249492381}, {7.891924784734272, 
            1.0004410515592956`}], 
           Offset[{-9.65685424949238, 5.656854249492381}, {7.891924784734272, 
            1.0004410515592956`}], 
           Offset[{-9.65685424949238, 5.656854249492381}, {7.891924784734272, 
            1.0004410515592956`}]}]}, 
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{-9.656854249492381, 13.456854249492384`}, {
            7.891924784734272, 1.0004410515592956`}], 
           Offset[{-9.656854249492378, 0.45685424949238396`}, {
            7.891924784734272, 1.0004410515592956`}], 
           Offset[{-37.656854249492376`, 0.45685424949237685`}, {
            7.891924784734272, 1.0004410515592956`}], 
           Offset[{-37.65685424949238, 13.456854249492377`}, {
            7.891924784734272, 1.0004410515592956`}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox["\<\"LINK\"\>",
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{-23.65685424949238, 6.95685424949238}, \
{7.891924784734272, 1.0004410515592956}], NCache[
         ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]]}], 
      {Opacity[0], 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.012833333333333334`], AbsoluteThickness[1.6]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.012833333333333334`], AbsoluteThickness[1.6], 
        TagBox[
         TooltipBox[PointBox[{7., 0.9993689216801487}],
          StyleBox[
           PaneBox[
            FrameBox[
            "\"ETC\"", LabelStyle -> {}, Background -> None, ContentPadding -> 
             False, LabelStyle -> {}, Frame -> True, RoundingRadius -> 4, 
             Background -> GrayLevel[1, 0.65], FrameStyle -> None, 
             FrameMargins -> 2, BaselinePosition -> Automatic, LabelingSize -> 
             DirectedInfinity[1], StripOnInput -> False], FrameMargins -> 
            0], {}, StripOnInput -> False]],
         Annotation[#, 
          Style[
           Pane[
            Framed[
            "ETC", LabelStyle -> {}, Background -> None, ContentPadding -> 
             False, {LabelStyle -> {}, Frame -> True, RoundingRadius -> 4, 
              Background -> GrayLevel[1, 0.65], FrameStyle -> None, 
              FrameMargins -> 2, BaselinePosition -> Automatic, LabelingSize -> 
              DirectedInfinity[1]}], FrameMargins -> 0], {}], "Tooltip"]& ]}},
       GraphicsGroupBox[{
        {GrayLevel[1], AbsoluteThickness[4], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
         "Round"], 
         BSplineCurveBox[{
          Offset[{-5.51091059616309*^-16, -3.}, {6., 0.9975152797232282}], 
           Offset[{-1.4695761589768238`*^-15, -8.}, {6., 0.9975152797232282}],
            Offset[{-1.4695761589768238`*^-15, -10.}, {6., 
            0.9975152797232282}], 
           Offset[{-1.4695761589768238`*^-15, -12.}, {6., 
            0.9975152797232282}], 
           Offset[{-1.4695761589768238`*^-15, -12.}, {6., 
            0.9975152797232282}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], 
         BSplineCurveBox[{
          Offset[{-5.51091059616309*^-16, -3.}, {6., 0.9975152797232282}], 
           Offset[{-1.4695761589768238`*^-15, -8.}, {6., 0.9975152797232282}],
            Offset[{-1.4695761589768238`*^-15, -10.}, {6., 
            0.9975152797232282}], 
           Offset[{-1.4695761589768238`*^-15, -12.}, {6., 
            0.9975152797232282}], 
           Offset[{-1.4695761589768238`*^-15, -12.}, {6., 
            0.9975152797232282}]}]}, 
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{11.999999999999996`, -11.999999999999996`}, {6., 
            0.9975152797232282}], 
           Offset[{12., -24.999999999999996`}, {6., 0.9975152797232282}], 
           Offset[{-12., -25.000000000000004`}, {6., 0.9975152797232282}], 
           Offset[{-12.000000000000004`, -12.000000000000004`}, {6., 
            0.9975152797232282}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox["\<\"LTC\"\>",
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{-1.4695761589768238*^-15, -18.5}, {6., 0.9975152797232282}], 
         NCache[ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]]}], GraphicsGroupBox[{
        {GrayLevel[1], AbsoluteThickness[4], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
         "Round"], 
         BSplineCurveBox[{
          Offset[{-2.1213203435596424`, 2.121320343559643}, {
            4.891924784734272, 0.9966049980614688}], 
           Offset[{-5.65685424949238, 5.656854249492381}, {4.891924784734272, 
            0.9966049980614688}], 
           Offset[{-7.65685424949238, 5.656854249492381}, {4.891924784734272, 
            0.9966049980614688}], 
           Offset[{-9.65685424949238, 5.656854249492381}, {4.891924784734272, 
            0.9966049980614688}], 
           Offset[{-9.65685424949238, 5.656854249492381}, {4.891924784734272, 
            0.9966049980614688}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], 
         BSplineCurveBox[{
          Offset[{-2.1213203435596424`, 2.121320343559643}, {
            4.891924784734272, 0.9966049980614688}], 
           Offset[{-5.65685424949238, 5.656854249492381}, {4.891924784734272, 
            0.9966049980614688}], 
           Offset[{-7.65685424949238, 5.656854249492381}, {4.891924784734272, 
            0.9966049980614688}], 
           Offset[{-9.65685424949238, 5.656854249492381}, {4.891924784734272, 
            0.9966049980614688}], 
           Offset[{-9.65685424949238, 5.656854249492381}, {4.891924784734272, 
            0.9966049980614688}]}]}, 
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{-9.656854249492381, 13.456854249492384`}, {
            4.891924784734272, 0.9966049980614688}], 
           Offset[{-9.656854249492378, 0.45685424949238307`}, {
            4.891924784734272, 0.9966049980614688}], 
           Offset[{-36.656854249492376`, 0.45685424949237774`}, {
            4.891924784734272, 0.9966049980614688}], 
           Offset[{-36.65685424949238, 13.456854249492377`}, {
            4.891924784734272, 0.9966049980614688}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox["\<\"BCH\"\>",
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{-23.15685424949238, 6.95685424949238}, \
{4.891924784734272, 0.9966049980614688}], NCache[
         ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]]}], GraphicsGroupBox[{
        {GrayLevel[1], AbsoluteThickness[4], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
         "Round"], 
         BSplineCurveBox[{
          Offset[{-3., 3.6739403974420594`*^-16}, {3.8471585648148148`, 
            0.9917443403947211}], 
           Offset[{-8., 9.797174393178826*^-16}, {3.8471585648148148`, 
            0.9917443403947211}], 
           Offset[{-10., 9.797174393178826*^-16}, {3.8471585648148148`, 
            0.9917443403947211}], 
           Offset[{-12., 9.797174393178826*^-16}, {3.8471585648148148`, 
            0.9917443403947211}], 
           Offset[{-12., 9.797174393178826*^-16}, {3.8471585648148148`, 
            0.9917443403947211}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], 
         BSplineCurveBox[{
          Offset[{-3., 3.6739403974420594`*^-16}, {3.8471585648148148`, 
            0.9917443403947211}], 
           Offset[{-8., 9.797174393178826*^-16}, {3.8471585648148148`, 
            0.9917443403947211}], 
           Offset[{-10., 9.797174393178826*^-16}, {3.8471585648148148`, 
            0.9917443403947211}], 
           Offset[{-12., 9.797174393178826*^-16}, {3.8471585648148148`, 
            0.9917443403947211}], 
           Offset[{-12., 9.797174393178826*^-16}, {3.8471585648148148`, 
            0.9917443403947211}]}]}, 
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{-12.000000000000002`, 6.500000000000004}, {
            3.8471585648148148`, 0.9917443403947211}], 
           Offset[{-11.999999999999998`, -6.499999999999996}, {
            3.8471585648148148`, 0.9917443403947211}], 
           Offset[{-40., -6.500000000000003}, {3.8471585648148148`, 
            0.9917443403947211}], 
           Offset[{-40., 6.499999999999997}, {3.8471585648148148`, 
            0.9917443403947211}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox["\<\"XMR\"\>",
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{-26., 9.797174393178826*^-16}, \
{3.8471585648148148, 0.9917443403947211}], NCache[
         ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]]}], GraphicsGroupBox[{
        {GrayLevel[1], AbsoluteThickness[4], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
         "Round"], 
         BSplineCurveBox[{
          Offset[{-2.121320343559643, -2.1213203435596424`}, {
            2.8919247847342713`, 0.9859053669146508}], 
           Offset[{-5.6568542494923815`, -5.65685424949238}, {
            2.8919247847342713`, 0.9859053669146508}], 
           Offset[{-7.6568542494923815`, -5.65685424949238}, {
            2.8919247847342713`, 0.9859053669146508}], 
           Offset[{-9.656854249492381, -5.65685424949238}, {
            2.8919247847342713`, 0.9859053669146508}], 
           Offset[{-9.656854249492381, -5.65685424949238}, {
            2.8919247847342713`, 0.9859053669146508}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], 
         BSplineCurveBox[{
          Offset[{-2.121320343559643, -2.1213203435596424`}, {
            2.8919247847342713`, 0.9859053669146508}], 
           Offset[{-5.6568542494923815`, -5.65685424949238}, {
            2.8919247847342713`, 0.9859053669146508}], 
           Offset[{-7.6568542494923815`, -5.65685424949238}, {
            2.8919247847342713`, 0.9859053669146508}], 
           Offset[{-9.656854249492381, -5.65685424949238}, {
            2.8919247847342713`, 0.9859053669146508}], 
           Offset[{-9.656854249492381, -5.65685424949238}, {
            2.8919247847342713`, 0.9859053669146508}]}]}, 
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{-9.656854249492385, -0.45685424949237685`}, {
            2.8919247847342713`, 0.9859053669146508}], 
           Offset[{-9.656854249492381, -13.456854249492377`}, {
            2.8919247847342713`, 0.9859053669146508}], 
           Offset[{-35.65685424949238, -13.456854249492382`}, {
            2.8919247847342713`, 0.9859053669146508}], 
           Offset[{-35.65685424949238, -0.4568542494923822}, {
            2.8919247847342713`, 0.9859053669146508}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox["\<\"BNB\"\>",
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{-22.656854249492383, -6.9568542494923795}, \
{2.8919247847342713, 0.9859053669146508}], NCache[
         ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]]}], GraphicsGroupBox[{
        {GrayLevel[1], AbsoluteThickness[4], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
         "Round"], 
         BSplineCurveBox[{
          Offset[{2.121320343559642, -2.121320343559643}, {
            2.1080752152657287`, 0.9758325640412586}], 
           Offset[{5.656854249492379, -5.6568542494923815`}, {
            2.1080752152657287`, 0.9758325640412586}], 
           Offset[{7.65685424949238, -5.6568542494923815`}, {
            2.1080752152657287`, 0.9758325640412586}], 
           Offset[{9.65685424949238, -5.6568542494923815`}, {
            2.1080752152657287`, 0.9758325640412586}], 
           Offset[{9.65685424949238, -5.6568542494923815`}, {
            2.1080752152657287`, 0.9758325640412586}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], 
         BSplineCurveBox[{
          Offset[{2.121320343559642, -2.121320343559643}, {
            2.1080752152657287`, 0.9758325640412586}], 
           Offset[{5.656854249492379, -5.6568542494923815`}, {
            2.1080752152657287`, 0.9758325640412586}], 
           Offset[{7.65685424949238, -5.6568542494923815`}, {
            2.1080752152657287`, 0.9758325640412586}], 
           Offset[{9.65685424949238, -5.6568542494923815`}, {
            2.1080752152657287`, 0.9758325640412586}], 
           Offset[{9.65685424949238, -5.6568542494923815`}, {
            2.1080752152657287`, 0.9758325640412586}]}]}, 
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{34.656854249492376`, -0.45685424949237863`}, {
            2.1080752152657287`, 0.9758325640412586}], 
           Offset[{34.65685424949238, -13.456854249492379`}, {
            2.1080752152657287`, 0.9758325640412586}], 
           Offset[{9.656854249492381, -13.456854249492384`}, {
            2.1080752152657287`, 0.9758325640412586}], 
           Offset[{9.656854249492378, -0.45685424949238396`}, {
            2.1080752152657287`, 0.9758325640412586}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox["\<\"ETH\"\>",
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{22.15685424949238, -6.956854249492381}, \
{2.1080752152657287, 0.9758325640412586}], NCache[
         ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]]}], GraphicsGroupBox[{
        {GrayLevel[1], AbsoluteThickness[4], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
         "Round"], 
         BSplineCurveBox[{
          Offset[{2.121320343559643, 2.1213203435596424`}, {
            1.1080752152657287`, 0.9163411976694418}], 
           Offset[{5.656854249492381, 5.65685424949238}, {1.1080752152657287`,
             0.9163411976694418}], 
           Offset[{7.65685424949238, 5.65685424949238}, {1.1080752152657287`, 
            0.9163411976694418}], 
           Offset[{9.65685424949238, 5.65685424949238}, {1.1080752152657287`, 
            0.9163411976694418}], 
           Offset[{9.65685424949238, 5.65685424949238}, {1.1080752152657287`, 
            0.9163411976694418}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], 
         BSplineCurveBox[{
          Offset[{2.121320343559643, 2.1213203435596424`}, {
            1.1080752152657287`, 0.9163411976694418}], 
           Offset[{5.656854249492381, 5.65685424949238}, {1.1080752152657287`,
             0.9163411976694418}], 
           Offset[{7.65685424949238, 5.65685424949238}, {1.1080752152657287`, 
            0.9163411976694418}], 
           Offset[{9.65685424949238, 5.65685424949238}, {1.1080752152657287`, 
            0.9163411976694418}], 
           Offset[{9.65685424949238, 5.65685424949238}, {1.1080752152657287`, 
            0.9163411976694418}]}]}, 
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{34.656854249492376`, 13.456854249492382`}, {
            1.1080752152657287`, 0.9163411976694418}], 
           Offset[{34.65685424949238, 0.4568542494923822}, {
            1.1080752152657287`, 0.9163411976694418}], 
           Offset[{9.656854249492381, 0.45685424949237685`}, {
            1.1080752152657287`, 0.9163411976694418}], 
           Offset[{9.656854249492378, 13.456854249492377`}, {
            1.1080752152657287`, 0.9163411976694418}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox["\<\"BTC\"\>",
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{22.15685424949238, 6.9568542494923795}, \
{1.1080752152657287, 0.9163411976694418}], NCache[
         ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]]}]}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.5833333333333348, 0.9108090545652463},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, {{0., 
       FormBox["\"0%\"", TraditionalForm]}, {2.1, 
       FormBox["\"10%\"", TraditionalForm]}, {4.2, 
       FormBox["\"20%\"", TraditionalForm]}, {6.300000000000001, 
       FormBox["\"30%\"", TraditionalForm]}, {8.4, 
       FormBox["\"40%\"", TraditionalForm]}, {10.5, 
       FormBox["\"50%\"", TraditionalForm]}}}},
  GridLines->{{0., 2.1, 4.2, 6.300000000000001, 8.4, 10.5}, {0.8}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->{{All, All}, {All, All}},
  ImageSize->{590.328125, Automatic},
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
   "\"Pareto principle for cryptocurrency closing prices\"", TraditionalForm],
  
  PlotRange->{{0.5833333333333348, 21.}, {0.9108090545652463, 1.}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.08]}, {
     Scaled[0.05], 
     Scaled[0.12944271909999158`]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.89085873306621*^9, 3.890858869935031*^9},
 CellLabel->"Out[206]=",
 CellID->232328406,ExpressionUUID->"4f35d894-1c97-4186-a322-528f5e62c773"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Here are the Pareto statistic values for the top 12 cryptocurrencies:\
\>", "Text",
 CellChangeTimes->{{3.83336898751989*^9, 3.833369005047235*^9}, {
  3.8333693971741*^9, 3.833369404666366*^9}},
 CellID->11637213,ExpressionUUID->"564d0832-2377-4642-bbd6-bcf4be554ae5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"aCCTop", "=", 
  RowBox[{"Take", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"AssociationThread", "[", 
      RowBox[{
       RowBox[{"Keys", "@", "aMeans"}], ",", 
       RowBox[{"Accumulate", "[", 
        RowBox[{"Values", "@", "aMeans"}], "]"}]}], "]"}], "/", 
     RowBox[{"Total", "[", "aMeans", "]"}]}], ",", "12"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8333621139959097`*^9, 3.83336212503345*^9}, {
  3.833369768882598*^9, 3.8333697729082937`*^9}},
 CellLabel->"In[207]:=",
 CellID->165627014,ExpressionUUID->"5bf6e00e-a6ed-42b0-b50a-986a6cb67089"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"BTC\"\>", "\[Rule]", "0.9155033148512839`"}], ",", 
   RowBox[{"\<\"ETH\"\>", "\[Rule]", "0.9766704468594165`"}], ",", 
   RowBox[{"\<\"BNB\"\>", "\[Rule]", "0.9867432497328087`"}], ",", 
   RowBox[{"\<\"XMR\"\>", "\[Rule]", "0.9917443403947211`"}], ",", 
   RowBox[{"\<\"BCH\"\>", "\[Rule]", "0.995767115243311`"}], ",", 
   RowBox[{"\<\"LTC\"\>", "\[Rule]", "0.9987002249683464`"}], ",", 
   RowBox[{"\<\"ETC\"\>", "\[Rule]", "0.9993689216801487`"}], ",", 
   RowBox[{"\<\"LINK\"\>", "\[Rule]", "0.9996031687411377`"}], ",", 
   RowBox[{"\<\"FIL\"\>", "\[Rule]", "0.9997902104632048`"}], ",", 
   RowBox[{"\<\"EOS\"\>", "\[Rule]", "0.9998283803323725`"}], ",", 
   RowBox[{"\<\"MATIC\"\>", "\[Rule]", "0.9998637081801524`"}], ",", 
   RowBox[{"\<\"THETA\"\>", "\[Rule]", "0.9998976071120066`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.8908587332534533`*^9, 3.89085888322001*^9},
 CellLabel->"Out[207]=",
 CellID->1323815371,ExpressionUUID->"a4672d40-2e6c-4517-ada7-cb175799bff5"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Plot the daily closing prices of top cryptocurrencies since January 2018:\
\>", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.833215899660033*^9, 3.8332159206396933`*^9}, {
  3.833260662812014*^9, 3.833260685331225*^9}, {3.833360746110552*^9, 
  3.8333607469767923`*^9}, {3.833369798839666*^9, 3.833369814106303*^9}, {
  3.833369999813178*^9, 3.833370035656755*^9}},
 CellID->96863732,ExpressionUUID->"0247ec4b-2bf6-4229-96cb-3ed3184e2a52"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DateListPlot", "[", 
  RowBox[{
   RowBox[{"Log10", "/@", 
    RowBox[{"Association", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"#", "->", 
        RowBox[{"CryptocurrencyData", "[", 
         RowBox[{"#", ",", "\"\<Close\>\"", ",", "\"\<Jan 1, 2018\>\""}], 
         "]"}]}], "&"}], "/@", 
      RowBox[{"Keys", "[", "aCCTop", "]"}]}], "]"}]}], ",", 
   RowBox[{
   "PlotLabel", "->", 
    "\"\<lg of crytocurrencies daily closing prices, USD\>\""}], ",", 
   RowBox[{"PlotTheme", "->", "\"\<Detailed\>\""}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.833216129168705*^9, 3.833216302500484*^9}, {
   3.833216375346168*^9, 3.833216427982689*^9}, {3.833216468525175*^9, 
   3.833216481352627*^9}, {3.833260648011499*^9, 3.833260648192903*^9}, 
   3.8333591473971577`*^9, {3.833360658909243*^9, 3.833360671962473*^9}, {
   3.833360749159937*^9, 3.833360751735916*^9}, {3.8333697807954407`*^9, 
   3.833369784181905*^9}, {3.8333700025037403`*^9, 3.83337002906448*^9}, {
   3.833370143916006*^9, 3.833370228487809*^9}, 3.8908586903057833`*^9},
 CellLabel->"In[208]:=",
 CellID->608928330,ExpressionUUID->"2e30ad5b-81d1-449b-a806-90360b535ca1"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{}, {}, {
       RGBColor[0.368417, 0.506779, 0.709798], 
       PointSize[
        NCache[
         Rational[1, 360], 0.002777777777777778]], 
       AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1:eJxU3HlcTO3DBvBBIkubkCyNXYWKKLLMVPalsRRlG/sWjVBCDFG2MiSULfva
ZglFBtGKUUiWjOw1NI8WS8nvMlfvH+/zz/P5fs7MmXOd+z73du60n+U7fm5d
gUAQ3kAg+Pd//Ge8PrVErO4+THRwm7EIFp2F52xrOyHzks6yPNirbnXigGSd
Y/7AdjfbHr5xT2dV11sl4kZv/Oc2+6GzYDwc8HfEmvBfOtuthcftH+PXqlBn
6Sk4v1Grhh7XdVao4OvDWg/qdkZn5W94VNNjviH8fW0nZYn4xdTV+l4bdRa6
w1Yra5L0InWWBMJyp8Fx32J0lh+H2zRJcvYI1znhAdy1uDzhzU6d1T9g128F
azMH6mzc4XaJ+N2nOm7f7Zl/NHynp29uTx6X+cNDW9e8HeHC/DGwv+O96Y7L
mD8Ldje4JKrL44IKeEVuu6PRXZnf8k6JeMLosdENOzP/CNj24uYW8U7Mvxye
MytrkdKB+Q/BXxJ3WrryerTp8IKQkr8vnJn/O3z43KseLUcwf5u7JeLdE2Sa
Pn2Zfyj832vVo0t6zC+Dc5tvTb1uwPzRcPlXmUX1RSNd/ntw4+dOtvN36Swq
hQ+9HRK54JLOslZpJeIusxY1fjhJ5xhXOOf4+XZGNw11+ZfAq/ssuXSrre64
YD/83jd60FxDne3uwJJ0xwsRnjpLNXBh1uGAz6E6K1rcKxGPd7Fc0natzkoR
/CNBefXVMJ21i+DK/1pvFxzQWRgJm/4doIgN1FlyC25TGVtH/Vhn+Rd46HH3
fM8GzN/sPq53efiA4Y2YfyB80drKo6Qny38BnFCW/aWoJct/N/xyysSW83uz
/G/AQdoBfRf1Z/l/hPtlBu5PaMvyN04vEVu8fvXZScDyd4Yj3Qq97Zuy/OfC
EwxTFjqWMv9OeN/9QKvzb5n/Otw7OsdUz5jl/w5e1TjpaRdLln/TjBLxp13y
3t4mLH8neKt0xO553Vj+s2DLnWERr3uw/HfAy5TtFLdZfxOS4PNBvgNPDGJ+
NRz/9bnmt4j5G2eWiAfox92Z2575+8DXZ9W99K2a5T8D3vEoYvK6DJb/Vnh/
o/NrDO7qrLoEm+4cOvT7HpZ/ITyx+vG+KwUs/4ZZaB+s8pt5JDF/LzjWo/U7
zyvMPxVOfhNX1ID1SxkCl2e6OE7zZvknwCYl3oNmTGf5v4RfzShoPdCO5V8/
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
U+FrTQbXj5qhsyoEts4aMOb8EJ0FibCZxdDOVhN1tnsJ36qMFj/211la/0eJ
eIXsi8lXb+a3hZvYZ99UD2V+L7jLpKnZXz2ZPxiuGXN67n4r5o+D9z++2nNY
C50lz+GLxc1LL5vpLK/7s0TcsFkTYdtWzN8dnrbJ8saTuczvCf8c+TkxeRvz
b4Ctz1RcOr2X+c/DyuPlZYu/Mf9TuOrLlN5JvD8xf+HbbwqTrXl/VVa/SsSf
cyLvZamYfyKcoewVPaGI+dfBG+POfah3mvnPwL+sTJyuJDB/Lux25Md1pZz5
q+GDrxVDtLeYv8vvEvHbGNNeVrXlPw4+UG4Wduki86+BFw/Y1bQokvlPwn4V
sYEhscz/CJ4ZtmvV5DTm/wWf/1K8pfw883eqKhEP8fep85DXIxoLf7rU/cwX
fl+2CnZ+Ypb14S3zH4MT15/edugZ8+fAFYXZpi/ymf8H/P2iyunpc+ZvX43y
PbTp/P4Q5h8FD3XLX3dsC/OvhMV5OaMmbGT+I7Dn3LQVB+YzfyZ8IKgmqH0Y
85fDXw6/iH2xmvnb/cH8rfvKkGzeP/lw+FFJvtdG/l6CHxzxsOzLmg3MfxAO
P7j0/KbdzJ8Oz70V8CR8OfP/B2cq7t+ctoT5W9eUiM+GeTaSrWD+IfB/xh/y
jvgyvy/c+EfUys38viAaPu59vHgwbZcGex38PLKYln6DC+qdG+fJ7yvM/2K+
9SlSdWU887vAD37lZ/wYzfw+8PPScdEpfB6E++DFtrfzVroz/214md7fuz0n
MX8J7Dtz0PS9fD4Tmgs04u0NtrU0Gsf8g+GDzqXLH/H7xovg32lj257lcdEe
uG/J5B7GbsyfCjftLzs2UcT8n+GakTOyTwczv2kdjbjj4Ldjkjcx/0DY/GNF
imQr88+H0wJd1tivZ/5dcL+OTot8WV6KFDihjYd1rzXM/wE2Oe+kCQhgfqO6
GrG9Q31731XM3x+eETtccLy2/OfAu1e82jxtM/OHw2EVVYnNUpn/Grzx+6gu
Pe4xfxH87I7Vod98Xo2b1tOI2wadqbx9n/kd4W5rO/QZnMv8M2F30YaH3bTM
vx3ernHb9vQk81+BX6scIrezPReo4Tue24804PNk10hPIxZ+7fTTNZ75HeAj
VT3Uwtrnfzp8pWPd9gMSmX8L/N39/c/JfL61F+G3q5/+Nz2O+V/D2d+mT/WO
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
WfDwuNaFBquZfwds6RJwW8k86iTYKqqoOoK/Z/x29L/1r7z0GvYPosZjkKdF
7tjOd5i/Dzyjm1t6JvePx8yAH+1aE+dUxPxb4c3Hz2yfxO8LLsP27cPtd9F2
hfCKT1WfQrj+JG04FvkrXFrUro8qesEn+xXc73KZ+afCs/9cEd7g/EYbAi/u
7x8xge2jMBFW7tvevjHvp+QlvNY6u9Uzjifk9d014jqd9S0EPF+CLTy6OL1t
Zu36lxecHplUfSaH+TfBK/vMHf2d/Y0oDl6aEhx0/SHzP4f9WhoqpFx/iKkr
QZ6P9X5aPWX+7vCfJj3dv7H/EEyCt6sLk1t8Y/4N8OMZKaap7H+k5+Ewy7tn
T/Hziqfw6XSTDyO4/qL8C4/b/Ga7rIT5rcahflQI651gfy2cCH85EHFjeu36
3zr4kPL4iS0cX8jPwG1D1nWN5HpgQi5cL1W41IhWV8OTxlf/TUpn/q7jNeIJ
E/XbKB8w/zi4p3ObMd+YT7YGnhpWXDeU3485+e/zCqMPzTlfVD2C6+4sXj6W
4xHBbzh325gl21h/7DpNQHttfyk/5xbzj4UPhi6Psq/NvwpembZV6sv+XHkM
dh764KdSyfw58JE5kYVmrK/CH/CHtEv3B/Hv1yTtJ2J8X3pv+l3+vYJ8FPxk
fMn9aQnMvxI+OFr9rYz1QX0ErhxhvzM3nvmz4ORnYV67rzF/Odxy/8sP89i/
ytp5aMQN9Yr/vGF9jRkOC09d8RrB76v84Pd/J1QozjL/Ibiov3j+CT4vdunw
XeG6XWrO96X/wY9Mu205wfm8orUnxufL7mkm8e9JlEPgYZcqtvjQWl94xwNt
WjLn68JoeH71ro+9eVySBt96/2JIY55f/g12OfXfgjp0gvkk3K+C2Y06c31A
7QLvre9X4FKbfwnc4ORRe2Ei8++DY7N+zy6kZbfhfQ+LWgfw/sWUwDLbnIUz
eP9VzSfjeYkTdtnLvAIRrFgyqeAWnze7RbCF66sTpfx7MOke2K5Z7LA81i9F
Kry/Wb0rD9meKD/D0SFL54RwPVxr6qURdz19e5Ie33cIB8LDVc3/POf6q2Q+
HLhE9d8S/j2ffBe8b1aqxSs6IQUOcy6TDnXk+t8H+F66ZbHZcK7/GXvj+aof
OGdHd67/9YcL489MH8C/x5TNgU2aLm55jO8rYsLhXdesuh4YxvHvNTh8fzPL
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
5ng5RgEHH9/SNZn3V5UMH0t2N25cO/79AIe+CogKs2d+o0iNuL7L4B1q1mdp
P9ikruPj15yPKGbD7w+2veu/gPnD4GORuTOjae1VuGbJn7uJcuYvghXvHrs5
r2b+JntRHye8LO3Pz8v7wh57hzXcwec3QQobDqjfey3Hy+ptsGZO6ZrEuSz/
K3BMcbvHpn4s/zdw/dizze6FML/BPo04u8+oKav3M39vWDX7Z2KBgvmnwW5J
qWk9zzH/FljkOWDMsWPMfxFu3eZc1lVa+gpuYOXWzGEf8+vv14jLLjsbXLjK
/Hawe3dx3c4cn2q94bPaA04XEph/M+y/a1SLK6eYPx4OmOE0tzCK+Qvgpn/s
T5REM3+9KI3YrDJ98I7a9r8HbPprhPmTe8w/Gf56+sqPjxx/ijbCo/b3P32e
x2UXYAuD3AsJ6cz/DM5LqW/5Kon5BdEasfie3pH57J8FNvCvU9Yz4uKZ3wPW
TA78M/Iu86+HZ6iG3H/D31OchZ9G+V/qWzv+zYMfxVaH3mJe7R+4Xp2Pqx7w
fgi7HcD5bOpkTufnJePhgwOMzl3n9crXwhc7jgn/mc38p+Atr38dE9FqFewn
m/rYlOMP4ypYfSz15O4i5u98UCOWhEX89Y1jfnfYes6Fsu2nmT8QDhOrjy9l
eauOw3+jmp69eYD5H8J6U6OHqTlfsPsJD+m6cNVQfl/a4RDa64wJw0M431KM
hketnDvIgvmU/nD3aP8HTinMHwN3Gzpi7B7WD2E2nNC+4X7lReavgFeatY6x
usH8loc1Yq1P47rxPJ4wAo6wdDvZlP25ejl8ROiU11XG/IfhU1px5e7a/j8D
dlx2tuEL5pF9h83ab39bl9+PaXMEx+fL2qVsZv6h8KWjF5S525h/GSyxjnO5
yOfV7gCs+mwd9Ho589+DF38f3XB3IPOXwianJ5bc5/OkbBWD9qPDnokXkpnf
FZZuttN+Zn0TLoV3yJbvlvH+SPbDM7Tr0jNYv+R34C13mtzQK2B+Dfz96uUZ
jX8xf4ujmP+MNnsxXcP8YnhvdlLuZY5PRYvh5B3G+W8qmD8Sft/H8skwjidj
bsFWo1oOzuB4T/UF7qUMWbaK43eB2THML5PGSjvwuN0guEWB3rJNteO/BfCR
7LNn13J8rdgNx9tMM5/TkeO/G7B/fJuWvXhc+xG2Ozkjer8Nx38mx1G/f2+a
NNmZ439nWOh629p6GMf/c+GO3R4Jirtz/L8TTj2w6spXjt/V12HL4jb3Dbpy
/Pse9i8/NfkCf19keALz29SCIQ97cfzrBO8NmPI22JLj31lw5x4e+r4mzL8D
vv3Qp/kinl9wFf5svW5nox7M/xZucWXkwoPWzN/4JMYzmn0D13dh/j7wwZZu
yX06Mf8M2Eq+Pbkd5yParbA81MBOwusRXoabqcsX+vP6JYWw7Ys9j1tyPitv
eEojfn263s06vH8JvWCfOKPLeTyfeip8b9rNcyfHMX8orF8w8ELSGOZPhKN7
O9eZI2L+l/C4ifI4Mzqm/mmNeMLGDmMP9md+W/jV9k4+6QOY3xvelH2y9QFX
5t8Ev5a31/fj/EsaBwt3J/Svz/ma4jksuWP/bDvvr7LuGY14UPKyJYr6zN8d
Ng9UbD9nyPyT4O7hUeciLJh/A+xjmVwh4XxCfh6+rNxw0FfA/E/hAMfEJr6c
n6r/widyq+Om8bix9VmNeOGpC9O6sn6KJsKdrrXTLuR8SbYOdq5o1/dYbf0/
A19//rJ/GedDqlxY0nVrqmvt/P8P3Ke88QdDfebveg7zffXcHg/5eek42Otn
2DAN50eKNfDaJMHyU/w95Un47e21wj2c32gfwZ4nF24zv8/n/zec1Pp2ygeu
r0g6ndeINz87m/P1MZ//sfCg/5KX9OXxhFXw9Dt+ldvYfqiPwRHOC8QhbB+N
H8DmiqUlBjy/6Af8cvvl1Yc5/5S1v4D2vHLczRvsP2NGwQ53lznuuMD2byW8
/3WzsFz2R4IYeEzou5+r+Xt2WbD4errdIa4nScvhVa3nhmSzf1G0i9WI0wMU
G/x4fuVwuP0vxybm7D+1fnBG6Ig5trXz30PwBeEAL+kt5k+Ht71yGX4+l/n/
g6vP/z33l05oHYf7vUE4M+wR8w+Bqxacd3nH48Yy+IyP+MZ83j9RNJyT7KW9
e4X50+Dr1oaT/mN/F/MNftrJr9mX2vU/8/h/+1XbfznE9TOBa/y/f1/hZaO4
2vxLYPtGDyLXXGL+fbDi2dZeppx/Km7Di45273PhJPOXwBd7JO3ZxP5I2zwB
51u6caAH+xehCD7yJ8RDzv5Dsgg2fv5u98w1zL8HjpUJ7IcEMX8qfOxaeKj7
Wub/DLtaBi/7xv7LuFki+otBvdfO3M38A+F7JfMWL9nE/PPhacdkhy5tZf5d
sF3fjhfkvB5VCvxo+TrjAh4XfIQv+iT3flHb/xlfxHhs485b1huZv//Ff+/X
9nwK4vUq5sCyzKnJddkfK8Nh7cSXa90GM/81eO3W9qEbOb8RvoN7GYrmGA1k
/qaXcD1Ru5ue43q53PGfRy0xHMH5esJMuP7I7qmGnL+qt8PdXcqc1g9j/iT4
yI6Tj6zdmV8Nz38Sqi/heFnW6DKex2L/MykS5neAC1yatR43ifmnw4auIzpI
vJl/K+zRcWLxEP6+3SX4a9ChWYn8Pelr+LG5teD9KuZvcAXzxYp1ZiJaaQ+7
aiZEhPF+aafAffOTRMN2MX8IfCh54riWe5g/AT6+y2zz2L3M/wIe2brOotWs
Pwl6SRpxozdbNmzg+dQ94ZUOFY8yWT7GXrDfmekOo2hRMBzqfqFKWlv+sfD1
L8aa87Xj/3x41fOpoRtZX1R1rqK89MzWLV/K/N3h2L8nt7/gfMTOE74xb7fi
9ULml8MZPk1KrnI9Q3EOjp43qFnqUOZ/Ah8V7NjUkPN1bc0/nxuyezbnT0Kr
a3h+S4aX7eZxyQT4e8Lx8/Gc78iD4EbNX+z24/pAwmn4S0H1zxFjmf8x/HvS
lsXnWH+Nq2GPGV1sA3j/RF2ua8RDW9W9JWQ+mQQ+272NzQ/ev5jVsPRrjf5j
nl91An5bPntFNudzgkfwcL3wbnuZz+4XrB5jttGH6w3Sjska8Yd2sqBBrC+K
MXCzcOt7+uuYPwCuclxW3mcW8x+FGy4/UPaJnxfmwDs3WQR15fsNSSU8Lt5i
XSnrr1yYgvOP9K/InMP8I+F9Xvk3zWvff62AHyVLdjdZyfxH4M9n12+urJ3/
ZcLp5dkZ5mwvZGVwpv6peCfWj5i2N9CeCBok2vgz/zB47ZEzVR4rmN8PNpX8
t/XPBuY/CIsr+9krOH6W3odTFkW1l/P+KrTwrMVl9Rfw/istbmI8eNTm4VfO
D7VucN9Op9NC2F8IfeH1+V+MZGx/JVFw6to7gkN8PyO/CydPd2mTy/lTwlc4
xUOxqifnn+qWqRrxJ881JVK218YusFXDqJ5z2f6KfOApq4IbN2D7LNsLl590
Tj3B/i5GCTt0N7ztxfOpiuG8FdV1HtaO/5vf0ohnvgjp9SKM+QfDUY9vWg3i
/ZAuhC0ae5xfyPm1IgLuPVsUPY/3V3kTnr55zUqr2cz/Cf4sH/ikhM+P0FT5
7+8zrE+OYvlJBsDPHjmlZM1n/nnwcE/josN8HhMU8E7/4L4OXA9TJ8Mdez//
z6t2/v8B7vOgpX401zNFRrcx3xr2sdMXtkeyfvBc8+CVWwKYfzYcUTo+0oPn
V4XBc94afT7I8wmuwQ47H5qnsf7aFcHq6gWPdtHSJnfw+bDLSyN4PYq+8LAb
RlambG+VUjij46hbf/g8a7fBIbPfvqzm+YVX4OwDGyTpk5n/DRzQZrunF59v
ucFdjdjA/fjermyfE3rDo77lXCmg1dPgsC4z4tP4eeMtcP9Xeec68fyii/AP
wz9PLomY/xW87XPypW58/xqjn4b++2C3CSv5vlJlB+/JrBletz3zT4HP//77
vEzD99+b4dF5Vw6u+cH33/Gw5biRKZue8/13AdzR/5BN/xd8/13vnkb85HP8
G9Vrvv/vATcvcbc0Leb7/8lwlMu83Rur+P5/Izw/otJ460euf12AR7k365PP
97UJz+ApowOltk/5/l9wXyNel9S3U5+vXP+ygZ1rJH0Ur7j+5QHvjHtl3UzN
9//rYdMaj7mT+fmYs3Dy+Ir1dV/y/X8ebB0Y8s73Hd//18ChUSd8DYqYv1s6
xnODpJYRzCMdDx/V2E+8lcf8a+ENsl+FJ58x/yn4x0wbt+H8fa0K3vzCe/GK
Oiz/KnjbqPJr0tr1v84ZmG94G/pGcv1O7g4vzxSq/UqZPxD+W7bZ3OY98x/P
+Lf/49iRFrxfxg/hyT8HJ9l+Yv6fsPfPzTdl1czfIRP3M/V8i5m/mH80fHfc
5MY3S5jfH342pvRyf5aP4CgsTDw6K53laZcND3sVHhj5iPkr4Pg+622zrjC/
ZRbGs8dEl2ctYP4R8KjO02wfzGL+5fD1qf3kpotY/of/fb7EY+DZASz/DNjL
MKLk0CDm/w4PepIy+GVb5m+TrREPaZH0eraI+YfCA0IuFswWM/8yeGHNOEGG
K/MfgJPMJ3v96M389+CDq++vShvF/KXwyCGTXj0Zy/ytcjC/y/MRBkxkfjdY
3v1iSuhI5l8KvzlQkiBxY/79cI3Nrsjl/Zn/DuyaPUu1sy/za+DG9ew6L7Nl
/hYPMD7s1H7UZe6fEYph4fOBAjNashjOyagpmtSJ+SNhjy93mk/vx/y3YL3H
pmP9nZj/C/zx0TX94bwfxmYPNeJflZnVoknMPwiesf2yQXcv5l8Azz46pnKc
J/PvhrcJnqVXD2X+G3CPg83WRPF+CT7BL5tWt6nk9diZPMJ8MmyI0Xf+vtQZ
tl5cv4mSv6+YC9vMTzUK5PmUO+HWVxx+VY5h/uvwng6Ww8RDmP89XGX8tpU3
64vEUIX79c5ujDqQ+Z1gewsL80J/5p8FN9IevL+H+4fUO+B66dc6vvZh/quw
18jQ62Xzmf8tbGATH57J+iZr/FgjnjRyueGOcczfB85cXzNE4M78M+DZP9zW
Gi9j/m3w+01t2/tyf5LdZTjj07odl7j/SFoIt8mPDyhZx/wNc3G/EiaOVK9i
/l5wp3reG5fR2qlwfOihhdU8vzAUvtuhyH+pL/Mnwi4r6w9yXMz8L+GpHad/
/cH9TQn183D+cE35GX5fbQsvTHZvk8P7YewN314hupPF6xNtgh1z3w2O4HFZ
HPz3d9DKaZuY/3nev/VNv+U7aFXdJ6j/vRaZ3NzB/D3gD/3VVsIw5p8Ef+98
oLjvdubfAG9uqf77OpT5z8MNYt3a2QQz/1PY+pzb55e1+f/C9at3/JKzPIXW
T9F+rW7ewnsY80+ED4y8u2cF64t8Hbxr+rnhlh7MfwYeOq1Oz/HjmT8XvvH2
98y/fF6N/8DHBvQJGsjjoq7PNOJ+SX6P1rO+y8bBEosTOX/5PMWsgSNGZe3o
2Yf5T8LJN7s+OMX9ewIV3L/jwz9P+Hzb/Yb9Yt+cTOLzLO2Uj/mLn0X7qfy+
YizcyWrKKVNH5l8F15P2qhPJ50l7DO7f1Nx7gx3zP4BvTqvYXsHjkh/w2wYW
bYx5XN7+uUY8YkpmUkwr5h8Fn90Z3NiOz6N6JVzPTVRtzv2AxjGwxuLmhTLW
b1EW3Phho9sdJjN/Obwtsu35MrYHMe0K0N8EDxCazGP+4fC4LifuPWBewXL4
vdMpaSTvl90huPzyzLCdPZg/HdZ6zxLZ8H4o/oM/r2/Utnlt/tYvNOKuswM/
d+X+QO0QuFPplp4Ca+aXwS2bjhn71oL5o2HjvtuyrnG/ojwN3ml25o8ev5/w
Df4ett1hSm1+85eof9cGbfnRmvld4XNnFVszuX9RtAS+eXCLaQz3W8r2wT0v
Oxvpcz9jzG24+uqeXuN5flUJbCPovOUMr0/Q4hXG+86LPvjyuJ0Ifv3fWf8E
/r50EbywdNeuwHbMvwd2u+Ro9LB2/2cqHOBfERfnzPyf4VeyswtVvD/CZq81
4i22i0e61pb/QPiZ0eoGxvx9+Xx4l/nG+Ba1+XfB81P7Hr5Hq1Ng4zZmjqnM
Y/wRbl3k53qS1yMyLtSIC42cW7fl/lBZf1jv+kHhuC7MPwf+faLdsTQeV4XD
gS9Wt9fn/ljBdfhC6+q0C+yf7N7BI2d3y+rC65M2fYPy6drqZ2/WP4UjHGXe
4MhFXo9yJuz1t6DjJV6Pdju8MKOxtz9/T5gEC25I3EayfCRq+NjsHdLNtfkb
qVGez6acWMnzJzjAZWeO7JzJ/lU9HTZaZ7TOmP2J8VbYxK9juoL1V3QJHqzq
d3U0xwey17DMS7CmJfunmAZv0Z+4OdSxcWF+e3jnuM9fOw1m/qnwFg/TfcUc
j9iFvP233ttXkcnykybAykdD3T+yP1S8gFdrM0VGbL+UekUYfwhq7D6yf9H2
hMfnjz80Zzjze8GWUYJfK3l9kmDY7URr64ja+h8Lb3DPmJz4gPu/82GDaj1T
0yru/67zTiP23DGnv1rD/d/dYbsPv8sTP3L/tye8rNrlScoL7v+Wwz7PDe6q
33L/9znYa/fGpWWfuf/7Cfw6oVQ8+B33P/+FnTunn0mm7azeYzzyvs0xAfdv
SyfArv+1Xz2dVgTBKfezThhyP7jyNPzjSzsLk2zu/34M53z2sXV9xv3f1fDa
OUN8Ynk9ki4fUL8N/9fSvYfFlMZxAO+2S0K1JNpUckmP26zKZalmKBEyKitK
ylRulSFaLE8jXay0jeSyLquLW1iGRYpqWEUoQ8g+a2v06Ma0Joku09qv59uf
n+fMeZvvOe95z+9955yn/Kx4WiaGTSK253nXMP9WWB2SLyn8h/lPwBKfzggX
2uwR/NzfqNSoivk74F7mHS8nc7t0eD3mM2JPm2At88+H70prttq8Zf4f4Ymb
ww3m8nlvvWz4o33k4fQm5n8Iz+7a4RvK58NDPsIWc4wsfbm/3K4B4+HosCwx
91d6w8tzvUZ1NzD/Rrii19J8k/fMfxyOX9ttHMP2xGXwwoF9jy2iZa1wXvDO
DZfZnmJoI64Xq3PtAS3M7wX7VLumfvzM/Bvg1XdbHJ7weXnhUfj+4N2RkW3M
Xwpn6xwn5dYyvxbuV1TlcoD9RWXVpBG98IpefLiO+T3hlNtpIwfw+AnWweWP
sg4l8niE/ArPCtvoNp755H/CJg0WjQm0shk+Y3uhMpvtay3faETdUf4nOrnd
bgZc1PLqZCUtjoSrGsZtVrN92QG40qmpPIH9S6GE9W0yZtmomf/Nl/a6M4yT
mMfM4q1G9Evc/uJN7D9Cd9jUeWFgF/uPdDUc5jTxtWlP/n1wemmI4y32b1Uh
7F9vK0nq6f+N8JPsEZMlvD4E32g0osdOgQ4Kft+Q6bBv/aqL198wfwQ8alqp
vJxWyuFnJdPSAnn+tAXwT8maNEueP7s6OEC1t/cO/r9JsWkzXC3KKTPk9T8V
toyOig3l/VEhgU37TJ/vOpHjXyocmx7hHTOH4991OHyaZ9la1lPCWrjcz/1B
Mscjad9/NaK4D0KHIDpzEpyl7DQQc76kCoGjLlevKeP8SC8Fltk8W2HN+lpw
Ff59tuDSID6PH1ID518/LGnndrnxO9yPwj7cHs76VOkEP30d+MmX9ax2GXxv
ydiLFzZy/NsFWyd819QnhuPfZbhiSqqqmZa9hDVO5XsNaMXXWvS3G2dzh/c8
/y+Ab7jkXfdh/WwWCFvF6IYPZr0rTISbnU87CPg+gPQiXGnR/reU7xdk/gXv
aD2xzpBWGbbg/iyceeYu61W98XBFdD/bVOYRBMCmJUnWxVHMHw9/n7Xi5+2s
z+Xn4SMGZmum9+R/Dq/0T87/tJT59d7j+u39Lm4X52d2Y+ANFhU1XwUx/yI4
zL792g/8vCwOdl6syymiFbnwoI7+nwdKmL8Snjmi1Eqf9bjZf/C7KzlP53M+
Ihzdivmp0UndpTTm94UXZKY6mvF9iMxtcPXRMRXLuL/qFLxJK6mRZjD/Y9gt
q3X1kp76vws+vF4Q8WQX84/8gPtpYGxREOcP8gVwm2+Q91TW98otcC8/9b4y
ng9tDqy+3Dt02Hbmr4ANBre0rdzG/O1wQMqoKnd+XmbfhvmMf7LuJvMo5sH7
XqyaF8/zpY6FT08xzWgKZ/4seK5XkXkBLXwA1/jElgRyPihtgwdvFae50Zm2
H1G/T/a5ZMrjqZoDDziaktfAellvIyyrldmLuD4h+A1O+HbW0Iie+e89+N6Q
syuGsH6Qv4eT6hf7tYQyv/UnjeiU3wTvLh4v7Sy4LiphYWs686+H3evs/3Dn
fEt8BN4Stqcg6hDzl8Bjx8jNTyqZ/x0sKu63ySGf+Ye0YzwJsGyR3Wd+D/i8
/o3IcaXMHw037lwfdf4h8x+CdVWV0coi5r8N+7kmKhy5nqPSwEmXjmXeucX8
lh0YT9U1O+/TAhH8afewwodlzL8WzrsYozS8yfz7YaV3i9Sa7SuLO778/pj5
SML2tU2wa8becZH8vnYDOzWigy6d1ZGPmd8Ntvzs0RSsYv5VcGziwQUm5cyf
DtcmZBxPYT71TVhdoO+cynxmDXD5qvoJV2mheZdGNDTbYNhB/j3pNFhkrtBe
vcf84XCv9Ff+psyjSoP1da66kfy+egXwDM/y2nCuBwpewzXGjV+bcD00pL8O
84vl/VszuV4mnwI739n/ZgPXK5Ur4NklYQ3XuH6n3QMXn5OVeHD90S4PfnbF
q3MKLX4FGywJLvTgeqHMpBvnM16QV4Ht/wOUNltV
        "]]}, {
       RGBColor[0.880722, 0.611041, 0.142051], 
       PointSize[
        NCache[
         Rational[1, 360], 0.002777777777777778]], 
       AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1: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
bYEXhw1leh+g/Bfgaevd+35nUv9PgbsWbAveeJHy18NxeuJn6oOp//PUY77Y
N++sQQj1/wXwgpnBNScyqP9vghPad82/9oH6/1m4uyFJqbiG+n8SvHL3qOKX
Yur/tbBI3sI1Xpto/OdqaGdLfpOSHdhL478SHLLsbVrlOhr/reCioyZ2v0xo
/PeE/Q77TpoiQfkT/r2+u0bSfz7lfwfbHORO2MtF+Udhh0jjsofSlH/uR8w/
QiM+vfqU3xIeqvKyPc2m/Kdhr9LaW+cdKf99mF/kjuAeK8r/Fr7aVVS+bQvl
/wvXSMQYvaDv36nQiP77+dhyHrKsGXxSriTkog/ld4fnCbcVtJ+j/LGwvIzs
wnHOlP8NnFiR6X9YivIPwF4dLcVNNB8JzW5qZ1+qH5Y4I0z5TeB6juOOmGmU
/xhssfTvWC3ljYqGv+hPuH5yCeUvg0tfCl/Y7Ub5++AB/4aDq0Mpv+wntN8Q
w2o5et3eEH67KW1Bjh3ld4N1+07tnLuM8kfA7RVaIXwWlP8lfHL1s9kJxpT/
D/wo73TyUfp7M+lmrLfyDIZ4DlP+tbD1s0975+2i/IfgOMsNF6fR8W6+Be9w
K+mvon9fqBj++s5FNHAz5e+Ez0hLOc0ku0i1tLNvZ9Z7JKyl/KvgG5J1zqZ0
fCoPwLGBDc9GR5j5kBUKd1Z/Vb7HYaxWCJsX3e/MHGBs/wuesMd/aKyZ5n+J
z/j7vxmh077T/M+Gc2Vehj/+RPO/E/zAhNuu9Q7N/8HwudKaza2ONP/nwe72
YhwuL5r/f8JjFv4d09Rp/hf70s4+mHiOs0uI5v+VcEVBSZvNRJr/98E/fFyH
lOPGMfmvw2MnQly2BzB2eQZXDVn8Zt9iHNUG12/eZzn0gHGl8FecDwZw3QwZ
ZcxaDheY6XTcecFYbTe8I1RGNLyasX0AfD5WcdjHi3FAFvx7a8vf36GM877C
3Ud9Ot4fY9w5+Rvm54Kp6318GcsugV8NnI1XDGdsthOekGTpc/8aY08/2Pnv
aNvO84xT0uE8Z+3u3XcZN7fAhQ3nZjwpZiwk0NrOVht52dqcQvm1YdmUKt/M
KMpvD3eO7di/mv69KF/4feIlySWFlP/Jv/ebiE00zqP8n2CJuXEq6fR5ahPb
cP7kuutmMf379gvhWV1dN1794mbyb4NPs6xN731jnHcRjnbOetr6iHHnIzhu
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
1b8ZNto8kL+ul+o/SQ3rGbP4Mjk6f3PRhJMlsnSW0P5elC182jF6z4NTVH8f
OOxX47FpK6j+j+EHK39oeFhS/RvhfsXZUu476PxnvDrqO/Oj9np36v/qsEKW
cncB7SfmbYEHj2qO+F6k/n8Bjtwz7Bx4jPp/Crxz3bctdw5S/6+HnRP7GyfS
fo0njwbWZ1n7ZQ5upfa/AG6NvLJ7thX1/02w2OpVCUoOlP8c7OQT6PyB3q+b
BH+cv+mn8XbKXwu/7rpnLOVC+bkWctjW2y2sBWwpvxJsXNVlvtiC8lvDwZO6
P7WyKb8nPDCFValiSvkT4Cle4hflDSn/O1jKMc7LjI5f3ig8EvW4tnYl5Z+r
ifPHisuZz2l/S9YS3qdZl8am/TOz07Co4uun+qO0/3cfbk7jH079Svt/b2Hb
M4lOXbR/2vwXnqTdmXniI+3/zdFC+xCpkTs0SPt/ZnDytJIHVbRf6+IO62cd
CP1F74+KhacMWioVVtL+3xvY65V2mxSZNQi/eDr+lMR72v+brY1/X7lu2ZtG
2v8zgV3TwhstJ1L+Y3C1Yn2w+l/a/4uGBY94Xkhppf2/MjjYKca7mvbXZfvg
fXdz9Y7UUn7ZRRz2Kl1uKVfaL/M0hIUrTXZtp/2cFDeYXRX/wkiU6h8BLx5+
OLRwDdX/FbxExXirF9VL9w88vpVPb+lCqr/0Yg5baZb2pwJ5qv9aWLqtcZXU
Kqr/IdhL2CXrwf/t//bif/PPT5/q9VT/YniJ7auAzNVU/044yKK6xJf2awKk
lqC+M3mX8ryg+q+Cq36/XS1D+yudB2D/2Ss+jaf5UTYUrg92WxL6h9p/ITzP
+N2RPtpP8fwFx6fwvSt8SfkllnLYYxyVSDvaL2hmw7sObDQYoflXaD/8kH97
iFIq5Q+GE/w6vr4nu+TBsby3LirEU/6fcEZDrnMt7V9Uii1DvbvL+d7S92Pp
wIX3y34l0Xyptg/mSJ91GqP5w/46vHOL+v0kGr8DnsHl0rE1wfyM89rgeAHb
gRczGHcKL+ewZ5ZcsXPQZCy7HFa6qrOXvZSx2W5Y/3CuqR2N154BcFqt1mJZ
uj6akrX8337JvaZ8ut7Y/BXeVlCvspzW60JTViB/4fbbP+h6v+4SWOe6FLcp
XW932QmvkzqmsK+McZQf7DKz/sG8v4wr0+HevUL7lf4///8ML1NLXT6H9gfU
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
h8KD//f/r3DY1lN3U2h8kJ2yj8O+Ort69eeXlH8JPNeDtS6fnm/13AmnP7er
HkfHN8UPFqib+flFDeVPh8+Hzv1ZQPmEPsPaZwb7JtPzW7oCjhx2b5/Rsqn0
vJOLNhzG806yRJee/7GHz450Z85fQM//+MI920LMFeh5KNZTOH3JkYwJlvT8
0yfY6vOXiavX0/NPE5047JY0aw2lffT800I4+0v+rAh6Hi1vG7zu2vlJXZr0
/NNFOK7jk7M2vS6bCvd4XLOpc6Xx/yPMvjsrZ8n/zz/x7cf4Nu6LzaWdNP6p
wQHiz07GxdH4txnm1xK/e6Cdxr8L8LdndfKLBin/Q9h0xXvtaWvo+cc6uE7a
MG+fDj3/OM4Z7TdUbqWUID3/qQJP9+HZa0HP77E2wVaZgY2iaZT/7L+///Dz
Ni89n23/AH6s8CJjQIyef3wPi/2NOLxzPT3/yDqA/hsp7RJPz192zv/nSzzL
tRbR849W8Kqu3eenWtDzj2dgr1aXEV5+ev4xHtbfHffwpiY9/1gNP1O9Hu9O
z3s2j8CjBh/z3el5S6G5BznsIfWdmhN7KL8FvNTwa/IhYcp/Cs6e8YhdQs9z
Rt2DlQb25rh8o/pXwrn3Z0qUTaTnP//C65W1DmvMp+dfFVww3o5af0iUp+c/
18PWNjujs+dR/hOw8c1r3DnOlP8OvLK1s23CMcr/Go4+7jp770XKPwALSPQ8
cfej/LMOcdjK6UdCklwovzHc/qlinMQ6yn8ULrPl3djsRPmj4F03avJV5Ch/
GXz1+rBcKj1vr9sLdwhcfdxvR/lnHsZ6beWfWbr0/aIMYJPBbR7OD6j+rvD5
CYfSA+l5X1YEnPal63jHD8r/Eg764y7JT88X23fD5tsbmny7KP8MVw5bodLu
gA+9P28NPEXL/XL+DPr9AxfYyiv+ZdcPev75Fly68M7OqbPp9y+K4KMC4X+K
N9DvX3TAXb+DTZzu0+9fTHPD/C6/8PHoE/r9C334RYqmY/tj+v2LA/CHgfeu
Zh/p9z9CYPMJFWnyFfT7HwVwpHpV9Atj+v0PDvx1+iTJtwr0+x/iR7DeXPDR
0sCZfv+DDcvE153LeUi//+EEf7qy+eVEP/r9kxtweF69VHIW/f5HLlyx44Wg
bgb9/scPODLrDSemjH7/Q/Qojp/LfIusGczvmciuhIOn91Z3zGRstheesVkg
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
/S94rpVkpW14kM7+WuMFb84Tmp7kfm7BAfhSdmpJpCfzp8NrSoMqlG7M3wA3
9P2+Y8VW5h+Ad79onqZiP6E2e4F6xZb/lXKd+VfBts0771zj+RXugy0WnY+p
UjP/b3DktE43XSPzX4Hzk9tL3+T6THEfnF2Qp8th/94xV4/7t3rd3mwDrv+s
gH0PKSe49zD/Xnj1BJ32He73lqfAcQWO70b0Mn8NHOjwev69WZz/aeFCi42t
9QPMP2cIz3ulg2MCv08gksCjluHfneV8QvYlXBZYO9WA+7Pjk2CLqJpw8Svm
vzj2/nfu+vry8/d3w/aKpAoHWvjWS5w/dbhlmgnXv5bD+adrtelcn1Lsgrc7
pajPTGH+E3BSS6ZN+wyu/1XDV+745jguZv5O+Kbrs7p3xVz/mjmMekw83THf
nvld4dHYbdJT73H+Gzg89vuYETZP+P0Fzc/w8tzbwQVcLxNUwllOjz+dz/15
oodwdaGDxGUZ579vjKD/8k+RRq3g/NcZzlRlSs243qneDt+xu6RPSWT+n+De
W/v3lXE/ubAclt3uVvpxv6H0HzhStX3h1WPMP+0V5o9mK6Yl4O//D7BwZOE=

        "]]}, {
       RGBColor[0.560181, 0.691569, 0.194885], 
       PointSize[
        NCache[
         Rational[1, 360], 0.002777777777777778]], 
       AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1:eJw03Hk4VV0bBnBDKSmdJjSIBiQl0qx0TqKMGSoUJYmKkGZJSKKEoihjGlRU
h1CGRMg8R6lMCcUpQiWJ77af9/v++a7ftZ3hPs/aaz1r7907x8rRaJ8AHx+f
/xg+vpH/x/9YZzM7OQa7Bj413fi2HmY/gCdapp9y2vx9xE7V8Hu9+wd427tG
HP0Pnqn69Wz2R+Z4hdzLTs7y6u+m9vk9I+Yzgn8YO3F+pfwcsZIr7L5juaHZ
tr4RW96DPwnJNysvYRxYAf8aZfXZ7X3viLMG4B2jaozM3jHunp/VyTGd+tzJ
XoF5P+kt8PaNN972BTE2OAXPfWQ/EObD2P02rF2UZPhuKmNuKey58Wxe4wPm
85p+w28uKDllbWa+L2tudidHbUruuUVOjNm6sMmA3bjKU4ydjsOvVP7MW1HE
ODoaNvh9/MFMM+b7VRTBhc0SYUt3U/6f8BilyIPJb34w+aVedXKGJxm8P9bI
2FILtjNO5qbKMn8feAT2cT99P+EHczwrAr79LcbKqJtxdz6cV+KRPtzHWLoH
Lu1Y3DZ3JvN6g1k5nZxric7jlROZ4+6a8Fy+bXduVXYz+Z3gddEVY99mMW66
CQudj93ptIWpJysPrp3J8RH3ZMzuglV9DkuW32XsND23k7OM7b/EOZ4ZH9Hq
sOV1sa7Gwx1M/kNwzE3B2frWzHG+UPhO2boOSRZjpVewULjrDb9WxpY8uP6b
Y1NhJPP+gWJ5nZy0pP1Pv/GY8ZTFhjPWd/r5TWbcfRA2CFpev0+I+Xvpa/CV
MVq5vHPMcYOX8GvX/NGNGkw+96/wivEf+XZFUv4przs505uOtdQVUv51sOux
xTYPpjG/F2s/fPBiFCf7JHOcfRU+bNznn5nM2CkD/hUjtaC+nsZ/G7ynqvzN
tVmMK1j5+P1/F50Q3Mt8Hz5VOEv6veKLQOa40j44UnbVpYos5rhlAJw7X2BD
6ETKnwrfGD0lawq9f1YLbBKmsfHRYebzuycUYLzkyOzW1mUsvQruHFYSdzRl
bGAFr8twr7gkR/n94OLTG2xMZSl/Cvz4vItrw1rK3wS3LRc96TeFMUuksJNz
ZLSNYY8k1X85HCoQ5ddxnc7/3fBqnf1mAYeo/r6wZ2iO7xMHxhVP4W6F0uOC
hjwmfwP84oLH9TUWVP+xRZ2cBBuvGp/fzHHLpXCF5jpJy6nM5weaw8//zDAZ
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
dL1J6QC89MeTgL7xNP8FwX+W7m7j30Lz3wv4Q+wuNeOFNP+3w3ctnpaOU6D5
f9Ja9A9mfOGmHMq/Fm5avlQ667/1zwaeNM76m7AczX+B8JLy49xiX5r/0uCn
JiHtSv/1P5/h2eXO00POUv83cR2PU2C9vLd5P83/q2Gnhq2fJy2i/c9e+NC2
udWHDtH+5zJsyHrp9vIiXf94Bpd9ivmxJ4euf3yCT37L1+E/Q/3veDXs93+s
+vj9GfW/K2D1LaPm2UpT/2sJS+1XY5l9o/n/Ivz3jdbe/F6a/5PgLx0lvfem
U//bCJ8RU+42putTBsLreRzf94c6h6i/dVeB41nm4kd8qf+zgEdnhesLnqT8
F+DzAl6LdmRQ/kRY8se2p9JulP8jfGntjaerumj9F2LjfH/koN1gReu/Elyb
bXxzhQet/zvgoKdyz+fsp/XvPFw5ZX1nTBzV/wk863bMmq3OVP86+Ge2lZlt
FtVfkIN+reXDryNcqv9i2P1zU5hVKdXfBK72UBD5JUbrnyd8OuzYg8lsyh8P
n6t6uK6ziepfC9e2r/6tQuOVy7cB59PMrhx7T+r/FsKPX8kIfYyh+X8bvF5v
z7YzZ2j8n4UTImzfVDvQ/e8HcGXYbAkTf7r+Xw2nsNTtyiXo+v8/+Ll+6sJO
HXr+YYE6xpvS6z3BdL9dyQhecuzoYPx/z3+4wnp/2caTptH1/3uw19uADr1D
9PxXBRwcHbnxjTJd/x8Y+fvZyb/bdOn5J5mNqP+ssJW9r+j6/xZY0Dx3gEvP
K7ufgsX3si6+caPnn27Dd7WE5+QcoeefSuHjN16Iq9HzXKx+ODFbToAdSM+/
zdXA9+/xf5pKz0876cIupRfS3Lso/3F4rpPkL9P/nn+LhreY7vjoFUrzfzGs
ViHkOPyYnv/8Cd9ddz6u7AM9/yalifm9Q6V8LD2PHKgF/41+dXEGm+b/I/D3
nhdeDsto/o+AuU0ijeofaP4vgG3Wun6TiKPr/z3wZY1I4y90v8F91iasX/+2
pj96R/O/Jtx44OncNnq/Jif4WwD/trPraP4Pg0P7FbcGnaf5Pw++8/PKBLMa
mv+74C1WaXtPUf8SPX0zxnul8rBzNM3/6rBWstH7lLk0/znAa3gCspay1P+G
wtLHSpLeeFH/8wrOjRfOCTSm+Z8Hx880PbuL8mWJaSH/1oJnHl8pPxu+4blI
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
/jo4IfyteTD3ZyqGfNJKKgJLnSqWG4j/B3YZUl0=
        "]]}, {
       RGBColor[0.922526, 0.385626, 0.209179], 
       PointSize[
        NCache[
         Rational[1, 360], 0.002777777777777778]], 
       AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1: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
ennDOWr/EJitc2rtMxdq/2y4aplC8U0Vav+XsGeP5ujkhdT/Df2IPKunnH2q
Se2vCS9vb81rIvMc4J2RVXuu0O8Lj8CDi6TCR22l/FnwyIfParacovzPYY3r
XXWZcZRf7BPmzzPVfnfQ8UR1uHRI2rv7BpTfDk6QnrbJfhvlD4LbX6TufWpF
9Z8JF2RVnZ92jOq/Ec7R27LU8zblZ31uZx/7pbpuVw7lnw1PMJhp7Ev9T+c6
eIlMy1mxQMofAI/tyFs2NoTyX4P5I24YtdLxwHrYrOdCWUIs5e+Dn81fNVzu
NOWf2Y7+f/elbGN/yr8Wlq29dvDXUcp/AOb2xN2L3k/5r8K/jkbK2J6k/ALY
m6V+qcWX8vfCMmWnYnLo51kqIlxvHnL8Hen1NS3hAmOr3OfU3hxfWHrxqAvr
PCl/MnzwNnda1j7KXwN3Tprs17+H8vfA43V83SypP1Ce+qWd/a6/9MY2Mcq/
Cu7dLJNuNpTy74O1skZceCxP+RPhnTMmtkpIUv6HcGoWf+sYaj+5bvjnw7pQ
b0PKr9SB8ejm4u/ecyn/Cnj7Fy3WyQmU3wu+a1CmEKxM+eNg/n7vQf1kVhW8
4rHD8CVzKP83uKlnVLKZBuWf9BXvXz4keYwZ5TeF09POTKlYTPm58OhV+zWP
LaL8l2A7kcba02qUvxK2MZiuIj6V8n+Fr5gGG8yj44ETOtvZ5fZjVaZJU35j
uORLw4SdYym/BzzXsyNl3xTKHw1HLRm48YpsVA6P7NE41DuP8otgixQ9R3l6
f4lju3A+tOhYqNP5KTCCFy70fX/emfLvgCWnlGa37KD8kfCviOHzRBzKXwpP
2pEx/edyyv8JdvKOKV3xL/+ob+3slBkvfvmoU34D2FWms+Y3fR7K2+DZiruO
htPnaxUO9wi8FziQA0vg3fe6VAKtqf97D3+0mFA2fTb1/3Lf29mL1tTkuA6j
/n8xPLCM350+ifr/rfDJ9iDxkzqMuedguUH3f+RU9DH9/y24f7NA5cMsxoI2
+M0naycvd8YsmR+Y3079+FN8AmNNHXjOssaFGeqMOZthI4dr0j/Yf5n+/zTc
1Ox2LkmHMT8fzrj6kfUh7g/T/wvh9rWDts2exBxXlupGvdx4OLLxGWOrhfDv
7/e83aIYBzrDoZmnbZI1GfNOwOO7vz+o38ZYeBN2XmXyx2s9Y7kWuHf/mt9G
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
SZtM+9+UwS2vfMJk+2n/j3Y4x3hBwWY6LhxzBPUWIaU/Q5b2vzGCx7mZfw5c
SfvfuMMRN3xODzah/W/Ow7PGRj+8cpT2f7rz38/nfXFI06P9fz7CdhP7bnrR
/lSsUUdFbMe1ak436xlrGsCzZ46zaE1izHGDu02iUtk2tP9TGHzlxTXbCFfa
/6kYNrYJNL14hfZ/egcb1rFyq91o/ye5YyL2KUd72w2NtP+THvxW3rhVhfbj
CtwCJ/rH96XQfle8s3CldYub/hvKXwiv67f6uI3F7Mcl1wYb3Fg7LG4YYyPp
EPQf07dIOND+XFxt2P1O1Zyez5R/E3ygusjkTTLlPwX/fXj1o/9Pyp8PH1m0
s7ZoEO3/JYTtlzk4P1xO+38NP456CrJu5rszDl0AP+t00n/ky5jvBJ/Kq1w6
fhbjzuNwb/hs3WIjxso34apr+mPbSyn/K3hkuuzLJfR5BEqcQH/vI5HjK6L8
82BV0x1+/WmU3xFOd5b3jSyh9j8G8++Jv1Y1ovbnwWdj1W0rjCn/C9iu3tHp
8jbmfEkcclLEFlfXf7iH9jcSzIXT3ct/F5tS/dvDbkc2BQ1rZ35eMxguqRyj
cO8lY8512GFwlo6QTfXfBEsYSvlcnU71P+iUiC2tHXG3ZBfVvxp86uYrrQ3z
qP5t4RO7Fa33OVL9B8KsY6nvQ0fT/i/pcMnRQwsEdD3hNcCJrxqzBv7t/9UP
q7wrPua2lfq/WafRXkq753qX0vlvDT+veFE9nvYr4x6EvZe/P6+eQed/Kvw3
cFW8P4fyP4FHvVQ43elP+f/Cg5vGJ6ir0fk/44yIrTx7v1DViM5/K7jY54kg
6jDl94P7u1bnPqXPg38FvrM3LCB1DOV/DAfpreBHkJV/wwPX9Gy6bCj/tLOY
72Q27dKh/iJwNVxuzFZSD6f8PvAjmcUmO+nzEF6Gt0cs9Dx9kvI/gr9GG49f
sZny/4RfSw05q7KX8iufE7Fn5r446rOJ8pvDv66J/bCh/WcE3nBUt4Czcjdj
VgL8cUDn3PJ4av8H8NTfZl9O0PWZ8x2+Yi5bWreecahiqIg9dnNl2T1vxvzl
8N29SYq/ohl37oGtL3F3a9PrKcfCC4fGtFzLZmx1D+bcTnm7ja5XgZ1wQ4KX
7uKjjHkTw0RsocPCU5EXGQuXwWvfiB+rTWUstxuePIb9KZmuP0YX4bSNN+bF
X2XMrYB1T2y0elNJ9f8Fnrq5QE07jfKPC8d88IXnjs2BlH8pfPXUwMt9CZR/
J9ykGFM6lPYH4kTBf7bbullfovx8WCNIVn71Mcr/GS5I2NQ2Yz/lHx2B89s2
91r9PspvCK+IlHm1x47yb4d/nCrUcFtB+SPgcWXqrHoa3/Buw1/Ty3ycXSn/
B/i6sbX+YtqPSk7+PK6fdmftf02g/Prwq5ETM12pfbiu8NK4/Auf6PUSQ+GK
RH2+Nr0/QREsVhfYp0fjFdY7eJHIqfdMEuWXjRSxv0QOpC6h/cY4urBMGEcy
5inld4Gz+rP/zKHrMf8MbPF6s5O2LNV/Abze86TmHzq/lVvhyztHZq+m/aKs
RkSJ2I2dt/2i/1L+RbBn25GoS7TfE48DR8ZG6UvReEl4Er7EyS95N4nqPw9W
XZcaM1GX6v81XL5Vc/O8DVT/wy7g/LniPi+VrteJWnBe2AaXYbSflWAj/Pmw
odwIbzr/j8PuE+uLi13p/M+BGzcmy+RRf8Z5CTu3DBv8hn4/dGi0iC2Q0Vnl
d5DOf01YMv3NzjTan6vTAdarkTxa6Uf5j8LfF5v6bd1J+bPgnqOvJcVN6Px/
DsdeDiyyWUznv9hFzH/WucSX0PhDqA67RYQ5fL1I+dfDE8ZMHLeR9rMzCoLv
Ns+3jXtD+TPhvaWuJUJxuv41wknj62/ofaD8rEsi9taU+WEbflF+NVhFR1x3
xC3KbwPfO9mdfPIv5Q+AjSZ/9q+j/QZDr8GHqgMTHhVQ/npYKl5s/7xLlL/v
0n/r4dM36KZSftUYEXtxebTgDe1vaLUW9vylsG/lc8p/AM4sXBa56iXlvwrf
jPnu+kZI+QXw6vurO8b1Uf4/8OXQM1fe/aH8KrH4+znlccbUX3It4QOWVfMz
6fqW6AsbmW9j8Wl/M0EyXGsVsopF/T3rMXxzlu5glbmU/xc8YlRDrBa1D2dq
nIj9YaOi32+6foWugheGBzVa7ab8+2Bjz2qHxXsofyK8Jl2h9d/4Ubkajo99
d9bYgfJ3w0OPJZ7r3U/5leLRX75ePSJuDeVfAYuVP1SvpfG50Av+cXKZUeNN
xnLxsM0HKW/xf+PfKnjjrfqbkZSH+w0eFpAdtfE78/OJkxJE7PEG01w9/o3/
TeFGtR1zwml8zdoDq6UJlotof0rNmP+OJ8meMGljzKmEx6paTiyknw/9CjcI
ayd+ous7f0KiiJ3fV7R3K42HO41hy/DTh131KP8uuE9thoyPBeWPhn/+Pu8Y
TZ9PYDls+yZm9Ue6fvFEcJTBU+3tadT+Yy9j/KHX+vznaWp/NvzZ4Gu3yhnK
vwMeqnkhZP5Zyh8J2y2KqSyh10sshffnWiYcof02BZ9gpaKlR/LoesoanYTx
5ZcjahHB1P5L4B9T4pLj3aj9t8EKVfePnKHxfGg4zN365aIx7afHL4H/arBi
Ymk+0fkeDpgX6fCe6kd5ZDLmAz7C+r00nrBaDJsm1T63XEv5t8L71mrISfzL
fw5W042NP0h/X3gLttjfkv15B+V/C8/8OaLUJIfyy1zB9eUyP6afPi+uDryp
Z4FmdQTl3wzfucXerWVM+U/Du38+rdWh12MVXPnveZqyPTrU32m+gW9uOzPt
CtU7RypFxJ6yeP79c//yL4RbDGeLj6X+ju8Ma7dlPfQ/QvlPwPmKpw2bqD9V
zoWXvj9ZHkSfj1ULrFhk6PXlX/8neRX1MmFW4R76PHjz4VNa87hN2yn/Bjh2
QcWE+9Q+ciHwynlBk27foPzZ8PNV+076Uf/KbYZzJ32IO7iF8ounithb5INr
6+j1BRrw2NCGlQV0fWA5wK937uiYR+9f8wj8vGVonyy9HucGfGR3QeMaur6F
PoMbvy+SrKX9DPmD00TsB/by8q8amfOjcw789O5a7y1DKb8dXKLwPnQM7Sdr
dRg+9rm4d+J8yp+R9t/zQz0WK0TM7/OewkmhhVnX6fooHIDzpv7Z0kn7I8rN
vobP+/T+srRplH8dvOVEb4Ql/X3uIfjh7TsHx9F+k4lp8LUNn41VJSh/Hez+
0Tz3E83vWX3w3u/zL1wQo/wz00Xsti8S7SofmeOcNen/zW8238uk3w/1h591
Za27Xc0c56fAMp6Gx54foPy1cH9yeMs0Wn9S7oW7879addN402p6Bj7PbPn5
SicYB1rAzVrJy2povMXbDyud3VSVTPuDCpPgo9L8c856lL8Gfjh7P7/NhbFR
D1xbarnzqjPln5KJ/vS9s7X2ZMq/Ev7dN+ldkRxjwV74mVVNc+18yp8Iq4RL
nExTZ6z5EJYu8PwiNpry/4ClGnWlw+n3QydfF7Hf8BIdYxUpvxm8cInzPE0a
n3V6wpnvdjWaa1P+OFgq6Pq8AQPKfx82WR409de//V+74DbJw9f0/Sm/wg0R
24ot3jrq3/jXBN6kUFsYTONnOS58LubXaAVaPzK6BHsFe/TV03iOexfutXDW
vUzj4cQO+P3XMQ91Gij/+CwR2ywvxsJYSPmN4cYvpsJ82s9Y0wMeWnDQ2k6S
6v8CPMXk2f6qz5S/DJY6on4rj8bv/HY46LOE91baP7lzDA/1/jMyx4rW55SN
YBvfA3rllpTfHQ56s1lVV5nyn4dZAvX6EPp8eHfgr9KN+ctpfCv8CB+ePiux
hvbblBuVLWLfuLJO9cS/9jeAs2zt1h+l9SSuG+ys/9l2xb/1rzD4eL/Putu5
lL8YXtxT2RNWQ/nfw2sOrFXx/rf/p1wO5mtK92omUj1z9GD/UazR47iUfwvc
3PxoY6AW5T8LpydHDo1ppfXfwpz/5gv5sxs8af23DR4z7VVt5Rla/5W+KWIP
uRFyudiG1n+1YfZAu5jAjNZ/N8FGaZaPfJ1o/fcU3BR5KG35clr/zYdfhY9y
athM679C+KbioMstB2j9e3iuiL3ELPbqwg20/r8ArlrAndWxnta/neBoQ48R
F9bQ+vcJWHJXXYrpClr/vgkfXVTQ5E3fD3Fewapzy+bJ3KH1b4k8tD+nfO2w
J7T+PQ9+FJyZq/2Z8jvCn9LkIrdPofY/BqdvW2G/XpzanwfvrtksUptB7f8C
3rqudfUI2j+YNyRfxF61bXrGbwHlnwufyz92aH875beHO740b0npoPzB8JML
1uNX0v6p3Ovwblu30l1jqf2b4KN9t1Q3SVD7DyrAfFpJ8m9aLuWfA0st5Tyo
of1KNW0L/vt+r3jlTPo+iBMI96v2TssIoPzpsN3XrKYg+nz5DXBWeFbzX1q/
7+yHJY6vKnFzofafVShiL38bEPvKltrfGp7BOxn9i9or8CCcL3ZrSyd9X8JL
hbn8aKNvOyn/E1hRwcPxB+13LPcX7l4bFxRC+ykbzbglYhs05r/aNkD5reCM
B3O7QqgeE/3gnddHnd2TSO1/Bb5lvHxjWBnlr4V1h+ndMqXvzzR/w9PvnG7S
ukD5pxWJ2G9lykc9pvXu0NXwerf8fe0LqP59YC1f3qDt9Pl2XoZlnkqb+jVT
/kdwdW32JC8Vav+fcMp13QMZPZRfuRjnx9nvgx2pHnjmsFLap30vJjIWesOt
0++4T9RlLJcAr629HHJZk7HRAzhsS8GvoLWMud9hrewT83T+zX8VSzD+9Csb
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
WawnClfAu8cnhFvx/Xn6YripI3RnMLeLrsCZ6tQBGvbz+5nhd6Jc+xRmM37P
/4xyjxBD7tokxh8Gv5cjuuLL8UmXDM/vCLG+x/nWVAQvN39mX6Fi/Jfh8ENn
pdkc7xTd8NFVbwVMXcj4PbpQn6XYvR3O/FszDb5eMumaRaj/voG3LVaff8D8
RrwbrpiwNLaWv0/IquHjV8v63mF+quqC6zaO9g5UM373R7gej134JoX700+B
D4muTpWyn1+UBLe39726gvWJXwE8tLI6qp3PDykvwtK4ue86jGD8HXB6Q7rO
zPFCN/Ax8udqt83OyYx/Etwn73H++AWMfyn8YUzYymfM9xQ7YZ/vYv1zmE+o
z8NN703ftI71hKYNjk9LdG4U8n+37hf9N5kt41IZ/4TuF883bGzu4nwgWwx7
Rkxp9V/O+HfAZfo2mZjzQeFZuOiv4OZJrD/1RvhcbtEYd14Pov5PML8Ntu2M
E37/kMPB810GHeP1qkyA64ZOq9nH+iMjC95R79KuEeqfX+Hn2QPdHLk+ZHoI
d52N2zKL+Y6k31PkN3+elo7g8yeKj2APF1PbOtar6vnwkYxXEifz+SHNNlgX
OuvoHj5vYzgN2ztcbqrh8yziRrg2KMtXzP+XOZqN8r/2PPbs4O9rqkA4pjXo
76eMt/BzeKB14PEk3k/6LXDAM6lLPfcnOglXOlaOPSz8/tEAn9ouOWPm8VG+
ZkE9MOBaXizXBzIC4H0+8nM53K6bB092GDj6DG1Kh+/4Wu7f5d9LtPD84enB
zaWM/x/444v513N4v6kdnmF/1a/+dhTj8/9dhagv
        "]]}, {
       RGBColor[0.528488, 0.470624, 0.701351], 
       PointSize[
        NCache[
         Rational[1, 360], 0.002777777777777778]], 
       AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1: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
vymcMz/me2kutX9neFp67+uB9HnCU7DtMJ5XQhb1/zS4+Vr/1Yyv1P/rYb3Z
gR2rayi/wnocD+RDZ62g65H2M2DDhrM9K+n7CBxgV7NRLblvKX8IrLTx8c+R
Fyh/KlwRduPDxX/3P0Xwl8uq0amllF9ug5g7/1ys0Tq6vsI3gvVfV2VLVFP+
TbBU/+wbWv+u/wfBp8eY1kgMoPx3YWsXr+pddH2UUws/kWtKN6XrQx6DNqK/
xt/RCMum/NPhD4++rF9J15vK1sMD/J6urqXrOawA2M1ppItTHOVPgbfGNu0c
TPdP7Kthi013U08ep/xSm3D8936qGX2M8uvCnZ+qrbbR9Z32tXBiwqmsKrqe
o3oUvtaUPr+HzLsJ61Ukpbyk+9v8SrjOJnHpwiOUX2KzmJtelmS6mPKIpsKz
jfy039L9bfZq+J7rtdoZdD2Fw4cXb9zxTpbGL49rcF3r00Ve1N+Fr2FpJ5mp
L+n4VdYH9915ucCNrkeytOwx3oX5lByg65n6K2DdSyua/5Qytj8IX8ywvNxa
Q+0/EU7hRUc4v2Kc9RLWiy63+EHjW3sPPLs8WecyjS+qUxzEXK+Wme85bxjz
eLBH1En3FTT/4h+Aa0blx8Q3M06Jh2XMFT71/Dv+l8Cz923Z2PGDMbsLHn42
bdcTOl5yJjmKuWzVfPMqen+PJbDSkDkKNy5Tfm84g3vu2I4nlD8W/qi4Slou
hPIXw5bsMTankin/T9gr3acg/BblV3XC/NjXYW8Ijb8Ca3hHkIPaLBHl3wO/
OVzEKafrF+0X4ZPmHSE19LpqAfzw3YOUYXT9lfcd3rbnol7+v+O/ijPq02V5
fRN9v5RFcOTqR8o36fqZ6D/YREHnagOdb7DPw/FfJJcF0ffh5MLun6ebbqe/
92iHT5tHye6g693CMS44v571Yf4D+r3KFsC/snjjamh8Z+2C5RepX7tD1o+G
LYrjMnfT8c7+GVz8ZV1Y77/jXwv8aqbaT08zav+jtoi5e3Vnun9aSu2fCw++
bDDg7L/5nxvsL/Np3SR9av+RcEVlsn8hzW/5WVv+nh8EDuLRfDXlK7y9+Uka
fzq1/+FbxVyB+d4ujRHU/s1hJceMnzk21P+3wdUpqicfb6X+f3rr3/b5TWEf
Pb8hfAJrKWbWTPan/v8Z9syyWd2zl/IPc8V8Q10wbMIyyj8btvKYljiP+rP9
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
9JHGH/tc2Mdi6MEFR6j/t8M3S1q53w5R+x/zBO/fF6PT5U3tfwH8xDGAx6X3
U90FSwfPd5weSO0/Gv42/erGCfR8P/8ZfLforNeJy9T+W2Dz++JJZTS+iUZl
iLlL/ugUjqDxkT0Pjk5YPjH0NNXfDd7m6q8RROs3PCJh/qU9N05GU/4sWMcv
6OtvP8r/FdYsVFxaSM/fs0ZkYnystLv4ZwblN4e1hqzfWEjrBey3wctvyydY
0voWwWnYd0usuqYC5X8Cz6rSk/ah563aP/993WvYsTh6fkx1WBbOF02mH7lE
/Zs3G7ZZ/iqWbUr5t8CxToNUhs2j/IK/7pQoKKL+K0qHh39/NG07re9mf4I/
GWlV+HMov2I28sZ7B/K5lH8W/LVmWkGtBuV3gjP+ZP6SpvXYZSdh4/HinWb0
/Vlp8F7fdf3qtB5Cvw4O8HEK+07Pn9kPfirmTpkbov2Z+qfABN5o753YlkPt
3x5e0zt/rpDWX7cHwyahHx/V0/p21VT4xsGX/GX0+/A+wMkKK04E03jLl32G
8/PyxbtuUf9KMYQ9puSuLaHn0UQb4WzXnbFqtJ6QHQS//K70+AH1B84d+LNC
6ItJIdT+38FcvmP4beq/woE5Yu6M1oeZOvR8QJk+vKUnzqiRnk9hrYc9xoQq
r6DnifSPwc+SpdZMp+fJ7G/B05b8GDTalrGgCjZe1rrLmPZXyxrwHMfbc9PK
L+1m3K4Dd2lfT5KPZqy6Fk486BjYQusjeEfgX07x7102MObfgOu3iqoeH2Oc
8gau9uZbR01nLGLlirmthQ96365lzJ4K18af9hhmzpizCl7Wq+nqYsHY4zB8
TF/9epYTY+FVeO+E2Bvv5zEuewXbL/F9IqT1aKw+uKQs72YKrZ/T18wTcx18
277n0v589svhddu7Pgxvof1/fOE+ntjnlzTlv/LXNTHsa+qUvwyeYxeuorOO
8vfAcjMWN1z6t/5jcj6O/3yd/BNalN8W7suSuGBsQvn3wzLirPSnYyh/HPzk
zq60XbRej10CKyoUhLfJUf7f8LK1/ed/TqH8agU4nv84VrJnJOW3gU8d+HFS
vpfWv+yFBbLdrSW0nx0rFn4yvNqks5jWvxTB5SoBM74JaP+jTnjc5iO269dQ
/gmFYm7hhJT8oHLa/8oKzt40b+T5Utr/yhN2jfrTGUn7ialehC/vMyrMsKX9
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
xZ/y/pJq1Yv6XOn290i8/n9guVPZ
        "]]}, {
       RGBColor[0.772079, 0.431554, 0.102387], 
       PointSize[
        NCache[
         Rational[1, 360], 0.002777777777777778]], 
       AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1:eJws3Hk8VF0YB3DRQqRJJZEaW6SNSonESMpSaFFE0duOGi12knZK1qjIhEpI
1iKJSKVVspSoKWSbCpVs8f66T+8/7+f7mSW/ec4999xzzz0KW/et2S4sJCQU
PEpI6O//8R/r8P12zsfbe/WkPgkbwAY34PThLyf2GYr8NfcNHHx82PuNUxnz
/sCOf8IN7o1lXK5a2M5J7W1ZsnUWY6E1sMMk15DQR4w1fOBzT5qW6qQxdrgG
39te4WSwjHFIORxUELvLQZlxUR9ctL7Xo0KDcYdyUTunIbZX3P4z8/exLeAF
VW9SOwcZW3rCp5yLcyZbMO/3T4A3eicnFo5gnP4Ctji+foP3d+b9/N9w25K5
80fPZ8xSfNDO0fvv9QIXdcpvDkcqvWsct5Ix1w3+cLv3+XUyjwcft1GrXBDN
uPwpXBMqofx+CWOhX/BN1x7n6tGMNaYVt3Pqk25oNg0NY/KbwE/NUurz6fWQ
A7C+TDVbWYJxUSx8tuD9z4A+5v0dj+GIuC/r1MdS/i44X0Hi8HNzyj+lpJ3T
U7L+XL8UY39jWMtl3OPG+8zn07lwhGr+PM9sxvyLsPxl71v3FzNmlcLnbSfm
F3QJMfm/wx7Htqq6JDCvcyc/bOdwnmbGvbVjzFsGB74Jm/j6CfP+chc4+dRE
H6mlzOtC0fC87kbe42mMNYrhR3UzDrttp/wCON9S7PLdO4xDpEvbOWGLUybO
O824yAA2fKWlxdtK+ffAE2KrHbOSGbMj4UWt9lLBcYwtC+GYsHjB8HjK3wof
NNUu/lHBOH38o3bOhSMDK8ybqP56cLpn5qpCak+sXfCZIwGxH1Oo/mFw5aXT
hsFlVP97cICj1NVH1H54X2Cb+Hnuf65Q/VmP2zlu2f0jtq+l+uvCVdWqnN4Q
qv92uDjXROlgKGOHc3DulIua8wup/nnwkuPHzs94QPVvgN8dc7/qfItxx5gn
7ZxRZW1ppoeo/tqwyDGu99swqv9WuN/wxKbky5T/DHxnQU1l3HnKfxtuypUV
rk2g/HzYRqt35gdqvyzxMhx/XEmPZTaUXwv+6eykq6lK+bfAAWrp3v/1Uv1P
wxqNPsUnZ1P+LHjPdG/549S+hT7AT9w5gR1alF/0aTtnxL32taOEKf88WIzf
ppjzi+pvB8++ITJVKYnqfwLOyeN1h9+l+qfDS57Pt6sspPq/h+2zNtqO86L6
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
jwbY7fKwZ41smv+XZAs4DiUVKpvo/o6BNixv+WPEkmd0/tsKR0/fnDJ1Kp3/
z8BHzuY9V9Si8/9tuOXjA42W4XT+/wQ3Wez4bvmKzn/iCjj+LBrDMz/Q+U8L
XvT8/pnHYnT+2wLr7D4et/c9zf+fhl0eJE7SLaT5/yw4pmTEg++NdP77AJfr
+lbOek7nP1FFtK8sG9d6Qzr/zYN3yvQpVLfQ+M8OHmmiNm3jdxr/nYDnfJ8T
MKabxn8ZcNu3rtBCNuV/DzdbtbUpLaT8I5QwvtoyaTVnH53/58IrDl/wmKlP
538buEm/c7uPBJ3/j8Gf4ktdvo6i/Gnw12rL/QJnyv8WFo9pD3QJp/sfwsoC
TsmUNJcdgZR/1l9nLfm65iLlt4ZfekXdDTxK+Y/Ai3hWUrmulD8F3iJp3HjF
ifJXwc5rIoQf0PenD8FPw2dbHz1L458ZKvh7Xwk9vVdK4591cGDzDEHaV8rv
Bz9kjc63XE7HfxL8PGPvf64aVP8KuP75sLgnIlT/AVjc8IrP7TrKrzodx8fR
6eFPH1F+K7gqeKNT8nzK7w2XHv0W8buL5v+uwqzjb9W8Z9H4/xWcfWFIIGil
659e2Onm1UGh4TT+V1bF73vVL/3gN5r/Ww1/7jW1c6T5dn8P2PrPxjNb++j6
Jx4OGzAf5UzmP4d/Cak2pohS/X/DkY1rp9aL0fhfQQ3n/zHiPZ50P4hrBkts
91GfS+Ydgpuy5cPLmmj+Mw6+lN875rAGjf+fwvX3RCIO0Xy8xk84IL/V3XYr
jf+nzsB445tR2VR6f8hKuM6vKmJgGOXfD49iRaaI9lD+GLg/5/hRebofwX4M
rzhjc9OMrr8sO+Gm97I2uXQ/xF9OXcCJvcJnj4mg/Mvh0hG3RpTRfDd/H/zo
87Gwsdfp+u8i3JhpNjAij65/H8K+x09/2UHfx/0G73j3aPNJMk9mJq5vrmuG
uN6i/IZw0i+bwQwFuv5zgdPO/hD9T5Pmf6Ng1y1zb6tJU/4H8OFzElPExlH+
drgx1fbgAy7lnzgL56NJt8Y16ND1nz58z2vXNO4+yr8HjvwaHVu/jPJHwM0L
5Qee0P0G//vwx20Lml6tpOO/BXZQG9GyyISOf6nZAo6fPjdfypTqrwfrjx2r
svEK1X8nnNoWdJ5XQfUPhX+u/LUo9CvVPx+uOxb7VYGuX8ub4DF1zlI/Aqj+
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
DqT3OyjXoB7Dc9hqWdT+V8NvDo/76kbr64s84IIJ23ub6XnLjnh4tLFmrrk7
5X8BKxdPOvP6LNX/N2wzY7VhzGGqv8JbtJctzn/Uqb9LN4NvtZ36Nkj7UfAP
vf3bX/a+m7yI8vNg9953xr60/57BU/hBkfaTpdWU/yf8eee+6ph/+99NfSfg
dC0siVtC+1OXr4TjZo2t86X1sEIHYIsStS2X6O/ViIVdG7sPpdD+5g6PYbHq
BY/jflD+TjjNMTnJntpzkVwtxifreJt3hNLxvxye5yL60SWMjn8uvPVR/cix
tH+w5UW40WDtTBfaD9r/ITwgGRKbTv15+jdYLMK22Pk99X8y7wUcYcHr033/
9r9YBo/Wur5aL5D6Pxf48dfDSeNp/2huFHxV743is7NU/wew/orBjJ88qn87
XHFDRHpMDtVfuk7A2c53Gd2aQPU3gO+HvdxyhM43DntgFQfX//Jov+OQCNj9
6NxJadS/Ft2Hg7Z1TlD9t/97C7xr9UBTPe1Hzx5fj/PNqdfz2PT3W+rBh2td
QmfQ7+O/E/6zd21I7TnKHwovetSs3Z5N+fPhWr3i907Unllf4NFiCxc5HqL8
rA8CTsKs+Uaraf9prg58nu0qmUa/L28bPC00QG0O7Q9dHgy/Ev16KFqf8ufB
Xk4J2s1bKX8DfPnJwPId+yj/mI8CzsiigMOnuZR/Ebz1j3t+AZ2/ihzhWSJh
Tu83Uv4gWCaoJvL1Tsp/G17ILR3TTOcfSz4cOOlAif5tyj+aj88PDAzKn6L8
C+BLtllHHeh5Cv5muPBNlVgf7SfDOg1btqx8blpB+bPgpJZ1ldfeUv56WGVq
pMpy2i+GN+oTjt+zmTET/u3/ognzJ3hN5VD7ErKDD2uccY2n85fGCXjHynMv
y+j5ZId0eGWmc5QD7acfUgsfbdDjbFlBz78P/4zf6/4qJWcaf3bMgT22dT1Z
8H9L9x4NZRrHAXyo9nTbDKdFyka7pJXMRmTNysgl0WZrle52mbaLRFe1lG1W
R0s1XXRfhSRtKt20bTJLtdUmo6K0bJPLuPTKUJJL7Nf5+vNzxpwzX795nnmf
97zP7/mO13/z4CuhC61Lp/H6TwFP8E+4NaWv/3sWfE96cZKHN/M/hR+VppR1
xHD861UJsgdft9gVcLyLx8MpJblGA9hfxX0OHNivs9KB/fgjYmHn+g3jn7E/
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
        "]]}, {
       RGBColor[0.363898, 0.618501, 0.782349], 
       PointSize[
        NCache[
         Rational[1, 360], 0.002777777777777778]], 
       AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1:eJxU3Wk81F0fBnDKmhZaUEm29hJaJJJJopKllBZFESWFFimKLKEoJEmpQYtC
tBBKWRKVarRbI0oyGEso1HN1fveb53nzfL6f/6Brzn7OzLmVt7mu3j5ISEjo
lLiQ0L//x/+kfR41c/Q0TK3uhvQuhg1uwCMcw5+apDO7vYWFpqs1nExl5g7A
Gnm2u5Z0M/OmPG7mOJXXK+4VMAuthrnHUrIiNv76Zw1vOGGqdmj3E2a7a3AX
t8Uz6QR7fTgPHuxcM/jZWvY87ze8ZLKk6PAxzAK1vGbOn7XOuukG7PVK5vDt
0ne6Hr+ZLQ7BMvY/jV0lf/+zbyI8V2ScTbMSc/pLuOhI7qr2++z31fbAmTrf
Yu2W9vyztEp+M8fsWbZO6G5mA1N4c09j7MpUZjcPeIZgqneUCOXnwl+1FMb3
3KP8z+FHweXzl2ew1wv9hLMnudxU9WDWmFjQzJHbP9rwtj6z3XL43Z0Fekkn
mMP3wcIVaz5WuDPnxcGvAx1dt2xgFhTD3mJquX/9mZU64JaIJ34Hl1F+hcJm
zjAlk7szRZl9l8EbrBtUrrd1s/xusFG9eoqYNfv52li4ZGPv8beb2HPpIthE
VMRwyeufLH8bLGF34UC1KnvuNvZJM8fSLPber+nsOdcQvjR9i9/dI50s/254
X+H2n8Xnu1j+GPiCjUGb3CRmjQLY5eKSM892sp+348NuWZulYhLZ7w+XLWrm
HFP8OW+yLnOeAbw3ICusTpFZ4Ay/Fjp9YvEFyn8WvrrNxrHpKOV/DM9/dm8x
N5PyN8HL9p7MPXmROX3U02bOg4JnlQvpee0iWLPFclDZXWbpHbBo4LQ0h1tU
/yPhbdE+C2z8WH1xewhv1ym5e82GmfsNtpzduY0rysyTLm7mHLHaNsWWQ/Vf
F37Z7VJ93YTq/3bYc/um+693U/0/DVt154V9pfobng37CGR0jv9gzquH+77Y
y77vYBYMK2nmTLkpPPSzG9X/BbDBWrd4+/2Ufxs84uU4eZXX7P3xDYUPvOgO
ukz1KT0T3mEplXziNJV/LayVUbTpWBWVv9SzZo7II7+0Xgdmg3nweMfipL/+
rLzcbOHTVrtzc9Oo/EPgK0a//pznMvPuwnt6ekMtlJiFauD+Vy4Lvloza0g8
R/sLPne5up/VBzstuKp9+tDFz5nDbWCjedrBDx6z+pR3HO7tXq3fuYg9F6TD
n6+EPDD+y54rVcLVE4MjlZyYLURfNHOiS0bsPHKe2Xc2vHlT13HxO+zn0zfA
TefCJpjXM9f6w8+HnP879DGz9C3Yvm57lO5dZoNPsL+a5Mk9h5jdBpU2c9RL
6sOWL2PmzoSztbRsDigy89bBwZ9vx0kdYn9f6Bgsohpi+lWHWSMZljqTXDvY
nNnuPXz9k2iC480Olv8vbLwiPDwsiDlv2stmjtdkf+usAGbBGtjI7eTG9xOZ
lY7Cvx5/X3vbkdkiCa4zVx243MDs+wa2829ui5vKnN4Pr/k5322MFnPt5FfN
nJz8/LhJje0svyW8bnTUnyoZ9tzACw4qm3v/6nZmt6uw2IuJhspTmLmvYdt1
jd+fTmPm/YKrr5mFbeMyC6m9bua4T20UcV5H+c1gObF0qX45yu8JR82QWP5s
GXN4Amy1+JJZ9lkq/1LY1nz+1vWWzIJuuMSjuEPJlMpfmdfMCTsjfXBHG5X/
SniF/J66mbqsPHwPwHEngwT26VT+l2HeBK8GnfVU/s/gl1c2buzZSuXfBUt6
F+tb9VH5K5Y1c/52zV5x+hTVfxP46RGBWuEqKv+9cLaK04gJs6j+X4Q19aqT
qoWp/hfDFnFmv4IcqP63w+9Nbk7iuVD/N/5NM+fECvEYfTvmcCP4zYWjznvW
M+e5wgdHDxQG2TILzsM8Dy3O80xmpSdwUMpqsQOxzBatsJxDpuHQ+8y+8m/R
/8WYxRl7UP+/BF78dvCwhb/Z81oX2Ptk9Nn6y8zS52A102mb1ltS/58PJ22Z
+1c6h+p/Myyk4qa64Dd7v7lj3mG8P5I030iN6v9iWKw010rIhvp/Zzjso8qv
M/T+akTB6y6vz7GfTe3/EfzNRH1q8wCV/3e4y3utTNddKv+R75s501zWKxmN
ofavB8tFNCx510Pl7wQPWuW3U5jGF4uIf8875ccn/qT2/wCePSWg/PBB5vSv
cERcfVz1C6r/Iz40cwI83SscVdlz6YXw8LUdUzwaqf47wN9yrFJ026j+n4J7
ed8OZDVR/c+CWw+88G8Kpvr/Bb6/SXVdVDPV/2EfMX4tMc4Tp9draMPj6nnn
Z/xkttsK+4wzmRUzjPKf/Pf6d5tNxDUofwa8cu72Exdtqf5//vfzS1vyLPjU
/od8auYUroo1WzGC6v9cOM7B/OruVmr/W+CZS7K9IsjpwfAYua1jpYTZ62vv
wHYJnx5+qGfPpavhhYcD9cy4rD8wEC9H/7jo9bXdxcxumnCYfPsqp8eUfxP8
I6sgaoUx5Q+E8yuPRs7eQvnTYaVIUfG+5ZS/Ai4ovHrFNpryi1Tg9z3aNM7L
l/o/dfiq5S2Ttkrq/9bDF5f+dvo1kvL7weMcguKtSqn8U+HRR2pL7jRT/o+w
bdq+BLErlF+4EuUrN/5Eeg7lnwHHnO7bt7OQyn8t/PvzoIdjtKj8fWGdAyLH
3hZQ+d+Etz1Zba/zh8r/HSz5xK5cNJby/4FlZp0NKxJQ/qlVeL/t9M/1mlH/
vwa+YjDwxNeA+r8jcGlcmeSnEOr/rsPrDhwc5raeyr8Mdlq7pDvkHJV/H/xy
co2R1lvKP6ka/ZGs4xo3Q1bflSyq/298sjgMe10VXsDTpP7vCvzbJWJfsBb1
f6/gzGmerkmrqfx7YffRo228PSi/ak0zZ/qg/O0LdzAbrIITsmoV4+yZ3Q7C
50wGzzq5j9p/PDxBwe1pUiDN/17AmXsTxqR9pPzd8Me6E0bzpan9K31u5uxq
WPUh8BPlXwF3j/ThXCWH74d/pvVv991E+S/BrhGFMp3OlL8ENop5MOkijQdK
nfBu9a/tejS+WEyobeZMfhshdTaY2r8xXNs4pXmEF7V/d7h7hMrulEjKfwHW
1Zh/TDOZ8j+Fx3VUPhtMNhDAaj/6hnVeo/zj6jC/PBh+eMtDyr8Ujk1/MbNp
C+XfA2/JkJmaI0H5z8MS8m/UxXhU/wvhoQ1VDi70ftm1wEIzdbdku1N+uS+Y
/4eZO4lR/5bHgYe8N4lRWEf93y44eXVF5eMyyh8NZ0xWOJ9eR+N/HhzYd73o
YTXV/x+wi9fU3UVeVP9H1zdzXhTmBOj3svZcqw8ni+klGbbQ+L8TbtbcvC9s
FbX/M3Dmdv0N2QrU/nPhnJ+DQ8M+MHMb4S9bgxxTqH3zZBqwninsmJ8aTu1f
D3ac8tazpoe9XsMRdhh8NyVAiNp/OPzqVv3swQHseXgO/PvO6ZIvScx5DbCK
bvsHOydmwfCvGM9+HrwXfoJZSQeOdk40/XWe2cIe7vv4tiwxitk3DA5qX3Hy
2Vnm9PvwmWPDPJ0TKH8dXFz6MHgPvR/SQ781c25mN+3ivqP88+GQAz3zzUso
vx0sVT3t+MZMyn8CrjmS1tEkYObdgzNHjZT5+YdZ6DMssUkvxJf6Qw3JRpR/
V/Woc2so/xxY23hxCmcO5d8MT3vSs+kph/IHwQ7djjPKZSn/bXhgm5LI2RQB
y18Fq7eFlRW/ZrYQ+97MkZ4r3PeuktlXA567xmToiSrm9I3wfNWVrtYHmWsD
4OdXJr/qf8QsnQZ7TuoyWnWD2aAcfu1+dsKRBma3wU1Yb+9THJVRysydBU/t
lhs0Wo+ZZw3XttTs0HZiFvKDbWTmdKoGMWukwCFjl8j3PmG2+wBXK2REqY2k
/EI/0B+9lRym1sye502HJWJrVV6JU34rePun51FGdyi/D8yvCk9Lvk/5b8DW
tzd7JSZR/rdw1ujBsS/o96UPwBs/+t0RfUv5pzQ3c44fOfE2vYnyr4bt9jw5
7VZD+b3h4kPLBZteUP5rcNg77rM79O/n8uAq/sPHkQ8p/2/Y9GVkjcJtyj+J
j/p6813VTPr3apjDSu8et+hepPyHYMmLv1UHYpjDE+FVHZdc9RIo/0t4aF/T
3QX0XNADG/qMdN0dRvlVWpo5gsszHY+VtrL8pnBMtOiDD7ptLL8HPHyypUfd
EuZ0LrxpfKt722Tm2uewbWH68J9pzNI/4cwAIetfMcwGE1ubOYesH/Xb5DC7
LYfPpv6tPu7CzN0Hi9+dnPJ3NzMvDrbwDdm6+jSzUAm8z5bveOEIs0YHnHxu
cPGWv8x2Cm3NnJZvlxTP3WcOXwYX6VzaxYllznOD/YMKHvYdZRbEwuXc0cIS
9PuUiuCzGbF3b7gxW7TBfq0y7i/3Uf6xgmYOpzl7Wu019v6kG8IODVa2r04y
1+6GJadYf9pyjFk6Br4UFmh6+gKzQQE8Sver9JI8Zjc+7Gnc0DDzHjNXtr2Z
s792rPJwOcpvAI+02f7iqirl3wWf8t//c+s7yn8WHvtoZEe8N+V/DI+5mam4
WYvyN8Gtju+PByyg/KM6sH43+LpPmspTsAjuMB3Zn9LG/r7SDvhHTbjMtPdU
/pGw4tBTk1bcYPZ9CI8Mu/ri7Ss+y/8N1g1syA7dwVwr3dnMuXa5O82ypZnl
14VVbSP3vn3GbLAdfnb71umZ35ndTsODt289PX5jE8ufDY8tXTW94E4jy18P
V9o+mXXI4jvLP7yrmXN+UIrMWBP2XGMBvFXabPSYjm8s/zY416pnrv/dryx/
KDw1VD3h4B3mvEw4Tur5ya2rG1j+Wvj2RHF7OSH2XEnqJ+rnhbLzXWvZ77OY
B3/v9foqOYvZ1xaWSC/U48xnr08PgXOygp897WSuvQs/+pHuUVDCXi9d8+/1
W4Itk9rZ3zOQ6EZ/Of97SMUlZjctuLGt/nrt5nqW3wZWbZzl3HKojuU/Dmfu
1hvlk/mF5b8Nl2W+ulH2hFmjEi7P/qE+w4D9vJ1oD9qn3OeCV13sefhsOMzj
/qWi9cx5G2Cndy9ybrUyC/xh81AjsYq3zEq34N4FcyL5HGaLTzDHrCqu+if7
9/gO6kV9ztBeKt7FnD4Tnmx88k+1Cfv7tetgpe6HmQ87maWPwbbyW4dvvEn5
k+HykRoj3z9l75fbe7hEbsv2O0OYuX/h/Mwe4bajzLxpv9D+1/c5bNNm76eQ
FTyQeWWZyCtmjaNw3uD968XOsdfbJcFFPLGm9UWsfoS/gVU6vb4IlVP598OC
V/31EkrsuWDyb6xf5xdej6xnv0/JEp44s7DzmRZ7buEFz1Be497vQ+V/Fd5S
8VltXD9z+mu4lysrPiuEvb72Fxx4N3ZrEpfKX60P69381o8bh7PnBmZwZovE
mPhc9tzNE85XHnB3vcuecxNgr5EmzeeV2XNeKew34FS0geqjUA/sb3Zofakl
5Vfub+Y0+UStb09n76/dSlj4iIfk30rm8APw/v6DK6fIUf7LsPs02bJ5slT/
n8EnLSRFV7oxK3XB/jLCF972svKzUBxA+yj2HJ67ij33NYGvS1nKWv5iTt8L
bzxyorv9BHPtRVj47Z2FpjHM0sVwuYiTy5SFVP7tsFhky5qVxlT/x/9p5tyJ
njM3YBMz1whekrptf5QJM88VnuAmmjWT/r5QLFz4uXmNgP69Gk/gu+028ZyV
lL8VHuGz6IeFIuWX/4v54+XdiW2jWJ68JXBm/qS3gb+p/rvA30t8Jh2wZs+V
zsGaU5Y6R4yj/PmwYt/1MGF5Zt9mOPdPvGOkMXP6GCE+5+MHk+MK/ez31S6G
v5ZH/DpZzyztDDvvLmtKeMlsEAU/m214QcGJ2e0RfGSsdd2bZ8zc7/CZtz0v
JpSy388bKczntIuHOU46xyy0CL4s4jVqViWzhhOceuBUq+8Jav8R8G7hZXc0
w5nDH/x77q2wTPkO5f8KNw1vcgu6xywYMYjPqdnB336fS/kXwhqf4owSzlJ+
B7giU3b+/mrKfwpWLPieoh5H5Z8FJ4QX/S3RpP7vC6xuKVce58csPWwwn/O6
Z53wSz6Vvza8Z1Pw6puR1P63wsbVwVdv8Kn9n4TnG697fqCF8mfAIzdVPNAy
ovKvhVtXJ5cdsqHyHyLC59j/sl25dyuV/1zY1f1PhfUcKv8tsENSvuCxDnNe
MKwkqbXy1jyq/3dgNYXzDnYLqP5Xw9aDugo0yyi/uCif8034q1rZWqr/mvC1
9cs9FlhQ/k3waT/HHzWnqf4HwgukR2ZZUvuSTof9xe7L9Cyj/BXweqngXYsP
Uv0XEeNzpB3cnJQnUf1Xhx0mDX4XRa/nrYf9ZqWPfzqL8vvDIyXjrwZsp/yp
8JYSx6U6dyj/RzjXaR63j9pnuLA4n2NuFJ/47jnlnwFPPdbp1Z9J+dfCvq1r
N82xpfHPF9431OzWrwPMFjfhrvZHmvqvmX3fwduD/D8dH0H93x/4U6GcfZsM
c+1UCeTvGjo96RuV/xp4TKTG1ZnRzAZH4HSnopTZQVT+1+HDE4q29HRT+ZfB
klZdYYr3qP/vg08J9rzbPMAsNFkSf89VvNungFnDAr5a2vFlXw31/4dhw27Z
CZ3VNP5fgUsMHD4KRbH+Ne8VvCBvsU5gNPX/vfASkWFVMmuYlVSH8DkB87ap
nPFi8w2LVfClnfOvvaxn9j0It3/N+KtgQfOfeHiGW9iNHlc2n6l9Ae/pbhb2
F6H5Tzd8LO3dWisVmv8oSeH3uwTPcg9n8x23FbDTxR8joh7Q/Gc/fGvGlw1z
k5l5l+D48+dfO9UzCz2DH28a1t+yjlmjE7bqFa8cd47ZbsJQPkdUW2NnpDNz
uDF88c+7qRNvMOe5w9/Kis1Xn2IWXIC3Hq+zF/ZgVnoKa17dNXTWA8ovgO+t
GqrsWkj5xw3jc4JaeSfPlDKnL4V97nTK2XbQ+LcHnrT+RLr/bmbp87Dd0fCH
hkE0/hXChkt+7VxL8zu3FvhO2q1JiV9p/JMbzuds+COkOqqa5n8c2C9g3M6Y
mzT/c4EXFNQ13w1k1oiGW4PDXj3azmyXB3ddP6VfJ0P5f8DhazeuDT7GnueN
HsHnGMXGn7pqzCzQhx0aPv7dN4NZaSdcqj3fZMk4yn8G3maVs1TbiPLnwpIT
5314W8X+femN8KjclVYJEux5rYw0+gfpTzVrRrO/L60HD+3yv5HgzZ4bOMKL
mmvv94+j8g+HE7R6Lt1V/sHy58Ax2iGKvlNZ/eI1wJrBrXGfjZiFRsjwOZG+
1unah1h90tCBl3NzphdtZrazh+PLMhZIctnrw8Ngp5yESU/fs+d59+FlY+Ky
nfjMgjp41cEUq1s/2d9XGjqSz7nfMvCnciZ7bjEf3pFYW7v6PLOvHWw7/2/L
wnjm9BNwa9bkzzamNP+/By87ZaCXoNvC8n+GkxQF368vYzaQHIXxJ/hkxLU5
zG5z4FGBuyV2KDNzN8ODzujmnv/LzAuCXy3gGu+sYha6A5cJhPNmm9P6pwpe
G/BnkcxUWv+IjUZ9MebFaxmy14drwBynJyYrZzPnbYT3aC/UeVrF/r2CALhw
s+nMb0vZc6U0OHHhtof3U5ktyuHx67ySx09n9h08hs/RuTduRYcjc/os+OXO
+4ED65hrreHPQ66/+vCO8vvB65eKTormUf4UWNRztWf+K8r/AS7jSlkrf6f8
QrJ8TtQG4fxRw9h6izcdDomy0ebpMQuthbW9bg4pvcxer+EDr9lVMDj3JbPd
Dbik49m0nQ8p/1t4x4A5v0Ge/XzeAOz8ewbndT6zYIoc2tMcj5SzXbT+Ww0r
SZ/fyaH1oIU3vFNFt2dfM63/rsFWY+ZfkTtP618eLMnTeGVuQuX/G1aeU+Y2
p4NZepI8xovlPPvmzZTfHO7y0a/o38meux2Ch0cP/ejpxcxNhD9kLPB2taP6
/xLmaoYM35RC9b8XTp5R+37XIWYNlbF8jqDLoPb0ZWY70392Ddt+LJLqvwcs
eXSkpkYxcx4X7phoMV6+hcr/OazgGzCk8gGz0k942oq55UJxVP8njuNznrsf
yp5nytqH73I45Nagha7XmdP3wY06jaKDlzPXxsH3FdKH3pzA2rt0CbxMVyat
04nafwcs6jc98K4p9X8K4/mcm5V+a3Q02XPuMtgxxPt7pxj1/27wujWynzbF
Uv93Adaa61yqY0b9fxFsfnz38CE+1P+3wd/iov017lH/N1YB/Xtilm1FP/V/
hnB06NCXV2ZT/78bXv28rWFPB/V/MfAp65Q5yTvYc4sCuKOnPF01l/o/Pjzp
TVtbwi3q/2Un8DndAsG3kwXU/xnAnj2phRlPKP8ueHelnJSGBPt9Bmfh3l6F
CXsr2HO3x3BE4QwFVy7lb4L5Ew8rhVB/zxuliPIZdMrRTp3GP314UJ6mzE8r
yr8D9ktxuRAcTv1/JLzdze7A0rvM4Q9hjn6wtlwt5f8Gh+Z6fn20j/p/6Ymo
f3ny4/zkKb8uPMnI86WoJ/X/2+HN2xUzVan8fE/D1R/KbU1SKX823H7i5XL3
7zT+1cPShyQPzZKl/MOV+Bwbk8bbAyU0/i2Ay9/MrIiLpfLfBhs/Kco+0kDj
Xyi8d6SC4aKPNP5lwlP2usc7CKj862Atg4nJPE3KL6WM+aWdv9rTU9T/z4Pt
BLIHJ1szh9vCZulpz8a9YvUzLwT227IydRA9F9yFd/GKxLZmMSvVwHnCod2n
XKj+S6jwOW2X7yzI6mF/z1cLLtlwOUrqOeW3gadKfH1uHMee1x6HZSIX3vlz
msa/2/DllPdJe/2o/Cvh7NcrY8od2L/HTVQV87ebbsM3pdL4NxueZRseuSOW
mbcBTh+yP6ZkCvv3CAXAUt4csRhP9lzjFlzfyN3las9s9wn+WXm5uHQDc/gg
NbTfG6aP/3Ao/0x4jZNPZuVIZsE6WCloWkQKzbeUjsED3HTxDAeq/8nwKZeL
uvmGlP89rH5Z8O78Qeb0v/DITNfbLr6Uf9okPqdyu92G19R+pK1g/677q1dd
pvxHYcVoCxvfZzT+J8Gbvl8ZfMSF5n9v4HU5MbsmmVD774cbxv8x+7OA6v+U
yfj3XMxeI9JD8x9LuKJBwfnGcar/XnC6q35H7lqa/16FVaatNDzdSOv/13DL
6PeFDTT/FvyCN2S9PZ3mT/N/tSl8zpBunky8B83/zeB+P/eyuWo0//eEg0aq
G88Pof2vBDi0scTrxBpa/5XC7hI/ov/bv5Hugc91RyQoL6P5v/JUrH+/jFTZ
xqH5/0q4bLrqLAsy9wDsJasXMkD7QbzLcPAJB80NR2j+/xyWq5h86MtGmv93
wfx8wX2xSNr/U5yG/tmnRnJKO+U3gUuT/kg+3k/598JH1wccFaP1iOAibOc/
+1d5GuUvhq1LrX7t4FH+dnjgbVzagQmUf/x0PiezKSd4aCGt/4zg/WeXDa6l
/b1aV3iN/ItXhXdp/RcLa/ysCPd4QOu/J7DaIAvRT120/muFD/npvbtH+4lc
+Rkoz3kKN569o/XfEnjKh4kt5Sq0/tsNt7n9cJy0nNZ/52DXi0rfjiTR+icf
lpL+9iuFyiu8Ga4/emP/2BeUf8xMtI/vaU5KtD8qWAzv/Jggu2027X85w7Yl
GQHNtF9mEQUrtR9ImfaD8j+C+yRSN2yVovXfd/hKd71z5lxa/42chfnmCaU3
+bK0/7UI1sv7YHV7JbOBEywqucthkQftf0XAMi3+77fFMnMfwGu1DG12jaT+
7ys8p3G5tsEG2v+SVudz6v4ajv1mQPtfC+HIGRG+8/yp/B3gW80JIen098NP
weK1te/4Y5nzsuCuU3J6sn2U/wscfk1BvP4xlf+w2XyOfdK24qxxlF8b9plU
cnffDsq/FfbQEH8w1obq/0n42Oxu0UH3qfwzYH7IBYPPtN8pXQsr5G865HeU
yn+IBp+TYSB69nEd219wmws7jGjU29RA+z9b4MFRcqPKd9P+RzD8SfHBm9HO
tP97F16e+KOgI4D2f6thkUmfV9l9Z7YT18R4fOXNNHcl2v/RhJ+cvii3Yzzt
/2yCH/pFiF+Nof2fQDinVVEubiLt/6TDeokpV3Skaf+jAhb2Mp94u5T9fl8R
LcyPzo5YHZnNnK4Of5A2f2PvTftf6+H+V3VxMy/Q/pc//DtqToHuV9r/SoXT
5UeZfayj/a+PcFOAWr7VX8ovPIfPedDV6zv7EjNvBpwae60hMJzyr4MVZ8Y/
L/Wk/L7w7Xmvb+rdpfw34froVbUOT2n/+x0853bI9Cwu7X//gZ+1WP18kkD7
f1Pnor9Sm7LTX532v9fATvsz1781ZfvbFkfgnlmJeUEHKf91+HGB/vl7LpS/
DL72Wsc12Yv2v/vgDavtt867RPvfk+fh7+eIeVV1MRtYwHzrhU+HmFL5H4aD
Nu9PfKJK+/9X4NtRGXP7Qqj8X8Ge7wbC1Wn/TOgXHBh7M6vwN7V/1fkYDwId
00Kv0/7PKniMiIjggz21/4NwdPKTHmEaD/LiYReTDpeMBtr/eQHXXBn8aXUT
7X91w1lZEyXTlZgtlLQxnrlMy/2iQvV/BbxLWGycLPWf6fthJePPE8vGU/u/
BFv13L3LPUrt/xk8TOnecWPaDzLohL32rrbsW0Htf8ICzOevDHyWo/MbrjGc
rT7RaLYRtX93uPaJlIQPzY+ELsIWs1TGmlTQ+c9TWMe21WJwGrOdAB48eZWc
8A0a/8fpYP1WluF1sJLm/0thd3Vu4uITbD0i2AMX53Vdq7Cg87/z8OFTu63C
D9D6r/Df6zOnnzmZT+u/Fviu11DpElFa/8gt5HNWXqoUid5H538cWP5Lv67Z
UDr/dFn4b35pv83zFq1/ouHRr7nn+wS0/suDIz9vTf0QT+u/H3CrsrnyCVqf
8Ubror+tOLZcfAWd/y6GB6ySHMwG6Px3J7xt8C3DCfvYebbdGVgxylws2IXO
v3Nht8lejafK6fy3EX5ayD88/C+d/8roYf07Ja95dSOd/+rBbkdab66YRJ9/
cIQ1brx1mdpK59/h8LKkxPWFB+jzDzmw6B9V5/rV9PmHBjhqpN/pTDn6/MOI
RSg/Hu/xpFH0+Qcd+OehhGVv5enzD/bwrd17801n0ucfwmCZj0XqwXr0+Yf7
8GllHY3f9HkNoS9wrvvmiNAV9PmPofp8zveC0umH6PMNdvPhORk8t1xDOv+2
g1UPcM3rvej88wS8ep+gcf9eOv+8B3uJjxmrl0fl/xkeMopjO3gDrX8lF6P/
uuW0fvw2Wv/OgZuiZna4adD592bY4muk0zdLOv8Ogs/O/bR3NZfK/w48/Hyx
pOFwOv+ugi/1T/Cb3Urnv2IGmC9khT0YtJbWvxrwnH5exXBrWv9uhH/G92rl
f6H5byAsNOHlHOt3tP+TBh84GHGn5TCtf8vhSau13o2IovX/YA7WS0LblR7S
fkDeLLgkMUCun0frX2tY80qr6JlFtP/hB++4E/eqlvZvLFLgDS9CU2uj2Ot9
P8Bday9c6PtL81+hJXwOzyqmfNBXWv9Oh+VatDfepvYnvRYWXhn+yG0Ws4EP
PEslqbCK+ju3G7Ch5kKzvFaa/7yFlWNkW6Ytp/nfAKxla3niXSCN/1MN0X8r
dC4+8Yj6v9Xwnh61NKF+6v+84Wndu+28y2j/+xpcZajseyyIxn8ezFtUsL94
KrPgN2w+Wuxu4Haa/0xaivnMo5PJewxp/DeHhTPtpi1bSOd/h2DNdb6Nb0/S
/CcRHvan9cC4PdT/vYR9NuyydzlL/V8vvHHPOeONLjT/UTFC/XIzT+t5S/Nf
U3hF5Nc6i//OPzxgx/d1huHGdP7Hha3Me5/ZL6D8L+CvMyp4X9xo/vMTdn1p
XaZ0neY/E5dh/pixcU5dJs1/lsOjtttuFn9H+ffBj/sjYqWofxbEwabXjTqF
aT9TqQTuDogw+xFD558d8JePiTt27aX1r4Ixn6Odm6fQ8t/6dxk8w/my+RIp
Wv+6wQZzN5/YKkP7vxdgjWlrJtxeTuvfIvhoTI9PTCX1/22wf3+oebWA+v+x
JuivZe/lbqA8PEO4NrKjsDCe+v898KH4MC/FI9T/x8Bu7xfxV4+i9U8BvG/P
xVnjCuj8lw/fyq+zTxxL+/+yy/mc6Z83jfYaoPwG8NJmTfvH2yj/LnjMmZkn
1tL+s8VZuEP/HG/1IMr/GNZbcWeehB3lb4LVVky4OXQnrf9GrcD89fOItNdj
aP2nD3/rbJcqW0vrvx3w9cFPjqddoPVvJKyioCis3knrv4cwd8pz3bW0nuV9
g2W0t1ff+0ntX2Yl3p95B0XMvKn968LRWjVSZgG0/t8ON0c+W8PZRev/07Cm
cUyHQjutf7Ph7slbJb31aP1fD6fcGTey3J7W/8NNsR5rMdlxax6t/xfAXH6Y
YpoNrX+3waIaGbXOA5Q/FP79qI8zTZbyZ8LDN/yJOWZP+etgv5bqyTMOU36p
VVgPXpw6LViY8s+DM4SubOHuoPW/LVxmN/n8azvKHwKv/zp5YtM+ZqF7cIK0
yRPH1bT+r4ELv1hWNDXQ/peEGdbLMQ82C2i9HK4F6w6SrLwqoPMPG9h00Z6g
Ti1a/x+HfcvUel0W0/73bXjEX8WSS0nMFpXwBt0Fp1xdaf9P1Bzzo4rs6JHn
af9vNuxxR017wyPq/zbADVkiE0T96PwnAO5NnPr15y86/7kFx8QE22R8p/yf
4M6zzgpf97Pn3EEWmL/8XXHNoZvyz7T4V38+DfZtpvzW8HpR19yx3yj/Mdh4
82197WLa/0iG9y7af2od/XvC38O621y3LHhI5f8XPn/nuofcR8o/zRLtO+O7
+PVrlN8K9pB8nP2X9jctjsJLz2VPnBZK5Z8EG7z+ZOv2nvr/NzBni4WX6iDK
3w+f83Mut7tN5T9lNZ+Tb/ts5sNDVP6W8ErvkONmnrT/4QXzPI+MKg+i+n8V
duhasKOO2hPvNWxe0Lm56jztf/yGVUfaeilSfdJQW8Pn3Au89kDZicrfDP5Z
+Prm1Qwqf0/4aZnkqAVFVP4J8MPPjYdn0f6MoBT2cc62+7CE9n964LFRkYNE
/9D+n7IV1lujFh0b+4v1B74rYamaJadnrqX6fwAuHrfAypzOl2ovwzWuTv3Z
dF4k/RyueCQhtlmX9n+7YFt9/eyHOrT/qbgW40GLdNfT0bT/aQK/v2JgPUyd
9j/3wvWSaydlUv8mFAf3amq9MlOh/MXwwG3jQaVbKX87rHgg3LiP9qPDx6/j
c+5nPbIq3ELlbwSfu7TtnHge5XeFJRMWmfwWp/KPhSN0/ljwG2n/6wl8Of7v
s210vujbCtuVPxynRvtZ6fLWfM4ds49rrGi/rHYJrHC6I+X6T8q/G95/0/Ft
Fe1XGZyDy2uuZff8pfz5cOPQu31a1F9ym+GlF1RCrtN+NW/MerQnHfVQh5VU
/gawkUSMmnYq5XeGHT7UWfmXU/4oOLLw7OwWql/hj+DwSK+kr9so/3d4XN/f
uHNLqf6P3MDnVA/0bYlfQv3fIrh5o051BvWvFk7wwKYpZksj6fwrAhbS/1pS
mU3nXw9g83GpVaU0H6v9CntZNipW0/mDtPRG9Bevxtbfd6D2vxAWkvpweZ8t
ff7NAdZvuLLzxCpq/6fgvOWmO6J9mHlZ8M2D+illhtT/18OjDR3SJtJ+rsaw
TVgv2LSpp1RQ+9eGRcU/dpx8R+W/9d/zNVJ9E2bR+d9J+ECpw2DjSMqfASet
rA1vv03lXwsv1UiqNZWl/ENsMP/K3KlZ8pr6v7nwxbJAqbTdlH8LPCemdYZO
IOUPhp/tD2rc94T6v7uwy5DT27ddoPzVcOJVqyMHk6n/E9/M57Sf3VHr/pf6
f01YMFCq3mRD/d8mWKamVGEdjZdCx+FLslNEVGMofzr863l+ze4iyl8Bxw5U
VWyl/ihcZAv6g/r1S3t7qf2rwyHLE5qn0vmIYD08aEPA2gQJyu8PJ+9U2a85
mvq/VDh9+QuZfU6U/yPscifKPpHGi3RhW6y/OEeXLA+n/m8G7GrrelHvEvV/
62B/zrR7pxWp/vvCFnovR5y3pv3/m3D5Rw297/T5Mu47uO3whs7UBpr//IHf
/zrUzrlF879pdnzOxBuekSOu0fxvDVysn+HVGEHzvyNw89s3qz3baP53HU70
qFmcK0zznzI4iXfuTK80ff6hDx4+bssBiTM0/528Ff3LbLlp5nX0+UcL+G6x
r/Mx+n2+h+ErUa3DVHk0/70Cc5at6GwWovnfKzhjeIpl0V+a//6CpR7m1DuM
oPmf6jbMd1zNpq5JpvnfKpgrV/lg3iDKfxC2C9/16qwJ5Y+Hp3knnttGz4VK
YdEvU3Yfp/m6RjesadPZx7Wm/Er2aG/Oz3fO3UHzvxXwZbXH236fovz74bSH
UwWH/Sj/Jdj05fRFad40/3sG67jd/pK7h+Z/nbCZ48Vd5vrU/09w4HPWnfro
+ojKJ90YHjAY/mPpI5r/u8OjU7qEhtH7I30RftDf/un9TZr/P4WTraW0JopT
+QtgGTkB9+Qnyj9uO9Yzt533OlRR/qXws1j3V3IKNP91hc+lFZ77pk7z3/Pb
/30+5pr86WDa/yiE1wdkrHxB8/fwFnjM55r35qspv5wjn2O/yFpksT3l58DV
0bMP/eFQfhe4fvT77gsVVP7R8HCV34uefqHyz/vnax/niv6i/D/gZdfcdR16
Kf9oJ7QnJ1PO0QTKvxhu8t7+ZeMmKv+dcOfhj3KD/1D+M/Bv63kaOVfp/CsX
npBn7RqaT/s/jfCtQT8zRHiUf+QOtK9P01/9CKf8erDV4umJ889Qfke4f1eh
QdxEyh8Op5h+ObeAyjMvB5at91686r/63wAXZcccGipH+Ufs5HMKDD68edBJ
+XXgGWE/7XQXU3572GTT72ebumj/KwzeOCtHZ1c/nX/ch2UjpzQuvkz5v+z8
tx809FMivf8GQ535nDOKJ/JWUHt1mw/b9zQn+NH7zbWD5Y5uiMo5QOV/AlZt
Clc2ukf1PwOO2/tSfm4c1f/P8EhxqcOp+6n+S+7C37sbo3o+h9r/HDj/5LJh
PYdo/bcZVtROOJrgTuufIPiT+v4rsfMo/x14bafpGcMNNP+pgi0nhqbKS9H4
L+bC55Somp5cc5/mPxrwjSu8tBciNP5vhMdt7NtrNYXW/4Hwq6ZLOql0vmyQ
Bm/VqEk6Tv2rWzmsc6dpsVsojX+Dd/M5iwK8NBSH0vg3C3Y0HRo5QoPG//Xw
o8mfPT/QekTDD56byBkrnUjjfwqcZG6p3V5M4/8HeL72nOwxdF6YJ7QHr2+O
Nd9mSv3/dFj6qBuvfw/N/9bCnZ6xo41mU//vA7dUv7js/p3WfzfgB9kHv/Gs
af7zFjapTV6/wojyD8B7zmfNf6lP/f9UVz5HfdGip/02lH81LHYjKc1lBM1/
veHIUIv5S5Jp/ncNDpWv1lvrSvMfHrzw4MLAtjc0/+tz/bfebbp0fRrln+SG
fMIVf7pofmVnDj9etuVlO31+IPwQfLYzK7Gqlsa/RPjRdbVLznSeK3jp9m/9
5CN28yXl74WlZ1r1x9F8ykLFHe/XifKV8T+p/E1hnvGC+u9zKL8H7PfDz9+e
Pk9Qy4XP+EyvWBJN9f/Fv9dXKN/5Rp/vMvgJR/zxOx5rTvO/iXv5nM3fx+t+
PUL5l8N6LiuM3Gi/gbcP7jqvpfk8i/JfggMODd2XYEjnnyXwxd8mlzqmUP4O
WHKPtJuCCp3/K+zD+uayR+cHLTr/Xwaf0Zv3bqE9nf+7wcpnHKKSVWj8vwAL
5uuMDxtJ858i2OBShsOpIJr/tcGxi5ffEkynz/+N3Y/+Sy+14JQHzX8M4cRt
J5+MElD93wPLmm9odvFlrzeIgdPTvsZutqX9vwI4wzl+8wj6/Vw+3NdvXOI5
guq/7IF/n2eadzNkBn3+hQMfNhirpLuPPv+yC5bvOPSobCbt/52F0zuqSq6F
0udfHsPXt5fOOmZM+99N8NjD2urfNtP+3ygP9J+KJ3cHx9PnX/ThrTJ7fdvy
mC12wPoZOrJBBpQ/Er4571SbHu1Hpj+ERZIzzM/UU/5v8Fcby+ZRi2n+K3MQ
89khkhKOYpRfFw6WGxi/vY7mv9vhzHk+pw7S/JV7Gt7g+CH/wX/7n9lwcVao
eLse5W+A2+Wjpl5XpPzDPTFf8b6xP+gD7X8sgJNkXeeIilP+bf/8IGy9Yxjl
D4VXtt8bYVlE+TNh2bmhNeLLKH8dbNPz1ex2Ee1/Sh3CejHng+3UabT/Ow8u
9twwz+O/z3/ZwvfGtZ4MG077/yGwecmLqBh72v+9B//ePOeojBF9/6sG7j2r
eFGR9sPdJA5jPjLpaqifCe1/a8G3nS51Pw+g73/awEOdDgz9vYa+/xkEr4tu
jFp/jb7/dxsO5E492OhH3/+rhH/kHEx1p+9nh4t6Yb5gM35e9kv6/vNsOOO6
7fmtA3T/wwY4MMx0TxZ9v1MpAO7x2myvpkjff70FP9leOiTCnL7/+enfz48S
ubvsv+//DfLmc7ojEi3btWj/fyast3L7tFD6vpy0NWyjKfd9iTflPwb7imvn
nXlA339LhssWxCU/m0/ff3sPH403Kb9CP8/7C2cfyDVsOU/nH9OP4PV/lHcf
+kjnH1bw6TENI3zp+4t2R+EdfqPK/nBp/z8Jtha2C1HKp/OPN7BEgnd8dj+d
f/TD4x8KqZ8eQ9//nHIU8/tVxct6jtL5hyUsb7FtZMcS+v6nF+ydtHCDBJ1H
pF+FF2vHGVvqUv7XcIEcz9zLgL7//hseYpms2HqPzj/UfFCeNW69Rpup/M3g
yce9tgcfo/L3hNdUF2uH0vdReQlwyfLoB9X2dP7xEk7pXl6dvIfOP3rgrcbh
n3bvp/MPZV8+Z3ndmkWLltL5z0pYWGxo21tF+v7nAXh11bkbv+m8SHAZLkkv
LL/wg85/nsPVY/ctXZ9H33/sgjs2+U3LV6b8isfQHxvmGRapUX4TWPPxL6fQ
/8p/77F/5z+HFcLO0flPHDy6slct8r/vvxbDntGhC67a0fff2+FzTz4a/Q2h
77+P90P7ntkQPKOTvv9rBEsGPGkMnEHf/3WDL732kVyeSPU/Fr4pSDLWp++f
2z2B6yfmOFSJ0/0vrbBdpIrv1SDmPHl/zEfiMrdaXqHvPy+B7wT6tsvb0fff
d8PFJ7vbbnbS99/PwbFOIcLqPfT993zYMWfFs65r9P33ZnjuZ5+hFxbS/Rdj
AtA+dYYFFnnS/RcGcL618PsAC7r/yRmu6zm886kt3f8TBS8yWrXrv/upuI/g
0MclJx/J0f0/3+GWna4KLo50/8+oQMy/DXeIpe5m1lgEnx736EP+BGY7Jzhi
XbzHQie6/ycCvq+i/rV6Dt3/8wBe23TjdUww3f/0FQ59Jpf4woXuP5I+jvFL
ss74Et03ZLEQPi85czrPne4/coDv3l1qsTSD7j86BVuGTTiTG0P3H2XBYRM3
rs7ppfuP6mHzZ2+cpRzYfVkGw4LQvyu//PbYldlNG27vrhtd6tHH8m+FFdbG
HAzxHGD5T8K/u9Z49UT/Zfkz4YOmJ3f1iwgb/MtfC59RWvZyYqLQP9sNCeZz
TpguqvjLYw6fCw9+Nk3X9xRz3hZYx8pG5uIMZkEwHDGt4HP7Zmalu7DQwGm+
bdoflr8avjZ5zGAxefb3fcVD+Jy9Vhe/tqmy16drwnZWgbn119nz2k3wrapY
l84wZunj8MGpVWobDZkN0uGxKt2metOZ3SrgR7zhaj88+ll+kRMYT2XXhmU2
UX512HtzSa9tI3sutAF+9CSo3dmYWcMfrtw0yffkPvb+2aXC5zjJNk4V7OfD
P8Kl316dDF/J8uQJn8T81VDG96g7s2AGfGqzS3lBG3u90jp4Y9LZi8abmC18
YZfCF6GNLezv+d6EJ1ir7k+fzJ6nv4N3url/GX6SufYP3Jed+tPFlFl6WijW
643VM3VsmA3WwJwDwZ8P+jK7HYFlM9ojXf9Q/uvwdf1oi+GvmHll8MeOXSdG
NVH+/n+eVfM6X4vyTw7D+nP/rNTpY5jtLOCHF9c9UEhlDj8Mt0hdUjKYx5x3
Be4wUmy+LcsseAUf8d7/Vq6OvX9Kv+C0YS+eTLBmzy1UT/E5sy8tVlLeSPlX
wZkvVTQe2zGnH4SXxy0Zbk4/XxsPXxs4tTy/iVm6FPYdet/YIojZoBueItbF
tbVmdlM6zef88YmwVFxH9X8FfHR5nZ9LMLX//XDM6hUz9goxC12GOZypfhIP
6P6vZzBv8r7Y45NZe7LrhB2HHve0iGDPwyeEY/3QKhL/JovuvzOG6xzfC5eK
sdcL3OFtG2y4RhrMShdhcfMad5VBlP8prJFrGBc8g/IL4PnX+g7HXGL/3vRx
ERh/ouTPLkun/Eth613hE1+NZK+XdoX/vLFYu1mI2eA8/Dd+zDzHVMpfCL/M
zelY+pryt8D2EoOCloQz8+Qi+ZwXg+7ZhyszCy2BZ+wIE9OYw6zhAv8IPSSy
SIbqfzRcMEm+ulWVOTwP7tgy6qP3Z5Yv7wesvFLH5n0I5R99BvPlXTv3+oRR
/sVw4bBO3X3TmC12wvEjfz9bV87eP98zsKD9zmePOub0XLjF99P5Lb10/18j
7FOV7FVezyw9MorPeav2fFvtcWYDPbgnOuVDmQL1f46wza8Gb4c5zNxweOyd
gegdkcy8HFhywdP7XgqU/yu8T5k73LmHPdcYcRb199AXnfxfVP46sKfnww8e
4ym/Pcwb+6FVm96fvDD4ykGZe+KjmQX34d9Nw9JXraX6/wU+qJQScc2O2WJo
NOrvoxeH8xcx+86H7Z4JbZxlS+VvB7sfHTtirzyV/wk4Yli5/i4nqv8ZcPjo
7o5TAVT/P8NlSllTfaKp/CXPof4MuZQ10Z/a/xy45ljFb5EJ1P43w6EbU0wU
qP0JBcPJciG5vpbU/u/8e77GtP1uGLX/Kth9RVPf9b3U/sVi0F4mVPFu8an9
a8AdU7/ySnVY/yPYCJvvG+b7coD6v0B4p+KFxMoD1P+lwYeGcS+cLKH6Xw5b
Xj02Ppr64/TB59FeDswa6qVN/d8seGOwgf/q49T/rYe5FXWfy4yo//ODVbVu
ZOqR3VJgWe00s9nrmbkf4IZfI4SPF1N+oVjU70rbIv0qyj8DPh+0d3G/C+Vf
C0tOeR8WSP2jnQ+cPzBHKpfyht+AQx0edPl/oPxv4Y2bj/vIX6f+bwCeZaG/
YmIDs9LUC5jPO8VMGLGL8q+GDZ59C9RYyezrDb8Z0DQ6FED9/zU4fMlP1zU7
KD8Pbn/yQ/1SDeXvg7NuaywzIBtMusjnGFlNeSG5if09N3PYIfgMt3w5lf8h
WHO+460Vayh/IjytwfuGjwjlfwWn2RTvX6FA+XvhouuBq7z0KL9KHJ8zQjI7
/nE71X9TeP/r64Njx1N+D1hexXWyLP19AReevo43P3sB5X8BryyvPeA7jPq/
n3BxtklOmxKV/8RLfI7WOT+p7fVU/5fDuhdawh0lqP7vg2vMHmpVRrD2KH0J
Hv8pu3DxZqr/JXDkcLtyb2o/bh1we3T+q8BKav8Kl/mc3d/fPhxdRu1/GVx2
X+3+mhJmIXdYY4bvmx+B1P4vwG2SuYU9+6n9F8GnepMCf55gDm+DUyXHRQnn
Uf83lov57/I8b9W91P4N4W+b3kalJVL73wOnKasOCblF7T8GnjtWL2fZcWr/
BbCq3OHTZkWUnw9nNt5INn5P+WXj+ZxVU7o/jimg9s+BuXcNb1SnUP5dcEFF
UdLVZsp/Fg42bV45IYb6/8fwBPnXkxKyqP9vgsu58TtMT1P/NzoB9VcQPTSX
/r0a+vARwcNha55S/78DvuFbLn2e/n54JDyzQv5VWw71fw9hO5Ugwx76e4Jv
8HjnLMVtgZRfJhH1oz7QZmEU5deFVb+LtM2i8dx3Oxzdw7Vc8o3yn4ZfTqnY
P+455c+GHTpNQnu7KX8DbJC9dEd7OeUffgXlbVyZtKaB8i+AI3ykvozPpfzb
4LWS5y7UCVP+UDhxF++O+lHKfx+eP2P+NRkaPzXq4J9v36v50HhpJ3UV9Xlt
RVXkf/nnwQ+m3Pg14zblt4U9no4K+FtF+UPggDk5r70on9I9uG9cg/haGs8t
amCFXSsyh1ym/BLXMD43F45ujKD8WvBD3XebvO5RfhtYVa8/wkiMxv8geETA
G+3nJ2n8vw1Pvtp64ZU0tf9K+KLGykUOo6n9i17nc97LVoQu/kH5Z8Oahsr3
lf5r/xth07HVIqkDlD8AVlOxenOrjPLfgmuvVmbvMqf8n+AZMkfVOzdS/kFJ
+Pvf+5qqumn8nwnHaRctDl5O+a1hqYGDV96tofzHYOnSAM2RhpQ/Ga5Y+71a
YoDu/30Pq+6YdODRRMr/F77eeWhuVSe1/+k30J/XVrkcaaH1jxX8ZcejJY2p
NP4fhZ+7FEh6P6D2nwR37518O/Ydtf83sCr/duM7AbX/AVjBfMll3S5q/1Nu
Yj6XYFZh/YXavyWcUZleu66Q2r8XPFTf5nDLHmr/V2E76Q+PioPo/uPXsFXJ
z7fRdH+s0m9YTXxLjCCE2UItGfXNryhmazTNf8zgU+Iay46X0vzHEx4eWOsl
N4/mPwmwt0Ws0qG/tP57CY/PiUiWo/tqDXrgc+vuCKkY0fpXOQXj+dOnKXfD
6P7jlXBJZt7Cfefp/uMD8A6Vl7++0v21QlxYUP97f/ojWv8+hxu/pfXknqH1
bxfcra1ec/s+rX8VU7Feq+nPdKT7pfNM4HyH9Uu8L9D9t3vhjb+qPd88pftv
41L/fZ/mYrx2Oa1/i+EFfM+5DzUofzt88eOjqoWzKP/4W3yO8abFM7aaUn4j
uHzrz/hwyiftBpuKJy7upvfHIBYemVM9YgWtn92ewHt7/Jq2BlH+Vjh/+HNJ
kXjKL5/G58TuU7rkSs+FDOHGjrZ3bymPxm5YfPL3FSEllP8czJ8rrx99lfLn
w3r65lfq6P7tvGY4oDf077axlH9MOp/TbP0zYuYgym8An9/k/mPeQ7YfYOEM
f5+qduT5Ubr/NwoOLh2jaRdF9/8+glWNM+LTjej+3+/w1i13H908Sfdfj7rN
57gWKQzy/EL7H4vg+4t1f3el0/3XTvDbCn798tGUPwL2Er0lXW9E+R/AmSsK
nFJVKf83+MqMIZZd1XT/tfQdrJfH6MRM1qP8C+HJgf2PHX7S/dcOsId226NX
bnT/9SlYbmeDaNAFuv85C068naKRqsysVA+7Lr2Q22DPbDHsLn6+c+Xy1wrM
vtqwyCj1mZZj6P7TrfD8TpXO2ZrMtSfhJxO1bqdOo/uPM2EJ962Klc50/3Et
7LIsavmK/XT/9ZB7fE5e6QGFqi3M3LmwtJxTcN9pZt4W+MKvm64mlcxCIXC1
eOUZrWxmjbvwR6XLjiHKdP93NVy5zGnWF7qPOVw8g88Rqv7hFu5L+TXhor8a
/nV037VgE5y2fnzZ6gVU/sdh56LuiNPjqP6nw9P1xTX0PWn/pwJ2tEu86kL7
PekimZhf3R4p66FL+z/q8PfR3juLhaj9b4CPF9wa9mkh3X/tD5t+HzlhfieV
fyqc8P3d7SHbqfw/wh6DUw8Mn0zlL3wf9X9Dl5Qh1T+hmfAvv6ayxh1U/uvg
XQEOCtZ0/7idL/ztYrDMS2HKfxN+UGkv7WlH93+/gyekHjia+IbK/w+8vzx0
zqjnVP7TsvDzrbtfzHtB5b8GTrkU9WLpNKr/R+ApHuePlm6h+n8dbnxRIz7u
L5V/2b+fX5G5ctwNqv/9cPqsQOGb96j+T85G+165sqf0OOW3gM3026tN0pi5
h+F3nIqLNUOZeVdgrbz0kDETKP9reJGStW9VKZX/L/hhlPHsKenMdqo5fI7Y
jrrAH5QvfBU8JVFPUUWdyv8g7Prd+KDlf/nj4eDr58ydn1L+UnjqDAn9QVS/
LLrhPwk+egOHqf4rPeBzQlTqL3y6RPV/BRxZbrdVjtpT7X74gRgvXf0P1f/L
8Jyb8hL326n+P4OTaprElsyi/J2w2d2qsHpvKv8JD/mc1nGfJXLNaf/D+OG/
89VPXqKbaP9jL7zw8hRJ//M0/l2EpRoSar4cpfHvKbxijvA9fi+NfwLYp61J
RZ5P49+4XD7nkXilkCfNpwVL4XcJXRM9mmj97wofnT5IVfglrf/Pw1fbTAbr
ydL4XwifXiSlk0f7C+ktcM+L3W/MXrDX18o94nNGy+gcufSUxv8lsModV0nh
YBr/XeAf8QVDF9yn8T8a/hQ7tSj7IY3/efCZbQ0J4XY0/v+Ae9QMJw+m/96B
0JjHfE7OGkHYm3mUfzFsIrP5zukMuv99JxxTv3+4UDft/5yBz2y9YPUrk/Z/
cuFB5/5wH9P+sqAR3r5ZrzB5JY3/I/P4nNclDy0n29H4rwd/zFuoOWI8jX+O
ef/al9q6WVNp/AuHZWeeU5ljSeNfDpzSPFtpgO6vl/4K541/vrROhsa/Eflo
f2MM6m8sovFfB66wTW81p/0trj0sI5o940katf8w+Ki5u9YoHvX/WXDAuqtf
vl+i8e8LHBfmuvM27YfbDS3AfHpk1g/3PTT+zYePD6Q42RdT/beDHwvHWK1p
pv7vBNxiG61/ooH2vzNgm5s1N7tcafz7DJ+T2LjHneq7r2Qh5k9BIq3to6j9
z4GX7DUaqypK499meG+G+bWA/+6/D4bHx87fk/Sc2v8dOPnDUx+LhVT/q+Di
z7E+JarU/sWeoPy4yRP8PlP/rwEr3FTtWVRA/f8mWLhblHe/mO7/DoTvT+4o
OjOE2n8aHDKoMGxULp1/lMPHDub+uulG5x+Di9DfhvTLutB9+YJZcFiZcu/+
OXT/93o41fGYm2QA3f/tBx+pH9PZJE/3f6fAn9Wfqt9zZE7/AEsIzzl2j+67
rxV6ivGx5fAHT0U6/5gB+3DHS2yuo/vP18JGX7I0rVvp/m8f+HRNW9sfLbr/
/was+1Ajcj799xx4b+Gh87Zs8JpK+f/A6z3cz2T8ofxTi/kc90DZY6u86f7z
1fCR9/WzV8fR/efecKt31/szdH953jU49OLdtsv9dP85D5bxTUlRtKD+rw8e
uHpt1tTB1P9NKsF6aO+De1ePUH5zePUG1VsT6fenH4JdbpZ7D99D5z+JcFD4
6NYbHpT/FRywIW5szi66/7wXTjiwprwtge5/V3mG9ukqeSGN/nsGXFN4meWX
d7c5lN8Dvu43cevxeXT/ezz8bLmFpvVruv/4BVwrrDUxke5Lt/sJa0wx/KYe
Rvf/TnzO5/hX5ySOpPvE85bDuc+3rf1N52eCfbBEjuOM53Q/uNIl+N7DB1IH
9ej+3xK4V2Eg9LU/nf92wOXh38dc1aD7fxVeYH0V+Elm/y+6/3oZ/DNP61AD
3e8s7f7i3/e1jasL6X59gwuw0KK9M01+0PlfEWw1W8QyT4/uP26De3WeH76+
m86/x5byOYbDJlzT8aXz76Ww2t4xspGn6P7rPXDr6JisavrvhdjFwAsDyjf0
DaL8BbD+jSTPhV8pPx9u4y4p3VVM+WVf8jm+j8UzbC7S+TcH3nlUsPtPBuXf
BQ+t3LFXiO779j0LP7GfJdb3l/I/hvMS5Z0G/Xf/exNc2x7rffM7nf+OfoX5
0k7eWOeFlF8fduo1zrEaT/c/74BFiqpkrs6j/JEwL2eCjDndv8x7CA9s3NA5
0pXOPxvhnV8sjfSN6PxT5jXqw6Qm+V767zvY6cLfvltPXpdK5//b4efR7U9V
yyn/aVj68gYP+xK6/zobLopWdm46TuefDfCScelG0V5U/4fz0N+IhJ709KT+
bwFs2vz4ypTPVP+3wf6Wi6vPXqPxPxTOdDZZr/Tff//lPvwzInuVfRCN/3Ww
0vvaxS7BNP+VKkP5aBc4JTVS/Z8Hu6iGPQqh+RrPFl7B8a0poPm90AnYsV9c
+VoenX/cg0P1JmoLHtL4VwObvSiSHX+Yxj+JN/j9gbGJ9f20/tGCNZtH/PbN
ovWPDVxa7HtddxCNf0Fw51Q1s6ZvNP+9DWsMufc74ibNfyvhMQu3u1SvpvFP
9C3yrVwlt28xjX+z4aDUYeNu69D4txHO/nI5snMZjX8BcGDD3i6jPlr/3YLj
t09t8dxB498nOGlJXvPFwTT+D3qH/t80awV/Lq3/Z8FLcybHmy2g8d8a/iM7
N2NqI+U/Bp8JM+Ir0nlEeDJ8rfG2hMVlGv/fwyef3S++d5PG/79woUHX0+Gn
Kf/093zO3Yye+mMmlN8KVvl0eEelIeU/CicPqQk75krz/yRYbPTei4eO0fz/
DTxX7s3X/eE0/x+AhXivvkx6QvP/KR/Qn4qHHnowgcZ/S7j8e8EOUS+a/3nB
Kr+l52uvpPH/KrzvztFkrfc0/+XBIVOtPjQ40/j/G74pr5M4ltYLdmof+RzP
STZTxs6k8d8M3m0zf56OMZW/J7zP/uryVnUq/wR4cJJm0nBaXyq9hG1exIuM
pecWPfChHXvmdJ2k+Y/yJ6xPJ65a/ZVL+VfCwm3KSq9UqfwPwF+0X4tcUqDy
58J9p7z183yo/J/D3Zpax/4GUP4uODjCRCV7M5W/Yjleb9SSrree5r8m8B5r
f4uMZqr/++DUBFmVl/5U/+PgAmXXMI83lL8YFve6YcP1p/zt8Jb8QVZnzlH+
8RV8znLnvpJXtP4QGMEhaku0Rjyg+Y8bvHRz4vzhtF62iIUlFPtFemh96fsE
vv5B6ftuc5r/tMJeW4vHK2+l+Y98JdbTsrNVJqyl9Y8hrBu8cf5MPZr/7Ibd
T09oDTOk+c85WNV1XUaOBs1/8uFfVh7iASNp/dMMf27fJ79pPJW/bBXeP5ej
smNlaf1nANfats2JGkLrP2f4wq6CK8u/0PonCl5zaJmoKc3P8h7BBpKb91TR
fEvwHW7pbP1SP4Lyj6rmc3SuJ28rp79nsQi+bMMrPSZG+Z3gyGb5q0saaP0T
AfcHPXs5/Sv1fw/gSUdM3iVPov7vG1y9O1mhRoj6P+kajD91Gr/9xan/Wwjr
/K+lOw+nOt/jAC63mWiR5iYqlZIkkRYtl+zZzp2S7aZTwlFRlsLUw6Q0LlOX
zDFk6E46cZPMNJ2aDCONE1malklMJQ6FjpYjW9ZM3bfn3Z+vh+fk7ff7fr6f
78/v6XMh83LKLda/QPh5UEjH6z+5/6fAWe5lE9SLuf//Co8f1bfxqGP/0wZb
R3mY6X3s/6a04PNXTXvw/gX7nzWwqTjaoSCD/Y8/nGN/QrGe82G6k2CtzK6e
VYfZ//0CO3X0l1Q3sv97CjcZ5+c+4ufFTXyK/cksKnU95zVJV8FNj7SvRAqY
3xcuElWdfBbH/Mfh34y6jg1vYv6f4X6JUULuUeaXw6n5K4qun+LzjwnPcH+N
+Au9LFn/l8NeQWLL23yeorIN3uirlT+qw/NvItx27fPBvTfZ/0nhoDSNHdp8
PiN+AvebL3WTpfP8P74V9b9vWsXdCp5/TeHy2abe//Jg/+cDN42o/Sfdn/tf
PDyStvzNVfZ3cRdh2c7HWUfX8P2fR/D6FoN074Ps/8a1YT/cq/atzib2f0th
Z9/1nZkj7H+94YZ7Ww9b32X/Gwe/7l7jYs73jSQF8NK7OQuzOe/nfj08x3rt
usDbnH/zAZbHW25T5fwpM6N21L8c3/FGF9j/ecDC4F796efY/8fCBxpD59ob
sv8/D7/tlKtv12H/XwvfbpxyZbwN9/9RuLTHoWB/N99/WvQc59/5otgSzreK
c4Olkr/PbXjM/DHwxmzH7dWV7P//B4cJ3lq53+D8oz/gjvKpeUfTmX8YvuNZ
ndnDn2+fvgLnu4rK8vJXzP85HKS/4EhHMef/HIRra8zzA28yfw48Y7Le49Ak
5r8DN9b2Rujy8/wG4KjimZ7Z2cyv14HfR9bStt/zmd8Vlrh4FBhuZf4oOD7R
2bs2gfnPwKI/F6Z7xTP/Lbhptf+Z2K+Yv2/M/Slnr4Yy/5wXqA+TruyTuDK/
Ezyqm24iOMH8ES/GrlfSaA3nFdl8D3uZlwrT9Zm/CnadPZTYa8H+rxvW8zk+
w8eH/e+sl0rbevmULeGc96KyAd49rfTUAc7jMguHXVWXfxFpxf43C941mFVb
9zX73wpYP2RP0VXOD5N1wvMGM5I3h7P/036F/S/UMMSF81r07OBQnTcOfZwf
4xYCP7EbaDjkx/knGbD6hhujtZxvI5XBh7ad9mtqZv/7Ck7NPZvvuYj9v9Zr
pW3zN6ZtDprsf63h2dOTdlTNZ/8bDCu2blJNXsL8aXBl77XDJ92Y/zp8prny
8rq1zP8C/rBZfnMZ3+cz+0yJ9Vg4FFa1hNffEn65+eeUGr6vJ94Fjy+Zm6FR
z+svhjtPmJt7dvL6l8AfLHz9dzfz+j+Hh8JyxS0KXv+pneifLCa+vfae138d
3KW4c6Se8+ikIljzV2VF9Vau/xOwX+ndoHnnuP6LYZfi8+rrOQ/LphUOLE24
tCuc57/Jb5S2ASZFOmGsL5LVb8b+Xvu7ld0A738/OHSy4Lvz01j/k2ADJ/3G
Dp4fzQphYVWRLJLnS78WuN7J2k/Bf1+s3qW0/UQ6JMj9eP5dCadF2XmZrGP9
3w4fW2bvcYs/j94x2GBgOO1BNOv/FdhpS7z6qRjWvya4dsK6ZivOH5N+2q20
Nd95Z9Jc7k9PzeAvHQViTUfmF8KapZ9eKAxg/oSxrz+JL1PLZP5LsMbsuti5
tKRh7PPs0goMHrP+/a1HaRtj4lkQyf1SxRROHV30YquM+bfAzoJlWlqJzP8V
XCJo/mFmA/P/CFcmhfX9UsD8D2HFbVNjEZ9PdKv0Yr2bOGsYcv6knjGcq+JY
UeHG/F6w12+twsPGzH8E7o1sdFo1mfkvwLqL/9EQ8PH9zzp4hbaaRD+b+d/D
gk3Vbl5OzL+4D+vNPf+7xXx+sM8dzjFzcDr3E/MfgsM210X4n2X+PPj6gYUq
zx7y+tfCYpHP8IwS5n839nnOz2N+4rxEP4O3WO9ft7oe5PMb8Sa4+cmih9Vm
zB8Nq4XXZOgaMn8u7G3wXv2sK/Pfg1sbgt/62jH/EHzO+NQnPrz/4hb0o9+f
evWktjXz/xO+obh4Q2MZ8x+Ap86+Zu7Xw/p3FpaJEp78xf3L5jbssDJ4prCU
9a8f3qkVELuL+5lk3gDO1yPxgfLjvP9d4Cx5z/TvTVj/o+CBe1HtFYU8/2fD
7xTCljty1r8auP1L2z1r/2D96x0YW++qD4tFXP+6g0rbMg3xoZmXuP4d4RmP
ZPIfO7j+98PzvQ4U23A/dPsv3KK4nlLJ94PjKmHHEfuWSNYPaRecf1hr8OZn
zD9zCPUiNqGwi8/TNB1gqfJ0tNEPzB8Gr1rZfnGEv/99mXCnS3aL5BHzl8Nf
WKkET+DztvtKuMzktXNeK/NrD+P+mNVWaFHH+mcLrxjXnzfcxfq3F/Y/d9cx
+Srr30nYcuK7Y+efMn8ZbP/aRpQ2kdf/Jbz4WtKHFS+Zf/oIvr7R54Gc19vN
Ck5OTJda8/lcXBDs9O+YtD2sr9Jv4R2W1o/fTGH+Unizuezean6/Zgf8oT7g
cjdtM+0d6n+PptYafv8+Czh1YZ2wnPMRJTth31m1Cy6x/7j/DRy3ctG9KFXe
/yWwxWrFrVYD3v/t8Lwlu3XF7rz/NUax/+rNyZsVwft/7ejY/1euGqHD9SgL
gJeHeD1Qo7uT4Q3jhImOXC96RbB8/3EDDzHzP4MFFZWeItavuEl/4f4ziPY4
vbvf+v8tIxvA
        "]]}, {
       RGBColor[1, 0.75, 0], 
       PointSize[
        NCache[
         Rational[1, 360], 0.002777777777777778]], 
       AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1: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
V/ZS/WeBrfavtbnjTvX/FZz84ZIZWxmPlwxXkHHuG4XMTnCi959W4AmT0yQL
VbH+2BvBTU/+SlfvxeO9ToOZvU3RH55R/kyw51PzA2cE9P7jM5jxQ2e5iQDL
5ar9ZJxERsu9xXMp/2xwFX9nlN9rmv/Wg3PWZ/wwfoLX50eAL3w0+DY0k+r/
Ud/xY1Z9+5GC5dJ68LzNo5zDZqGZw/rLOB67P4lrd1P7nwW2/GTm9UwNzVsL
LuMumD4rmN7/nADf9GUNGPYUn6/kAfhtU+Tc1A6a/6Tg2tabXKceyq+sKOPY
sB+MK3Wj/NPBlkpbn6sIKb8H2Fbn14u81fT+7yh41e7+wu5oyp8K3vH43i+f
d5T/A9g8L+6GVRtenztogIyzW13jU7kdvf+ZAt7iYPFlMp1PtAY85lSay7h3
lP8Q+P2n1Ar1mZRfBP709d5/a07S/PcebH77r7DTmNq/4kAZ54t/MidIj/JP
Bg8OrU6p/0rzvzPYM+vwj159yn8AbPPxg31zDpaz74BH/ajwF1D/8qoAp7x7
4jxQnd5/KQyScdZ/OTiXxUaLJ4LZ5e4Xu9eg5SvB70feezZ8JPV/PnjN/sht
n4aiuUngN+6fj/UcpPovB/df/ODxmqlo0T/wwOu9x8o3UH5DJRnHujtPYXoR
5V8OzlMXh5peofx7wL1FuwZ9csdy3k2wcXjWqqZ5eP/CErCig5fuABofJD3g
gKhve42XUP83GCzjeN+wDP11nvJzwfxbi81PVdL7zxCwwu2lOa329P7zBvhh
/0X91tXh7xHiYvDaWaFRwSn0/vMn+OiplTyF/jj+sPSVZRyVPbdybQ/T+89l
4AW7bo3PtqT3n7vAvbq106sjsFx0Dcwb09mqsAbLpQXgf8lhd7764PmYXWBB
Rs+cMCNa/7GGyDhOX4MKXOj58haDa4radCIPU/7t4NDl98O/GOPfS2LAUa5P
wnweohmvwbUW02qz0yj/d/CNqpNDs0dR/esMhfYetfzvOlta/y0Ad2y60hb5
Df9evA0cebTrW0Uorf8ugxs+JcfG+tL6Lw983spKw5yeN1cOrvLnhj8IovFf
e5iM80FraedFLvX/uWCdsKG7ovahpQHgMa3ZrZOpvzOjwZa3F16L6E/jXw44
ruNznMMj6v+t4F+uBVW9y9DCkSoyzhlX65pTFjT+ccCZq9MSDhZS+98Ctl53
++XDazT+XwDL53ttuumF7clLDK5UT7AYFI15BM3gvbnMwYknaP2rrirj7Jlg
k73tI+W3Bm9LWvd8yk6sT5YfmD1ErSWU3p9zz4KDlPRXpZpi++E/Baek2tcF
leLvfaIv4BLV66bTx+HvZVI1Jlz/eLAb4xj+/sa0BN/rYo68OBd/P7P1AR++
P3XDj9n49zwBuMdO1/5Q/APMnwHO2Fbwj52Qivk/gQsCFNbeZV7D/KpqMk5h
ge6jmhD8PZhtDr5/ZqprzOIYzL8OHDh/48Bww/WY/xR4d3qHwtnuJJu+/Olg
BfuG5+6dqX2WfwSvWBnncP8//L2ZNXS4jJO1qb+vdLe4z9yZ4K0Gae3x49B8
LzDr275qf+XbfRYdB9cv6B6vIbjeZ+l9cIHgdsCURQ/6zKwD9zeLq9gwJLPP
toNHgHf8+DkwCa/PmwbuZzmxZXj2oT4L3cEXNDv8BsrD+yw5Ar5ZvmUI43Qk
5k8Fy+qs7Df17OgrZ9eAr9eJnn3LvIH5B6rLOPrH1l6TXbqN+dlgs5p9EyQH
hZjfFVy8dWpzICsR8x8Ejy+58cbcBO+HdQ98tG5kzvLz9zB/Ffh86KlCT14s
5u+vIeOUT+pRVOXj9wMiE/DpK6VlbUXJmH81WPQyzdMi+Q7mDwfbjG6bu0qt
BPMng0+cfHMg+3Eh5n8Hbg3TTzjDLsb8DE0Y7wvFPHYslkuMwXaHnIbyakv7
zFgJvv9XO2ZRrATz7wNfWyTdnCVDeyWCa9TyX+VGv+mzoAyssCBzuPvFIsz/
F7zG+PU6k1Y8Xj5hJKwfYpUDStagWU7g1xeqF/22xfvlhoGnjztwsvHVW8yf
AB7/VMEz9u47zC8Br9kUFxXzDC39Da7L/aSmNLkW848fJeOoX98sfzKlHvM7
gDvr4jMvTf2I+XeDN16cX7koFy2MAzcHX1F+/wstKQKvUt1eFHEczfgJDn1/
0+iqC5qtpwXP62+1k0oD2msp+Hzka6a/I1qwE1z+sor1300p5heCB2mW7+qX
hZbng1kLq7m6gjrM3wl+zQlrXH8FzR2rLeN83Xy2qq6+BvMvAmcbTZveOxT/
XhQE9onTyjUbjJZeBc+xbtAZtRePZ74CV7NvzTFsrMb8HeDpT74rJtTj8+T9
NxrGA70Bd76PqsT888EL7F4eG78ej5fwwE+NBn/Qvvke818Gj9zgGqSihOXs
XPC5n/53sgZguVc7+KIy4yDnGp5PoPWfjLNy9CnG+38VmN8ObLh9+ya3DVgu
9wfH/dm6+bgBmhUFbjrePKjdE819DtZKPftVdgPrly8DZwftXOauT/WvqSPj
OGw7GxFugHmktuCJIwQLnEPKMf9m8Jnhx98rSrHc9jxYYRgz0PMO5c8Gfw/r
bstdQfmb+sovZeQeEqIlI8bA9dwq3Gy3VWF+a7Bag7TOcgma7QtOung6U3EQ
2utM3/FGNzWnWFH+J2Cr9NxrqYqUvxFc4jfT/EACXl/OHAvjqeGg24O2YDnL
ApxeNeXQvyWUfwN48PTpPrlaaH4k2Kzs6iiVMLToMZj1wOHW40Jq/w1g9WFb
pqqFYjlThSXjtB865Nfph+e3NQNbWX1+9IyD5Txv8DSrkiFlO/H+hSfB5cOD
vfcdRksegi0jywRmo/F4xkdW3/1HpJWOweuxh+jKOB8dHrMXL0J7zQBLXweU
XzyHFniCzw12j5qagXnFx8Dl0+aN3LcF60eeBl41WqN6DRfNqgUvHNzeeiQd
zVXSg/pgc1ecrMTxgD8V3Pu9/4aL6jheiNzASbZF/MitaOlh8PIRp44lmqKZ
KeDF/KkpwV9wPLKt7jveY5fdqSos5w3Ql3GOxGSddJmI5xeaguv3jJ9aMhrL
JS7g00HHP/a3RzMOgkWH0nhRB3G8ZN8FZ0v2dmztxPN7VYLnN7p1Zr3B4wX9
xsk4w5a4nxq5GC2eBG5UmZJZ6EHj3yrw2b37rTti8Xys/eA//pZ7JmTjeMm9
Dd5w1Fajd8drzP8WvFd0v6ew8RXm7wV/3Ktmei0zH/MbjYf1T9ac9AMheDxz
BXhiV7KTyrgCzL8X7DW8a6z2Hsp/C5ySZrpqQhjlL+3zp6gE6xzK/wec7z3f
3uEeljMmGMD8qr+ZFZpE478jeOXXLA+PIBr/Q8EWA0vf997EPIJ4cINmT0ZY
AD4f8RuwQ5o08JE+zi/yX+BHoaVezgfQrHETYD/m9U5xpgbltwcvi619mqeC
5+MHg6X6MxMWHcPzia6DC7PXz9GSU/0Xgm8sV9LU3leG+bvBjDHr7j88i/OX
ra4h7Lceettyf6J5S8Cp+UNmauajhTvAi1dHnbmdg+1VEgs+6WEib3Cl9p8P
nr6q41+OE4537B9gpUmyqAG3cLz1GmMk48S6qBuua8dywUKwVdzGywmrsVwc
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
55T54+dW/wPn967i
        "]]}, {
       RGBColor[0.647624, 0.37816, 0.614037], 
       PointSize[
        NCache[
         Rational[1, 360], 0.002777777777777778]], 
       AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1: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
iV/Ko/7vM+zzoW+82lz2/fRGVKL/k/0j/06Ejv+F8LynJSVr/7H+KnIrXK0w
KlNUlfo/X3j08KwPqtPZ6zkJ8FI7mZy7x6j/q4KlNFVj9rlS/zesCt9HRviZ
5nbmoPlwXVSbsU0PM98cnvGmzNfgB/u8Vm94bURDy5h7rFwmDlbN/taQN5x9
vskHeEuo3M2mLPZ6zyEfW7iZNpO08zuYE5RhNaFmMbP87yz/JrgpJU8uW4lZ
3BPm/Zc6/tw7Zr17sMSDJNOFp9nfO5Z9HJzvzW0YeZOVR/6D96YN0V+TxFw8
+xPq921J6PWx7PtxNsCuz2UutFmwv1c5Dm9/oG7SJkL5b8OF/PxapS7KXwKv
/jKl7stdyt83WK6ouHSxIXPrrM+Y/zWbFQvcKb8JnN58pf9lObPJEbj3olam
ylNmzxh4RK8gsKqeOeENnFw7wc5/Mfs+Nd3w4uIlzVePU375Ly1cDbWkmlNa
lH8tnLvz3/RTGZTfFb69eLZIwnWq/yjYxfmFjkwAe//i1/Ck7X0nNORp/OuE
S2PD+Y0y7PhSkalu4W78NetUvyJrb7zV8KjbDtarx7L2EnQIbnq7P80imPJf
h6eumN77MIHyv4KnP9cY8bqAfb5MB3wreEVu+C/KP70Gv9cBbnxhDvt8zxWw
yDF/d6MJNP45wdsKPSIm3qbx7xr8/rmmldVGGv/y4DixgcUmr9j767XCO5cL
vy6m+nKUqsX43i1XXbmMOdIA1s/6stk6rJHl3w+bBo5f5+TOfj9OGCw9esKN
mH/MKi/gsMMBdzc9Zub9gK/0FhksWdbE8k+uQ//or1mXnMPK+VzY7NKJ9zMu
MbfawRLvT28y/Mk+T+YKvMW1LiNLiP29CR9ePvtd86XvrNyzGa43X/PfssXf
WP4J9S1cA1mDEZtPM9csg4/81s0e5swsvhd+rP34ndV6Zr2LsN/z5aNNT35l
+Z/B4+z+G8O3bWD5G2GVKeoZH2VYebFEA+ZXaaJ7OwtZOUcbNrEdLhO4kJWr
7ILDT3tEb4lk5bwgeCPva/AZer+gdFjhRdZXkdns9fwG+FBsqot6KXOr2NcW
7kLdF96+9swyS+DE20YDcmHs7012wKZb1JI+mLPv73kOPqHSL3boDytPeAL3
HnronCJN+WvhJQ9jX3wZwX4v8THfWrgTjNvHq59j76+3GH69/KXbIUX2ekce
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
UqP2bwSvL1TMPepL478jHCtms2o3zY/Erw2+furP17KNVP+5cNmG+yXvNKj9
/4JX79orcvx/878pKwXcKo8rv2MU6fx/OczrONi/lo4fzn74x0TF9Z8saf03
FFaIa9Qeco7Wv7Jh9y73KN+DtP4ngLlyimm1VJ/8SavQnmJmpiyKpP5PD+bJ
HRJJ96D8dnCK2+ZfVf5U/5fhFcfjs+xTqP6z4J2V8pO67lD+7/Cs1aea/OdQ
/zd+tYC7OHDvk6U3KP8y+Ku7wDiPS8f/HjjupNewdgea/wbDW/2eKIwYTuN/
Bqx+x2bdWBua/36D7y66pnbWnJVzJNZgfvmwwjhMjvo/LViiVWbUB1la/7SF
H13eKqQ3gdp/IFw8L27Gmd80/02DZc8Hpqp5Uvuvh/c0SK8uHUL5xf4TcH/f
/J4dvIfW/zThVbMvmh9vpuPfBq58Xz0ujPq3hLNwnLDyxNsmlP8xfPLYotCa
i6y9iNfCy3+4OwaEU36RtTjfT5JrqjhE6//qcGXiQMJ7ap+R2+Bn/RluF7dQ
/38a7t1SO27nKcr/CLY19CkbOY3Wf7/A3OFD1Yx9qf8faYzxeHNlus0eyq8K
u6wZvmLpaqp/S1jtx28p59mU3w++UiGefyyD7n9NhKMctvXkSNL630d42agy
v7JKWv8TXof5cfjv/Ft76f7PBbCQV0HjyRe0/mkBL/A5F+vbSPc/+8BWjzov
Np9i96vqPYSH+l/8YClgdqyAl17TGKjpof0PQiaYj8SECjy+MhfPhc1Ev48v
8qf9L2awdj3f4q4m3f/uBefsvSWU/YLuf70Px6V53x6hQvsfygf/fv+AiK0n
3f8+AIdOC2k/bU73vyuZ4vyxrXS8iyrd/78RPhoelFvrRff/n4DX/rsU0DKe
vd7zDhx6zmzqizPMCaXwdWmbr4timWv+wsfepSa632QWV1yP890kK8ugZGY9
U9jIquG/8Zcp/1E4O1DW7pQu3f8fC2t8HP/1cwjlfwsbGu6UmjqJlXN6Ye+7
22Me6lH+mRtw/hab6/p8P93/bww7XLZImGZE+d3gmMjkBK4JM/8mrPTITSnq
Le3/KYT9W5UWdn9m5TJdcE++72ERe2YT2Y0C7i9LtTfCk+j+/zWw9Ga145Vm
dP//YbghNfTrjzd0//8N2HfBXFOhEspfANvUbD4n1kj5f8PJz1fmaJ2g/Q/S
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
ndX3mB2NPQb7w8RptcVs/hXpBqf3bpkgtniA5b8J9++68WWS/T+WvwgeK/8r
z+wps0oX7NaZ9TbzDjNP1hOfH/Zsu/xp5qA18OyJwuVdSsz8w3B0k87nR/T6
1hvwmpyJE3X7mGUK4JHiLZ/mbGKfb/Ib1v0jsqwyi6M3mF/aa/B6P29W7T/m
hJXw3HTN6Nh85pqDsM0utbRVFcziEbCVY/Oa2F1DBq33Eh5rsnmCBldo0I5t
8KuR2d9MVZkjp3pjPvJB64h2HXt9sSEsnRScMlWYlXMc4VvT5+kYTGdWuQp/
NFj77Wkvez0vB35uZJzXks0c9BNe0CXTtuk8M1/yJOYDMwcsjp5kbtU/OXj/
SnWjyFdmGQfY4S7XzqOV2STk5OD1sk757OHs8zyfw1OerD7Me8PKE1rg6P1n
Mt8+Ya6Z6CPgdmvk2x+mcnE9eGbaq+iNXyj/PnjCjMpLT6Uo/yX47dvRun8n
U/5MePEh/Y4V5yh/Ezz37e/4Ph9mznhf9M+7lxqbnmBW0YEvnHqub2VN+XfD
rgEPJE6vo/wX4JUB809rzqT8T+HbEzbd0x1C+b/CPa5qhaVDKb+4n4C7dveb
8idelH8pfLon6/NkF2bPnfBMr6Ielf2U/zy8YqfkCcfdlD918PXXDmnY0+8h
Xg8LWbseH51O+UVPYTx3/TbfKIHZUQOe8mufW0Y0c+R2uOi0p5/MQsp/5tTg
9Xmbg0vo8zmP4bnSZ+U0j1P+GrhxmG32HDvKP9pfwP30Z1F4gSXlXwTvfdah
K7OB8lvDT1bq7L41lvL7w0P85/h8X0b5k+HRKT5R4e9Y+zX5DB9Yt9+mJ4ja
/4jTAu499+zKD7HU/hfCup1//z0wo/a/FR45tS6+jUvt3w82cVuT+r6THU96
CfDl7LvqxRxW7lgFNwYtCgsQ6WfH/7AA1L9X5YNaFTr+58OBOXe5EbPp+LeA
G/77Gq+TxV6vchIeZrc/MHwYMy8OnjAhNn5kH3PQB/hXRrLj6MfM/CFnBNxL
I8RzvHuZW5Vh+6zweoVoZpnNsL/4zdp3qswmnvDPW9a/PM2YPe/BZTd+5XZa
MieUDb5fZYJnxCvmmn/wzIOd17Y6MYsrnRVwt7t6KNb7MettGLTY69+SGiyf
43H42eMZEd+mMEfehu+tmzIqQJbyl8CjI68u4o9k5vyFN3o1jRsdTv2fwjnk
s0m3F55O/Z8JbOWZMUZbm/q/I4Pl30J2uFRS/hi4dGJa/OyrlP8N/H2n8TO7
E5S/Bx4m11vxoIzyy5/H+XXHcZOEP5R/LbzcSLWV00r5XeHKht9uY49R/ij4
6K+fV9/vofyF8A+t527KEyh/Jzz1gvSf7wOsv3eUCcT4lBwycqCU+v/VsOaO
WXe0otl4UnwInrqb17x/EhsvODfgjhFXVqtqsNer5MOvjdz0jkxj5nXA9kuP
+coeYa8Pmh4k4LY+dFn/9jIzfwX8QSGkMvIvc6sTfMd4q6z9UDr/D4f5b89X
1P1gNsmDVaZpXTc9wezZCvO0T1yLHMecIHVBwP06bnS3rDRzjQHslGBgMsuU
WfwAfMDi1QR/Y2a9MFhxqYnvrT4a/17Ao+6uu7tiCuX/AYucXyf2XJi5eHIw
5qc/f7+d+ojy68ML9l25rV3NrGIfPDhfdj1zkc/MuwL3G0z4cvMj5efDGX9n
fn3mR/mbYX29e5HzTCj/hIuYv6Y/rNxC47WMLlz9N+Cw80ua/+yF7992k795
mcb/i/DU4Hu1KWdo/H8GN/TFSJRm0PjfCP9t+7AyyJbmf+MuCbhHpiyL21BJ
8z9t+MzZ5fxVUazccRc848M7y+/0fpFBsFt9iqjUW6r/dHih2NUFY6Qp/1fY
Z1T9P20Ryj/2soD7IlrOPn0s5V8Ciw1XnjdcjvLvgPOKXv5KnU75z8Hq5a+1
XCUp/xP475lpi5stKX8dXFUa2nX5KLPJmCsYPxYfqClPYfZcDFeO0V+a8ZI5
gQffsTzNefaMuSYA9n0741zXcKr/FFh0o+t1LVWq/2p43dM1y6K+U/sfFYLf
87pPhflB6v/UYI/30ubSHVT/VrD6YtPmujWsnOMPexrI/zdDhfq/JLhbNcr0
IPVvvE/wykyNWpkt1P8ND8XxnR/u0PKbjn8V2OT+QFlGDh3/W+BbDV4vk+l4
l/GFnf7Jp4p/ouM/Hv7okFije4SO/0rYYcwrtWojOv6Hhgm4D8ZLTagLouN/
Hrzy8FLXknd0/JvDjUvKOjxWs/5IzxvuqLmZHrqI2fEBfK+23yjpIHPke/jT
v/FDzrWzvy/mXMX57no5GY4s9f/KsCLHUM89m/Jvgp1u2HFKh1L/5wE/eSRz
ZGEj5b8Lfyvh+x2vofzv4Ctmp+LH3qT8/fCNDU1mwZNo/jf7GuZvH+/sTtnM
bLIeVvzmnP7fEmbPY/D0DvUhKnrMCbfgUq1s1bqbrH+uKYaPRvcnOzvR+NcH
hzy0PvxBnVlvVjjam3dPn04+5V8Hbz9j9yJXhvp/d9j5h66J9Gzq/6Ph6wa7
5p25S/nfwD27phgeCKP+vxveZbo/Y3Eu5ZeLQP8Qf7Y6dw31///B+248nHLP
l+a/LnDL9y0RQjTfbY2EvVJUJU0qKf9ruHgYf3LQD8r/B54/Rv7HnhLKP+M6
+qMvN3RuZVH+VfCk/e6FE5qp/p3hvTPd5Kxdqf6vwz+WFXibd1L//+r64Hr9
h/v7/jI7tsNZwg2tIf/r/6fdEHDln6h5x3hS+zeCvTYFH5jQSse/E3wkQs1c
2oL6/2vw26ofWje+0fGfCy8zfLldVYqVB/2Cd8npF953ZuZPicT5gLZPQsJ9
qv/l8MTyuORgH2r/++G+oWMDuhyo/YfC0SV9f3Pcqf1nw8vTrzZ8iKD2L4BX
mj0J7nxE+SdFCbj/zm8Ik7tH+bnwxlH/hPN2Uvu3g8e4TN6+meYzjpejBtej
7tqe9abjPwuevT960cL31P6/w1eFXtfledDxP+EmjofOK81LLKj9L4MTb/UI
3T9Lx/8eWFlc2idHh9p/MLwg0VY2dQ61/wy474jSkvpy9nu0foM37qu2m0mW
kYjG+a7Nry3z8mn804KVTkfwbNQovy2c19FlJ/aRxr9AuFZrs2usJOVPg328
OPdz+qn/a4ClXFbVOPCp/xOLwXy37fz6oQ3U/2nCrxzWBi/Opfq3gbcl7/X3
qWP1WXwWnjfqY5GZNivnPIGfnjmbVb+f6r8WTs548Ez5NI3/IrEC7vtk071H
26j+1WFeoOFYSfo8/jZ4sUaIFr+P8p+Gt/7cGhfbSPkfwY+k70m8yKD8X+Br
UjyNsE80/o+8JeBm6t4IuXef8qvCGrNC7K9m0vhvCRs6ZJR9+EX5T8Ha42eP
+kv9tV4ivDpHYnpPFeX/CCcpn3w4/TXlF76N/j1jevDqHGr/C2CDJRPV2goo
/xY4Tj82/fkzyu8DH5OpU/E9Q/kfwssn2FYpcyh/BVwZH1F1r5/GP6E7Am6Y
1R+jO/Y0/s2FDa9sNDBKpPHPDA4y1jBfkkPjnxd842KBok4kjX/34Xlpue3T
6O8TyuEevXSbC+SaAfjyH4t/lSvo/H/OXYzve2NDP6vS+f9GuPXlukI5X5r/
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
9TyjcdT/fYQHGmx+LT5G/Z/wO+TpeTZkvTZ7/5oFcN66mPWaqrT/YwucPeb6
tDsT6fn/PrDlrH1D/Lrp+H8ID2tad3jfLur/KmDOM2WjSm/q/4TKUF9fljwQ
peebc+bB9/WDr+kcp/7PDL7oUGXmZEzP//eCM+3VWr8kUf9/H/YvzbXTvkH9
fzkcVZYwuUON/v2PAXi9wt6M4j7a/zKnXMBdKR89Xu037f/ZCEf3524zo/30
nifgVxcqIu+VMSfcgSdJ2+6Mvk7PfyqF037JdLTQfn3xfpjbMyProx89/0nx
PcYjiZEOIqm0/8kULtNfMe2UGLX/o/Cf2omapZ60/ycW/vFlzLG4Xtr/UwyL
PYl1DO2g+u+FdZTaJS0WUf3P/IDzv/MHF19cQ/2fMfxE8vWnvVtp/58bnPZ6
nbQjvX/rzQ+D+2ueBieK0vPfi+C7dzyLLD0ofxdsuvWoQa4q5ZetQH++ytbU
tJPa/xqYey3xUfF5av+H4ZDp2vFZF2n/byRc1MqLt31B+Qtgd4Xn8v+f/zfc
66L/rvIN7f+UrsR48152wRwp9n2KV8K39cY2pWZR+3eG3ZcHHOa9ofwR8McE
Xc9J1N/zXsJjfp+8e/MY5W+DbyzWVJlBzzvgT60ScIfr6cfmjqHj3xB+GPZU
WT+G+j9H+FCyo9zzxdT/XYWTglf4L5hB/V8OnBfA33klk/L/hH/YbjyTvpDy
S37EfPGwawu/ho7/5fCPqpDMtKXU/znA/IAnop9n0/EfAissevZLzpDq/zmc
ajEzXucS1X8LPLbG6X6RDeWf9AnlAYXzDRQovx48JfDaDmV6HhNvH+xUvnO/
2Hbq/y7Bi+Mn/XV7Tv1/JrxBo69+ewflb4L3GcjF/F9Ldx4Wcx7HATzHuqLG
LUJFdpc2tUQ0yUSFtseUirQSlVuSLLqMFdJlZJGrJiVXttp2UY4mbVamU0hC
I4VhSnQQYd/19ufrqaeZT7/vfI/fPJ/37zvm2+sNfIz6DuUKKzh/iS3h0toC
nSvxrH8lHOH7xFfgy/r3w9Wzp232C+P8fwW+W7LaIVXB/r/n8NvmtMSuWex/
EzxRiwZ7a62/ncf+x+mwQ848gRX7y2Xe8Cb9HSU92M9YGgMP8thUObqa838W
HO7hHC0q4Pz/DPb/W/eOQpv196tWix6ntE+wY3+ydCqcdePYBQdnzv/LYK3R
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
ixHHv+bnjryddi2/AJXV//6V5Gc=
        "]]}, {
       RGBColor[0.571589, 0.586483, 0.], 
       PointSize[
        NCache[
         Rational[1, 360], 0.002777777777777778]], 
       AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1: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
23t5iv8l3CVn9MrwNcXfClcPH+V8JIPmPxVmoL3+XT0oLZzmP/Xgte2fO2Ml
6P7fDZ+4NtJs8XmKPxz2V06fJkbjYd5zeFG0SUzBe7r/m+Gjow9Y+D6l+3/U
TLS38SW/BvvT/b8Urv1p5ZiuTe3fTvjq5j8lnQJq/0Lh0s2eSiafafz7BDa/
vPiz5XYa/3+BV039MKJjDI1/ZWYhn5JrEPXbRO3fYljOf1/hp2d0/2+DVTiP
5wXr0Pj/LDw30Dp6vA2N/9PhlZmH45+to/avAS5O59Skj6b4pbRQ/o5/rU7k
UPwL4LX1zsGK4uw4zxGW3RztaadI49/TcH2PkcW/lRT/A3hVf/ulqmb2+8sI
4KjNHx9ZOTNzhmsj/71+1u/sB5r/nAufeKQy+VsjzX9uhhe2cSVP1ND8TwC8
rvyi8aQWmv9KhWOFVxe8rmXza9p1sM2eJp+wJvb3DsNmY3wYsEa04Qj7e/5s
OOXctomDfrDjGRvhpQ6V2atpPrH9JBzcmmeyajbN/yTDcytUDrzYTvM/1fAQ
N25Pqge7Hm/oHCF3fIrGhr44mv+cBRtXakmryTEL1sOrN430unWd5j994cSy
OIOp3TT/mQS713d/iRxK8VfAqlpPTCfPY44epIP4xXIOLbSi+DXh90pj2yre
s+8vYg1HhI69dnE9szYPfhWz/krBKYr/Nqz39d6m5Aqa/y2FX/S+d97mQPH3
w1PrY6f/NGRunz4X+ZG+/iPvqez3VV4L/xflIT71L5uPNz8G96k0zWqQZL83
7yZ85syY72KqNP/5HhaLDvMyOETzn3/h76uXzj4hTvOfU+fh+x5dMbZKSPPf
5nBfqFds+Etml8Nw4EL/0wcnUvnHwRNjuq/bBLHjRQXwyiPLl7yi80V6YJM5
5VGqthS/6nyM5880Ff76SPGbwDMi5ryL96fy94QfynWaHh3OnBEDd0j+dP+w
geJ/B1/vu/PR1p/mv3/DNv7/vndQvObKC/B9PR65cjpp/nsNvKdstO1cQyp/
D9isPy83M4rK/xo8u97OYNwMav9y4a7cm4teqVH71wHPy70qMofm710mLET7
teupgRmXyn8l7LvjiVOOLrX/rvCl0wVnrPcxi1yFw2Xv7ZZSofY/Gz41//Y+
xSB2fzm0w+9HDO3VvE39v9Ii5EsjTldn0/xbhgGcUZ/odDCB+v998IPz4yra
+qn/j4BTfVPyMyKp/8+CncWX/dhZS/f/N3iI/Of9dyro/h+zGP3HkrdmyyQp
/+PCHw2Pmn3qp/xvD+z5b/a3zlRq/y7AhhEWnhO6qP3LgGUy0tecpfnL6K9w
f2NWVzj9fZH8EiE35vqTPcWq1P/rwTbOL8eNdaX5Lyd4zC2R1+NmU/57Dj7s
Vne5cjvlv8/gnAfuEdbPKP9tguOdi9c7FzC3y+oKue8OGj/Lo3xdWRf+cG1H
VEwH5b874IB1BhoBipT/8+FRmbt1LnVQ/v8Y/mJfpd49ncY/n+HN1kdOnZxP
8z/SS3H9yGWZY5Jp/mcR3NM3x7ViC5tPcdkK1wxaO2rQOOboM3DUx8qLj2n+
qeghbGjze3y/Gc1/NcD7fdRny66m+a8Ry4TcWX9yZ1y1pvmv+fDag9xic5pv
4jvAJ2XVlo2MYd83IwhuVPp57pQzc/t92Lv5/rMsWo9UrocVbhdWcCj/MpfQ
Q3tXPUPKzojyfx34ycaX6RNPUf63CS6YI/tZ7i7lf/6wulvq0DMBNP65B2t0
/BSzfkz5Xy2cOa39hnsY5X9iHCF3g8vz95cvUPlrw+mz3gSZFlL528L1sT5J
L1yp/zsJH5TbOkk8nPq/u3DzNfOeP6ep/6uC44bpPBqvQvV/CBf9i1HvmT2d
1P/NhJXiaresyqX+zwYOlzJIOHmI6r8PvKrrT31ePNX/RNjsmqmBFs3n8srh
Z9UjnNfrsvstWWQ5xqMdwsmd8swCDfhbr3DMYX3q/6zgpzbdRUUK1P95w7NW
ni3ul2XriS7xsFbknGDu9VIWfwlsMDZWcmM6W18s6oPL1Ccfv/2brW+KTNdH
/hI598j4q7T+aQk33BrafmQVO9/hKDxvS/L9ed60/nkD9pUo62+ToPW/Ilhz
vGWuRg9r39v/wPtLz5nIf2TrQcpTDOCSdw52MtT+m8HdGoP+jqpix3lecKZM
ef2GYna95Fi4f8tvyx/jmQX58OH1Co871jLLdMO5dsq8s4fY33Mmr8D447XK
uDsizC7GsErz2R324rT+exC+F+wyQ8SNHS+KHjheuShQMJdZ5B0sP6krPzmD
WbsTDh+W8fqLMvs8h0mG6D+n/a4vvcDMXw2XeAtaD/2i+N3hQW2Srj1fmNsj
4ZZqUf1N31j7rfwGtsovC2iuZ+29+U/4YPJ9aevf1P+PX4nx3BWFx+I/qP03
hM00x/n9cKP+zwWuNwoxaDhC/d8VuLt/Xea5Cur/XsPFt6WKH1bR+vd3+N/8
v91Wf2j9b+wq9Fe9O49u2Ejrf/pwqlnmm/gplP/ug6ueFkzq6aL+7xKsZ6OW
/ekzO+6QCR8QyTj5gNaT+UK4uvCj4qXn7PMzRq8Wcpe83vFV0M7czoFfzL35
Uzyb+j9nuOTwpHZt6t/Mz8MeGkdu78yn+F8MHH+/6vSabIq/Be4Lc1DZ30X9
n9wa5Mtq/HoredafySyD992zOPfEnZmzC74ueaZgayqNf8JgUw19ueCf1P89
he8O+lU4x5Py/0a4r7rNQVGc+j9ZI+Rr6ye+6xKn9b8l8ODF3p0N+2j9bzv8
xuLzqqFmNP4LgW0fmaQsOEX9/yP4pfJF3pRZlP99gl+Xb5wevoTyv5HGGN+7
9s+6sIjyv4XwsQa9c1rfaf13C7w9ou/Eo720/hkM37jPbwnJpPXPNDjZKX3Q
XMpXZD7C6xw8uhcn0P4HSRMhN3udolGgO7PLPHjxiYBDGSWU/9jDO8PqZCUe
0/p/IMxJ+aavq0Hlfx/uXiz3wO4blf8H+NJ7LdFiP8p/xE2F3LC7Q960TWGf
z58DF6iW7RSh/CbDDv7Rnn9FdBnlP6fgNGMvgQmf1r9T4G+TWrIPfab8pwZe
FDDitoQr5X+iZkJu0+DwfjkN9vfJWnCwubiK0TNmwQa4rmqERONNZhk/mHPU
8NdyXSr/O3D11i0+nsa0/l8Jm3poOx7OovIfbI76ZtfSlOpI+e8MOHOiCP9R
KMVvAydJTRsnWcWsfQLmFftrnKug8k+AV3Y5an4OpfIvg3Uf/pVYk8Oc8Q+e
qf94/6yDVP7qFsg/LjWXqepT+a+DR+6JfVhC+w/Mj8P6jhzDziqK/xbcuLcp
4mEwxV8M29csGJd/keLvhRcva338yZTin2Yp5E7fcTtgQx7d/xbwFSe3lU+6
Kf89At+1K4nXUaTyvw4vunOlbXI55b+FcPFhbxWZU5T//oFXh0SmOz2k8Y/a
WrR3/46M/32d9n+YwjELeg/eVKH7/xDcsPRPyOjVVP7/wbOHtw5S3En3fx6s
Z//DOXMZlX8XvDXd6V7qdCp/lXXIZ+SuCfxovZ5nBPulTS7bLqD2/wDsMXtk
/g1Jqv9RcJzh2HUzK6n9fwv7lqVa5PXR/odf8PO/N7vaNaj9m2gl5Bqd9Utf
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
86ehv85e1l0edM/s/5oAe+g=
        "]]}, {
       RGBColor[0.915, 0.3325, 0.2125], 
       PointSize[
        NCache[
         Rational[1, 360], 0.002777777777777778]], 
       AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1: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
FteWZaXYs/4fCA8ay13xiI0/+RFYblZjOayY5b8NPyv31ZrMfm/wrfV4w8wk
Ke6s/xuMQz38ovPzRW/W/2fCbo7LQrzY/rKNsKv7GM+v41n/T4OfHnp73/89
XS+3DG4cE6Pzzoj1/y/wxbZ1d9uZsvwDxqPe5z3oXO7M+v902NbtW+kUGzb+
/eGGzUsP5tmx/p8Kt9XceTN7FMt/Aw6vTVA+VrP2V8M8i9hOumy+JOk3QcUf
5TNo/pb9rP7bwSEzMhZ7n2H1fx1cd+/jE/cUai+DA/D7T4d/JfRj878SuP+G
KZbz2HxQ3AhLrb+tymXjU9bbCvOZ67vtBFNY+/Ph8Lk5YzjTWf418Pst97qE
FbP2T7T6T3uL5HDCwsfaBwtY+7+HF0/b8upeNGv/ntZ4fo7P1o30YO0/Beaf
TZ4aaknmrYSNT8zLSLFj+ffD1v963rhxgq3/L8PD3/1I2vmJLH8DD15cPael
jKzWmYjjjXl0PIStnw0mwlNv/OobFsrWf8vgvRXFRY53yGIJ/GZpskftGbKs
EL472Hpb8y22/q2HlzWPfDVrAlv/ak9S8ePM/hbo3Wbr3wnw2uDEm+93sfWf
D3xoDmf06ky2/ouFQ7q97tbNnq1/z8N72zur7Caz9W8tbBLlPHSUP1v/dp2s
4pupZXaWg1j9Gwv/qYtbENTA1r9C2MfVJabSgOWPgQ8qXz1tM5zlL4BXfO2V
YXqSrX9fwgbf8keeULP8naeo+BJxcy/Dzyy/BWzlYjt2iYrlXwgPcuzcZs87
sjIKPp1lOmvNWpY/H442+LnXsonlfwZn3vTu5hBK5xd1sMHzIXpdn66l7P0H
D3YYM2ZwoDNb/3rCGxI+VsaPZOvfCLhpXS/Lt1xW//Lg6hirNaFCtv6tga9b
jjDL/P/7j7Z8zJ9WB29S6bD6PwrWuHn3kmcqq/9ucPbACHtjVu8NtsOlS96Y
jzzF6v9JeM2r1fv2Dmb1/yF8RFjv9C6X5efYoj7VcxZodGLr/+HwZyVH+vgH
yz8fjqrT2sjfQ9ttwuCsbF7qSFv2/isbNjq2KX+UmM3/7sFnvocJAjTZ+68W
eKVN57EpHcgc46lYDzUPOfXsEpnnDCe+cN/+1YUsDIblg5z78FeTJVlw1dOV
P8eOYvNfBTzkiIfbA382//0FTxzh0XXzeDb/HWKH+vJg09G6r2z+OwfukDY+
8PZUNv/dAv+4ceOBnQmb/2bAQT8qXr3VZvPfO/CWH8sGWfx//fMDjv/ZdfJE
dzb/NZqG+md/ofGohM1/neD6mn7OC5pY/k3wijltp1wMYvNfKVx81OhjOJu/
c27DyQeSzdey8/O+Tmtdj/DNFvxj8399e6xXau2WLvjN1v8z4G8Nc9fPeEaW
b4Czk+6/396N5T8Eh3GnWKz7w+r/LVjZp32kOVu/CD7DOg+H9g9n60Vx/+n/
mV/K7OGR3PaPytj7DKUIlgy47dReyvKnwOOvhPU7tZOt/0rhvjXHK28Vsvcf
TfCiRbMmf89g7z/6OiD/wsV53l/Iiqnw+jM6fv0Ws/nvOnjjzrq0gdPY/D8Z
Lt8f8vo1m28Li+G4qS57b41g+VWw/laz+pU5LL/uDBW/l/fp8/PY811t0+ri
bwuGzGDP/9VwxPKxayay+ZwgARZrBXfWcmD5r8KR45Kvlg9k+d/BXktCO71r
YPW/x0z0n6HKtrVs/c2dDMu9Qw7l3Gf1fwUcNuLAQeMwVv/3wZka5n9HNLP6
XwTnf2z8EnSR1f8GeGc3T7utLqz+6ziq+KqrmfXjbFn9t4an/rDu9W0mq/++
sFNaVHOYgD3/4uCn3+P3mJuz599FOJ6b6NluGHv+1cFbcvRSOrPng0E3J+SP
/TIjlseef+PhiZUT6xTtWX5veNyzdqKhQ1j+3fCbnwNj81xZ/nPwaIWWz+sN
bP7zCr74OWnmlzFs/GvOUvEf5T+6mC1i9c8SPlQRKFTzWP1bDPtMrBgj02X1
Lxpe5RnQqfN3Vv8L4LB2zY93sfeFvBfwj08bNT/Vs/rfaTbml44Oz6euY88/
c5iXqtWyryOr/17wJM1eS0wGsvofCZ9++CinnRfLfxp2K8jOGnuN1f+ncKHe
75qSFaz+tZ+D5/uBb3UL77L3v2aw7s4HxmZJ7PnnAT/sd7TxqZDM3QF/+5We
O/INe/+ZC+t5tCys47D8j+HN2t86F8Sz55+GAOurk7Kkh+/Z828k7H+saGEP
KcvvBj8/1CDqkcLyb4OH/drd8+snlv8EPPDuvON32f2SPIDLyptLV2uz/P/g
lc6PAxN6svwmc1X8o7z07TV9WX4XeMKGM+1nXmH5Q+HrX9qvLp/O3v8eh4sr
u69Ka8fe/1bDmy+N0Qz+yp5/f+b+5/02d5gz1kcOwbbZ7P7bzIXHyF5+1vrF
nv9b4cfpeVdufmT5M+Gn/zo5Zbdn7X8XTrykPy9kCHv+/YJ7NJsdk7qw/IPn
qfjv/p7wNjjH8s+G15m7FD8PY/k3w6vuvt4TP5s9/9Lheznfh05cxd5/V8De
r5pSqrLY8/877BJaNivqLctv6IL1Q2Pp5edLWH5HOHmdfU3GUJY/AD7yKW9p
F0f2/DsM/17Qa4XJLtb/y+EhN4QDkjJY/ma4g+W+r6vFrP0Hzlfx99m5Dare
yPq/A7zjb+qlmaw/KtbD9Qb6Gd/CWf5D8G5Z/oNxluz5fxOel6lTr8euR/gJ
Xh0WsHd6Bsuv5/qf/iGfBmckW6YbsPmc2g82fb+i41fW3gYHYbFcK7W0nOW/
Dl9eMOJUkA+b/3x0/c/3GVkfN9QTw7zTrn6s/W3h1I3WdbEvWPuvdfvv/C8J
btn2JjWdzR9F1+AOPax6Kdh8RfoBPh9dxbPIYf2/lzvqkaDc8zsbjxwbeK59
/+7abH/eKtj7UNOviGrW/vHwjrJ9otj/9/8rsMmGXct7vGH537r/Zz6n7u6h
4msaXxPzJ7P+Pwk+u7tLVgHr34LlsDLq6b6VWqz998KxX37Os+rM2v8SPCDj
lrlpH9b+r2EXo7HBndn3FC7XE/Xz659l9aas/a3g7OTTPdI6sPZf6vmf8SLd
A4tGzn884wLLfwH+vD662DCZ5a+DR2upUspZf+dpLcB8ee0fl4m2LP84WKjz
9XI0W+9LlsAlVdlnlaxeyXfBh+Nea2XxWP6z8ORtH6RXtrL5nxIOVnd7uecf
re8FXbxU/K3lH+4K7pLFY+AvHu0cT7iy9f8i+Oiebmd5LmTlTjjD7e3+6iwy
90zr9uJh+Zp6rP49h/W6V3XamE0WdVyo4ns80NRaOZIsHQ33OdpVozaLrFgA
lxlIy77PJXMiYf+xWRH83WSeDE7/lqfOrKHzCZ/A3Ib6DpW+7P1Hu0UqftfC
VL/l+iy/Kfyo+rHCcx2b/7rDE8es2XHOiOUPh9f0P9NwWsXyn4LzL71r9tdi
9f8R/Oe4W1mIJav/bRZjPv3l18jPm1j9HwGHnrBc7qHN2t8VtmtRL6j0Ze0v
htcPOPLj02LW/jmtLpkecvEtG//34ZxOATnT09j4/wsfs2+ofnCAjX8TIZ63
rm+7l1ax8T8PTh61bka4IRv/IfA+j7weVqx+So7BNqa5pvdusP5fBfcMTimr
YP1T/RsesvPAoPAprP8PXaLinxpjMizbiPV/AfwiIWDeYQ3W/4NgaYnzuyvW
rP8fhUfou1/VYuNBWQnPHH44OOsBy/8Tlrm7D9z/ko3/Qd4qfveJJjtP7mTj
fxZsZ7v48ug4lj8Q3l8iSz4+m+U/Ah84O0Xm25HNfyrgP71TPP1ZfeV9g29e
Lb+QEszyG/hgPvR7RPovCcs/Ew7e9mfvAFZ/5Rvhlpr+kz7Gs+dfGix2D+xm
4MTyl8GCu9GyNex+Cr7AdzyD7PvuZvkHLEX7+AUtvXiX5Z8OD/jbu+3zApbf
H7b10bOuzWP1PxXudqDmwEjWfjY34Jt2gUYNk9n8T730P/M7aT9fFT/A/apK
I5DN/+zgL4cFedPsWX4/uGvZJKtYKzb/OwBbZ2UeL//B8pfAl9enja76wvI3
wvfdKo6KO7H5X+9lqPfyERXHx7H5Hx922nTNa85E9v1zDSwYamPcTsrmf4nw
ys/2/xxWs/cfcrj6esubTwvY+4/3cOmMJK3pmWz+13M55k9fSzlz2ft17hT4
7LYdox/vZfPflfAm7odhs9j7PNF+OHf2p5gGR5b/MjxvrPiGRheW/83y/9wv
TvcVqC+8N8nhoSz/RLh7sv1np2o2/122ovV5ZLg1bjB7/yWBn9a+sDVm79vl
hfDFl+LUjwXs/Vc9vP3vmQS7O2z9o71Sxb9yytz3fQqb/0+As7WfDY2tYvNf
H9j9ocllEXsfKIuFT4aHiGrY9xflefh+h6wsM/b+nFsLb9StXr7oC8vfdZWK
f/BtjWDsZvb+ayy8UPDRJr2G5RfC5aOGX9Fl908RA+//njs60ozlPwsPXjop
a0AQy/8Stv1SVLfnNsvfebWKb/kp9VAZ+14psYCtvprYuqxi7b8QHlU02dKX
vV9SR8FhfhNOL2Tfrw3y4TaCyPg3rL8InsGje26cJ2T9T9xhDeZfcTrjHluw
9ufB8eE3Jzt9Z/3fE356XUMjw471/wj4iE5k+tNI1v/z4NEN06P82PxCVANn
Fo8OV7D5rbTtWsy3O91XL77Knn+j4Bgf9Z7pHJbfHQ54dTCugtUD3nZYvENz
ddkR1v9PwlF5FqOLk1j/fwh3611yY7orG/+cdbh+jfa//I+y8T8c7jKgu2rC
ajb+58PrItN7nPn//C8M3qvn0t09kY3/bPi6Z8q2Cns2/u/Bz/UtnDfNZ/lb
4Ko7ETWyQJbf2A/P83y/5pfs7xFsnOF041EJE1+x+h8Mxx0cYmjahrV/FvxR
u9T0Qn/W/gr40+irhb7s/nJ+w0dnzE3KVLL6N0SE8bzwx+4n11n+OXCyUZi0
/UKWfwtsnSg72NWb5c+A9Z9uW2fC3seo78Dz/NWbg9l83OAHPP/fQMsEth4T
GPlj/jt3WNur7O8vxE7wlqHHrwx9yvJvghdrp3vksveNSil8TiH1PKPL+v9t
WLXo3KtRrL/ZfIWfhmy05G1m419/vYqv9eek1ju2XpPOgO9yL1m8qWD1fwMc
6h1+dxi7/5w0eILN82n7r7D8t2CnLR9k/Z+z/J/hH94mNl21Wf/vvwHPs/V5
p3uyv1eR28M+/3Qtx7D+qBbBt3doXh8zmrV/Cnw16HrR+cvs/VcpPH9MQfxi
9n5T3ATzO8SOyrKj7xOyvhvRnv51keML2PePqbBar8eiLT/Z94918J75ko8X
k8k2yXCBUcCBbdNofiEqhjfKM8dUzmPzHxXc2yDHXt+VzX90A1R8x0/mJRIP
2p/Dh98bWb50ukzH462GB+ypDXYJJQsT4B3fsveel5MlV+H6pnHD27Ht8nfw
9q8dUq7rktU9NqH/dHeyi6skG0yG/3ZrXL3UhyxYAV870enxlnw2/9sHf/Ce
YLGwO5v/FcEfO+R/XCRm+RvgrRqGBVk5LL9OIOb3p7uu8TzL8lvDSUr3oK2V
Xym/L3zt+mC5fjv2/ScOvnFh14mPcWTFRTig19ojeXPJnHp41WMRZ9YSMq/b
ZhVfR/0iYvRJsnA8HPGv5OaScWSJN2xarH1AZEqW74bLx90Sa1+i86vPwVzF
g0iOOdngFTxB4CnvYNZM+TW3qPjLBS/mrwohiy3hZ4fnfV93/jPlXwz7JN8b
v8uTrIyG//RwWmPTU035C2DbHFu3JkUj5X8Bn+o80OqFFlnUKQjrnQsVXr+c
yVJzWDtt0U914EfK7wXfe/Bax+NlE+WPgnffit1u9Zu2807DM3qufZujIAuf
ws+nbdO850uWtN+q4p/WK2t4O5SOLzeDs544DglSvaP8HvDib16qzEvvKf8O
2F4r+OJwe9ouyIVXzQn2HW9K28WPYeGtXl+eHP5A+TWCVfyONyNGbFhP+ytH
wqpZE28NNnxL+d3ghFupQ807v6H82+Du+h75A2MaKP8JOEXc2DYltJ7yP4Bz
Bzra3BhVR/n/tf6+s46TZA5t5wwPQf89/fhvxW0yzwUef+KU8ydXOp4wFH7J
b37/wOM15T8Ov+i6TDUklCyvhj0fRV+KjyGr/8DeJyvOqPhkg2GhuL8JP3tH
3VRS/rnwGe1LshjnV5R/KyyOS3Y4fvkx5c+EM9dfutAtmKy8C5dunBRnfeMR
5f8FC/1N9XrlPaH8g8NUfMUK8d+x32oo/2x42vDPO+uWPqX8m+HBnAVz+0+m
7Yp0eGRPk1lpA+n3nDuwuEuxYlo2nY/3HXbd7r1u4xHaLjQUY/7x91HNTQVZ
4gh/jVnkHjX9OeUPgC0+XDaaePIF5T8M6+4rsi+Z9JLyl8PaQ3S/RGey/M1w
96TMqA1TaH/xwG24v6vPN5ZHkmUO8CTjwXP3hdHxlevhVbmW3nNT6PzcQ/DH
umvBGjGUz+YmvPjB31GPlz2j/J/gP4t3pOzvTpbqbUc9nZJwYfpB+r1iGvw+
o/7dtme0nSOCk35JlSmjybyDcObP6Jufj9DxhdfhiklfLs1xJEs+wsuDap58
GEvXK+8TjvXjNnnbj7n0e7UtPOLUvWX3FbS/wVo4guPCvxdO2wVJsM35sW28
kmm7+BqsnTLQbfZu2i77AIeOv9g7/Se1t7LXDhW/1zrTHT6B1D5cG3iWpDkw
NfMh5V8F2/v55Htp0v6ieHinZjI3qDO1t/QK/NDvku26kXR8xVu4/bGUaCct
ah9Ojwhc/5IZlmuf0f3mTYKL7NbE3d5I+wuXw4flff9Nn0DbJXsjWvu7XFer
hO6n/BJsMjF8YMZblv81rN1nzYMOrH8acCNV/CfyNopewirKbwWPn2TbqZ1H
AeVfCrep+FKol1pE+ffA7z8vL688nU35L8DDP2c4Jf45S/nrYO+P8++8PFZI
+bWiUA8jX3oO2EjbRePg5AtPpOXuFyn/Enh1tycl/4JKKP8umN9P23jt9POU
/xw8Tfc119rmCuVXwl+GW5mERFyl/F12Yv2rOftWi2M+5R8DWzhtft5/3C7K
vwgOmn7w8pGTpyj/TnhyuIdTccmhKa35z8C/QnZNviYXt1rwHL7ZJ/hw/05J
rRZ3jMbzJmtVRMf1pa2WjYbvBHR9NW5leauVC2DT2UdH2fy602puJDzet1CY
uryy1TYyOMZiUtX15setFj2BJapjW6cNq2i1tF0MxtudxR7ePxStVpjC/FcB
wfGv6HwcD7jyw9INJzPPtJoXDo8ecClcHpLeauEp+ArPrGuRDp1P8gge1VRT
H7m6utXyNrtU/LqS2J3amg9brR4B99xjX5Scfo/yu8IWIXVzlKfp/AIxrLKO
dp4gojziHDg/Muu6xLmK8t+HO1ZkTD0VR1b+hf0G9ekdl02/55rsRj0L1j4w
xJ5sMw8+dnxRQccCsigEtmrOaXpneZvyH4M3Lz3kM3TXTcpfBbc4GeuIdpdR
/j/w0osuunMq6H7whsaq+ENv9int+YcsFMCGb0w7GtreoPxB8Ia3dgFPTa9R
/qOt2wfNGXfn9wXKXwlfEC4vFznLKf9PuHCja2h3HzqeYNAejFe92JR958ji
WfDoVY95uePofsgC4Y1TFAHGMtquPALLjZ2S9HLp/NwK2Oy89j2H23R+m2/w
CatIs1WTySKDOBU/ctlzqwE5xZR/Jlw00u+GGyeT8m+Exy3TuuPw9jDlPwwP
vt62XLpQRvnL4BuqV3rlcQWU/wucf2Fm5BOdeMo/QKLiz7WNOyEfKaX80+Fu
66YvK0o9Rvn9YYvqE0eyNLMpfyr8W0urZYH5acp/A27f/8W/FkuyWA1rJ3yf
6r+Xjifrt1fFX+BoaPP7A12v0g5eath052HjccrvB5v3ip+kkZNL+Q/AWWVD
HE/toP1FJXDZhb1G/yJPUP5G2OFrYvXfZzmUv/c+zMdW5vpYvdhH+W1h2wEv
zx+zTaT8a+BP+xdtXmcWQ/kT4QtLLoVEeNH+Ejms9n1ReW/TfBr/7+HEsyUc
0eNkGv8996M+7Qz49HK9lOrfFPj5+G495kyi+iBYCX/87BlXrUP1R7wftjiX
8NAk5QLVv8vwsuedvpr6U/1SvoFdsmYc2iC6RvWve7yKf2l2/P7tadep/k2E
65rHqDuvzKH6twzmHH/zymjGSap/EnjUdPMPTSOSqP4VwudddS12GZA5r+Hr
IS777XelUP3TTlDxHxWPCDCKDqP8E+CaJ11nbF24l/L7wG07jj1SY7uV2j8W
Xj9vj2/hvkhq//OwVo/jRicesfpXC1+NSd266PgRav+uiVgfHfK1jL9C91s8
Fl6vn1la3kj9SyaEF53vFq+Io3qpjElsXY9a7+nxgPbnnoXNCk42HvudQu3/
Ei6z7mxp5UDHF3VOwvwhfm30bl3qX1ILuLi7mUWBE21XLIS3eXfvWnaW+gNn
J3zH9u3VvtNY/8+H2y0c+bd7Jo0n4TO4vvn51tdfrlD+DskYXx51euc6UD2R
8+CyhHbzk12vU35P2M66qf1QBxq/BhGwaPtd6fSyEsqfBy85syx79jWqD+Ia
WP2L+yjKkixrewDz1WONXySsXihHwVbVcwK/BNyi/O5wQKGu+7yDVL9stsPr
9uhHR3Wkeic6CfPaDdzX4zs9P6QP4Z0OjkOjk+l4Cs5B1AtOlaZtKF0/ZwR8
JHCexgQF5eXNh71Slpou7U/bhWHw3z6Tbw35Svkk2bDjE1Vzu0jKI78HV9nY
Dh/uSfdH3QIf1+Y1VvFY/TNOwfzjUkFv4WZW/5zh4lUefUKi6HjiYNjl3VO3
V23Y8y8Lfmfv22VNMj1vlAr44DDxwehqep5xf8MPjlSJTY9QXpshqZhv5fvX
cJ7S+URz4N+186e3/3OV8m+B11S923bfm/IpMuDOv9sfmh17mfJXtv7+mkm5
bjBdP+8HrJynzTfKo98LjQ5hfK8Zte9wMtV3iRNcpJUdmJ5M+8s3wUtrPJvL
POh+qKVwfm/N5LVdqf4a3IYf6vhJ9yey9v8KP1oQOuqHO12PWD8N43dCF63e
K+h4shnwvNX5RZM3Uf9UboAL6pPMBnnT+OCmwW+81wrODTxP+W/Bi2P6ras9
dI7yf4bb9xTVaHyj30v7H8bz/5blyENZVI8V9vDz+AFyowoyxx9+tUIadiCY
nve8FPj7rUvvDGsSKH8pfEs4a87oHlRfJU3wNaOjNfYpdHx5Xymu70rn1KBJ
hZR/Kty/ona91asiyr8OzkyO75Q7l+6nIBl+XPFi+rHLtL+4GD7c3/C75v/z
q+DmnL7pScEXKb/uEcznDz14vGDwJcrPh4d7lXfM86P2tlkN35g9pm15IWv/
BDgwqGHH9kxqL+lV+Lu1wPbBFLLiHeys5/3kUQDdL07PdKx3M19YGrWj7bzJ
sEugh1/ZNzq/cAXser+oeV0MjTfJPvi4a6T+xOv0PJYXwf4rX4w784aN/wY4
7EihXnoxG/86GZhvxEpP9Aph/d8aHtPgL3U7S+NL7At7H72X5FVAx5PFwet/
FhlN0qbtyouwZy//thkS6u/ceti/etePnpZs/Hc7quLL1n5TPDhG40M0Hk4t
GzGiNJvGj9QbrkmfujlkzV3Kvxt+m9TZYvS/+5T/PPx9UvmY+t00X+O9gm9t
bfY+tojmX0LNTMyHVO+/trjTfE9iCR8Mj8849Zq2yxfDMzc7Fpt503Z1NDzi
ydOeA66w+V8B/Pqta7t0XdoueAFrREYsjH9Gvxd3ylLxpfozPKalsfmfObyn
5bC5Rwqb/3nBsn3SQaVyMjcKPlkl1wv7RHlsTsODvnP903Jp/iR6Cm9d5+c4
ZSVtl7Y/hutfa5s8UoPuh8IMXpd06sSWqbSd4wn/q+85URJA23k7YKerM4ob
JtDxhLnwqTOdX229R/VX8hie6qC72caZ2kOucVzF71A/f270Fmo/9Uh4QeBL
LfFVqr8GbnB1YUz3bBdqH8E2+G2ua9NXS9ouPnG89e+PA4Yosun4sgdwoYq7
8qslXZ/yHxxS5jjWqYbVv+HZKv6Z2V0uGA9i818X+NnypXkWE1j9D4UF8922
NaWy+n8c3tD1VOPiBtquqM5u/Xugro7iVPo9pwV+s3ahx6T+ZN6wHBU/ftA8
9+gl1H7CuXC32zUD9X5Tf5FshW1/ZJl8Kab5vjwT3ht3IDi7hbX/Xfhl1XKP
0HrW/r/g3k1px8RvaH/B4BNoT9/XX2Z8ekT5Z8NXa0cZ5u+m9YtsM7zQwN1g
QiidT5kOH53/4atnEpl7B5boz3DY1/UB5f8OZz1bldduA20XGZ5U8fUutMnt
nUV5pI6wbWflNuclbP0TcLL179e+NCe/Y/1fCisfJa7uY0vmlcNnil0bzrWQ
hc3wtayg/i5z6PolA08hX81Iv7ujWX4H2CClzYPDf2h/9Xr40fsB56q1KI/B
IVhzjXrF76Aayn8TtvV8HuK69Cnl/wTPrFlgrtuPtsv0clV8Y7+aXm2+PKH8
0+Dni776nVj0nPKLYLNjpr2iX9LvbQ7CsednXr28nn4vug4X1h+5982QLP0I
D/3os8ujHx1P0ScP93d35puE67SdMxXu+93ncvIM2s5bC18ZPGBZqAZZmASf
sJh5f+dZyiO5Bpucze6d+oXaT/4Brk70dj34lNpD3UuG+Yaq7bvDu+n+GNjI
WsfT6+Yubej+CFbBPtaBpS6W1D/E8bDRumsnpPdou+wKfJ5350LXKaz938IX
Ki/d3HefzsftcRr7K5btWDKFrsdmErz54eSWIQV0PtFyeE/J7elzD9L+0r3w
9gVjL18tJysuwYVxryaP207mNMBiyfElX3n0ex43X8VXuNb7Nf9l7W8FO43s
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
SfdXPhPWy9tlP3Ihe/5vhIvsHx76k8O+/x+GO6f3jX2pS+cXlMFBy9yu/fQl
i7/Accfqjw7Ro3ouG/BWxXdeEnL/9H06n3I63Bh+UuZ8juZL3PXwuLLLByYc
ZP0/FR6zqe3NHU1s/nMD/qm1Iam3L/v7J/Xb1n//+VYUkUj9S9HvHeavXzoa
9Gggc6bBu5aoxq44TvWC5wdfuTvh+gQR1QPhAVjZoDVFWEbHk5TAP8yvc0OW
k+WN8EPusJoRf2h/de/36P/dg8t+LqTtBrbwT53X7jeDyYI18ENZldfYz3R+
cSK8RbfjpF0/qT/J5HCFVt7JfeNZ/X8P18yPNO7wl8zt9UHFz3uv2aTpR3+v
ZTMFdpgXcyOpkCxaCQ890ua7xg6ydD/8a9/Ak4fEbP53GZbt/fBWmcqe/29h
51V9DRwb6fy87iqMz37881arqD4KJ8LNAXemcD5QPskyOHqt5pOtStb/JfDJ
6Sk+z+ez+l8IX9lv98jlHuv/r+EHexyeJH5n/V+7EeP3u2b+hW5s/jcBTn7k
UBkkov4k84EHOzSfNr16mPLHwiP2pu8ffMmI8l+AKw7oWzhKQih/LWxs6bA3
esS21vog6voR89P4O0/er/Oi/GPhnXqJivMBbPwL4ayc1E93A6iecXbBOeZL
Gxs0o1p/zzsLj186+s+KD/6U/yVc8jf+95OevpS/c5OK/07DwsjdeAnlt4AH
9vspX60ZT/kXwqNHtnmbVbyM8u+ETyf3yDc7Tt+bBflwZsPn3ur59PcW4mew
6U6rjnFf6f2IrIMaz7OswPRTFlRPlTy4r7jh1e9k+j7NXQDPUp/xr99Mf29k
EwGnOS5/nHyH/n5NlAf/HFertdeffi+tgQcOd1zv5si+/7b9hPnCkxHvfZ6T
Oabw2RKx7c08+nsnnjtsslHP5oeQjifcDm+MeOHXsJW+V0tOwsHFh1aP2k5/
PyB/CO8sOzruyHP6nqzmfMb8NbZoWpkOe/8zAj5i6Gpg1UTnE8yHSw1+7F12
i7aLw+DtF1c4BGvS+WTZcE0bud+wRPb9+x7sdbmh89qz9H6N+xdOTpWN/ryX
/f2X8Rc8L2oqnV4G0fs7kTMctDVq6LWu9D5TGgxr7VfljbnM3n9mwb32D/wY
Es/ef1bBWSXHPRb1o/dhvN/w1LOjnbskkoVDmvF8yv7ScYqSvf+aA/tp6qsM
xtP9kG+BIw233XpdwP7+LQNO3JxUsXw3fa83qISHL9s1M2M75RX8gH3Mbpj0
uE95xUZfUS9GBxxoyKLfy5zg7bMP196Nofup3AQL9rzp3XYyPW+5R+AVG5p8
L22h56PNbXj2tXJtkwx63oq+wmNlXRbMiGB//6X/TcW3WmQxLuQf/b2YYgZc
znNf5LGR/p6IsxFWx5zYsVqf/p6JlwYv5t0Xtdl4gPLfgv+on+66VkDv1ySf
Yd/aWS/njqX+K+//XcWf8rHgxZTjlEdtD+dmnew02Y36k4E/7HD3/eo7WvT3
a4IU+OD2NHv5+DzKX9q6fZRhauAOyitrgrvVHn6qSKG8yr4/MN7zcnMnL2D5
7eCljx1GaLbPovzr4A5PZvYJHk7XI0qGFw2clN7fnMaHtBge/khj7sNYuj8K
FazteyklNeco5e/9E8+r0g+nP3+m94s8Pnx+yd1SoTMdX7ga9h0a/PLqSvb3
fwlw//u9d+/Ko/Eovwo3tRkWWl1C41v9DnZoGdXkcyyD8vf8peI3tN+zIKwT
G/+T4ZsaQzQsnOj44hVwX93a287BdD2yfXCU7kwrThJZWQTL26XpGnyl6+e+
gaXfSk+4TaR6YaPzG+sf+5PXH3ykvCJrWMvFy8D6Ah1f6guX14pfnD/N/v4x
Di49/eHr7XgypxAeZJjl9yWAro9XD0cNFd5I/U3HE3b7g/Xm4vVGXi5kyXh4
eZl+o6APXY/cG/Y7fkbPJZ/uv3o3/K2rDv9TIbWXwfk/rf+92BHcZyVUjwSv
4CqhsL4qk7W/ZouKL54R1Xar/ukp/wMk4ibo
        "]]}, {
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       PointSize[
        NCache[
         Rational[1, 360], 0.002777777777777778]], 
       AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1:eJxU3HlcTH/7P/BEEj6MLUorIkRZS0WNJUtRtohkECoiS/ZlZImiQikqhiQq
aVGkKEWlokml7FNo0SAUifi9uq77j9/3/ud+PB/vM6fzOu/9nOOju3LjvNWK
CgoK+5QVFNr+H/8TDLhfL/xa7OXkFlSTAVvawGe6r+7dIa66zR7b4LLbr3xt
CqlcIoH7z5vpdFyVLM2HPztvbemlUtdmhSb47MrQcQM6fWyzkXZWvdDjbb7H
hItk0Uz4qmDdksu7PrQ5YAs8NPKRrc4/WZszw+E9VwZmnE0jN+TCbrMdPpVX
VrZZ5xt84Ly59cNGKrfTyK4Xbhg4PrTuGpWLreDwmQrGV+fT+eM94MX2dzv9
MSfLzsEqw18l6jVSPsFDuGZm3e2J3rWU/wscdL/x8rtplM9D7UG9cGPzj+if
Y+n6JVPgoI4utyRFnyi/O5zzsX/FofB6yh8C/1cx0CxhBpUbZbX93vz+HLNl
csovh7s+0nt9XIuOD1B9iOtNn2QgtqfyTEs4cW7wk20v6PcNbrC4ebZd2HOy
ThD8L36S8d3enyl/Bjz4xR4zo130e3EdLDnS980HDTp/fK+ceuH4ODflZZPJ
sonw2jOdb1XIKa/ABX43OSNwbAPnPwXX5ry60nKZ7JEOf/NyNW6s4/zV8Mvn
V74vPkV/TyrIrRcu7G3iuovzKZjBBjM/LYmzIhuthuckFRwfm8X5/WHl7z2r
H46g6w9IhfsvSvd3ecb538FjXvjtT11O19vwX169cJa/f8fYh/T3dUzg+oVp
eS5BVJ92K+ED6rbnWqKpPsXH4XZ35v3atOU95U+B+y0bd7D3LK5/GZwX97yu
YgVZ0OVRvbDb6TvXrk2k31uOgx3t9lZMT+X8y+GD7171zTWn65Ecg4Uu6Z0S
AqlcmgR/TO3poKTD7f8N/MX8Ut3G49R+jDrl1ws7O97f6POBjheNhn+YV/9U
GUfHBzjCu908bmcFU77MI3BM3PjTSpHkhnj4+t05aYFXOf9LWD9q5iyvAXQ9
dkoFaH8rf14zm0cWG8JWQ/5lnoul4+Md4P8Gvit78YP+nuwgPHXRgXe3v5MF
cXBXl7VDxYfoeMsKOKnotXs3c7KHYiHyO6YW/srn+jeA0/bt0Oz8iSy1h5uM
Arf5anP9H4DVPyzwareX6z8G3uD570qOMtd/Gdw476rYMobac8A/2KhqyqWS
7+TMoY/RX5bbZz98y+1/PmwwJeyyRQ21F5198MS3uzus0OH2fxX+ryhi8E5/
Ol78FFbSfZyVWUTl8X/gwFRX3bk9vlD+wU/qhYZfq8dv/EgWzIXnGsQ2Nu4h
W+6Gs092Uku1J3tEwuM+7X9rP5osKYJz0taGXVhLlv6CD2ooXGqYSX9PYVAR
+ouK1HtTFeefA/efEbf7Mlu0Ax6puPWBqz3nvwTnTem1P7We238hrNGuSPFB
Huf/Aa9Y8mlD7Bvu/7rSeqGTypRvHTqS7azh3RelJhWXuf49Yf9o7zQ9Gdf/
BXjpkUEuNwrIskfwL8Gp7a6mZEEjbK5zZ1SiG9e/VnG90P5kH71ZB6h9eMyA
h/XXzfJfQdcn2QzHKv0sSOX2JQ2DvbSMd1x5x+NfLvzuzf6/oT94/P8K1y5p
9Ak7wuN//6f1wklVS8NKVHj8mwa3Fi8zWmNEztwI773T8lkew+3/LPxjRqcL
56dQ/9F5AA9ePFh6Ro9s9xn+s3HSuNfVZHG/EozvmZWjhvWn64+fDB8JznK9
cJv7/3p4+EX3x3kOPP4Hw5MPVK+JdqZyy/tw7v36oUtGkj3q4Z8tQ2rdynn+
61OK/mJXqbbGmec/C/h6xKyDwr90PgU3+H2rygeDnjT+GAXCVpd/dV5rRBbd
gy957yu7XfiO8tfCy7x/fFwlpb+X2bOsXnjSJNFmgjkd32AOlz/5vDnqJFln
LTwuI9c9w59sdxJOTy4b7PCZLE6DIze0n+01ia4n/gP89ebyubqz6P7Iuj+r
FyrMrGio7MLjvykcZrZ8r1oKj//O8LZlTy71aMf17we/cr+t/3A0WXIbXi/v
pxBqRZZWwRrjhy8fc5vz/1eO8VjNStlpPM3HRsbwTOVxkhOHKK9oBTymtP6v
ydEqyu8Lf55wceYcFSrPTIbrvs5YHjmCyhvewo9iRkcY/iHrdK5Ae3U1CXG7
T7YbC7dvP2db4Tey2Alec2fzwaoGOl/8Ufje6EfnZfPp/sgS4fBVMQHDynn8
fw3fbjWMFv/i9Y/yc4xH17W7hY3m9c8oOPOOoGJKOtf/Utgqw/er1ITzH4Yd
Ve8tOLmQ7p9CPLz+W/oxGwMqN3oBL81M2hfQnizq8ALrnzcu3R238fg/Ep6+
wCxccSM5czHc9+xuB7Emt38vWF/5y/w9vjz+X4eP6HYS3u1GtiuHP223Mncq
5vm/3UvMj8bXVY3+kuOHw4Y+tg0OYTz/L4RH9shxsue/LxDD6xy3HI7rzP0/
Gq6eKE/7aMT1XwpfuNh68MVWnv/+wsnmM94uTOL8+q9Q/1YD9Qab8vw3H1bS
nOgZbMb598J2Kz96+Q3m/FHwnfDU1Ot9OX9x2/EDA80u8u8zf8PjBvidOvmZ
3KD3GutDDZd1LjFkHTtYPvT1CIUlZLtd8Abl3K56aWTxZTg09ljA0H88/j2B
U36XJ213pfsha4ZDtERnqneTBQPfoD+fb9jaOYBsORtuzbpg+EBG9tgO534c
FF7ygMe/i3DU4oV/k514/VMAD/pZlX5eQn9P4Qc89LKLQWw459d5i/6cuaK7
UgHnnwUf7nNZ9+clOj5gK7x7144BBY48/p+HFw5bEdLrGK9/8uBfL/rqduhN
5Trf4bhQV+MVDjz/a8qwPj8xQrP4Eo//02FjL/PVHZV4/bcJVvlRXL2kmes/
FPZxzLbL6cX5c2C9BfITQmvO3wArn44/lajA+dUr64Xe7oqnVOM4/1T41Nv/
/itaQPOddAOs/O2Thb0Jz39n4YMObuvkujQ/GmXD3TqdT6g6QuWiT7DHyukb
hzfw+q9vFebnJVWf/y3i+V8I9z++dWPia57/1sGLR60W5SjS+XTOwGfW1aUO
TiDbZcI+gh37jlTT+cQfYaujp1Q79Gig/L3f1QtHhBxb7KfzlfJPgm94n3qz
SkgWuMIFH7v2sez5jfKfhm922x8TUUn2uAv3Sp2671sDWVIDe3WbnyrNJ0t7
vMd8eK41bsse+nsK5vBEA2uz7e/o/EZr4L8b6+pyJpBFAfBzywMbzg+n3wfc
gQui8nd0/Uzlme9hX0G9d8+9VN7Q7QPGx9d5/SbMoXKdCXDaof/OGL7h9c8q
OKpl4+LR8+l+iE/AgxJ9A+aYcf5b8LxFF18vLuH1TyXc3q142TULXv90ra4X
6lTfHdEQyOuf8bDFUQvPxjRe/4jg3bfzDsyo5/WPD5wv0bzVNIDXPzdhn7Jl
E386kxXewhM3jdHS/U3XZ6RSUy+UfW9W6HGA638M/NL5pMaYKLq+gGWw3hWf
KhtbcqY3/PP9vIfTj5MbEuB9kmEvUxvJOq/g9lXr3kdq0P2w61iL+SD4hmuR
AllsBD/Mi1JZNoscvwQ+FmvtY7aK6/8QvHT12QczvtD5BDdgU3FFwoBvZMvn
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
z8ZyC0+u/+Xwqqheh0t5/Mw8BuefU/gne8L9PwnutVmrj/P/6v8NrKw8zf7s
UK7/TgOwnklRux+xi8f/0XC0gX3k3irO7wiHpdj+VvvC7f/IgP8zfwkSYOl6
ozineM7/Ej7QtHHL+ibOrzQQ+49fNxU28vc4EkN48Igx3qFPuf07wK9E1+Ym
Szj/IXjHcMXtitwfjeJggeO5DznO3P4r4PVnhjmfPMb1rzgI43fC4uOuT7j9
G8AK4TE9p3H9NNjDpj3SZQU9+PuHA7D6dQcFa54v7WLgHhNWzutqw/2/DD79
KDnNTsD5/8E71u7V2K3D+YfqId/Kjt7Xw+l4wQI4NK7Pnk2zeP27D17bTaXF
hb+v8LgKpygYnT3Zgfv/U9hadYTBsus8/v2BL3n7pah/5/l/yGDMFwX1Koa8
HjCaCz9KCgws5vYs2g0fiJ2+TVeZ93+RcJ7Du7Wl/Lwzswh+HCaf8EKJyht+
wWa3HnWYVMrrn0FDsB4aMETtbAbv/+bAevdc1W/f5/XPDjiuo0nEcz5f/CVY
6rLi3UXeb8oK4YPn/NJ7VPP65yf8LXL0jYkNvP/T1cd4fqX/9be8/vKwhi9P
bBmoGMrrP0/Y3e/v8XMfeP13AdYcpdnbn/evCvnw732mY9ev5/VfI3x4QsIL
xWO8/tMaivXb0u8l1YW8/psBCytt/t0Yzvk3wxlDZtluC+D1Xxhs2ulcnpIy
58+Fm0paO+pP4Pxf4Ruz/qV+usP5+w/DeuGW99oZfD/ip8EOPzTHNvP6UbYR
Xql7UXFGM+c/BzeNr8lUnsHrvwfwS6t2owP4ebrHZ7j3pAtTr/Dxkn7D0f8s
DazvuHP+yfAcO+u5W605vzt84kNFogs/jzYKhq9//Jvywojz34c3f2+Y67qf
89fDD/MNXpmYcv4+Btg/61ukJPH+u8ECvmvb8e7nZ7z+c4N9o661i7Ph/IHw
zg9be6/k59fie3CJVuet3fh9R3wtXHfs09T5bpy/5wis5zwb09px/Qgmwnec
FT1PHeD6Xwt3LD4yZTwf73ES7jlkqUvRRs6fBo9IfFrYeorzf4DL4ywMur3j
/IKR2E/uStiZeJvzm8KaO0rODuHn/SJneItVps6aB5zfDy7cdunOFH7fkHkb
1vLc3M6Vj2+ogmuS0vdN4fW9zn+GWA/59rL9dJDzG8MW5j8enEji/Ctgk5Ar
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
vB66Pprff62Gy54k7b5byd9/+rc5fMcs5S/8/WcqvOio9lGjgfz95zs4ZniK
/5YB/P1nNxvc39bM+g8X+PtPE9ihwmfQnSHc/1fCShfqCvfz95jxx+Gbe5+p
Dv1N47EsBe5ttDm3cCd//1wJTy7WuxjK349bdpmN/aT33DT9ev7+dxw8Y6qj
h0o0f/+7HLZ5/nFXLf/7IekxWNsrf+i+L/z98024eNgXU6fJ9H2x0RtYLfbO
id1P6HtoUac5cqF+L9/GhP99/zwaniqyTNhuQ850hCfZbDTRDOR//3QEPp1S
It089TXlT4BVenSxEX5/Rflfwpq33LVP2VdQfiVbufCK85/X7hEvKb8hvOTX
76+jgt9Sfge4+588w86T6fyCQ7AwN3rg0fl0fZZxcKdBlYYL1tL30x4V8H8P
tgUEzqDrkyjayYXthu6uM+9D5VIDeOdMfV/3evq9wiI4uGmZm76Yv/8+AFdl
rHgxy5fzx8CN4Uf2TRzK+cvgDa9envRewfn/2bWNp59/uXSi8zcMnYvfKxhn
l3Ul6yyAcy7pd5O8Itvtgz9ky29O/EX3W3wVfvqoz6eakfz991N4vneqSpk6
WfYHHrxCV2HcDPoeXDBkHuaPCp/CYi2y5VzYo1rJ03sg2WM3PG3xwj+99MmS
SDjzo9NM8WOytAhWs71QNq2KrNACH37bpTyujr//HzQf7W+Zaki/Rv7+fw5s
0e5qfcwD/v5/B9zifNjmUSXnvwR//Xi4x5n9nL8QVj9msujaH87/EzacoZ8x
fR5//6+7QC68OmB81fkAzm8N/+wZM+hvNv/7J094aCf9B/aX+Pv3C/BNx+JP
kXLOnw9HaD+2iavh/I3w4I3t332p5PxaCzHe9MqYt24MnV8yAy68sLTk5CvO
vxnuPrfe8M9EKlcIh+ud47ppb+L8ubCy17sVe+spn+gr7Nb3zPX3Jpy/v71c
mLr8ZOd76fz9/zS4afW08PvJnH8j7HbtYEe//9X/OTglKmZ0UjG1J7sH8JR1
EdKQg1Qu/gzfkNiXLOb7G99vEdZrMR5ONztw/smwypvb9hHjOL87XL3o7cjt
eXS8ZTB8J0KUt1HE7f8+nFyaezC6iCyph0s/1D841pnz91ksFwZlHTvsUkXl
Cpaw5lXXNc9+Ul4jN3hRYGjNjVLOHwjfMvfVl5ty/nvwxMBPDo+zuP5r4X3Z
A3/dmcD5ezrIhbvu5XQ5nMr5J8L2E759zxrD7X8t/Nbi0subdpz/JLzKb+fz
yRV0vvg0eK3wk+92IVn2AZZL5wcMVeX+L1iC9V9W+3GhN7n/m8Ku/UomW80m
ezjDs6bc6uOS/oby+8ErXlxI3tOXfi+9Dbs9urS64jmNLwrv4Lmunr5Vy6jc
6L+lGC/bN7zr8ZF+LzKGQ4YN0r7qQ8cHrIB77e+8vHAPjVeZvm22LTYweUbj
W0My7NJ1dZ3FTxrfdGRtvz/039Wzi55T/s6O2I8WqB3z30EWj4W/d0g+6+z/
gvI7wZpqvQs071K57CgcUTW1w77tVC5IglU7D9+5Tamc8r92bHvfNLug0YqO
91Beht/b9M7IlpVR/lHwiZHdx0a+ouOlS+Gvftuzzo55RvmPwBkJ+uYH9Uop
f3zb70tnHTPdK6X8L+Dzv2bo3Ch6Svk7OMmF+e4jw194lVD+kfDh2e0Kl82j
8zUshi/3tfpSe4nOp3MQPvXB7+ahDPq93XX4ZIcbgYtn0O/F5XDJ3F5Knw7S
8fHtlqP9nGgXP/k5lcuGw4t7508feZnKBfbwputDvm5VpLyWYvjw5YE3k0oo
n0c0bPXSLCuwicolpbDiiXkWw89y/r9watGY85c3UP0oDBXJhXYLrTZs86Hj
jebDSldtpibuoL8n2gs/qnxXGFlD1xMQBdcKxvzoZMP5i+F5YYtNnubS/Wr4
DT/POR1wb1Ax5R+8Qi50zP8+PTGFbGcHJ0xa4imxJot3wd3fVV6b8Igcfxme
7Vnn1TyRzid7Atuld63f+v4J5f8FP9Nb4/tzOtly4Eq5MDG4rKpsMh3vMRuO
1boxXPUXlUu2w4aaidbNIWTpRfhZb7NbfVbT8QqFsIGn6a/Dz/Io/w84Pn2/
132HHMqvs0ou3JPf/1VIXTblnwWPGSqIUBZkUv6tcM8Od1ri07Io/3l4bfGp
5Hu30ij/I/hS0oav9c50vN13+LXJ2zj1G/cpv6YzLHHxlb2i88dPh/s0nG/R
K8ig/Jvgli5BlZ3C0il/GKylcnJhgRWdzzIHvrRs2I6g9g8pfwM8VOW/R/Fl
VC5RX43xdPSjTSUWdH3SqfA+TdHoSd5khY1w3ZYrPaPP3KX8Z+ENAWUtSp70
e1E2PMxIU19zAl1vwCf4yZ2S8mmz6foy+67BenCkTGnCXzq+QQhLvYxcfh18
QPnXw5fHNodsiqP7aXdmTdv5I8e6Nz+i/Jlw59x0l17DqDz+I7wgJ2Ca/iYq
l/Vei/5WU5vbc2ch5beAt8xvKJ6QRfVl6QrXDdu5oOhSLuU/Daf2nnd9uzqV
S+7CI3R3Xj/bh/PXwB3e1p/cOZyuT6GnC9bfM6OybnjT743M4evFepO/zyKL
1sAWdbrKbsb5lD8AHubyV++CwmPKfwfua3oveJBzAeV/D2+3tL36bANZp7sr
2v/mktk77ch2E+BNby8otW6g34tXwc2qnaaW9KL2GX8C/vunvfuCMVQuuwWr
6S54nBVB90NQBQc1bvZ7mk31bdnVTS40s8hLnvuU8nqMh1+E77mWc4fup0QE
a7o3e5rdpnKpDzy5ywbTIrZCMhyS63Pig5Cuz+gtrPVbGqlgQvdbpLIO+22n
Ou+MlfT3A8bAdne+yLVt6PjMZbDi3HrjWwI6vsEb/npRwX5iAt0vnUR42rQ7
Kg0Sup92r2Cn+7HtFw6ncnHH9XKhT9zdK0rTyfFGsNlYr4L0TLo+2RLYbXr3
lEtN1D8Eh+FWuz2bnCdw/d+A1x2RvCxLobwez+HYjBSfyNNUv5L27nLhXnvT
FX9HkqUj4OrEw8ERe+jvKSyGD6esqd2Wzvm9YNNXz0f20KNyUSxcsS0o2Os2
1/8zeIGP5uPWm/T3MxU2YH4o/DsvaDjX/zA4pt5Lt/YE3S+dhfC9G7ceeeRy
+98Pd78yYd+ZVWTxNfizZ2R8cCn1n/gS+MObZX2qciivrBWu260z9qMp1bdA
fyPW+/Gpqg/Muf/PgyVmz8ecq6T+6bEH9laWDhjO44HkCizdEvvw6xyyVAqv
eTwrMHgzt//fsH3z7JlDYuj3Rnoe2B88070+9SP1b5EtvO3xjIr0gfco/044
+3Oy1un2iZQ/An72eWNns+YUyv8YFtcPc3fcF0n5m2Hr4wGai6KjKP+ATXLh
kUd3npVKLlN+GzhVO+SL1ykJ5d8G/5j4tX7lg4sWbfklcIZllvJ8UWibBQWw
0szrOUlNiW22bILF7Ues9MlPa7OH9ma5UGHh9WzP8YVtlsyEy94m9mg4ktlm
6Ra406332o2z89qscB6eNyX2uMK1B202yoPN72mXHGif32bRNzgpoe+LQVOL
2xygsQXza1/fHm9eP21zphX84segHR72FW1u8ICVAq3S5teUtlknFN60brne
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
bjxEthycKheG/jnz7lofsocd7OrV232UOj//3gXrHS1d0yWLzie9DA8xsXIc
vprrvwgO8FPVPxRD12v0C25ICe1T9pwsGnhHLlR+/uHc02b6fcBsuP/W4/dU
NOj8mdvhY3fueq1exPkvwhufb7yksYnbfyFsmH1twstf3P5/wPMc/StW8d8T
66TJhSenTbyu58b5Z8GNGieipa+pXLY1rW2/HSZdGc7t/wL87U3J5hY9suUj
WHdqbU+XQn7/8R1uP7pVGujE7z8007F+Gld58bWIyqXTYaOFCuoD5Zx/M7xs
xsSYraMpj1EYfOa07kfFwVz/ObBHZ7WKtT7kgAb466Jgnx0q3P7V7+L+2TcG
jz3N/X8qXKlcUJ6VyO1/I6xg/tPm9itu/2dhh6y1t07KqT2Ks+Enn05ofWkh
x3+CSzZNfa75jNt/33ty4Y5Vymtqj/P4Nxku+rrissl+suV62P5ft7qYDTz+
nYFv3Z7ftVsKt/9MODvncOaxQdz+P8JXbgZ93uPP73/6ZKD97hwZpCei6zOy
gH9dtFWvTeT8rnDTgcuvi0z5/c9puMFo7BMXbo+Zd2GLTfbL6w7T/W6ogV00
Hvy7P5fup07PTLnQOHf5hF1KdLydOTzdf92si6V0vHgN3L7H76Qj7en4+ADY
6FituOgvlcvuwGumtS7658j1/wF+/TjTwP87j3/d78uFY5KVBPIafv8zAX6i
1uNhggu3/1Vw2YQTS0Zv5Pc/J+DLehZldelUrnAb3qLeouRzmOu/Cra8cjWj
m5jOL+qaJRdqTbrr7VzI/X88PO+kqsT7Pfd/Edxx/sXgSY+p/Tb4wOd8fAxu
2HH7T4Yffuxm3aEr9/+38I79t+69VuX3fyrZGK+9b+TPLOL3f2Ng5zPTSsdZ
kWXLYIcvV0/fMyYLjsIuO48WPT5E57NMhOU2O8w66/L7z1dw1q7i4CHmdH5J
xwcYn/3ebsjNoPeRUiP44M4HrSYu/P53Kbzq3skWp/DHlP8wfHXprGY/DXpf
LLoBH8melSJIvkf5n8PTQ9qlRxxKpvztH8qFKbMGpBqXZ1H+EbDp24Gz5L3p
fbrOYljzvq7S0NCHlN8L/vnml8UEdXofL46Ff+iku3ZZSb+PfwZ3cTuktu0a
nV+mkIP9Q6TLggVh9H5fMBzWiu6vqjg/hfIvhL0Unu63u3qb8u+HexumR163
peuVXINTL4uO3s6k46Ul8DjnPuuupd2h/H/hLn5r5s43uEX59XPlQsdygz6b
N8dS/nnwmauDHrYTXqb8e2DNc++8Bp+NofxXYLWafWrKJxMovxTe4L5RNV+S
Qfl/w+oXVs34aEt57fTy5MJHrkebTk6/Sflt4cJKWQebsXT98Tvh7MhI/xfZ
SZQ/Ak4Y9j3l5EOy4Am8/Lm2a5wu3R/LZnjQwc7SPMldyj/gEcbHAUW7nefT
+SQ28Ha/C/vq99P1SLfBXlcWhV+Jyab8F+GgV+cnO5fR740KYP+K6qq4tXR+
URP86/jlOUmXIii/dr5cKIwOezQm6gblnwlfDb9i1vthHOXfAk8pmpl9yJjy
6pyHl8qPxlfcpu817PLgeTGGYYX7OP83+KbvlLmjzsVTfo0C7F8vHfMxnUX1
JbOCP//7vPL0UK7/TfDLDO/Ef+pUf5ahsPZU5fB+tnS8x0PYf9w6v5fKlEfy
paBtPIkWOM+h9iVVK5QLVRWPmlYdp/aoMBUuKA+qd6mm+2O0Afadt8LH9zhZ
FFLY9n2m54KsulTKnwUbxlX2FxlSe8mUww+sfnRxNKP6aVB9jL+/8K1tYRLl
0RHCg+aVm72L4/zr4COfO76Ye5jurzgIljo837++mus/A3405lddlSrdH1ld
W7nIaKQomvIJej+RCyd77LN74kP3w3ISnDwnSz12KLd/lydt30er1M6cRfdH
cgrWlccGePyg65Omw6smpWnN/0HtW6Gmrbw59k3gp0uUv0cR1q8VtumDOlD9
isxgq7RE2fxXlCdgNbzZ68foyerU3jP94eLTZl7ffDh/Kpwye7ulbTVZ5z0s
bx7Z6a40nfJ3k2I9ZtNForGK7q/YBB6W+O2gg5Tyxa+Et5gvUbm4j+637Di8
3Ed9Q1U4578F/5qzs2v1Cqpfy0p409cTWwd40vk9uhRjv/yqKqTyJF2vZBzs
eH3MltstnH85XKydd3X7MLp/Cj7wt8x7m+9GUns1ugnPqdyz6q6Y+ofoDRyy
9ltFrD61n4BOTzF/pF0+ctOcjs8cDQuz8hRPvKD21OAIb+9yJPqQ/33K7w3P
S7vQ0U1OtkuA3eNe6x3dQOcXv4TdficJrtgWUH6lErnQprO+aZI7fZ8kM4R3
+au+ebSEvmcSLIGXH273ds1V+j7J8hA8I8uov+XmXMofBzefPjm+QkTlkgr4
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
yec/lV+YT4aM/6em/ZbN/wHC2VzV
        "]]}}, {{}, {{}, {}}}}, AspectRatio -> 
    NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
    AxesLabel -> {None, None}, AxesOrigin -> {3.7237536*^9, 0}, 
    DisplayFunction -> Identity, Frame -> {{True, True}, {True, True}}, 
    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
    FrameTicks -> FrontEndValueCache[{{Automatic, Automatic}, {
        Charting`DateTicksFunction[Automatic, DateTicksFormat -> {Automatic}], 
        Charting`DateTicksFunction[
        Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}}, {{
       Automatic, Automatic}, {{{3.6605952*^9, 
          FormBox[
           StyleBox["\"2016\"", 
            Directive[], {}, StripOnInput -> False], TraditionalForm], {
           Rational[1, 72], 0}, 
          Directive[]}, {3.7237536*^9, 
          FormBox[
           StyleBox["\"2018\"", 
            Directive[], {}, StripOnInput -> False], TraditionalForm], {
           Rational[1, 72], 0}, 
          Directive[]}, {3.7868256*^9, 
          FormBox[
           StyleBox["\"2020\"", 
            Directive[], {}, StripOnInput -> False], TraditionalForm], {
           Rational[1, 72], 0}, 
          Directive[]}, {3.849984*^9, 
          FormBox[
           StyleBox["\"2022\"", 
            Directive[], {}, StripOnInput -> False], TraditionalForm], {
           Rational[1, 72], 0}, 
          Directive[]}, {3.913056*^9, 
          FormBox[
           StyleBox["\"2024\"", 
            Directive[], {}, StripOnInput -> False], TraditionalForm], {
           Rational[1, 72], 0}, 
          Directive[]}, {3.6605952*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.6922176*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.7237536*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.7237536*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.7552896*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.7868256*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.7868256*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.818448*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.849984*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.849984*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.88152*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.913056*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}}, {{3.6605952*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
           Rational[1, 72], 0}, 
          Directive[]}, {3.7237536*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
           Rational[1, 72], 0}, 
          Directive[]}, {3.7868256*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
           Rational[1, 72], 0}, 
          Directive[]}, {3.849984*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
           Rational[1, 72], 0}, 
          Directive[]}, {3.913056*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
           Rational[1, 72], 0}, 
          Directive[]}, {3.6605952*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.6922176*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.7237536*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.7237536*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.7552896*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.7868256*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.7868256*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.818448*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.849984*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.849984*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.88152*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.913056*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}}}}], GridLines -> 
    FrontEndValueCache[{Charting`ScaledTickValues[
        ((Transpose[{#, 
          Table[
           Directive[
            GrayLevel[0.4, 0.5], 
            AbsoluteThickness[1], 
            AbsoluteDashing[{1, 2}]], {
            Length[#]}]}]& )[
         Part[
          Select[
           Charting`DateTicksFunction[
           Automatic, DateTicksFormat -> {Automatic}][
            SlotSequence[1]], And[
            FreeQ[#, 
             Alternatives["", 
              Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
          1]]& )[
         SlotSequence[1]], {Identity, Identity}]& , 
       Automatic}, {{{3.6605952*^9, 
         Directive[
          GrayLevel[0.4], 
          Opacity[0.5], 
          AbsoluteThickness[1.], 
          AbsoluteDashing[{1., 2.}]]}, {3.7237536*^9, 
         Directive[
          GrayLevel[0.4], 
          Opacity[0.5], 
          AbsoluteThickness[1.], 
          AbsoluteDashing[{1., 2.}]]}, {3.7868256*^9, 
         Directive[
          GrayLevel[0.4], 
          Opacity[0.5], 
          AbsoluteThickness[1.], 
          AbsoluteDashing[{1., 2.}]]}, {3.849984*^9, 
         Directive[
          GrayLevel[0.4], 
          Opacity[0.5], 
          AbsoluteThickness[1.], 
          AbsoluteDashing[{1., 2.}]]}, {3.913056*^9, 
         Directive[
          GrayLevel[0.4], 
          Opacity[0.5], 
          AbsoluteThickness[1.], 
          AbsoluteDashing[{1., 2.}]]}}, Automatic}], GridLinesStyle -> 
    Directive[
      GrayLevel[0.4, 0.5], 
      AbsoluteThickness[1], 
      AbsoluteDashing[{1, 2}]], ImageSize -> {412.8828125, Automatic}, 
    Method -> {
     "NoShowPlotTheme" -> "Detailed", "AxisPadding" -> Scaled[0.02], 
      "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
        Directive[
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        Directive[
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        Directive[
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        Directive[
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        Directive[
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        Directive[
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]], 
        Directive[
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[1.6]], 
        Directive[
         RGBColor[1, 0.75, 0], 
         AbsoluteThickness[1.6]], 
        Directive[
         RGBColor[0.647624, 0.37816, 0.614037], 
         AbsoluteThickness[1.6]], 
        Directive[
         RGBColor[0.571589, 0.586483, 0.], 
         AbsoluteThickness[1.6]], 
        Directive[
         RGBColor[0.915, 0.3325, 0.2125], 
         AbsoluteThickness[1.6]], 
        Directive[
         RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
         AbsoluteThickness[1.6]], 
        Directive[
         RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
         AbsoluteThickness[1.6]], 
        Directive[
         RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
         AbsoluteThickness[1.6]], 
        Directive[
         RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
         AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
      "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05],
       "AllowMicroRanges" -> {True, False}, "OptimizePlotMarkers" -> True, 
      "OptimizePlotMarkers" -> True, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& )}}, PlotLabel -> 
    FormBox["\"lg of crytocurrencies daily closing prices, USD\"", 
      TraditionalForm], 
    PlotRange -> {{3.7237536*^9, 3.8907648*^9}, {-2.502932063601495, 
     4.8297335317688}}, PlotRangeClipping -> True, PlotRangePadding -> {{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.08090169943749476]}}, Ticks -> {{}, Automatic}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"BTC\"", "\"ETH\"", "\"BNB\"", "\"XMR\"", "\"BCH\"", "\"LTC\"", 
       "\"ETC\"", "\"LINK\"", "\"FIL\"", "\"EOS\"", "\"MATIC\"", "\"THETA\""},
       "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"], 
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #10}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #11}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #12}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.772079, 0.431554, 0.102387]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.363898, 0.618501, 0.782349]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[1, 0.75, 0]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.647624, 0.37816, 0.614037]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.571589, 0.586483, 0.]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[0.915, 0.3325, 0.2125]|>,
                     "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   TemplateBox[<|
                    "color" -> 
                    RGBColor[
                    0.40082222609352647`, 0.5220066643438841, 0.85]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm], ",", 
               TagBox[#4, HoldForm], ",", 
               TagBox[#5, HoldForm], ",", 
               TagBox[#6, HoldForm], ",", 
               TagBox[#7, HoldForm], ",", 
               TagBox[#8, HoldForm], ",", 
               TagBox[#9, HoldForm], ",", 
               TagBox[#10, HoldForm], ",", 
               TagBox[#11, HoldForm], ",", 
               TagBox[#12, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True", ",", "True", ",", "True", ",", "True", ",", 
                 "True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.890858734289897*^9, 3.890858886431469*^9},
 CellLabel->"Out[208]=",
 CellID->1999720550,ExpressionUUID->"03fa4810-7392-47a2-9841-e01e25316cbb"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["By trading volume", "Subsection",
 CellChangeTimes->{{3.83329731960144*^9, 3.8332973416181917`*^9}},
 CellID->554417786,ExpressionUUID->"cfe33a1b-d8cb-439b-9eac-3c5d3bd91fa3"],

Cell[CellGroupData[{

Cell["\<\
Get the mean daily trading volumes data for the last two weeks and show the \
corresponding data summary:\
\>", "Text",
 CellChangeTimes->{{3.833369409037633*^9, 3.833369438712454*^9}},
 CellID->168184969,ExpressionUUID->"987cd30e-3ae1-4fd7-ad6f-2ff72f830cd5"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"startDate", "=", 
   RowBox[{"DatePlus", "[", 
    RowBox[{"Now", ",", 
     RowBox[{"-", 
      RowBox[{"Quantity", "[", 
       RowBox[{"2", ",", "\"\<Weeks\>\""}], "]"}]}]}], "]"}]}], ";", 
  RowBox[{"aMeans", "=", 
   RowBox[{"ReverseSort", "[", 
    RowBox[{"Select", "[", 
     RowBox[{
      RowBox[{"Association", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"#", "->", 
          RowBox[{"Mean", "[", 
           RowBox[{
            RowBox[{"CryptocurrencyData", "[", 
             RowBox[{"#", ",", "\"\<Volume\>\"", ",", "startDate"}], "]"}], 
            "[", "\"\<Values\>\"", "]"}], "]"}]}], "&"}], "/@", 
        RowBox[{
        "CryptocurrencyData", "[", "\"\<Cryptocurrencies\>\"", "]"}]}], "]"}],
       ",", "NumberQ"}], "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<RecordsSummary\>\"", "]"}], "[", 
  RowBox[{"aMeans", ",", 
   RowBox[{"Thread", "->", "True"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8333694425351267`*^9, 3.8333694440427217`*^9}, {
  3.890858685355956*^9, 3.8908586853566837`*^9}, {3.8908588948037767`*^9, 
  3.890858912866593*^9}},
 CellLabel->"In[211]:=",
 CellID->596294531,ExpressionUUID->"0375f3e0-3c1c-4cc9-9c57-2154f07bbbb6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   TagBox[GridBox[{
      {
       StyleBox["\<\"1 column 1\"\>",
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontFamily->"Times",
        FontColor->RGBColor[0, 0, 1]]},
      {
       TagBox[GridBox[{
          {"\<\"ADA\"\>", "1"},
          {"\<\"BCH\"\>", "1"},
          {"\<\"BNB\"\>", "1"},
          {"\<\"BTC\"\>", "1"},
          {"\<\"DOGE\"\>", "1"},
          {"\<\"EOS\"\>", "1"},
          {"\<\"(Other)\"\>", "15"}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"], "}"}], "\[Rule]", 
  RowBox[{"{", 
   TagBox[GridBox[{
      {
       StyleBox["\<\"1 column 1\"\>",
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontFamily->"Times",
        FontColor->RGBColor[0, 0, 1]]},
      {
       TagBox[GridBox[{
          {"\<\"Min\"\>", "9.19078042857143`*^6"},
          {"\<\"1st Qu\"\>", "9.959885969642857`*^7"},
          {"\<\"Median\"\>", "2.5789312914285713`*^8"},
          {"\<\"3rd Qu\"\>", "8.517381761071428`*^8"},
          {"\<\"Mean\"\>", "2.9385196936496596`*^9"},
          {"\<\"Max\"\>", "2.7535634472642857`*^10"}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"], "}"}]}]], "Output",
 CellChangeTimes->{
  3.890858734866247*^9, {3.890858889703589*^9, 3.890858913817686*^9}},
 CellLabel->"Out[212]=",
 CellID->189130563,ExpressionUUID->"23242700-6f2e-4228-8d03-cfc8b4a08e16"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Pareto principle adherence plot:", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.8332160865913143`*^9, 3.833216126898992*^9}, {
  3.833216317595963*^9, 3.833216334952779*^9}, {3.833216455821968*^9, 
  3.8332164572886066`*^9}, {3.833260796441327*^9, 3.833260797384853*^9}, {
  3.833296776647985*^9, 3.8332968335183687`*^9}, {3.833369452726871*^9, 
  3.83336945641689*^9}},
 CellID->1475574675,ExpressionUUID->"f8171919-b9a8-4d93-b402-9f2e942e2bc1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<ParetoPrinciplePlot\>\"", "]"}], "[", 
  
  RowBox[{"aMeans", ",", 
   RowBox[{"PlotRange", "->", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1.1"}], "}"}]}], ",", 
   RowBox[{"PlotRange", "->", "All"}], ",", 
   RowBox[{
   "PlotLabel", "->", 
    "\"\<Pareto principle for cryptocurrency trading volumes\>\""}]}], 
  "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.833216129168705*^9, 3.833216302500484*^9}, {
  3.833216375346168*^9, 3.833216415600854*^9}, {3.833216452392619*^9, 
  3.8332164526843147`*^9}, {3.833296015649021*^9, 3.833296071269555*^9}, {
  3.833296822705689*^9, 3.8332969078815947`*^9}, {3.8332970666095657`*^9, 
  3.833297189078123*^9}, {3.8332972722850523`*^9, 3.83329727522036*^9}, {
  3.8332973344079123`*^9, 3.833297378700164*^9}, {3.833297433295085*^9, 
  3.833297439573453*^9}, {3.83330266178926*^9, 3.83330267578622*^9}, {
  3.833369412160553*^9, 3.833369413081214*^9}},
 CellLabel->"In[213]:=",
 CellID->842407169,ExpressionUUID->"0a07171a-1e23-41ff-a6d1-a731f2a478d3"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`], 
    AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQEf7M1ff0681nfHHirgsGLlnvMMvc+gfA6H1gkx
RTtiX0P5Ag6W5kU3NbPfQvkiDpcjn6TeegvjSzg0fLh8nSfyHZQv4/B7edSc
2M0wvoJDjKz6u8TfML6SQ6JrzQQP3fdQvoqD3sH3aueDYHw1h3P/zbu5S2F8
DYdYtjzTjAkwvpZDngZHaMdqGF/HYZvzjVX1R2B8PYe024W5VtdgfAOH2ckV
CcVPYHxDB9ebuVdXv4PxjRx6NoSpLPsK4xs7RC/9xqT4B8Y3cUiauHX58X8w
vqkDLBwB+aFjPA==
     "]]}, {{}, {{GraphicsGroupBox[{
        {GrayLevel[1], AbsoluteThickness[4], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
         "Round"], 
         BSplineCurveBox[{
          Offset[{1.8369701987210297`*^-16, 3.}, {21., 1.0137746873895825`}], 
           Offset[{4.898587196589413*^-16, 8.}, {21., 1.0137746873895825`}], 
           Offset[{4.898587196589413*^-16, 10.}, {21., 1.0137746873895825`}], 
           Offset[{4.898587196589413*^-16, 12.}, {21., 1.0137746873895825`}], 
           Offset[{4.898587196589413*^-16, 12.}, {21., 
            1.0137746873895825`}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], 
         BSplineCurveBox[{
          Offset[{1.8369701987210297`*^-16, 3.}, {21., 1.0137746873895825`}], 
           Offset[{4.898587196589413*^-16, 8.}, {21., 1.0137746873895825`}], 
           Offset[{4.898587196589413*^-16, 10.}, {21., 1.0137746873895825`}], 
           Offset[{4.898587196589413*^-16, 12.}, {21., 1.0137746873895825`}], 
           Offset[{4.898587196589413*^-16, 12.}, {21., 
            1.0137746873895825`}]}]}, 
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{12.999999999999998`, 25.000000000000004`}, {21., 
            1.0137746873895825`}], 
           Offset[{13.000000000000002`, 12.000000000000004`}, {21., 
            1.0137746873895825`}], 
           Offset[{-12.999999999999998`, 11.999999999999996`}, {21., 
            1.0137746873895825`}], 
           Offset[{-13.000000000000002`, 24.999999999999996`}, {21., 
            1.0137746873895825`}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox["\<\"HEX\"\>",
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{4.898587196589413*^-16, 18.5}, {21., 1.0137746873895825}], 
         NCache[ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]]}], 
      {Opacity[0], 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.012833333333333334`], AbsoluteThickness[1.6]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.012833333333333334`], AbsoluteThickness[1.6], 
        TagBox[
         TooltipBox[PointBox[{20., 0.9998510623523027}],
          StyleBox[
           PaneBox[
            FrameBox[
            "\"THETA\"", LabelStyle -> {}, Background -> None, ContentPadding -> 
             False, LabelStyle -> {}, Frame -> True, RoundingRadius -> 4, 
             Background -> GrayLevel[1, 0.65], FrameStyle -> None, 
             FrameMargins -> 2, BaselinePosition -> Automatic, LabelingSize -> 
             DirectedInfinity[1], StripOnInput -> False], FrameMargins -> 
            0], {}, StripOnInput -> False]],
         Annotation[#, 
          Style[
           Pane[
            Framed[
            "THETA", LabelStyle -> {}, Background -> None, ContentPadding -> 
             False, {LabelStyle -> {}, Frame -> True, RoundingRadius -> 4, 
              Background -> GrayLevel[1, 0.65], FrameStyle -> None, 
              FrameMargins -> 2, BaselinePosition -> Automatic, LabelingSize -> 
              DirectedInfinity[1]}], FrameMargins -> 0], {}], "Tooltip"]& ]}},
       GraphicsGroupBox[{
        {GrayLevel[1], AbsoluteThickness[4], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
         "Round"], 
         BSplineCurveBox[{
          Offset[{2.121320343559642, -2.121320343559643}, {
            19.111163078559034`, 0.9897872850341976}], 
           Offset[{5.656854249492379, -5.6568542494923815`}, {
            19.111163078559034`, 0.9897872850341976}], 
           Offset[{7.65685424949238, -5.6568542494923815`}, {
            19.111163078559034`, 0.9897872850341976}], 
           Offset[{9.65685424949238, -5.6568542494923815`}, {
            19.111163078559034`, 0.9897872850341976}], 
           Offset[{9.65685424949238, -5.6568542494923815`}, {
            19.111163078559034`, 0.9897872850341976}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], 
         BSplineCurveBox[{
          Offset[{2.121320343559642, -2.121320343559643}, {
            19.111163078559034`, 0.9897872850341976}], 
           Offset[{5.656854249492379, -5.6568542494923815`}, {
            19.111163078559034`, 0.9897872850341976}], 
           Offset[{7.65685424949238, -5.6568542494923815`}, {
            19.111163078559034`, 0.9897872850341976}], 
           Offset[{9.65685424949238, -5.6568542494923815`}, {
            19.111163078559034`, 0.9897872850341976}], 
           Offset[{9.65685424949238, -5.6568542494923815`}, {
            19.111163078559034`, 0.9897872850341976}]}]}, 
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{34.656854249492376`, -0.45685424949237863`}, {
            19.111163078559034`, 0.9897872850341976}], 
           Offset[{34.65685424949238, -13.456854249492379`}, {
            19.111163078559034`, 0.9897872850341976}], 
           Offset[{9.656854249492381, -13.456854249492384`}, {
            19.111163078559034`, 0.9897872850341976}], 
           Offset[{9.656854249492378, -0.45685424949238396`}, {
            19.111163078559034`, 0.9897872850341976}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox["\<\"VET\"\>",
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{22.15685424949238, -6.956854249492381}, \
{19.111163078559034, 0.9897872850341976}], NCache[
         ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]]}], GraphicsGroupBox[{
        {GrayLevel[1], AbsoluteThickness[4], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
         "Round"], 
         BSplineCurveBox[{
          Offset[{1.8369701987210297`*^-16, 3.}, {18., 1.0125111366063198`}], 
           Offset[{4.898587196589413*^-16, 8.}, {18., 1.0125111366063198`}], 
           Offset[{4.898587196589413*^-16, 10.}, {18., 1.0125111366063198`}], 
           Offset[{4.898587196589413*^-16, 12.}, {18., 1.0125111366063198`}], 
           Offset[{4.898587196589413*^-16, 12.}, {18., 
            1.0125111366063198`}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], 
         BSplineCurveBox[{
          Offset[{1.8369701987210297`*^-16, 3.}, {18., 1.0125111366063198`}], 
           Offset[{4.898587196589413*^-16, 8.}, {18., 1.0125111366063198`}], 
           Offset[{4.898587196589413*^-16, 10.}, {18., 1.0125111366063198`}], 
           Offset[{4.898587196589413*^-16, 12.}, {18., 1.0125111366063198`}], 
           Offset[{4.898587196589413*^-16, 12.}, {18., 
            1.0125111366063198`}]}]}, 
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{12.999999999999998`, 25.000000000000004`}, {18., 
            1.0125111366063198`}], 
           Offset[{13.000000000000002`, 12.000000000000004`}, {18., 
            1.0125111366063198`}], 
           Offset[{-12.999999999999998`, 11.999999999999996`}, {18., 
            1.0125111366063198`}], 
           Offset[{-13.000000000000002`, 24.999999999999996`}, {18., 
            1.0125111366063198`}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox["\<\"XLM\"\>",
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{4.898587196589413*^-16, 18.5}, {18., 1.0125111366063198}], 
         NCache[ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]]}], GraphicsGroupBox[{
        {GrayLevel[1], AbsoluteThickness[4], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
         "Round"], 
         BSplineCurveBox[{
          Offset[{-2.1213203435596424`, 2.121320343559643}, {
            16.888836921440966`, 1.0076248459336228`}], 
           Offset[{-5.65685424949238, 5.656854249492381}, {
            16.888836921440966`, 1.0076248459336228`}], 
           Offset[{-7.65685424949238, 5.656854249492381}, {
            16.888836921440966`, 1.0076248459336228`}], 
           Offset[{-9.65685424949238, 5.656854249492381}, {
            16.888836921440966`, 1.0076248459336228`}], 
           Offset[{-9.65685424949238, 5.656854249492381}, {
            16.888836921440966`, 1.0076248459336228`}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], 
         BSplineCurveBox[{
          Offset[{-2.1213203435596424`, 2.121320343559643}, {
            16.888836921440966`, 1.0076248459336228`}], 
           Offset[{-5.65685424949238, 5.656854249492381}, {
            16.888836921440966`, 1.0076248459336228`}], 
           Offset[{-7.65685424949238, 5.656854249492381}, {
            16.888836921440966`, 1.0076248459336228`}], 
           Offset[{-9.65685424949238, 5.656854249492381}, {
            16.888836921440966`, 1.0076248459336228`}], 
           Offset[{-9.65685424949238, 5.656854249492381}, {
            16.888836921440966`, 1.0076248459336228`}]}]}, 
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{-9.656854249492381, 13.456854249492384`}, {
            16.888836921440966`, 1.0076248459336228`}], 
           Offset[{-9.656854249492378, 0.45685424949238396`}, {
            16.888836921440966`, 1.0076248459336228`}], 
           Offset[{-37.656854249492376`, 0.45685424949237685`}, {
            16.888836921440966`, 1.0076248459336228`}], 
           Offset[{-37.65685424949238, 13.456854249492377`}, {
            16.888836921440966`, 1.0076248459336228`}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox["\<\"XMR\"\>",
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{-23.65685424949238, 6.95685424949238}, \
{16.888836921440966, 1.0076248459336228}], NCache[
         ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]]}], GraphicsGroupBox[{
        {GrayLevel[1], AbsoluteThickness[4], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
         "Round"], 
         BSplineCurveBox[{
          Offset[{2.121320343559642, -2.121320343559643}, {
            16.111163078559034`, 0.9868968723511748}], 
           Offset[{5.656854249492379, -5.6568542494923815`}, {
            16.111163078559034`, 0.9868968723511748}], 
           Offset[{7.65685424949238, -5.6568542494923815`}, {
            16.111163078559034`, 0.9868968723511748}], 
           Offset[{9.65685424949238, -5.6568542494923815`}, {
            16.111163078559034`, 0.9868968723511748}], 
           Offset[{9.65685424949238, -5.6568542494923815`}, {
            16.111163078559034`, 0.9868968723511748}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], 
         BSplineCurveBox[{
          Offset[{2.121320343559642, -2.121320343559643}, {
            16.111163078559034`, 0.9868968723511748}], 
           Offset[{5.656854249492379, -5.6568542494923815`}, {
            16.111163078559034`, 0.9868968723511748}], 
           Offset[{7.65685424949238, -5.6568542494923815`}, {
            16.111163078559034`, 0.9868968723511748}], 
           Offset[{9.65685424949238, -5.6568542494923815`}, {
            16.111163078559034`, 0.9868968723511748}], 
           Offset[{9.65685424949238, -5.6568542494923815`}, {
            16.111163078559034`, 0.9868968723511748}]}]}, 
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{36.656854249492376`, -0.45685424949237863`}, {
            16.111163078559034`, 0.9868968723511748}], 
           Offset[{36.65685424949238, -13.456854249492379`}, {
            16.111163078559034`, 0.9868968723511748}], 
           Offset[{9.656854249492381, -13.456854249492384`}, {
            16.111163078559034`, 0.9868968723511748}], 
           Offset[{9.656854249492378, -0.45685424949238396`}, {
            16.111163078559034`, 0.9868968723511748}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox["\<\"BCH\"\>",
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{23.15685424949238, -6.956854249492381}, \
{16.111163078559034, 0.9868968723511748}], NCache[
         ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]]}], GraphicsGroupBox[{
        {GrayLevel[1], AbsoluteThickness[4], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
         "Round"], 
         BSplineCurveBox[{
          Offset[{-2.1213203435596424`, 2.121320343559643}, {
            14.888836921440966`, 1.0046410821488145`}], 
           Offset[{-5.65685424949238, 5.656854249492381}, {
            14.888836921440966`, 1.0046410821488145`}], 
           Offset[{-7.65685424949238, 5.656854249492381}, {
            14.888836921440966`, 1.0046410821488145`}], 
           Offset[{-9.65685424949238, 5.656854249492381}, {
            14.888836921440966`, 1.0046410821488145`}], 
           Offset[{-9.65685424949238, 5.656854249492381}, {
            14.888836921440966`, 1.0046410821488145`}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], 
         BSplineCurveBox[{
          Offset[{-2.1213203435596424`, 2.121320343559643}, {
            14.888836921440966`, 1.0046410821488145`}], 
           Offset[{-5.65685424949238, 5.656854249492381}, {
            14.888836921440966`, 1.0046410821488145`}], 
           Offset[{-7.65685424949238, 5.656854249492381}, {
            14.888836921440966`, 1.0046410821488145`}], 
           Offset[{-9.65685424949238, 5.656854249492381}, {
            14.888836921440966`, 1.0046410821488145`}], 
           Offset[{-9.65685424949238, 5.656854249492381}, {
            14.888836921440966`, 1.0046410821488145`}]}]}, 
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{-9.656854249492381, 13.456854249492384`}, {
            14.888836921440966`, 1.0046410821488145`}], 
           Offset[{-9.656854249492378, 0.45685424949238307`}, {
            14.888836921440966`, 1.0046410821488145`}], 
           Offset[{-36.656854249492376`, 0.45685424949237774`}, {
            14.888836921440966`, 1.0046410821488145`}], 
           Offset[{-36.65685424949238, 13.456854249492377`}, {
            14.888836921440966`, 1.0046410821488145`}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox["\<\"EOS\"\>",
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{-23.15685424949238, 6.95685424949238}, \
{14.888836921440966, 1.0046410821488145}], NCache[
         ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]]}], GraphicsGroupBox[{
        {GrayLevel[1], AbsoluteThickness[4], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
         "Round"], 
         BSplineCurveBox[{
          Offset[{-5.51091059616309*^-16, -3.}, {14., 0.9789619704027158}], 
           Offset[{-1.4695761589768238`*^-15, -8.}, {14., 
            0.9789619704027158}], 
           Offset[{-1.4695761589768238`*^-15, -10.}, {14., 
            0.9789619704027158}], 
           Offset[{-1.4695761589768238`*^-15, -12.}, {14., 
            0.9789619704027158}], 
           Offset[{-1.4695761589768238`*^-15, -12.}, {14., 
            0.9789619704027158}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], 
         BSplineCurveBox[{
          Offset[{-5.51091059616309*^-16, -3.}, {14., 0.9789619704027158}], 
           Offset[{-1.4695761589768238`*^-15, -8.}, {14., 
            0.9789619704027158}], 
           Offset[{-1.4695761589768238`*^-15, -10.}, {14., 
            0.9789619704027158}], 
           Offset[{-1.4695761589768238`*^-15, -12.}, {14., 
            0.9789619704027158}], 
           Offset[{-1.4695761589768238`*^-15, -12.}, {14., 
            0.9789619704027158}]}]}, 
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{12.499999999999996`, -11.999999999999996`}, {14., 
            0.9789619704027158}], 
           Offset[{12.5, -24.999999999999996`}, {14., 0.9789619704027158}], 
           Offset[{-12.5, -25.000000000000004`}, {14., 0.9789619704027158}], 
           Offset[{-12.500000000000004`, -12.000000000000004`}, {14., 
            0.9789619704027158}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox["\<\"ETC\"\>",
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{-1.4695761589768238*^-15, -18.5}, {14., 0.9789619704027158}],
          NCache[ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]]}], GraphicsGroupBox[{
        {GrayLevel[1], AbsoluteThickness[4], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
         "Round"], 
         BSplineCurveBox[{
          Offset[{-2.1213203435596424`, 2.121320343559643}, {
            12.888836921440966`, 0.9994292065371088}], 
           Offset[{-5.65685424949238, 5.656854249492381}, {
            12.888836921440966`, 0.9994292065371088}], 
           Offset[{-7.65685424949238, 5.656854249492381}, {
            12.888836921440966`, 0.9994292065371088}], 
           Offset[{-9.65685424949238, 5.656854249492381}, {
            12.888836921440966`, 0.9994292065371088}], 
           Offset[{-9.65685424949238, 5.656854249492381}, {
            12.888836921440966`, 0.9994292065371088}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], 
         BSplineCurveBox[{
          Offset[{-2.1213203435596424`, 2.121320343559643}, {
            12.888836921440966`, 0.9994292065371088}], 
           Offset[{-5.65685424949238, 5.656854249492381}, {
            12.888836921440966`, 0.9994292065371088}], 
           Offset[{-7.65685424949238, 5.656854249492381}, {
            12.888836921440966`, 0.9994292065371088}], 
           Offset[{-9.65685424949238, 5.656854249492381}, {
            12.888836921440966`, 0.9994292065371088}], 
           Offset[{-9.65685424949238, 5.656854249492381}, {
            12.888836921440966`, 0.9994292065371088}]}]}, 
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{-9.656854249492381, 13.456854249492384`}, {
            12.888836921440966`, 0.9994292065371088}], 
           Offset[{-9.656854249492378, 0.45685424949238307`}, {
            12.888836921440966`, 0.9994292065371088}], 
           Offset[{-34.656854249492376`, 0.45685424949237774`}, {
            12.888836921440966`, 0.9994292065371088}], 
           Offset[{-34.65685424949238, 13.456854249492377`}, {
            12.888836921440966`, 0.9994292065371088}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox["\<\"TRX\"\>",
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{-22.15685424949238, 6.95685424949238}, \
{12.888836921440966, 0.9994292065371088}], NCache[
         ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]]}], GraphicsGroupBox[{
        {GrayLevel[1], AbsoluteThickness[4], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
         "Round"], 
         BSplineCurveBox[{
          Offset[{-5.51091059616309*^-16, -3.}, {12., 0.9726031281955996}], 
           Offset[{-1.4695761589768238`*^-15, -8.}, {12., 
            0.9726031281955996}], 
           Offset[{-1.4695761589768238`*^-15, -10.}, {12., 
            0.9726031281955996}], 
           Offset[{-1.4695761589768238`*^-15, -12.}, {12., 
            0.9726031281955996}], 
           Offset[{-1.4695761589768238`*^-15, -12.}, {12., 
            0.9726031281955996}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], 
         BSplineCurveBox[{
          Offset[{-5.51091059616309*^-16, -3.}, {12., 0.9726031281955996}], 
           Offset[{-1.4695761589768238`*^-15, -8.}, {12., 
            0.9726031281955996}], 
           Offset[{-1.4695761589768238`*^-15, -10.}, {12., 
            0.9726031281955996}], 
           Offset[{-1.4695761589768238`*^-15, -12.}, {12., 
            0.9726031281955996}], 
           Offset[{-1.4695761589768238`*^-15, -12.}, {12., 
            0.9726031281955996}]}]}, 
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{9.999999999999996, -11.999999999999998`}, {12., 
            0.9726031281955996}], 
           Offset[{10., -25.}, {12., 0.9726031281955996}], 
           Offset[{-10., -25.}, {12., 0.9726031281955996}], 
           Offset[{-10.000000000000004`, -12.000000000000002`}, {12., 
            0.9726031281955996}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox["\<\"FIL\"\>",
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{-1.4695761589768238*^-15, -18.5}, {12., 0.9726031281955996}],
          NCache[ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]]}], 
      {Opacity[0], 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.012833333333333334`], AbsoluteThickness[1.6]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.012833333333333334`], AbsoluteThickness[1.6], 
        TagBox[
         TooltipBox[PointBox[{11., 0.983037731086364}],
          StyleBox[
           PaneBox[
            FrameBox[
            "\"LINK\"", LabelStyle -> {}, Background -> None, ContentPadding -> 
             False, LabelStyle -> {}, Frame -> True, RoundingRadius -> 4, 
             Background -> GrayLevel[1, 0.65], FrameStyle -> None, 
             FrameMargins -> 2, BaselinePosition -> Automatic, LabelingSize -> 
             DirectedInfinity[1], StripOnInput -> False], FrameMargins -> 
            0], {}, StripOnInput -> False]],
         Annotation[#, 
          Style[
           Pane[
            Framed[
            "LINK", LabelStyle -> {}, Background -> None, ContentPadding -> 
             False, {LabelStyle -> {}, Frame -> True, RoundingRadius -> 4, 
              Background -> GrayLevel[1, 0.65], FrameStyle -> None, 
              FrameMargins -> 2, BaselinePosition -> Automatic, LabelingSize -> 
              DirectedInfinity[1]}], FrameMargins -> 0], {}], "Tooltip"]& ]}},
       GraphicsGroupBox[{
        {GrayLevel[1], AbsoluteThickness[4], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
         "Round"], 
         BSplineCurveBox[{
          Offset[{-2.1213203435596424`, 2.121320343559643}, {
            9.888836921440966, 0.9885987183036068}], 
           Offset[{-5.65685424949238, 5.656854249492381}, {9.888836921440966, 
            0.9885987183036068}], 
           Offset[{-7.65685424949238, 5.656854249492381}, {9.888836921440966, 
            0.9885987183036068}], 
           Offset[{-9.65685424949238, 5.656854249492381}, {9.888836921440966, 
            0.9885987183036068}], 
           Offset[{-9.65685424949238, 5.656854249492381}, {9.888836921440966, 
            0.9885987183036068}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], 
         BSplineCurveBox[{
          Offset[{-2.1213203435596424`, 2.121320343559643}, {
            9.888836921440966, 0.9885987183036068}], 
           Offset[{-5.65685424949238, 5.656854249492381}, {9.888836921440966, 
            0.9885987183036068}], 
           Offset[{-7.65685424949238, 5.656854249492381}, {9.888836921440966, 
            0.9885987183036068}], 
           Offset[{-9.65685424949238, 5.656854249492381}, {9.888836921440966, 
            0.9885987183036068}], 
           Offset[{-9.65685424949238, 5.656854249492381}, {9.888836921440966, 
            0.9885987183036068}]}]}, 
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{-9.65685424949238, 13.456854249492384`}, {9.888836921440966,
             0.9885987183036068}], 
           Offset[{-9.65685424949238, 0.45685424949238485`}, {
            9.888836921440966, 0.9885987183036068}], 
           Offset[{-46.65685424949238, 0.45685424949237596`}, {
            9.888836921440966, 0.9885987183036068}], 
           Offset[{-46.65685424949238, 13.456854249492377`}, {
            9.888836921440966, 0.9885987183036068}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox["\<\"MATIC\"\>",
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{-28.15685424949238, 6.95685424949238}, \
{9.888836921440966, 0.9885987183036068}], NCache[
         ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]]}], 
      {Opacity[0], 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.012833333333333334`], AbsoluteThickness[1.6]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.012833333333333334`], AbsoluteThickness[1.6], 
        TagBox[
         TooltipBox[PointBox[{9., 0.9742777654629827}],
          StyleBox[
           PaneBox[
            FrameBox[
            "\"ADA\"", LabelStyle -> {}, Background -> None, ContentPadding -> 
             False, LabelStyle -> {}, Frame -> True, RoundingRadius -> 4, 
             Background -> GrayLevel[1, 0.65], FrameStyle -> None, 
             FrameMargins -> 2, BaselinePosition -> Automatic, LabelingSize -> 
             DirectedInfinity[1], StripOnInput -> False], FrameMargins -> 
            0], {}, StripOnInput -> False]],
         Annotation[#, 
          Style[
           Pane[
            Framed[
            "ADA", LabelStyle -> {}, Background -> None, ContentPadding -> 
             False, {LabelStyle -> {}, Frame -> True, RoundingRadius -> 4, 
              Background -> GrayLevel[1, 0.65], FrameStyle -> None, 
              FrameMargins -> 2, BaselinePosition -> Automatic, LabelingSize -> 
              DirectedInfinity[1]}], FrameMargins -> 0], {}], "Tooltip"]& ]}},
       GraphicsGroupBox[{
        {GrayLevel[1], AbsoluteThickness[4], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
         "Round"], 
         BSplineCurveBox[{
          Offset[{2.121320343559642, -2.121320343559643}, {8.111163078559034, 
            0.9584461703740893}], 
           Offset[{5.656854249492379, -5.6568542494923815`}, {
            8.111163078559034, 0.9584461703740893}], 
           Offset[{7.65685424949238, -5.6568542494923815`}, {
            8.111163078559034, 0.9584461703740893}], 
           Offset[{9.65685424949238, -5.6568542494923815`}, {
            8.111163078559034, 0.9584461703740893}], 
           Offset[{9.65685424949238, -5.6568542494923815`}, {
            8.111163078559034, 0.9584461703740893}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], 
         BSplineCurveBox[{
          Offset[{2.121320343559642, -2.121320343559643}, {8.111163078559034, 
            0.9584461703740893}], 
           Offset[{5.656854249492379, -5.6568542494923815`}, {
            8.111163078559034, 0.9584461703740893}], 
           Offset[{7.65685424949238, -5.6568542494923815`}, {
            8.111163078559034, 0.9584461703740893}], 
           Offset[{9.65685424949238, -5.6568542494923815`}, {
            8.111163078559034, 0.9584461703740893}], 
           Offset[{9.65685424949238, -5.6568542494923815`}, {
            8.111163078559034, 0.9584461703740893}]}]}, 
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{33.656854249492376`, -0.45685424949237863`}, {
            8.111163078559034, 0.9584461703740893}], 
           Offset[{33.65685424949238, -13.456854249492379`}, {
            8.111163078559034, 0.9584461703740893}], 
           Offset[{9.656854249492381, -13.456854249492384`}, {
            8.111163078559034, 0.9584461703740893}], 
           Offset[{9.656854249492378, -0.45685424949238396`}, {
            8.111163078559034, 0.9584461703740893}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox["\<\"LTC\"\>",
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{21.65685424949238, -6.956854249492381}, \
{8.111163078559034, 0.9584461703740893}], NCache[
         ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]]}], GraphicsGroupBox[{
        {GrayLevel[1], AbsoluteThickness[4], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
         "Round"], 
         BSplineCurveBox[{
          Offset[{-5.51091059616309*^-16, -3.}, {7., 0.945620535635884}], 
           Offset[{-1.4695761589768238`*^-15, -8.}, {7., 0.945620535635884}], 
           Offset[{-1.4695761589768238`*^-15, -10.}, {7., 0.945620535635884}],
            Offset[{-1.4695761589768238`*^-15, -12.}, {7., 
            0.945620535635884}], 
           Offset[{-1.4695761589768238`*^-15, -12.}, {7., 
            0.945620535635884}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], 
         BSplineCurveBox[{
          Offset[{-5.51091059616309*^-16, -3.}, {7., 0.945620535635884}], 
           Offset[{-1.4695761589768238`*^-15, -8.}, {7., 0.945620535635884}], 
           Offset[{-1.4695761589768238`*^-15, -10.}, {7., 0.945620535635884}],
            Offset[{-1.4695761589768238`*^-15, -12.}, {7., 
            0.945620535635884}], 
           Offset[{-1.4695761589768238`*^-15, -12.}, {7., 
            0.945620535635884}]}]}, 
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{12.999999999999996`, -11.999999999999996`}, {7., 
            0.945620535635884}], 
           Offset[{13., -24.999999999999996`}, {7., 0.945620535635884}], 
           Offset[{-13., -25.000000000000004`}, {7., 0.945620535635884}], 
           Offset[{-13.000000000000004`, -12.000000000000004`}, {7., 
            0.945620535635884}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox["\<\"BNB\"\>",
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{-1.4695761589768238*^-15, -18.5}, {7., 0.945620535635884}], 
         NCache[ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]]}], GraphicsGroupBox[{
        {GrayLevel[1], AbsoluteThickness[4], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
         "Round"], 
         BSplineCurveBox[{
          Offset[{-2.1213203435596424`, 2.121320343559643}, {
            5.888836921440965, 0.9581105567310667}], 
           Offset[{-5.65685424949238, 5.656854249492381}, {5.888836921440965, 
            0.9581105567310667}], 
           Offset[{-7.65685424949238, 5.656854249492381}, {5.888836921440965, 
            0.9581105567310667}], 
           Offset[{-9.65685424949238, 5.656854249492381}, {5.888836921440965, 
            0.9581105567310667}], 
           Offset[{-9.65685424949238, 5.656854249492381}, {5.888836921440965, 
            0.9581105567310667}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], 
         BSplineCurveBox[{
          Offset[{-2.1213203435596424`, 2.121320343559643}, {
            5.888836921440965, 0.9581105567310667}], 
           Offset[{-5.65685424949238, 5.656854249492381}, {5.888836921440965, 
            0.9581105567310667}], 
           Offset[{-7.65685424949238, 5.656854249492381}, {5.888836921440965, 
            0.9581105567310667}], 
           Offset[{-9.65685424949238, 5.656854249492381}, {5.888836921440965, 
            0.9581105567310667}], 
           Offset[{-9.65685424949238, 5.656854249492381}, {5.888836921440965, 
            0.9581105567310667}]}]}, 
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{-9.65685424949238, 13.456854249492384`}, {5.888836921440965,
             0.9581105567310667}], 
           Offset[{-9.65685424949238, 0.45685424949238396`}, {
            5.888836921440965, 0.9581105567310667}], 
           Offset[{-44.65685424949238, 0.45685424949237685`}, {
            5.888836921440965, 0.9581105567310667}], 
           Offset[{-44.65685424949238, 13.456854249492377`}, {
            5.888836921440965, 0.9581105567310667}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox["\<\"DOGE\"\>",
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{-27.15685424949238, 6.95685424949238}, \
{5.888836921440965, 0.9581105567310667}], NCache[
         ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]]}], GraphicsGroupBox[{
        {GrayLevel[1], AbsoluteThickness[4], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
         "Round"], 
         BSplineCurveBox[{
          Offset[{-5.51091059616309*^-16, -3.}, {5., 0.921510116962037}], 
           Offset[{-1.4695761589768238`*^-15, -8.}, {5., 0.921510116962037}], 
           Offset[{-1.4695761589768238`*^-15, -10.}, {5., 0.921510116962037}],
            Offset[{-1.4695761589768238`*^-15, -12.}, {5., 
            0.921510116962037}], 
           Offset[{-1.4695761589768238`*^-15, -12.}, {5., 
            0.921510116962037}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], 
         BSplineCurveBox[{
          Offset[{-5.51091059616309*^-16, -3.}, {5., 0.921510116962037}], 
           Offset[{-1.4695761589768238`*^-15, -8.}, {5., 0.921510116962037}], 
           Offset[{-1.4695761589768238`*^-15, -10.}, {5., 0.921510116962037}],
            Offset[{-1.4695761589768238`*^-15, -12.}, {5., 
            0.921510116962037}], 
           Offset[{-1.4695761589768238`*^-15, -12.}, {5., 
            0.921510116962037}]}]}, 
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{12.999999999999996`, -11.999999999999996`}, {5., 
            0.921510116962037}], 
           Offset[{13., -24.999999999999996`}, {5., 0.921510116962037}], 
           Offset[{-13., -25.000000000000004`}, {5., 0.921510116962037}], 
           Offset[{-13.000000000000004`, -12.000000000000004`}, {5., 
            0.921510116962037}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox["\<\"XRP\"\>",
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{-1.4695761589768238*^-15, -18.5}, {5., 0.921510116962037}], 
         NCache[ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]]}], GraphicsGroupBox[{
        {GrayLevel[1], AbsoluteThickness[4], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
         "Round"], 
         BSplineCurveBox[{
          Offset[{-3., 3.6739403974420594`*^-16}, {3.842791666666667, 
            0.9193314787860124}], 
           Offset[{-8., 9.797174393178826*^-16}, {3.842791666666667, 
            0.9193314787860124}], 
           Offset[{-10., 9.797174393178826*^-16}, {3.842791666666667, 
            0.9193314787860124}], 
           Offset[{-12., 9.797174393178826*^-16}, {3.842791666666667, 
            0.9193314787860124}], 
           Offset[{-12., 9.797174393178826*^-16}, {3.842791666666667, 
            0.9193314787860124}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], 
         BSplineCurveBox[{
          Offset[{-3., 3.6739403974420594`*^-16}, {3.842791666666667, 
            0.9193314787860124}], 
           Offset[{-8., 9.797174393178826*^-16}, {3.842791666666667, 
            0.9193314787860124}], 
           Offset[{-10., 9.797174393178826*^-16}, {3.842791666666667, 
            0.9193314787860124}], 
           Offset[{-12., 9.797174393178826*^-16}, {3.842791666666667, 
            0.9193314787860124}], 
           Offset[{-12., 9.797174393178826*^-16}, {3.842791666666667, 
            0.9193314787860124}]}]}, 
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{-12., 6.500000000000004}, {3.842791666666667, 
            0.9193314787860124}], 
           Offset[{-12., -6.499999999999996}, {3.842791666666667, 
            0.9193314787860124}], 
           Offset[{-46., -6.500000000000003}, {3.842791666666667, 
            0.9193314787860124}], 
           Offset[{-46., 6.499999999999997}, {3.842791666666667, 
            0.9193314787860124}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox["\<\"USDC\"\>",
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{-29., 9.797174393178826*^-16}, \
{3.842791666666667, 0.9193314787860124}], NCache[
         ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]]}], GraphicsGroupBox[{
        {GrayLevel[1], AbsoluteThickness[4], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
         "Round"], 
         BSplineCurveBox[{
          Offset[{-2.121320343559643, -2.1213203435596424`}, {
            2.888836921440965, 0.8454503152527533}], 
           Offset[{-5.6568542494923815`, -5.65685424949238}, {
            2.888836921440965, 0.8454503152527533}], 
           Offset[{-7.6568542494923815`, -5.65685424949238}, {
            2.888836921440965, 0.8454503152527533}], 
           Offset[{-9.656854249492381, -5.65685424949238}, {2.888836921440965,
             0.8454503152527533}], 
           Offset[{-9.656854249492381, -5.65685424949238}, {2.888836921440965,
             0.8454503152527533}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], 
         BSplineCurveBox[{
          Offset[{-2.121320343559643, -2.1213203435596424`}, {
            2.888836921440965, 0.8454503152527533}], 
           Offset[{-5.6568542494923815`, -5.65685424949238}, {
            2.888836921440965, 0.8454503152527533}], 
           Offset[{-7.6568542494923815`, -5.65685424949238}, {
            2.888836921440965, 0.8454503152527533}], 
           Offset[{-9.656854249492381, -5.65685424949238}, {2.888836921440965,
             0.8454503152527533}], 
           Offset[{-9.656854249492381, -5.65685424949238}, {2.888836921440965,
             0.8454503152527533}]}]}, 
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{-9.656854249492385, -0.45685424949237685`}, {
            2.888836921440965, 0.8454503152527533}], 
           Offset[{-9.656854249492381, -13.456854249492377`}, {
            2.888836921440965, 0.8454503152527533}], 
           Offset[{-34.65685424949238, -13.456854249492382`}, {
            2.888836921440965, 0.8454503152527533}], 
           Offset[{-34.65685424949238, -0.4568542494923822}, {
            2.888836921440965, 0.8454503152527533}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox["\<\"ETH\"\>",
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{-22.156854249492383, -6.9568542494923795}, \
{2.888836921440965, 0.8454503152527533}], NCache[
         ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]]}], GraphicsGroupBox[{
        {GrayLevel[1], AbsoluteThickness[4], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
         "Round"], 
         BSplineCurveBox[{
          Offset[{2.121320343559642, -2.121320343559643}, {2.111163078559035, 
            0.6949721261408491}], 
           Offset[{5.656854249492379, -5.6568542494923815`}, {
            2.111163078559035, 0.6949721261408491}], 
           Offset[{7.65685424949238, -5.6568542494923815`}, {
            2.111163078559035, 0.6949721261408491}], 
           Offset[{9.65685424949238, -5.6568542494923815`}, {
            2.111163078559035, 0.6949721261408491}], 
           Offset[{9.65685424949238, -5.6568542494923815`}, {
            2.111163078559035, 0.6949721261408491}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], 
         BSplineCurveBox[{
          Offset[{2.121320343559642, -2.121320343559643}, {2.111163078559035, 
            0.6949721261408491}], 
           Offset[{5.656854249492379, -5.6568542494923815`}, {
            2.111163078559035, 0.6949721261408491}], 
           Offset[{7.65685424949238, -5.6568542494923815`}, {
            2.111163078559035, 0.6949721261408491}], 
           Offset[{9.65685424949238, -5.6568542494923815`}, {
            2.111163078559035, 0.6949721261408491}], 
           Offset[{9.65685424949238, -5.6568542494923815`}, {
            2.111163078559035, 0.6949721261408491}]}]}, 
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{34.656854249492376`, -0.45685424949237863`}, {
            2.111163078559035, 0.6949721261408491}], 
           Offset[{34.65685424949238, -13.456854249492379`}, {
            2.111163078559035, 0.6949721261408491}], 
           Offset[{9.656854249492381, -13.456854249492384`}, {
            2.111163078559035, 0.6949721261408491}], 
           Offset[{9.656854249492378, -0.45685424949238396`}, {
            2.111163078559035, 0.6949721261408491}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox["\<\"BTC\"\>",
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{22.15685424949238, -6.956854249492381}, \
{2.111163078559035, 0.6949721261408491}], NCache[
         ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]]}], GraphicsGroupBox[{
        {GrayLevel[1], AbsoluteThickness[4], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
         "Round"], 
         BSplineCurveBox[{
          Offset[{2.121320343559643, 2.1213203435596424`}, {
            1.1111630785590352`, 0.4559582798509876}], 
           Offset[{5.656854249492381, 5.65685424949238}, {1.1111630785590352`,
             0.4559582798509876}], 
           Offset[{7.65685424949238, 5.65685424949238}, {1.1111630785590352`, 
            0.4559582798509876}], 
           Offset[{9.65685424949238, 5.65685424949238}, {1.1111630785590352`, 
            0.4559582798509876}], 
           Offset[{9.65685424949238, 5.65685424949238}, {1.1111630785590352`, 
            0.4559582798509876}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], 
         BSplineCurveBox[{
          Offset[{2.121320343559643, 2.1213203435596424`}, {
            1.1111630785590352`, 0.4559582798509876}], 
           Offset[{5.656854249492381, 5.65685424949238}, {1.1111630785590352`,
             0.4559582798509876}], 
           Offset[{7.65685424949238, 5.65685424949238}, {1.1111630785590352`, 
            0.4559582798509876}], 
           Offset[{9.65685424949238, 5.65685424949238}, {1.1111630785590352`, 
            0.4559582798509876}], 
           Offset[{9.65685424949238, 5.65685424949238}, {1.1111630785590352`, 
            0.4559582798509876}]}]}, 
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{42.65685424949238, 13.456854249492384`}, {
            1.1111630785590352`, 0.4559582798509876}], 
           Offset[{42.65685424949238, 0.45685424949238307`}, {
            1.1111630785590352`, 0.4559582798509876}], 
           Offset[{9.65685424949238, 0.45685424949237596`}, {
            1.1111630785590352`, 0.4559582798509876}], 
           Offset[{9.65685424949238, 13.456854249492377`}, {
            1.1111630785590352`, 0.4559582798509876}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox["\<\"USDT\"\>",
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{26.15685424949238, 6.9568542494923795}, \
{1.1111630785590352, 0.4559582798509876}], NCache[
         ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]]}]}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, {{0., 
       FormBox["\"0%\"", TraditionalForm]}, {2.1, 
       FormBox["\"10%\"", TraditionalForm]}, {4.2, 
       FormBox["\"20%\"", TraditionalForm]}, {6.300000000000001, 
       FormBox["\"30%\"", TraditionalForm]}, {8.4, 
       FormBox["\"40%\"", TraditionalForm]}, {10.5, 
       FormBox["\"50%\"", TraditionalForm]}}}},
  GridLines->{{0., 2.1, 4.2, 6.300000000000001, 8.4, 10.5}, {0.8}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->{{All, All}, {All, All}},
  ImageSize->{590.99609375, Automatic},
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
   "\"Pareto principle for cryptocurrency trading volumes\"", TraditionalForm],
  PlotRange->{{0., 21.}, {0., 1.1}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.08]}, {0, 
     Scaled[0.12944271909999158`]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.890858734921762*^9, 3.890858916170294*^9},
 CellLabel->"Out[213]=",
 CellID->2131469926,ExpressionUUID->"7f81f06f-2470-4ce1-bc2d-56431e5a4e31"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Here are the Pareto statistic values for the top 12 cryptocurrencies:\
\>", "Text",
 CellChangeTimes->{{3.83336898751989*^9, 3.833369005047235*^9}, {
  3.8333694657542057`*^9, 3.83336946862331*^9}},
 CellID->1763485615,ExpressionUUID->"06323b1c-3a70-49c9-b44e-f1297b288e1a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"aCCTop", "=", 
  RowBox[{"N", "@", 
   RowBox[{"Take", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"AssociationThread", "[", 
       RowBox[{
        RowBox[{"Keys", "@", "aMeans"}], ",", 
        RowBox[{"Accumulate", "[", 
         RowBox[{"Values", "@", "aMeans"}], "]"}]}], "]"}], "/", 
      RowBox[{"Total", "[", "aMeans", "]"}]}], ",", "12"}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8333621139959097`*^9, 3.83336212503345*^9}, {
  3.8333622039730463`*^9, 3.833362204752841*^9}, {3.83336982697775*^9, 
  3.833369830419196*^9}, {3.833369869211275*^9, 3.833369907202115*^9}},
 CellLabel->"In[214]:=",
 CellID->1480919058,ExpressionUUID->"b7ee8de3-8768-4693-a8d9-27aad7c87fa7"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"USDT\"\>", "\[Rule]", "0.4462181049890889`"}], ",", 
   RowBox[{"\<\"BTC\"\>", "\[Rule]", "0.7047123010027478`"}], ",", 
   RowBox[{"\<\"ETH\"\>", "\[Rule]", "0.855190490114652`"}], ",", 
   RowBox[{"\<\"USDC\"\>", "\[Rule]", "0.9193314787860124`"}], ",", 
   RowBox[{"\<\"XRP\"\>", "\[Rule]", "0.9352848043516196`"}], ",", 
   RowBox[{"\<\"DOGE\"\>", "\[Rule]", "0.948370381869168`"}], ",", 
   RowBox[{"\<\"BNB\"\>", "\[Rule]", "0.9593952230254666`"}], ",", 
   RowBox[{"\<\"LTC\"\>", "\[Rule]", "0.968186345235988`"}], ",", 
   RowBox[{"\<\"ADA\"\>", "\[Rule]", "0.9742777654629827`"}], ",", 
   RowBox[{"\<\"MATIC\"\>", "\[Rule]", "0.9788585434417081`"}], ",", 
   RowBox[{"\<\"LINK\"\>", "\[Rule]", "0.983037731086364`"}], ",", 
   RowBox[{"\<\"FIL\"\>", "\[Rule]", "0.9863778155851822`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.8908587350800543`*^9, 3.890858921332492*^9},
 CellLabel->"Out[214]=",
 CellID->395681658,ExpressionUUID->"f6a386b7-5402-459c-89b8-14a926f3384e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Plot the daily closing prices of top cryptocurrencies since January 2018:\
\>", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.833215899660033*^9, 3.8332159206396933`*^9}, {
  3.833260662812014*^9, 3.833260685331225*^9}, {3.833360746110552*^9, 
  3.8333607469767923`*^9}, {3.833369798839666*^9, 3.833369814106303*^9}, {
  3.8333699773242683`*^9, 3.83336998397688*^9}, {3.833370044615716*^9, 
  3.833370044997257*^9}},
 CellID->1469200750,ExpressionUUID->"f47a9922-fef0-4286-8c7f-60f3637ca9e9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DateListPlot", "[", 
  RowBox[{
   RowBox[{"Log10", "/@", 
    RowBox[{"Association", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"#", "->", 
        RowBox[{"CryptocurrencyData", "[", 
         RowBox[{"#", ",", "\"\<Volume\>\"", ",", "\"\<Jan 1, 2018\>\""}], 
         "]"}]}], "&"}], "/@", 
      RowBox[{"Keys", "[", "aCCTop", "]"}]}], "]"}]}], ",", 
   RowBox[{
   "PlotLabel", "->", "\"\<lg of cryptocurrencies trading volumes\>\""}], ",", 
   RowBox[{"PlotTheme", "->", "\"\<Detailed\>\""}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"5", ",", "Automatic"}], "}"}]}]}], "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.833216129168705*^9, 3.833216302500484*^9}, {
   3.833216375346168*^9, 3.833216427982689*^9}, {3.833216468525175*^9, 
   3.833216481352627*^9}, {3.833260648011499*^9, 3.833260648192903*^9}, 
   3.8333591473971577`*^9, {3.833360658909243*^9, 3.833360671962473*^9}, {
   3.833360749159937*^9, 3.833360751735916*^9}, {3.8333697807954407`*^9, 
   3.833369784181905*^9}, {3.83336983470646*^9, 3.8333698386553802`*^9}, {
   3.8333698995755577`*^9, 3.8333699895878153`*^9}, {3.833370047670765*^9, 
   3.833370131701618*^9}, {3.833370244948262*^9, 3.8333702632187862`*^9}, 
   3.890858685357279*^9},
 CellLabel->"In[215]:=",
 CellID->1090032044,ExpressionUUID->"a78d8044-b3d1-41f5-a5ef-90dcd7ab9205"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{}, {}, {
       RGBColor[0.368417, 0.506779, 0.709798], 
       PointSize[
        NCache[
         Rational[1, 360], 0.002777777777777778]], 
       AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1:eJxU3GlYjG0fBvBR2aURym4oCWEUspuxk2VaRIRBG4WxVpZUyBKaiGwxSJa2
IVvWkV1hkpB1ypJqpBDK9p5P53x5ny/P8TumZua8r+v6X8t9p92sBS7eRgKB
YGttgeC//+M/4eorJdI5Dq3rmi1pL4Elx2Gjds/arXlabUUOfGTQjPDed6ut
+gN3e/bQ7YiR1X/WdrxaIv00z+n4xF/Vrwtc4IjvH1y7Pqm2eCUssvTZ9upS
teUJ8M4RvZ/e6FT9+0ot3CQspuOggurXNVVwQXizqaU1ql8vs9aUSL8tsCke
2KXaoglw92CP832fV/+8LBgeu+/N1Ev51Q49DPcZuK3OxPJqq+/DrgsGWNzS
Vlv3Ax7h+sXIflX1+wnbXyuRpi/v/UUVUm3JWFg/aLj/kmHVViyDv4hDflQW
M78K9tvTsmaNsmpr78GtZeEucXWrf15QAbe7rax7p3a1xW0zSqTXrn0eH/KH
+UfDNkFVw/vy+igXw4e8eqwyfcT8cXAdl8Nxjfn9y27D75PMbXMPVFv0BS5u
U7vq+UPmb3W9RGr7uU28Mo75R8AOjv2M7H8zvwJOrXtd9DqP+ffAkxrP7RFi
wfw34e91O+daeTL/Z9in07+a6ffY/s1vlEgvdVg22TaL+YfC1+4kO+7pw/af
Bz+zDtjgFcv8u+Cxh2O2/eb1EGfAdwYmHrh2h/n1cBNheEJmAPNb3CyRGm+3
mJbP66GRwD9lDz/tvMn8c+GwlWc2lN5m/h3w4nX+g41OMf9V+PvQzWusKpm/
CD45c/ycXXWqP1/d+Bb6q8fv498fM/9AeM3ClKbX3lVb6Ae/sf1UbzzbR7IN
PjrqQ9gTXl/FJbjAarPDYr6u+gD3q+n5+29j5hfexvX0nVG/xafq1wX94aVf
l5zq+KHaYm9YYPt667gbzB8FF8bUq3d4J/Onw5FL4/dYXWX+t7BXqW27iRxv
ZaZ3SqTWrjWVv64zfx84/MDVdg/OMf8suHyWfuHqJObfDPtfizZbmMz2PwtH
zhfd3HiM+XWw3N/5enNeP2H9uyXSu+Xvi00ymb8XPN01SVTvB/PPgI+MizLd
wXqg2ghf9ItdmMvroU2DmzjsONb7JPO/hhuV3szunsH8de6VSD+nZM6+c4L5
7WGN/dm9W7Ywvyd8x37dtpl8XRMBP934I2DMGeZXw22063vMi2T+F3CBZPUy
X9YrWc3MEuljQWG9bH6/0O7w292+w9NotQfc7mjNNePZf3VrYFO759emXGH+
FLgkIqBiCa+f5Bns9z2xacJu5jfKQn/u2C3xQyjz28E7Ki7tfTyV+d3hg4U/
lp/k9RaEwSGdl3e7xPEqToTbNPs16PBG5s+Fz8XNttjC8aX8Bzdukiq3Z//U
dLpfInVpbVbLLoT5XeE4gc+hlAjmD4GfWTQP3D6T+Y/BXQLuvcpfyfyP4OV9
ZwyQrmb+33CLRD/3R3OY3+YB+r+PuGG+PfM7w/PP+IjuDWb+FbCzn2XYpMbM
fwQ2iXVtYL+Y+R/C/bK97jjz97WV8M+uKS/kK5jf+mGJtGaH+W6N23L8j4fr
5a3f+cW42vIg+Pbxi6PSVcx/CNY9vF03iNZkwY81R+aojjL/dzh4dHatWYeY
v522RLr/wLnTkgTmd4KjTNdfasX+F7oU/rreU/yZ41N9AO7YLu7HjxbV1t2F
y9+tffJdwPr3De4dfOP8Q9YPSZvsEmlXp4Gpk31Z/0fBjj/qSBtur7ZqETw5
pr5IMZjjfx88sN/UwdsdWf9uw80S9658T4vL4d35v3x6z2P+lo/w+v3s9tPH
c/4bDj+a1KOPulu1NQvgm/2P/ThoxflvN7zz590NlzkfiW7ArXxTBwRyPpSV
whnLnwWm0qHNctCfcqoue/Vg/iGwXFAZdq0/8wfAv/688Uyqx/yx8G/9mp9d
arL+X4NjJ7f0amrO/CXwki0VvZM8mL/p4xLpTPnb1XNkzD8YnrBfZtyN87Vg
LtxOqZtZpzPzx8Bhjb7OWMvPk1+B96c19xjBz1N+hGM+X9k65Dvb3zwX9ef4
CVOLn2z/AfDL5X0H52Sz/X3hrm3n+fjksv2jYaeFzx4NZX0MvQhfsuh6cQzr
rfo9nNTjZliEKfObPUFe7WOJA+uXsB/8IKrfHm8N298Lll34+WkB641iK/zm
p+8dIeuV6jzc+OawmF+cr7UFsHWEafT2b+z/pk+xXql83Wky5y+xIzy/75K0
Pfy+8pnwq47rvoUaxn8knL/2c9BNXj/NGTi56QlVAuensjdw4e4/xQ9oUb1n
yFckKT9Iy3rCf09czVnJ+hY6HVaYXBgTyfWOegNcOW657xiOD90peNPfj03f
7WH+V7BoW36loT9JaueVSNdn9HHP4Hym6AErHsXXMn3F/FPhkOY+fxazfbTr
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
pvKEt78ZLKrP/Zk2AnbpPHZJy4nMfxIu2Pcw8yfrufgFvLXs/o6phv1vzR/Y
r+Xlb+pLK7vDYTfL5Yu5f9B4wGevdb0VzPmybM1/P5//fO1Yzj+iFLjm9vKs
xuxvsmfwmqoAi2COt1Cjn1h/Htd5TeH4VNvB3oFP9vny+uvcYcuWo1prnJk/
DL55dcSiFYtZ/xJ//rcfqjI9kcr5PxfuZR6zNm8z2/8f3NNvw/oAKfN3qsTn
p8Q4LVMwvxt8zzVnSn4y84fA3Wa1NH+0nPmPwR6Nr1xeO5b5H8HO+5RqgQPb
/zfsk6LVSnk9y2yqsH9aEBfUeBTb3xl+Pf1HqwQbtv8K2F4x548D+3PoEVg6
we7kjL/M/xC+aBTRbLcT81fCD+9v23a1KfNb/0J/TYpdNYv7b8l4OCPAs0YR
v48iCI5c9T7eV8L8h+CKLo66ffx8bRasGNAv35P7J8EP+LzjxsHRhvZv9xvr
kbhnhdEbmN8Jrr/Uz/TeIOZfCrscPNz9OOcjzQE4zX7czhzOZ2V34fadl50c
ZOj/32AfoWNAHvcvsjZ/sL/5kLFivZj5R8H17PP6DB/A/r8Itm5zOzOG+xHd
PvjrgNysVvbMfxvuli28W8TrKymHb19yPODP82FFy7+Y76IPnl/alfmHw2Vh
Hzdf4ftpF8DZw+z+JXI+FuyBV++e26DUsP6/AS86Wti5EdtHXgpHdpi5Yjm/
r7LZP/SXexl901mfNEPgCxn9F87n+UpZAJy44demNPY3USxc8vRxa9d+zH8N
7lNyYEUAr0doCRy2XPFKwvsL6qYCvfTd0WsRzmwv3WD4tePfLlYcD8K5sDJy
4E1/tpckBrbprHjwbAjzX4E/vHrf+DvPj1Qf4aRjg2PqxjC/eQ29ND38d9cl
rLeCgbCkn22uzIv5feFJbf09xAHMHw1/UUxtunou81+E68RvKdUa6t97+PTd
GQlGrG9lZkZ66cqO9S1jfZi/H6y/omp1m+dHMi/YbdKcGY/XMv9WOKlWu2l7
ipn/PJxWK+9t1WfmL4CbL/pxsVjL/KbGemkrm9mbWh5nfkc4u8GgkNAU5p8J
jwy8G3stm/kjYUXG3fsDW1tX5z8Df+6qXfSzhPl18IPO9UNPnmH+eiZ6qaD1
i47NMpi/J2z0p+G84kzmnw7/1nnfjopn/g3w4e8NOnnRZafgK2XNnz/l+Zvo
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
f3J9r+gNt8+r4VeD84VKDnvefOb5ynD+sQmeefjfzp6st4IzsMIxJiGO7Sd+
A69bU1UYyvlFXtcf16toctV59i+lA5xYcbfJERvmnwYrf626u91w/rMeTs+s
DBnE/bXoFGy7uUn9xTyfkL2Ey2N992ZyvR9aK0AvPdLylXs/3l9Qi+Gvtqf/
/VjP/FPg1y/SmghvMf86eFnX1N8fHjB/KjwnRDTrxyvmz4Nt569zuf+P+Y3n
of380uw1OubvCq93jNNObGNTnX8ybHEszLggjfnDYa/ZJ52MtjB/ErwmaomX
Peuj8gm8KP3pg6+srxrBfL107dUr03aVMH9nePrV9C7jDzL/RLhfToH2OPPJ
VsMZK2ZsWG/Y/x+Hj84ss4o0nH/lwBsH9NWvG8j8f+BhZil707nfF9ouwPpC
fNhp6lzmd4H7rP45wX0j86+EW3ss2/l8KPMnwMkeN+7M4/5Gq4UdDu7q8pP1
TPALNm3TJ+MB66e4g0Iv9RZZTznC9pRPgKf9e5ZpzvlTGQxP+Di2/qDDzH8Y
rtm1Y+POZtXXs+w+vH/okmhLtq/oJ9xj28j323g9Ze0XYv8WM275j1jmHwun
fR9jNOkk8y+Dm5/xjnjI8xSdCg7sGRVZ9IL5M+FaletT351i/gr4U3flvjMp
zN92kV76N3W0xQq+n2o0bPEmOrF3BfMvhktmTe3d7Sbz74eNmk/YNYoW34E7
bV3TuUY683+B00ufDLzH8zNlq8W4PmGXDjnxfE8zAl4ueZZRkM/2V8C9Um4a
u3Wqvh6ivbAsU7u0r0O1ZTdh6w2jXvY1qXboZ1gT49mrZ7tqq5svwfr5TtNu
8/pWWzcUXtphQsPfA6otnA9//Jic71C72pJd8If8xqsWD622IgMun9Kh5Nia
aqv0//ngguM6q2prLZaiPvcf8/nfL+aXwuMatvGKqGJ+f3iIcno7VfPqn5fv
gJ0Xv9i80bjayquwkW5p7BT2d00R3EB/qKJXNvM3Xob9+6hrth3rMP8guItb
zQ1ZIub3g3/3e9j0qj3zb4O1W1vM9OrC/Jfg3UlJnjO1bP8P8K/6MX4uz9n+
jQL10uzA+NdRRszfH06PjOhxiN9P4Q03cGhRX9OA+aPgSIvd9Yv5fbTp8ADL
JY7i9Rz/7+DF7htquPH7iRsG6aX1p/udKuX7y/vAh6du7bbYmvlnwW5SnX8h
r49mM7x5hXHDOabs/2fhKz8jzJf1Y/58eOua6QsC2b6y+sGYz00azl7amfl7
wRM9evT6zJ9Xz4AP5Tw6/WE2238jvDP8QdaIWWz/0/DHKx72AYuY/zVc9LQw
o5kL89dZjnxHP7Z5PJH57eHez8O3XprO/J5wSrspNcSjmH89rLLsfKVPAPOf
hC+YuyUtHsv8L+BmY45dXzaa+WuuQH2RNe649hvbvzusWfvZZ3Er5vdY8d/z
X0lf7o5g/rVwlXV+/IyazJ8Cr71w7PCOpcz/DD6wZ7LPrh3Mb7QS/WXSr6BD
fZjfDl539Nzqx/WZfxJc2/WO5ouY+cPgp6M2dy3+yvGfCC/zj5T/YnuocuH2
iT3/hv3g+P8HbzQ6+lj+mf2/8yqMn57LZjRjHrEbbDe279nmHF/yEPj64PK2
wwo4/o/B38rk05smMP8jeMSDNU51WG/KfsMNun+Pv/Se9a9jiF76/MvDQ4dZ
f2TOcOOFHd7v4OeFrgj57zzkZ/iActa/I/C6bcnjjvD8WvcQjllTdGmlIX8V
7BbV4HLlU9Y/69V66aj7l+u2tWT7j4dHWr7cspv9VxUEm8/5sKf8C/MfgqOu
7Ln6lfVKcB9u+HvWUmUm8/+A916o3WAiLW8XqpfeCb69WnaN+Z3ghoPruu1+
zfxL4W2SouSXvD5lB+ANO3xkhyqZ/x782q1N6nNa9g0WH+3g7v2E+duE6aXn
j2zXZF1k/lFw/Bj5udWs57pFsJdicd0s1gNhHJz9ptjhZi7z34ZdBr84ftaQ
vxwWntrST9OI+VuG66VJyZdKDfVIOxyuv25ouUcT9n8F3Prsmn2ZvN7iPbDT
NWnAoEFs/xvw8gWWPc3c2P9L4aOdU5sWzuH4b7YG46efeTe1gP1/CFyQExWr
ecP882D70TZWrs3Y/2Ph2Mh5Nffz50OvwdYz7qcsbMj+XwJvdHSf5sjxo2u6
Fu0dXL4yNYjtL4Gzk0Lk/lL2/7lwafxdk5CLzB8Dn16baPM0lPmvwAFBttuv
n2H+j/C7AwF113P8CRqv00ubdGhyaFsgx/9AeLlJpf2g/szvC7frUvUpdyHz
R8Pr6wh72e5l/otw+M70937sn2Xv4T8z1FO0euYXRqA+VMzsvJPrLVk/eJFm
dtf8GszvBe9rObnKl+sH9VZ4/aeME9EcD7rzcMv8U43qsn2Eb+GmQ97FOvB1
iel6vfRzm9GOXuzPCkfYbGPneXfaMv9M2Gu5n4XDBuaPhMutI/NaxzD/Wbii
bHOJMJ75dbD53if2O1iP5PU26KVdg0ZM8JvJ/D1hnWr1ojarmX86POrwytHy
ncy/ATaTzl36aCXrXxo8eLkgeEs487+CT38YXDriGvPX3oj+mtq792Bv5u8B
T2zc6PZTP7b/VLjTJIfFNpwPhBHw9k11s51WsP3V8EWz2NMmY9j+z+E3gVl/
Hd4xv8kmzK8uedav4pi/G9z7Z70VC1Yxvwc83N/Jclo35l8Dux13W2bH9pYn
w9eMzp7pP5X5n8KzExUllYOZv0akXnq53LLvVV7vsi7w4407M29wfSFyh40u
uXoLDO0fCrcYeq8osYzj/wRcaZVj43id4/8xLLnjF7jhLdv/Lzyvsf7Rujy2
f6fNuN6dZi9d9ZDt7wqHrYg7Noj7AcUq+NyY/S7ZpVz/HYUPt2nRdMBl1r9s
uJ/ZGNMFgax/v2Grkb6Z/bmeFNtswXqiw67Hu3+y/sngneYFt0z4fsrl8LIP
XzLacn2oiYezoy+XbtzJ+vcAPjAk1u32DuavhMfM63Jds4v1z2or8jSRPbQ9
wPzj4Lk9ZuerUpk/EL5lVWPbKO5vdQdhM8sF0+6tZP4suJfusWcu90eS73Db
vjtDnLj/VIii9NLUdTGjTvF+tWoM/GlZWDvLYuZfAofX2mRumB8EB+BGScHf
69xj/rvwrKLcujsN97+/wlssx103P8L8rZWozzdfDNpnuP89Eh6z/8z6EN5/
KVsINxE9PtmW95dF++B25ZkFGcwruwW7pPXepTWs/8vg8nlvHnjw89QtorHf
KBlcex3vV+iGwaIv2QVZ3H8IF/znlvVtUngeKNkNe+9S1m3P8yHFdTjCb0qz
NdwfqT7B8iGzTdZy/6y13KaXRhsNrNGPnycYAh9bMPCLLe9fiwPgnM/LX/Xk
fki+E27tPOCfDe/vKDVwQdbFxM08f9QUw9cuPvIxNTz/0WS7Xmpsc8hpuOH+
32C4vHGXGsG83yebA9vZdTKpxfOD0O1w0N6NTbfyeS31Zbiz7omJfVvmL4Rt
M4/MadGL+c1jMN+UrurubLj/NwA2TXFoIuD9NYUPHJm86lw3w/mHEs5/4CzP
5fMQ2gtwp6g7w/bxfEHwHjYuC76exPcTm+1A/xEMD4pkf5f3hWUjuySVHWf+
2fD25PpWqw33v7fA71s+iQvm+V7ZOfjFTi9B/gbmL4Cf2LZY8oefJ2uwE/uJ
lPOeiw3PP/SGKzZYNlvE8z61HP7hGbVStpT5N8GmdRt26Gjo/2fgzo07WFnz
eQTJGzi7+amPswz7v7qxemloeG7UkWfM7wCPK19bWmgY/9Pgn7sOzP13m/k3
wF6v2ikb8vkB8SlYYTOu3jLOJ/KXcOffzT7W4HpFWWuXXrpyiVWe/yXmF8MV
Rj87buT+sWwK7GKenb6C7y9a99/PT98hns39iywVnv/4YdYIrpdC8+Cun6yi
O/F+qNp4t17qn3uulQWt6wq31aQ+MdUw/2R4XYuCoCV8f0k4HJ8jM1nC508U
SXDZs7yldhzPqifwwvUDdqY8Zn7BHr20++apm4J5fiHoAi/YoG25kO8vngiv
2Vc5qoLnLfLVsCJh4Pt2fH/lcbgwocptDPfDmhx4y+NF5pGsh2V/4HVvJ+mq
uD4U2e7VS+NqPit/Tctc4I7lG1dOecn8K+HEjQ9Etbl+VyfAIce22ttyv6/T
wqN31jH/yvou/AU/iBvif47rZ0mHfXrpvcJz7ue5f1FMgMPNrgQG9+T8F7zv
v/VliuN+ngdpD8Orbo9s05XrUcEDuPxf7Q5j7jD/T/jBqOa/hl5g/vZxWD/V
t6x7nvtj5Vh4fInb6kJeH80yOOzL7qdGR5lfBc+cPTXkFeczUSZ80WXSmQS+
LquAB1unuadtZf62+9EfBp+9ms3+rR4ND/s24Mkorg91i2GT/i4tdfy+wv1w
7P6e0ZO4Hpbcgde3N70Wf5rt/wW2HXNXWZ/zq6rVAb10YOndNUrWb+0IeOnm
kyKZof0XwpM6JE79qWb+vbDj+pjmL3m/QH7zwH/nR+X6Oazfys9w5sCGh2cb
zn+aqzCeLh0LGf6I+YfCw04PT5rLeiGaD6eOtXn7KYb5d8GBT9pfieR4DM2A
TVzP7Y41zP96+P2CEycdOP/qLA5iffTa0nsh15NCKSybWlbPyHD+5w/7nPA4
MIj1QLEDntNvR+5S5lFdhXMXeQv6ZDB/ERwfP/jlC7avoMkhvdRXmyCy4PUQ
D4Lvx00b5cHnp+R+cP7rYc/6FjL/NnhO4b9J8Tzf01yCn7iU/nPn/ZiyD3BZ
Vq/jTrzeokaHMX98CJxpyflO1h9OOyUfO5r7xVBvuEDQ1/si1zfqKPhq9oPz
91lfdOnwod4Nex0z1L93sFXHDhl5fH9Jw3i8rjixegjbS9EHXqy1XnCK9UE1
Cx5hfltQ0Z3rv83wvXi3yF08bxGcg1tOahr4gPVOnA9PmXQvI5X7F3n9I3pp
cN0lXt68/specJRRv17N+fOaGfDrNn4Lqjy4/tsImznKOnXl9RKdhj2ij727
yp+XvYYrmhS5fr3B/HUSUK8jWnpcUDG/PRy4v1HzUyHM7wnrhpQVTeF+T7ge
9l30cvZr7t8lJ+GO37xHXuf5g+IF3PtYsGdHXk9VzaPIs6DjNinrt7Y7/CJt
prP+ENt/Cnxu7jvPqzzfF6+FS/Z32mXL+U2eAke9e5Nx/A/zP4O97svOh7Ce
a4yO6aVvTeRdh3F/X2YHz6icetWb9VY0CZ5dMMV2IJ+PkYXBjf5ueZ7E/hWa
CHsmnFt4mM/vqHPh5Jdb2mj4/XX/4MO/Em80Mpx/dT6O8daoyc4/PH+TuMGv
pl//Gcr9oyIEfmhRerIe+4/qGHxrhpelN/fX2kdwm1vT1nUw9P8/8P4NgkP1
OR+JO57QS5s98fJ+x/oid4bt7YLsRrPeKVfAxsaC7H9cH2iOwC1Chs+I4XlS
2UPYauXkPyaG/FXwFFGXjeHcr8msE1HPt01/dorjPXQ8HLRlaq2VhvVvENyw
anZkR45f3SE49ZE0zpPXS3gfDnZqvSGC61vJD9is5vFpJrzfqGiXhPXc2Rbr
OnB8qJxgq1Hdw2dwftIuhXWbov7aGOZ/FfyytKxpEs9zxffgQSs/ZM7h95F/
g6dEOoe4sT8q2yTrpVN//dh6g/cvNaNgF81It9v8vLJF8LhrbmMf836sKA4e
NtT31D7D80+34X7Rk05XGdq/HNbsOjfPip+vbpmCehG2r+2Macw/HB7lvmJv
CO9HCRXwC2EbTS8+LynZA99qL6l12PD84w147PpNyXZ8nlVVCkee69o/nD+v
bZaKevkobKEd7z8IhsLd1D9cGvH+jngebNyxcdXM4cwfC7+IjiwK5X5JeQ2+
cX5LYX/uTzQlsP+nM7s3sH+UNVXrpRcCrYd3P8v8EnhUv5If99kfZHPhSSvv
3WptWP/HwF2sUtvq+Hyk+gocsr7r/QuJzP8RFjSt7fqRz6cJG5/US9XhN27f
5n5LMhC+m97XuQmfN1P4wktV3aYP5/VURcN/c5uYneL9Su1FuEbTAQPO8X6K
4AN871340Q68fygWnsJ4vuN/6zef35T3g7+1rzJT8Pk7pRd8uWe7r6N4/0yz
FX62zfRkKetl2Xn4wtH4gceLmP8tnFXxdX0nXm+ZaRrmux5nA9N4PhjqCMdN
lI025v0b9Ux4yZEu7YW8H6WLhDf9fBJ1h/cnhWfhttNb7S9if5Do4KhF3QVH
+TyVot5pvfS6v53VUz4PpuoJO76bPPM57y9qp8PmFsPrubN9BRvhu59cDi4y
PP+dBm9dYHTir+H+9yu4+5mDH6V8XkBZ+wzqwebNiwoNz//2gK0ljV/N4f3k
sqlwcYXNkO98Pk8UAQ/5mjbqBO/nyNTw5qHzWy/i/bDQ5/CNE3mN89h/1CZn
MR5VO+q24/mqrhu8MKD2MqNZzO8B98of0mcQ71dL1sA5DSyKhxr2v8nwjcTS
B5bcP6iewidyakyzMex/apzDfNf5Z4uRm5nfDm5xzmTTcra32B2O6fx96k7e
v5eHwnt2fk1ZyP2o8gS8fc3klxbMo3kMe2UldPFlfyv7C5dkvs9ScLyJOp3X
Sy2LfPcb8zxS5grvN53W5iTXT6Gr4Kdek5wu8vla9VE46+WQ00bsL7psuPBR
096V/Dzhb/jM868ju/E8VmKTjjyu/9aEnGB+GZzyvqvUyrD/Xw6PfLGvsQfP
I7TxcI0Z0/94sr8IHsJnfNtcNub9WnElfP1Tr4BxXN/LrS7opa0+jPl8lfVM
OQ6eOTVkmWG9qwmEt/dMj8jnfFp2EG5desTLnOcToix4xKaXyQo+zyj7Dv9w
t1Cu4/MAoaKLeumOuzkrHHj91WNgu/f9Hp7g/W3dEjhoyoS1ZleZ/wD872aQ
INBw//sunDzTdHxLrh8UX+Fw/bka/VkvVK0v4fvde/FtMOuvdiTsOKPnigNc
zwoWwetPDZwy7Azz74MbfPzn94TXU34LTu826+U47g+UZfDomA7tdIb9b4vL
2O+ERxzfZHj+aRi8q0ZHs0YcL6IFsFHO+721WB9ku+EvDTuOOMDzq9DrcJcl
psE7DPu/T7DZ/eIlt1k/dJZXMH88fTxLyPlWOASedLLWQhvD+jcA3lLj54Gt
bA/FTvh95qP+BXw/lQaemHi6SxrzaYthS+Pwtac+MX/Tq1hPJJ7vO539QzwY
XhW1bU+mYf0zB858H7wuns9fK7fDzRRy/2acLzSX4SaXFeJ7XG+UFcKvA/KS
n7B+i8w1eumGsXZbggzz3wD4YLPv3ovYfqE+cCvt7hkjeZ6jVsIxf4Zmb23G
/BdgJ5+xe7bwvEX4Hr7cpdP4EN5flphdw3q31qWadwznH33ho6ZZd5M5vlSz
YadJVqf13J9rt8Dv7g3SNuP8JTgPH770LrqUz2+JC+DrBZnNo3swf4MMvVR5
e3D/+1wvKXvDewoelp/h/K2Rw6M2r+wyeBvzb4Jz9a3erjPkPwM/WlQYVcz9
kOwNXL/xda/6hvv/da9jPXzMPCWO403tAC/vUNz3A+dv3TQ4vcbRw+GG5782
wBP8zcsOsx5ITsF3jfLbHzI8//AS9mhyubAe92OqWjf0Unnz2L+ZrAdaMRyQ
suNcIPuzYCp8eE327Oe8Xy1eB1sEb+lqyftv8lTYZVlBuiXPo5V5cNseYZdX
8P6gxvjmf/+e0pb2Zob7313h2Tc+PhljeP5/MmxhFGBVyPlLFg6nj9AlhRnm
/yT4aaOUNDOur9RP4FcNKrPdeT6kE9zSSyP2a5Rt+PyAsAt8PcPd56Nh/TMR
dtz85FITw/PPq+EDVXKvKPYX1XH4kH2bDy05v2pzYN3lmH7hPB8U/IWDh/dz
kfJ8UGx7Wy91e9AzJ4TtJXeBl30altKG9UC5Eha2KjivMzz/lwBXto7IymnM
/FrYdHBy5yusR6JfcNHgHXVPG85/O9zBeD2VGmNmWP9NgMUXb4ztanj+LRie
lnOq+0w+76Q7DHeQVS6dVcXnvx7AI242336MlvyEO1vUXbbf8PxT+7uoR1m3
n1Rx/lSNhV/Mrqrhwef3tMvg6TtEbf6x/goOwqM3TKgM5HpWnAm/f+mm7cb5
Ul4Bmyd4K1+znirb3tNLj39p4P2e92s0o2GLhktb9Tbc/18MW8adc2n3gfn3
wx971uk0TsH8d+CNT7Im72e+0C+wcPf51L2sP+pWmdif7DsgCOF8oxsBy+I/
JQ3j9xcuhAe/HlW0l+sxyV64r/puYgWfb1LchH1DTRw8ub5RfYZHtzL2uGh4
/qV5ll4q8a7r35fnq4JhcBOvTk3GcL4Xz4fj72Y+mMD5Ub4LDpGqhGt5vqvM
gH1etP/qyed7NXr4utMCk9FcH5RZ3NdLd9oF5Szl9RRJ4ZS843Um8HlQmT+8
MFnh05h/nxm6Ax5y7ZHbTf49nvoqfHB+VD9rfl9dEbzq+N+wq1yPCZs80Eu1
/a675xvWP4Pg31ce15FyPlP4wU1DLvadyb8/UG2Du3tuUjnw/Fh7CRZZXKww
68r8hbD66HOVE58PFDd6qJdeW5o7bivPY+X94eVmtstmc/2l9IY33Eh3Hmx4
/jMKbnN18gwLrh/L0uFDfysXtWD/Er2DG4w/tegTzztkDbVYvwnDkidzvRfa
B7ZZ1qBkEOuleha8NXfNvEE879Bthj88Mmtrzu8jPAcLkk+fn2M4/8+HOwy6
mP+K10dRP1svXX3Br/8YPq+l6gW7mo+0qG34+68ZcOuDJ39l8fxNsAkWP2r2
TsrzIfFp2HJX8ZG/3L/IX8M1R+9uVcR6razzSC990mlc4UX2R409/HzFBNX1
OczvCU99Mia0n2H9tx6efzshegX/vk92Et7295qL5VjmfwFveCU8fZj9RV0z
B/NtUvvSPnWZvzu88trmplv5fKRwCtzkVYvIr4b+vxYeey3HO8nQ/1Pgp8oO
sReYT/UM1n4J8B7P9bjW6LFemujXcIAF+5egKzw5wWp+OfdD4klwx8Z2zW5x
fMrDYJdvr7peMvz9ayJ85HBxznP+viYXjj9Rc7mM6/myf/Ctzdm3W3L8iTrn
4vqtGnL2IdcTMrf/d2gIHCjMnP6G40d9DNaUzD/rYXj+9xE82GhP+iXD/PcH
/ux456Yp65Ok4xO99Jdtpo2K9y8UzvCLrUua2nJ+Ua2AczO+Dv/B76M9Ah+/
cKlKxucxBVr4zZ27gkjD/Y8qWJE097SK11du/RTj68PL2onsP8rxcO7PbS1/
sv00QfDjx83s77MelB2CZ+0/NiyR9Vl0H16ctiC6Bf++RvYDHrzE3cmIf58T
2u4Zrvdlz2HZ/HtHtRNcbLlJn8X1sG4pvHXRpm7D2T+EKvjKE8/HeYbn3+49
++/5cu1dE+53FN/gmUk+l1/z+VJVmzz05ykT9/lwPtCOgk9Hxtax4npQsBgu
2jBNdI3PZ4rjYJnz06AE7mfkt2GnH2PvXOT5irIcdi1a3KSCzwdqWj7Hz+9d
dXsP+1/ZcHiWw6BGLQ33/xTwxsVeth05v8n2wEl7PZb15/om9AbcXH1myCSe
v6lLYc1sycB3huc/m73QS0MddDZnWc+EQ2GJ4Ej/HM73knnwKNdylw6G9V8s
XFxe+e8H86muwbOb32+Wzv2JtgTOmCs2ncLrK7B4if26X3nOD0N+Cfz57Kgj
/vz3pORz4QfOEcHN+PcZyhj43R2FhTPrqeYK3P5dodkfQ/t/hGtnWstXsh6J
Gr/Cfrn83tSB3F/JBsItRR8ivvP541BfuCCz5bEF/HskdTS8ckWey5/zfP77
IrzVfH/HUs4Pwg9w+RW70G18nl0ifK2XNp62YekD1gtFPzjt5I7fjQ3nH17w
qJmarPo8X9FuhU1nmA6czb/PEqTDzgI7tSf/vQHxW/jWV4cWhr83k5u+0Utn
uF0wPcXrr3SEPx1YOL2Qf1+hmQk3SD/gMZWfXxYJ3z07pbE564noLLzX2f7i
e/49v0wHWzb81L4B58PQejrsd6fXNvvN+UfdEx7ouvG9C+cz3XR4xbvNprE8
nxduhB/f2T35NOcLSRrcaUD/9id5f0HxCu78b5u8nPcDVLXzsd88ZTZ6LOuH
tge8bmexOJz7JYEnvKaFx6xe7K/iCNjZIcrSmufTcjUsqrNV3J/vr3wOK9vM
73mLzydoTApwPftP0C3n+rqsG7xKOGnLSa4vRR7wCdsPsZmG89818P3tWd1H
8n5VaDLcVN/IrL4zn/94CrvPP9H/NJ+X0NV4i/WHX4Qy17D/tYPjKl4XFbL/
SdzhoDthWeNpRShc6tdl8Az2d9UJ2GJ9q83W/Pte7WPY9ftyWzXrreAfPDq3
y0gP9i9xp3cY70+NWmcanv91hX9PqXxUyX/vRrkK9j1Q8L4O/z0zzdF3/53n
lmqH8356WTbcatktp4uG579/w096rDWu4ufJbN7j++eVDv3B/hUqg4++P9Ws
/SP2/+Xwusc2Fxbw7/l08fDE8kfjj/LfLxQ+hAc2O5gWwfWapBIOyh587+5f
/v2T1Qe91H/kfvkk/n2Iahxs3vz1l3jOn9pAOHrnmRpp/PcRBIfgszE37mWp
2P+zYO9O/2vh3qOaLOM4gM8DGirhTEhEPU6MiymyguSiyAYoKgrLI2deIiYi
AYKMoZTggUVAHsgaeAMhmEJeZuVIOSimvJhIKLqZQF6I5g0Q55iAoFtC353f
++fnPIPDw/u+z+Xd8/t+kcVQ/Z5k2NI+q+dhE9UnKng92L9r1tSdo+eHWQ13
1hrqxlG9lHEnXOOYHykm8yrhxqpBDUN5TKIWWCXdLZ1M+UvyQfhEU/GDLyk/
Sj27Vy8cdogbiaaf14XCNmUm60rqD1cGj9+f01ZJ/RWUw9o895MK+v3Sa/CK
cctDXlD9ktIIy5fZrPKi/DKt0zO90GhS7UimfCTOclgVEJuSTXmm/BT44gmf
SEkH9b8Uzm050phE9YKKP+BMWfUtNr+LeQFPLZu3aCnlXRmn92H8FZd09s6l
/gfB14e/1VttoP4nwQkN1WWvKO9Nfgj2a48xp1J9oJqBRR9+fP5Xyl/R9cEG
TfPCUmrnOjzH/DVjZX8F5bcIAuGZwtAHHkHU/wS4q3uDcArleSr3w57xsqG1
lKepvQTfzxhNKqL8HU4v7BIaucWbzf97T4/xSzm/spTyYiRL4Rzra1mjVA+p
iIOF1TYxudQ/RgFnpR97YhJT/+vhM46bx4xUv8d7qrecR3eo86E8GNGUF3rh
kGBvgJbuH7kfLJ434HeZxkv1VvhxtG34KFv/sg/mPTw+2EzzO/e85fO9u65m
UV6M4BHc6CvzV1B9sdTWgPVg36aCaGu6/ovhu52vbdi8Dq0EzhxITlvE5v8U
wm4eJTlNdL6FXwunnZDYPqDPS/6FtY/XV2dSvZxiYj/aOUFdofR+hvGCZben
tbmw9R9RFs/JjxxH+yfeXnhwNPnWKLWLfrM4cKPvFnt6/jv7LfmT855EUd6T
eoIR96//2KQwqm/S8eHD/hXdb2m/zd0M+5gMNwvY+z8PPv1RfNgkGk+kZ+C4
vl3m1VS/orwHrw8PyVRRu9bqpV7oHr/sHJ/qVzmLYO+jZ51Lqb6KvwFObF4V
G2hF/c+BxY4v/U/T+RzFz/A/uQcctpKZDtjllMNEEY2vRs4A5pOvkvNjqD6G
twAujs3LCaN8NFEkfP0Tw44LlMckz4Y9CqLuTqTzTepTsFNi99z19P/X3YHd
VQvP2NN6kzsKr6lJP+jJfv/lPoj59e3M4DZaf0vXwdvzWyVvKA9LuQcOvHCx
xY+uh/Y4bCj0WpJB6xXObfjHaDdFHJ0X4pthP29TaTq7/ncZ0gs/qDAlhLH7
3wjYecIC13ts/sNu+J3YkoAAtv65ashS/5p005vyqni3YLujL2tb2frH17D9
po6IGBqP5c6v9MJLw+WO9lzq/xqY1xxyLI7qaXXp8OwlVY1R7PrnKNzROv79
szTeCG7A73o+DWcoT0r6Cm4P3iiKpedZOWcY99Ow54gzrb+1q+Dvy3PnP6Ln
k7MTrm/1bQiieht+Bey6r+bzDloPSv6ED7fwtGJ6n6MYgC9XysraaT/AzBrB
9badv66YPf+yAs4I8KqKpvmalwpr/HuTrrDf/5fBF/htHmNs/kkTXNdU6+PH
vv/oh6tCPj1URPtF3YzXeuHiI7vC99D14obAN307CyfQfCvYAbu5afJkdP5K
WgJPcx3rs6L9qPIKfPxISbaArpdWD3fJuS5FbP3f9DdYf04r0zVSHi5fCKu2
pn2dRXmQku0w47v5/jaqj1UchBMKCxo+o/Ux0wDPUHQ/N1M9s/EZ/EvKnG9c
2fw3exPaT1rv7qL8ItEyuOeAJqWF8u7k8bDGz85JRfX56mK4el1QRj2tL3S/
w391Zf1kR/MvtwfuXBk+Vkr5A4KpZqy3zrlcSaT8AekSOPX56cOP6H5QboMT
186M+JvNP/wBbg+8ERxN9eWcelhU4WVKo/cx/CdwfL3ZcJvW+xK7//TCivLk
q8wI9d8XXpgdsS+f9ndMDFwvNvJraH9p/A52YiY1W9Pfw6uDG+vMvG3XqP8P
4aVq1ZRUNv9q8ls8X0/vFC3AePM/Dy8Njg==
        "]]}, {
       RGBColor[0.880722, 0.611041, 0.142051], 
       PointSize[
        NCache[
         Rational[1, 360], 0.002777777777777778]], 
       AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1: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
5g7R7C+U/nBE96l2W3Yw/0Z41PCyHqcN+x/nYY+4+KIfx5i/EH4vDf/bfj3z
N1imk+5MCS17wfFc0QM+OCf/88d9zD9l2b/7ZJes+9Wq/nza9XDWHI+8vzrm
PwsvCJ7q86CQ+V/BAlX4zh55zF9vuU66zGSrcwLzqpzgmgfd/oaeYv6JcPvv
ZR328u8L1sL1GndMM+PzF5+CBY5LbhjRsgK4ey/NqUM5zF8nVCctsun+8uE8
5u8C31n12bIG64/eF04UXuifepT5V8N5/eeltefPe52A3UPK68R/Yv6n8Fz/
5e87NarOq64Zhvn7eo+OZ/l+2s5w5aO3uU2WMf842Mczyt2hRfvq/CvhlCFJ
J4vZf8hT4NdRIxudXMT8j2H/afa713N/OOcvrLl1cccuzp8E9uFob4ni/zQL
md8HFlxMtWrC+i1bAb9x3mF3nPVPeQS2Sy9cEsr+VpMHu8iHHGnA/TH9bzjk
ZeadaP68qP0KnfRIWs34t7OYfxTcefSPBR1WM38onK+91MtyFcv/IKzevGxR
fjjzZ8MJHTKzCpXM/wtelf/69FeeR0hsIzA+tvPKrcX+Te4J65yWV4RuYv6Q
iH/jU4D/ZLaPnP3wK4nuVpMVzP8Anv5CsD6F/aH4B2xms/HKMp4fyKwVOqln
5phafiw/pTvcs4Z1axvD/GcxvOOdU1UG9+P0e+HGey+3DDvN/BlwzN7tC/uz
Pnj9Bye9PqU6yN9XWK7USdvtOG85heclajdYaJp8bSzHV+0C+FvxYlkw+x/h
bviHfV/xSa5HJHfhrBbFy36z/ci/wLtHV96P3Mr8rVfh8yamfTnI9pczGH59
fuymZnw+AjkcNbrZekeWjzgRlkVN+VMrjvnTYK9lX4c9SGL+Mlg84MW5z+y/
NC0j8fOa5FaNWX/0rnCwsmWz5Yb5/1z4ePcdO+6tZf7tcOzbRddP+DD/DVhp
8aTdC+6XqkvhDutf9ElSM7/ZarSXlWetutxlfgn8sdcaex0/nyQIvjh1m2+N
58y/FT41ZGWO6QHmvwbHOjROGvGL+T+s/rffenZaAJ+XoGmUTpqTc2uMhv29
uB/sPbBTTtpy5p8BH9n0+/c8jh/KOLiu4OSSLlrmvwxPaLe65wLWH/27fz8/
J+zKO56HiYRrUH8DN1qVG/K7wDVXGqXO4HihCITj+qX63J/I/DFwZtv0zzf5
+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
H6P+6Jk=
        "]]}, {
       RGBColor[0.560181, 0.691569, 0.194885], 
       PointSize[
        NCache[
         Rational[1, 360], 0.002777777777777778]], 
       AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1: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
ubXvMr8aXtI/pdqV9cyfA89d5zfm+kDmN80pkqY5tZvuyPod0R2+O+VYpD3r
gWYyPPhArL2C9cAQDF/+NnJY5TzmPwuvmuR0KcCV+V/AN8Y67fl6gflNXhVJ
j//THAtdyvxd4cvv33ws4HpCNwneNFfhEG/P9Y8SHvkltu7DocwfB9vGvLN9
Ooz5n8LTnbKdlKyvqkr48IkAu42c37SdXhdJnRb96RrB+iiYCNdynlEvbxrz
r4U3eg48KlzM/Cfhv7XONs31Zf5HcPNJ7pcWejJ/OXz9x/lr9sb27/AG493l
zEQZf18kgwec2hnSiu9HtgoectF66DMp8x+D+99JamLhwfwPYJ39qJmTg5j/
F/zsx9+4aZx/he3fFkl9Ro+esHoK84+D49J7Do2ezPzL4ZHLNqc07cH8MfCE
D7tyUoYw/z34uFArfhbK/KVwY2WLNvWvML/oXZF0+UqPFaYa5h8NtzSdaH8s
hvn94ItbW46asJH5D8PTD/34eW8q89+FH20rLXkhYf7v8Jtpc3e14Pwss9Bh
/9LX/GxlIvOPgJs/vxU5hv1V7QMfyS90X7OI+Q/Anw5b23qvYv402CsmueNz
rl8kBnjx8GUb8nm9Fa1y0R7DE4a5nWJ+J3jInWnug/h+tUvg4Zatv7lwfSTY
B7u7P97Razbz34KD9nfZmbeC+YvhQU8yV1pPYv4W77GeL+n+0nk080vhXXU6
dps3kvkXwcPduh3rxv4g2gPfPfVL8ekA82tg93d1nB9wvaH8DPf22DC+0Lj+
a/oB+4/5iYlBxvYfDDttzzlXnfmEC+ABTQ/Z7lnD/DvhGFVIWkks81+Hd55/
79GR9URVAB81tBLpPJm/UV6RdEW+66Dofcw/EH7t3fxSb87P4rnw9eR/iWMn
MH8E7J7RTPJvLPNfhRWdavtnWjF/Hnyr1bXdozl+DA0+FknbfGmfPKU38/eH
3b81UB7n35PNgq3jNxxtxvWNchss+ZJa405n5k+EGx+seylvDPPnwoHNr1a3
Yr0R1svH+sXZQ+jO8SvpA5952utgC/5cIYdH2A4Lusj3q9oCL81oNqRMzvwJ
sH3mF1HhIOZ/B7sceK01jGL+2gWYDzZbXO3gxfy9YNuPnrFpKcw/A960/Vap
+hjzh/znnr00ItYHwwU47kzA8Qt8P6LXcCPF7UXb5jJ/jU9F0qkTJDlRHC9K
MfzzyveGHdj/1FPh0qQ7TqncL+g2wKNL407ZcL4Snodtu379EGas/y/h2mWP
95ovY/7qhahX57dPWse/r7KF14xdtcqV87HWHQ76M1GWHsz8wf/9/NHdY+M5
vsRnYIeK271Xcr0tfw53Kvtqeb+A+QWfMR9tzcwcwv2Rpgs8yt1lYjv2X4Mr
/Nc8fvVw9k9RIPzb+nEny5PMfwpuZfotvLdx/nsCD5/1qsXKQ8xfAV/++7la
O75fnU0R5sufgfa91Mw/AW7/ZpHnPPZXyRo4Y0Hy3M7G9f8JOPmfW5gz21ul
hUPNF97QsX20f+CT5rbOLd2Zv4O+SPpSLjRt5Mn8zrBfiPjyJ14/+Uq4tTip
13Xj+D8Knz/eyimd1tyHH4QEBMawvxrK4BnPlUecWA9E7YqxXv52vdyM+zPZ
WHjg2O+7p7FeKwPgiMUnXvm1Y34VvCqtw+A7tC4T9r894mqbz8z/E57zL/1o
nrH+WX4pkl47Mu9zogvzj4K1ced+TuR8qPKFk6o3f2DL+Vt7CM7yavj1IOcH
wV24vFGs4lpH5i+Bp6wa9nCQI/O3+Yr3I2yr8uS/jxgO3zs7Q3yM+xmNAp40
6NOYdNqwH54a+/C9xIr578AlC07oWjZm/q+wZ+7GM2VtmL+lAeu5iQfuxHO8
qIfCfY5pN3zjfKnzhu89vZi3jPmEUXBZuy0bQzi/SFJhi9EN7D6xvij08EeP
oybbHZi/+Tfsj3YFX5rM/qiVwFu6NKvnyforWASLjnx8F835ULwbfnTaP+SH
cf9/E95/Myklm/0tohCu9FowyYr1QdOkBPtZH5tU6QjmHwTPMs13mcP+I5oP
V+5p0OOvsf7tgL1GFg/7soD5r8GuyRX1GnE/os6Hd8+vaXv1BfMLv6Oelbwa
8oTzh9ABbhX5xTSR84tkDty0cqpHXe7HFdvhGTfvGbZyP6BKgpcl2rWrVcn8
H+A3v6PGxnP/ImjwA+N5/OGRV4OYvx/cMz72awHnB7kXnDEg2/sR60VEGNwn
ZpDqNtePmsvw9yVi77acbw06eObksDVWycxf92eRNM/78KFT3H/IesOz9+kF
xeeY3wOe0Det5WKOd3UofOlZ26yRnM90F+EBK150CmX7CN/CK++76cfzvEFS
q7RIalZUrUdPtq+iJxzy0iW9Jt+/ajrsKFpVfdBV5t8Em0od6m7SMv8FuOuz
FmdWG9v/FZypaVInm/VXblaG/WzBz0AJ61VED3jDnLuFZQHMPwVu3er9IBOu
3wzr4QHp0lyBcf97Dh7YX6rcxvWtLBsOGO0yYy/Xb8pqv1DvblmYX+L6VN0N
9u6QO9bqOPO7wY8iO7U343pJGARvFc/s8SKd+U/DUYmqz2W/mP8Z3OXg7lkO
7D+qf3DuxzsCPecPbeffqAf9/Grs4H5Z4Aqn+b8++W0Ez//Wwa3uNa2cXpvn
f7Gwlf37mNC3zP8YLk8uqbWd+3PNX9jZK+pYcgXzd/yD9bZr7UUrBdz/usDC
++e/bX3J/KvhkO6JKWncjymPwzVjPXvaXmL+h/Cc9q2SPOpy//sb3mjtXfae
/UdoXY75cZnHxWV8Pcl4+OyRy9Xr1OP+fwW8YbrhX5Yp979HYDOrM4ty3jB/
Fvz023t7a+P+pwz+oVyekcX9sNjqL/Y/uZqGvxoy/xj4U9g52258/Qh/uPvu
dWu2cD7SRMPz3KetsLjM/Bmwd7foskzuV0U/4KRHDfqlvmP+thVF0tQt55ud
5PhUjoQ37G6i+/mE+ZfBl37bxyRxP607CPcZrIl/Vsb86fDR/MEtD35j/m+w
59+x+ad5XqNoXYn187P3f2awf6uGwXY1t5um0Nql8PDCg4v2cn8v2A+v2Jjy
qj7bU3wblutuOty7VWX5FzjoePJusw/Mb/6vSJpSVLPut/o8/x4CD1q38Xg6
z28Ni+HoPuo2aZyvRHvhrlEurv24fpClwH8uhed48XxWWQTbpcfqR6UwfzOB
XrrEItHdeB6lc4RX/+1834znM8KF8HnnZm878ueSXXCd0JHlb3n9FDfgZ6H2
f9JYf1SfYPvdv3ycRTz/bmyil27O2j4pkucngkFwn/jVTvX+Mf88uFZE3lw7
9h95JLxovaGgFX8ekQwrt2b8Hsj+ofkIj1rUIW8/+6uhYTW99O3ttFF5P5l/
ANzepfoju2Lmnw2L7n31N5Hy/D8cjnHcEbcigOf/V+Ddh5tEj/Rl/38Px/rO
bew7nvvf+tX10gOayi+m3A9L+sK2Ln3upVuz/3vCL+2cDs5zZv/fCvf1+ef4
gvdHtJdgQYG3ay0vjn8dfNtFpHXrxPFfx1Qv/SEydyoZy/z2sO2N9fPFMt7/
mAnfK7k3wYn3JzSb4Wo194Zd68D88fDEabYdjzfh+H8Df5Lle1zi+5XVNNNL
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
/Pof68025Q==
        "]]}, {
       RGBColor[0.922526, 0.385626, 0.209179], 
       PointSize[
        NCache[
         Rational[1, 360], 0.002777777777777778]], 
       AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1: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
4efcrRMrvlP9K2HXiubvhlMpv0JfKTfh6ifOEkdq/0ZwB3PBG+WdcstWwJeS
HU+4Uv9g8WGjUQauqw5Q/S/BD30TF2mQ+eVwnPOorRO1qf5/4X4ZQe7awZR/
TD8pl7m7zPA69T/mcth2EHvLa3p/zk54291pX88MpfqnwqeeD700egnVvwze
aqPZMEhM+f/ABbI6f+dFlH+UMvrbpJ9Pn9H8wObBWgP3aBofoPw74EvXjk+p
/0XtPwXe8/Zr6Lg98vlG9Bx+Zpd4Q/OJ3LJ2uNChso8StS/WiP5Srum+1UVv
BZTfBn6W6+u7gczfBle9s2AfoeeRcRb+NyE84VAxtf9iOC7q7t/k9dT+W+GB
k7wm9b1H+VkDpNyG8pFT15nR/LcIZvLj7q6Oo/yB8NsnNk4Zk6n9n4HvC/99
+EPtmfEULp0iPX6f+if7J/wwj31f4S/l11eRcg8LV+d7q1H9reAKiUZ4A/VH
0Wb46j43btdwqv9puLZtfmzWasr/GJ51XXegxkXKL4Ojdw3OcLpK+XUGSrmL
vp9b/LSL8s+Fc1y3ptT0lueRbIQnlBWfuX9RbmY8PHHEi131uix5/gJYeOF+
sNd9qv93uH/HJdWbJyj/YFU8P9fLkcHr5X8v5sI/nR14ghS5Geth5ZafcSll
crNPwAP3OU+enS63mwgWxYauZWjIP0/wDX6o9T0xeYTcokFqUu7SPwtXrU6g
+lvCmoVrrY1K5Wb5wBcirU/MVJC/nncUPhTftimrS36dfwf++HKX3orZ8usZ
9fCW8xNcnz+VW/IfU8o9W+0asM53uDy/BRy4V/Rk4yq5OWthxXGavdZWy1/v
L4D3bdG/oXRXbuFtmG8k+Xbtitzij/DYo4Z9TkjlZqj9J+WO6az1jWmSmz0d
Dph1tdHYXW63NbDqWKHa1n2U/xBsfb2BU/mB8ufAHuZTvo3aJrfsA6xlXnv0
+yS5WSrqUi5ruGrSx+mU3xQ+Z302/udKuflusJqR42qNBvnzyDgAf/+r/7jc
kvLfhKvbqnwOecnNfA9LK/9Z/VOh+itrSLk2JdWNmSzKPxkeWWyior2V8q+C
x/mOf67bRvWPgoen/tXR8KL634AndflpliRR/d/CPzz/jH49hPIrDZJyk++3
D1afR/nZ8PkIpaSXddT/neDsoYJ5oltU/wjYM3yb6Nk9qv812KTi431dpty8
N93XTRdM2UTtkd9LE/1nvWO4bTblN4bvPmU5nxdQ+18JFwcOPFmiTPn3wGOD
pg7YRu2JcwXOS7uW1EeJ8r+CDVlL/Gbukv+9kKEl5TpaeWSWaVL9x8HWnPgH
iwdR/VfAOcvyP6owqP674UPCrNibUdT+L8KjQ8L3LR9D+V/CXSc+cVbpUP27
4PGNBQM4cVT/0YOl3Dv/vSjVnUL1XwYPEJsurLKj+ofC/FPZFTv8qP4X4FOV
P3pd+0XtXwynRB8eLXxH9e+AZ4naNtjeoPyGQ6TcrIn/2W1Jovy28MvadUuz
qH36B8MqbxnO2uFU/3Pw0FEvDtufpPwl8H/ZZw6OPkj522FNXZXjYZ6U30Bb
yl1zqtOWRe3LzRo+VWLixfoufx6CIPiIsa7HtZNUfyH80Ehz7VBjyl8EH+hb
WFG8kfL/gotNly/5cpjyD9ORck9IPTINwyj/QvinkfWoaXMo/xa4F8PC8a6U
6p8ID9UPnDNgIOUvhLXvTku6YUX5f8DHnwlnZfbk19NF/435MSVxPeWfD8e6
vOtSC6L8/rrd47fVk8QJlP80rDrXf4FpK7X/R/CDGbtTbxyk+jd1v19SUIJJ
JuXX1pNynTwXKf/eT/nnwD55AxwtL1D73wDP2KKnFvaF2n8c3C+6w0HEofb/
AL7l7FGiSO2HL4XVG2+c8hpJ7V9LX8rN3Zk74dF0ys+BP582uhkYQOO/HyzT
LEpW3yc35zicM15h6dtymv/uwSd/LtU7oE75v8Ip5xXV8xdRfo2hWB81h68N
pPoyLOFAD+avUHX5eMpeB99e+7T9nSPV/wjsPG2NWMah9p8P1/5OSHnMpPb/
GdZ90/LQ5Q7lZw7D8ymYmG9hRPWfAVvFn0ouKaL8Xt3Xh+0++bQX5Y+BMy9a
hy9Wpfrnwqt6L34QROOvpA5eN7NV+mYh1V+VJeV+6mXV/sGE6j8NbtiZmFD7
gPJ7wAdWCYI1s6j/H4S9ch4kampR/mw4dMeQS9HfaPz7AHOa/nX6L6b2P2C4
lKtUrbfBgvqn21R4+7ydG2w3U/7VcLH7ZwtvB8q/H355IFB7lge1/0x4SEjZ
1VfUv1g1MGfF9MfRXGr//QykXGOLuNuDAyi/Cey597ROJc0HGS7wk5aBa98Y
Uv69sPhi7p1fT6n+1+Ej4i+jjtF4y6mGNyiN/Nj/ELX/PiNQ/ymD99h2Uf0n
wvHXd8yZdpHyO8J9/LWOqPpS/SPgf1km52/RfMlOh+/2/mdeepnyv4abBlxO
+xlF+RVH4vkdSeeKFeXtRTQe7ryQEvnpG+W3h22GjUwdT/MhKwzu+/R206tz
lP8yPLO1OLzVm/JXwHbrl/ZXWUH5/8Eh3LmvhlD7lYw1xHpx6u39/1qp/nbw
QF6L2mt6f84uw+7174KbLf6UPw1eEBT+ckQe5X8Bf5+dlVQVS/k74YC9CfNO
0eczRo/CevZT0cBfNH6xl8I7Piu/tbKh/CHwY9NXvl0NlP88/PfF0KvqtJ4Q
lcLalwta2mh8lf2GT8deMllK4ylr5Ggpd+6btEEHqZ68JXBmdkr/cUMp/3Z4
xIIZr9t2Uv5keNl7qfQx9VfJM1h/j8+RrTR+MdvggaV3nzrR53OGj5Fy/QLO
H3vsRvkXwwOUfK0XWFD+rfAFi+x0HbouTup2TdDra3spfxHMc1M3yImk/C3w
qeXtZZfTKP/Qsdj/jPe3q0+n/AvggLfvdi9KpfwBcBVvyaWCnvafAG/afahp
Hj0/1hN4xc5VimUxlL8ZPjnf6drjm5Rfdxz271XZPkvfU/55sPeqzAOGGyj/
Jjim/VRsO/UX5im47/z91ZrUnzgPYXurezc8bSl/I5zJesX+cobyDzGSci+H
jNZwp3qIZ8NzFFT/KCRS/g1wid+w+DhaL7FPwrIM77Mj3lL++3Dj7Ynt7kry
9i5ogEcEXLM3LKf8muPR/39mGRZ9pPyz4FODvSQ/JJTfFzbsVb3wQB3lPwav
NRp5UXCf8t+F07kpezMeU/4vsIytO0mL5nuJujGeT4Xrc1PqP8yZ8Jrd7qsV
Oym/NzwvxtXeWkb5Y+GxJ2+5DRRT/jz46rpZ3pEPKP8nOOJdg/ECuj8GcwL2
NyKRTDOC8pvDc5zmG/5Lpvye8Lj2nbM+FVH9D8PfUjQ3qFH/Et2C97e+mPQ7
g/LXwntMlPuFnKX8AydifOkblXeR2ivPDFZsXF7YdJzyu8OLhCbqXzTlzzcj
Gv5YtOzxAwW5JVnw4OHjd1rReogpgYXDXW8mPqL8/dnYX66ZeaqI2o//FHjf
wqbD3vryvxe6wiXuD+p96PmL93Vfj1Kb9JvWT4xMmL/iaEFzI+V/B//1+JHd
8Zzy952E/VHtkJ/fabwTTILnSwuu5v2g/M7wk5wipzS6H1kk/LlJc/lZat+s
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
W8dbtFP9eNVw2qBvF+6Np/x9bDGeVnivn2tD+SfCZ+YfcbrmTPkdYVmFfra+
NeWPgI/M8LxZS9c56bDmMRvFDmpP/q/hP55LB42k9ihU5OH+ph/9IthA+cfD
LiNKk0eNoPwrYde+Bnfv9qz/w+AxbXuOZNF6zu0yPPn5KtHmYlr/VcDJIWX+
OrTfE/2DA4/d4la/oPl/7FIpN/6S7YnLtN5k2cGTzz8P+EvrWd4umFNWfDKT
1g/8NLgmaOq6Y7TfzHgBDy/4dH8CraclnbDhrf3VtRW0/hm9TMq1OLY+vY3W
y5ylsJlTx8bIdlr/hMCZH58df9ZM65/zcKRho+rGN7T+KYUrtMrO9twPowP+
daJk0Sda77JHLofLTdrW0vrJbQl8uziCF0PnSYLt8PSrqd4BPd9/JMPZtqp6
ElofyZ7BsZ5KaxU/Uf422MMhZel+2r/xhttJueUXvsQeeEX7n8XwhIGjT+7J
pvxbYbVGTtasAsqfBP9d3jTgSC7lL4I/KHDqC2k9zmmBZW01t+/0fP8zdAXm
u/ZbHTbPKP8C+P7QR2rt9PfiADjq2w+f+FuUPxE+75u6ayPdD/sJXNCZM6R/
CeVvho9+OpwxT43av649xsuPBxZcoNeL5sEhfpmM+/T5sk3wrXg373Taf7BO
wTG5hp2z6fss3kO4edMYR+cvlL8RHhev4jW75/xjyEqsd5imlQrUniSz4Rz/
s6Kqnv3fBnjyJPMqS9qPc07C4gmxTw6JKP99+J79kWYH2u8LG+CxwcYZux5S
fk0H7Gebf3fY0/0yOPDuw1E7eurJ9oU/PfB+oUDtx+0YfDH2R9pTuj/BXXjC
gXNlg6i+oi8O3ee/z0ych1D91R0xvu689nyeA/X/mXD6oLeL4kdT//eGCx1D
D3M1qP3HwuNLVw6zGUD9Pw/el2PK0qD3k3yCA6b+8M2aQ/2f6YT9akB9cWjP
93/m8MFJWt8cqT/7e8Ih5VM2KdD7Cw/DOYnLDa4Opv5/C67cU91vFtWTUQer
VFmfMxlK499AZ7SHKV+CZ9H+y80Mnj/oYIV/X6q/O3z5a7bxfDMa/6LhD537
j72i8U6W5dz9/dKy40enUn4JfJT7o96QR/n7u2D/M8tUdMSU8k+BSzP7aJkN
o/yusJe4JSqLnpdkH3z+ROCoVBrfmJmw/vOaNdkWlP8drDv163mvaZS/7yrM
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
x/r73fsNKj3nX9PhqP7ZB5tp/5KxBg73G33fmH4fIDkE73+86v5kOh9i3oIv
McLWRdL7cWrh02s6/7tN56n+Ko2ot2PHg2s951+msEfFt7JTdF4ndoOtK0RN
u3vOf6PhPV+0RjOoP7Kzul+/3mhBKJ2vub2Hc319FY/QflOg3IT5s7hr3rqe
7z8mw/22vh/uQOd3slVwfAvvcCadZ7P2wfZZkU+u03zAuwHvmaJpUdyz/3kL
z+6rHBhL81GGkkzKvav+9XE03b+EDW/M3j4tisZnpjN8pJP53oGucyLhjsKF
HZfp/v2vweHbbz+p6jn/egO3DdzTPJ3OE8W9mrE+N1+dc4a+r2dMgLtqCpMZ
Pb//cICv9VP23ULPx20PfKK4fk0Mnb8IrsDML36DFen+Ra/gu3PHP1xE+2cZ
4wfmiynhaQtovmEZwRkpaY0RNB/wVsBn23QmldH34/zd8FBfFaecnu9/L8I7
yjs/DqX7l7yERX4OCw/ReQDzL6yRGLfmU8/575if6O8aExLbV1L+ZfCUNwO5
dfT9uDAUnnF+R6/KXpT/Ahz9urCzgJ4Xowz+Nu7ilqlUL/Yf+IJ65WcJfV/o
ZtiC9XqhGsuFxnOBLRxfVy9dRvcjCoYLjFV1H/XM/+e6X6/9x8aXxlvWc9hW
WPbKkn5/yWuHTwsfVM6n9RXf4JeUOyqreX0YPa8MazhBvNC2heotCYKvWj01
dKLvY5ln4dW3w6Q1ND5wiuHIEb3frab+6/8L7lBVNaim+UE4rFXKNZJ9Pf+U
3k+8EJ475L+UfGqPjEB4l8+woot0/sY+AztNNRixqIDyF8IXpp7Kn15F518/
4LTCxOm9/1F+vTYp93Gf/7YN+k71nw/PNUiLGveU6r8ZZrbKuppzKf9puPPK
5SHu9P0o/xG8aL3iRc9LlL8J3u0cH3CZ1m8S7Xa036//DW6l+Zw5F16aVZd9
jl7P2Qi3xJlPPUb7Df842HrAMMd22l8IH8CNw9MGhtP5gFgKr55sHBZN+3PG
4N+4rrPvdS6t59ncbmeXD79A35+4+cGOUc9W/lpC9T8OH3WP/ONK56uie/Dy
N22/9Km9yr7CbRcqL2jT+QNrUAfa1/NGNxmtt3mWcFFE5sr39Psd/jpY6/6U
5v7U/zKOwOvDtvbpOa+S5MNbNWxO96H1A7MePrVoptLunvPv//5gvWDT+ieT
zq/9Z8BNHe2T/9F4KPTq9orMIQd6/v1DDFw1buaSYS/kZtyG57j8m1JM5/3s
j3DW+cOPwnq+/1DtxPrIgzXWjO5HMA1ersOLcKDnIfKA2/v2mpJG+0nZQdj0
6prpSjQesnLgOeqdl83pvJv3Ae7H+hNcQ/2LP6BLyjU3ljYtmTeC8z9DNyF4

        "]]}, {
       RGBColor[0.528488, 0.470624, 0.701351], 
       PointSize[
        NCache[
         Rational[1, 360], 0.002777777777777778]], 
       AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1: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
fejRhNd3DQ12YHzVtOddA/++yBXWHj0xvxP3m8nmwUnedeZZ8PPKHfD5A1HN
+vJ6leYyXNPe/9hX0/OfiuAWsZmbHpmef1Z/J+qLq3t9C36fpC9suJn4dBKv
Zyp84E0OrfxUvD6oVsEhfiPkBl7v1l6Edw8prLnYdP3r7b/vUz55I1jO/FaR
+L2ZPR4pOrH+94abOuws/8r+WDUL3rN8V+qegzz/Q+E2I0PeVbbk+X8BHt+m
QjWb5S16Ddfz8ji4ib9PZrEL/f/Q/3JG8/qwsgf8yfr07Z28/q6Rw1M8D/5c
8J75t8IF41xfHePfFybBui6zJMprzP8Kvnst7EwS1ysUtXajfYnqlfetJ89/
J3hxhGNkSlfW/2nwpQvp2we1Zv0Pgt2nTIn2cmb9Pwfr6shjXNneyV/AHrtO
z53G/kRVY49e+vdlq8UnDjC/GO6/eOyeLe3Z/k+Gx4/wcG7N+bVoE7xMNd9v
BOebsrOwX9CstSrT+P8Z/O3K6/J00/yv6l6M7wOjDx47yfavE2y+sXD0wSNs
/ybBKX0i2r3m/EyyAR5cWvuIFedTitPw2RV+CW58/qQ6B3a33NRtYQTzC/Zh
fh1+6+4N0/0/HeBZ4V86W3gx/3h4rCZ+2dG5zL8O3tdgp1zK9lV1Eo6fPi4v
3Zr5H8GJZiMGVTRn+VfAzt26J+7m/FjkGIX60S+1lyV/r8wDnuh9w3oM18+U
q2G3htF/w/h+zTF4z+ap4Zs53tZp4eAaDb9uZf8gLIdLJq3IaXeZ+Vvv10sl
Xy33zWzK/m80fP/R3OENTOPfFXD3J/OeyP2Z/wicU2XN2yNcTxFkwn0sXc4q
2b6Ly2DH0VcE44XM3+IA5isfPjyvNZT5R8ArT07sfNGS+ZfB+Yv3dq/H9tyg
hn3flVgv4vUa0X34VO2P14O5fib7Dtv+TRZZsv9R2h9Ee7/JN8bStP9jKFw1
2TLg4ybmXwyXjFxf0ZfttfAgvEzySbBwGvOnw4cm5tUp434jxZd/nxd2Wps0
jPmbHcL31z9yoRv7A+0gOHfKOp8I7g8QLITT/wZ0n8b5iTgKvv06OHbRO6Pl
t+B5ASOXuDRh/lK45cy5yZbsz9Iaq9HfT6q+evZ8lr87LHgw99INth+iBXCC
V7efMhuW/x74Scq7sy15fJTX4dGOM/t1Yf+s0cNLv3VTObdjfpvDmD+cHLug
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
OIvPy1M3f4bzM/Rn1AHer64dAjsIQ8yP8v4GwWL45oL1GUd4P4P4AHzra+bS
8XzekfwOvO/85bplpvb/M1zhoVuxhuPPtKbPUf8S719ZwfG0YSC8R79DUZvz
K5EC3q6d8np0F45/98H57rv9xFxfV96Elyaub9Wc1x80n+CR3Q4eu5DO+Z9t
HvrHH34zvRpx/ucO9/qyZKKqHtf//OHLBR+6CjhfUeyG+07oUf0P9wOrr8GZ
h2fY+T5n/hK4cq7nuArunxXYvMD4et5Oz3NczxVLYE3WgQ17OH6T+8JOdvev
JZme/7QT3jb+nW1j0/1fV+CkC4IZQbxf11AM/77W5ooZj4fI+iX602qRIinv
D5T1g/epv75/wP02yjmw46X562y531wTDg+qsvni1PUs/1TY/9vUYU85fxO+
g2u/9f+mMu1/FubrpQeSniZoWT4KF7j6T490O64nqmfDCSHyEec5PtRuhx1v
dTz0ks93FaTA6wt/NfVkeyIuhAf17fczgf21vO4rjJ+n5XvEsr9W9YQ1N6yv
9Ob+7LSZ8ICQ9VlxvH5o2AYXqa+4neL5LjoP/xJnbM3g+SPTwZuC3wVn8/xS
1tah/oTImvVhf6Nxhh/vdRkygf2Dbjr8vXHvQ21ZX4XB8JjI88IxvJ9fkvDP
Hu/zi3k/heIlvG/GoOAdHE+oaxagf939/be56fkvXeEyu/3DlnA8LZgKX5o7
fchV3p8l3gyP3WwR/YF55Rr4WeMZKUFsP1XP4UlLh64pfM381V7rpQ2Guy3d
xOctGTrDrmsK2v73hee/Jzzn+PHDm03PvwuET6/0bzuX15uUZ+CF56tsXcbn
p2ly4a8NGw0sMK3/mhXieE2LLj/A8a6wI2ymSZg1lu2hZELhv/vT+yx7aBr/
KOG01rV1V033v5+CsztsrD3TdP/rY7izR5Npxab+72/hv/txvHfc5vqiuN0b
vXRvb/udy0z//tlYeNSGBhbb+XxV1Rp44NmYqgM4Pks7Drcu/DoqlNevDA/h
aZ03l1ayfxT9gTsn/o0xPR9H1uatXtrNM9d3LO9vUMrgt2+T+1U1Pf9kJZzu
0nbBY/57PLqj8L22z7MG8HnZwiz4xSjn9Yd5f43kF1ye9n9LdxrU1BXFATwD
QltgMFYsyDImuGJrJnUp2CIkrCoCsYrDIppGDSBIwQVFFNIKCgg2RRQpioBL
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
f77VG8yx3v4HEyH8Yw==
        "]]}, {
       RGBColor[0.772079, 0.431554, 0.102387], 
       PointSize[
        NCache[
         Rational[1, 360], 0.002777777777777778]], 
       AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1: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

        "]]}, {
       RGBColor[0.363898, 0.618501, 0.782349], 
       PointSize[
        NCache[
         Rational[1, 360], 0.002777777777777778]], 
       AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1:eJxTTMoPSmViYGDQAGIQDQQC9fteOy7YtquZ10veAch3WAnkVwksvpjGpQDi
F1wG8qcYvbK4IwTmL/gL5GvFTdpwJw3Mv6C+/7VjpodTtqSgIojPEATkP3OW
59o1G8w3qAHyQ9953jx1Caw+YRmQv3S/4b3DH8H8CReAfJ5DX5PNpoD5B34B
+S0NS1o5QsH8DyoHXjsW5tVa6euBzVPwB/L5L0W3m+uC+QGVQH7FsaBlh1rA
6hsWA/kblWdP4bAE8zecBfKXrBR9UH0MzH/wHcjXvilmY2UC1i+gdPC1Y1eP
e9zNz2B5Bx8gn9H4hVrTfIj/y4D8xvYW74VeEP8vAPJTFtzJ+ZAM8f8pIJ/j
ef4jD18wn+ErkL9YYcqXFe5gvoH8odeOa4wiuOtvgsM3wRPI1/j14EMaD8T/
xUD+t3sbu80h/ANzgfwbiiZnWGQg/j8O5CfnGzA1bwLrV/gE5KeZ7sq4/xjM
D5A5/Npx2tILJu2ZYH6DG5C/2Iety10CzN9QAOTv3fX894zzcmD/zwLybZaL
K/GuBcsLHAXyp3vOMgq/AYn/90B+29FbOl1MYH6B5JHXjqoBCawrToP1L3AG
8g//PBEX+wPMv5AL5JcWLPsa9BmsnmEGkL/4qeXT0IlgvsEhIP+VmGtS7ip5
B8XJayIeAvmQpCfiAAABZ/jA
        "]], 
       LineBox[CompressedData["
1:eJws3Htci/3/B/AplGMrCTl1oMhpTrfIoTlLmJAiDFGkmmMkikKRzCnHsqiI
EIUcYs7lOCFyqNFBtGqOheR+2avfH9/f4/nY2va63p/zdbkt5/i7zNMTCARe
BgLBv/+/8c1CWeWtUrFA93+mjvgfudntUnH9JiWPl8S0/2elI+w2ZPuvVm46
axfC30QG0zKy2/2zxW74Wbf7Ee9W6Sy5BkdHf528w133/pCPcPjnExeaN7P4
55Rmd0rFnt7RC0K9da+rB8FnJK1+B2/UWegN9/K3u3upi86OO2C9KU9/TPiu
+3zZFdhg6OffiU661xXFcI8bnbNzfuheVwnvlop/JCecHH5WZ4EDPHzG9uYF
n3QWzYNdW+e1bKvUWboNNi5KG1F3u87yi3CY1yXnLny/sgAOP2Ma6vyV+Ztk
loobb9ns3G+6zhb2cEnpU81Tmc6SOfCM5zatqo/r/j4kEr75zC97k7fOKedh
t8f+slkSndVq+EEruzkX3XQWNsoqFV9K2hb5bJLOjn3h4MO/bF0O6D5fNgs+
2Lrekg1Xda8rIuDh5TYn+p1m/lT43KwOKX6BzJ8H+393y54cx/yG90rFLi0V
80U5zN8LLjD6dGvaCV195B7wYPcP0w1FOis3wkPb71j7qoHO2hQ430B8TPKd
+V/Dzwo2WqR8YP5690vFv4V2ObIS1r8HvHCCwY8rP3ROcYfzy0tvN//C+ofC
jzfcT5s8SPf5wlPwuWkfSx620tnxJTytXuPmiZ46y/QelIr7D+lYtFyls6Ir
bD7qcO9OUTqrXOFPB7sUThqss2AdfFYhXZZUT2fRCXiW54qMefm675c+h49F
+KT1i9dZ/hc+XXx1vEso23/nh/j9I/aPXvaQ9Z8Et5y7ftmVO8y/Fo6IfRtg
ban7fMkxONpQv/crZ51DsuFWP3fNfmDL9l8NJ93o3drPUGe1zaNScYfcP+tT
jrL9T4Srlxweepuf77gaHpvtOHfRHtY/AQ5uP+rvJAXb/2M4b4B2qd1tnVU/
4d522bKdeToLOjwuFTtNSDj1eAjzj4dv5bfoHjxVZ+lKODQgZEarj8x/GB6h
PdHuQXvW/wGsff9wgnID8/+AUz76Gb6JYn5LVan4kdG2JvZPWP+x8KGwvJ9D
d7P+y+FmDicr2mSw/ofgmojWZZJxzJ8F//yUMMPoAvN/g7dGzd7ykO3Bsd2T
UrFt4ytTOslY/9Gw4LvDejcX1n8JPGn1p7cb/mP9D8JdszYs9azL+t+Fz63e
ZZrflfk/w4cn+jQuasT8rbPRP7OmedufYf4RcFnjaJViPevvD899Urf3I15v
7T44MLtw9/CGur+3uAX36FRT4neQ+cth4VrXzdkLmb/l01Lx8/pVHwLWMv9Q
uOnGfRVTW7P9L4INrh5WXmjM/HvgKZ7jDDJ+s/7X4QFdT9dp78r6l8L23VKq
BtRn/Zs/KxVrOke8/LCD/X8IrN+gXXzEfNZ/IbwuQbHp8G32/13wTKvq/ReO
sP9fhd0WevQ1FXH8K4EzLo0+3EDL8c/kean4V3iU04nb7P8D4UBLQZDVaOb3
gsM/7jDUL2X+7XDnL2Vyq2/MfxnerL0afOUa8xfB5307fC6cwvxGOegvaxMT
pn7m+DcAbpWz6fWUWxz/POGZgQFNXLdw/I+CO/eKutF2KMe/dDj+Ud/NY1sy
/3vY3yTSTP86x78mLzBe6Gnju29m/n5wcdc++Z0K2f9nw7nP625PimX9t8Cp
x2esFN5l/c/BK3fMSrh8jPXPh+9lX5vka8T23/BlqdjjRYMKR332/z5w5sji
xbJ57P8zYanLzaUtB7L/h8NrvC5tcStm/rPw49ntdzpdZP3fwnHt8izu7WX9
DXJLxb6ChYPdT7L+PWE/E9M1hhxvFNPht8Wd5k7n9VZtgIvzG+7cwzyCFLg8
cUaBkJ8negW3PpsxzYHjnbTuq3/jiaPdTSOO/93hTiONW+1qyv7vBpvPLuuR
W9v+18Oj1bndL4qZ/yRc3GZwVk035n8B27a+0jmxDfPXeY3P2zBM2saT9e8C
P3nez8iwgvmnwKPrDvm2sj3zh8ClYUe65o5l/Y/DTY0EnUbuYv2fwQmeDuZP
J7D918AlFTcqXhaw/p3elIrbS5Z/W2TO/JPg2S8b5yldWf81sMb4QKTxb7b/
o7DJsYetki1Z/ydw3QHhTWeMZPv/DU+M+FG9drnO2o5vMb+8Csvo2YrrHwnc
ccSvgkO1/T8QDtv6pdHbdmz/8fDRViMlLsM5/z+CbSravcwfwvm/Cg7wX9At
Yzrbv3Veqdhrp/tAk6S2uvzj4K+bE/o6FuosC4BL9i5PbT9FZ0UcfGaYW/rT
Uzqr7sOHpEtWmdeuf37AYte9qdeCWH+L/FKxd27bTakc36RO8INDt/sY3WH/
XwZHG+SaJPkyfyzcymfy69HPdZ+vzYQdznhq5g7T2eIrPLDyvwkmD3SWtFWX
ilccumD76yTXP6PgZSnWTRb5sf6LYf8Um4woO9b/ANwk6tK5oFGs/x34Tof3
m/TWsf1r4ZUL/7wK0GP7N3+HfP123I/sz/4/HE58OL/5E64HVX5w0sqiwH0a
5t8H9+vr1b+OivW/Cb8++y2zP9ujtAwuyraM72nN+rd4j/7c9/a15HDmF8Of
Z5/9NukU6+8DD0iefsI4lvWPho8aSJLeH+D6VwmfSmt9OiWA+T/Bkz7aqW3Z
nlJMC0rFU/dOs/N4q7te6sFwzo/TV6sDdBYugA+tdpylsWP73wnP37PGxmwu
238G7H1t7dJY/j7FB/hql/u5Y3ew/saFmH/ig61z2H8EA2GH8zue3bije100
H65J/+EUNV5nqRxeF9+mzavfbXT5L8GLG9k8XxCks7IQNm3YtJtBGOvftKhU
fCM1skfAN93rFv3hrUOH56r8WP+58HPzTVc97XQO2QpLZy8bn7BA55QL8NW5
Jxr4HWT7fwev98kKDeL6W9i4uFQc0szbqYk58/8H92kW8Kgrr49MCl/55pw8
3YftfzM8dUjAzMFFzJ8Gf/5ZnXDOXWdBPjxmuKNhw+bM3+BDqTj9paXvXnPm
7w2bF8rv9crTWT4DTnbSSCev1lm5CZ4X8UC58r0ur/YMPN47ZGfBOeZ/A3fv
4NL/+06dJfVLSsVr028/TJLqHCKC20h6jJM0Y/5p8Ms350cpJax/GGy00CGm
/y7W/zT8dqZrhdEJ9v9c+G/O8p0uV5lf/yPWK/ougmIx83eDc9sO/mgyn/mn
wimbNyxJX8L86+FE2ZnMEYuYPxl2F+mHxGUxfw78eWGTJnVr53/BJ1zfscti
evD6Ke3gqppJkQ3599rJsLy/pHOiFft/MFwYGf5unjXrnwTPMDJus7wp6/8U
3jEr/laXi8z/B/Z9V7B5wD7mty0tFUtOPp3W5Tjzu8Afl0vHfk9n/iD418Tj
277w/bJEuHBmqN8x9i+FCn4yw3O3Acd31S/4zuuJUxMas/131JSKv+vXicmR
sf9PgCPsUg+P/8H8q+CWwUWN2hoy/xH4VV5jd9e67P8P4T2J9yb+vcv8lfCd
CKMvrqyPhVVZqXiLdXnGLP5+iTNc9cCqZxwdsgL+5bDVV7CZ+RXwoE+/9UoW
M/89uNGpeoP01Wz/32EDk3u7Wn9l/vblpWLng28yBvVk/x8Db/PYe38527ti
KVzX/sLgWdtZ/xh45bPxHbPZXwWZcMP8bnMmJ7D+X+DOsb4vg24yf5uKUnHP
W4WLDL6z/Y+E4/2Tm31PZf1lcE5RcBe7A8y/H9YYtm3gF8X8t+Fc6+1jxjOP
pALOjr9wvO9O5m+lLRVbWw4I05cz/zDYPeKoSSWvh9oXnjnWd8F4F9Z/r/bf
fuLWpAndmP8GHNXQeZ4H+4tMA792773oXFfmN/tcKj455l3E443M7wib5DRd
Z+XM/D7wisgH31qxf4l2w5nBHvILgcx/DR54uP5IGw/m/wjnaw552nB8UDb7
UirW61Pi+8CE+QfB7qVXrF/xdQtv+JqTqdsnW+bfAX8NfPn1Zhn7/xW4WdWY
5d6dmb8Y/jExqE6YBfMLv2K/9SK5XMrPEzrAeh3uqseW6v7ecR68QH58bnqU
zrJt8JZgp3UPa+f/i3DSceNV144xfwEsvl1Yx/6g7v2Cpt8wv6dmxub9aq3L
bw9756QtWfVHZ+kcOKFz+uXH4zn+R8LvbS5+Vbpz/D8P+7w3nfyyHsc/NTxu
/chmsU91f2/R6HupeMJei56qaxz/+sK/nYz/xC1n/lmw/v3p8xq30zklApa/
1xddna6zOhV2EoyJWTRWZ2EePDLS/V43N+Y3/IH1zoimorIZbP+94Bd9ivov
78T1nwds6755nldt/98IbzAP76/Yzfqfgev/mp2iyNd9nug1vOXQ62Y1dVj/
epWl4qftp2cWyJm/Bzzt6rr9uV1Yf3f4XUfzN/oC1j8UHpieG+uWwPH/FPzp
+0I37Ubmfwn/F5xx4f485terQv6ZY22GHmX+rvDO8oKjC/h5alc4tepA1rBk
1n8dbB856sWO/Wz/J+DiJeP2hXG8lj2HGz+Pfb1wK+v/F773KmlXPtdfqs4/
UU9TRdxirhcFk+Hf/Sb/WFfB9r8WHlQyb71rL+Y/Bi/a3bjiANunPBvWjstz
bvqU9a+GJ9TfJWxQO//b/ML+YcnTJJkD2/9EeFWZImok+5tkNTy0WZiV/WSu
fxLgzx0vxklC2f4fw85PQuLblzH/T/jEm5srv3D9IOzwu1Tc+5fi0SDOx47j
4Q47Trzbw/fLVsJdL7YoS+Z5o+Iw3Fc2a85ZnqepHsCBh38tLB3O9X8l7J4z
/FgH7r9FltV4/VmTeY14niEdC18KPLQ+/yHH/+Xw4HPD5o5uyvH/EPzqUXrH
T2eZPwsO2pWvfRDB9d83uEVwwyMGh5i/3R/MX3t3JKq7Mf9oeIPFCqnPIK7/
lsDtna9cvsG/Vx+Erf60q2iSwvH/Lmwz/cRqs7tc/3z+9/5QV5v9/HtZ6xqs
V9RHF5jVY/4RcHl069HNTZnfH17kvOXeRI7fgv2w8x7jiG5yzn+34OfSDadF
PD+UlsN91ho0iC5k/pZ/MZ/MuTuv6XHuf4fCNUGWyvk8P9Augh1OJnx5uYL5
98CBL3b3GZTP9e91uENwyqbIGuYvhUUVzbNa6nP931ygEefWaa+e14br/yFw
2cZRY5J8uf5fCC8sM+si13L9vwtevNTwop8Nz3+uwnW6mHa153mSogQ2KTV7
J+R5msqkjkYcUu7YNKcJz38GwW00Y01m9OL5jxfs8aH1QZ/hPP/ZDh+/P6zT
nO7c/16GV8oUxet4HqYsgjcpnPPG83xXa6SnEV8I6FkjPsv97wD4+cbCaPsR
3P95wg/7nz15bRz3f1Gwa/9RlT14fpeSDp/b5HajcT+ef72H7fzavn3bgeef
TfQ14nZXTpYcvcz8/eA526dbWCVx/zMbrp8jGX8xgfm3wGMeT6+ezP226hxs
OPu0fr/JzK+GvXf0mjg9i+2/YV2NOOL0z4iIArb/PvDTgJo7c+sw/0w4+uuu
F8H8Pcpw+PTAmHmGdjz/OQub+nfrvFbF/G/h/Bv3l418xPwG9TRi/TMmU4uu
cf/fE54i8oot2cbzj+mw56Jrp334unoDfFrV5eeu88yfAtf4FJ+et4Dnf6/g
hvI900Q8T5XVra8Rt8r92HD3DJ5/dIev/W7kPHM587vBB9Y/Pz9wEvOHwpLV
oy8KR7L+J2GLa/HmLXm+LX0BuzgZHhBJmL+OgUYcucH3Zh+ePyq7wC+Nmxj0
4/mpdgps17DN7H7JPP8Kgdcn2liuYHuSHIfTfw34PGgm8z+DPwyr0r/vzvw1
sE/pnGmXJzB/J0ON2MFl2+cnNcw/CY69/3vDqn3MvwY2dg1Qt9/M/Edhe8XY
lPiDzP8ErgnPMWpee/79G/ZWun7fs5L5bRqg/d6xudl9A/NL4OxhwTlt9zN/
INxEOEy5IIb54+Eb71L0+rxk/kfwGyPzEQY8b9dWwVskZV5Pk5jfuqFGnPpi
8553Ycw/Dp68yfDYh9nMHwAbR98bvqw2fxwcaXw8PjyE+e/DBd0qYl7x+4U/
4Az/aAujUOa3aKQRF43a/eSQF/M7wSqTcUbOzKdYBsfY9ri2dQnzx8KNhvUv
TdjK/FmwVaPkkN1rmf8r7Pfl2QL7IOZv21gjttnxIzGJ11c+Cp48Pn9ymY2l
Lv9i+HbL1Y4/eumsPQD7Gqocw6qZ/w78fLF6XGUR82vh0+9PTlU+Zn7zJhrx
AuwoYng9U4bDkz86d5/8jPn94LMtW+p532H+fXBoHX2n4EfMfxNWBm/5NFrB
/GVw9ydDjtQ/y/wtmmrE4Rmb56w7wPxiePdxqZ85+5tgEWwwPHNU1nrmj4Yb
FixdvuYC8yv//b2rVXe7U8z/CZ5b1b7Sewfrb2qkEW+0WWLgH8D6D4YtZq6X
bFjD/Avg8iLnFWtYD8lOeENkWebTLObPgO8kG3b6Ecv8H+BOVwIy68Yzv7FQ
I44z/nzo5RfmHwhPvHnVr/w688+HM+P7bF37n+76y+TwqMD724Yb6qy49O/1
lWP2bWyts6oQ3nPz9KuhVjoLjIw14sqAZl0H9tZZ1B/+4S367O+ms3QufHOs
Vbl0rs7yrXA9u5WVAhfW/wLcd5Tx1xsZrP87OKzy4LyNy3S2aGyiEc+zPfw6
ernOkv/gmbIpLU4f0jlECle9sWn36oDOKZvhhZOuLdq0Q2d1GtzOuL3gwlad
hfnwBUP7oWWLdHZs0EwjPpr+6G2ddczfG3Yvtvzk5cv8M+CKKzmqI17Mvwk+
sfCil1EY85+FzUo+zvwzifnfwAcP33ZqOJj565vi88zKko8PYX4RfKmB6+5x
U5h/GvxjlODEmEHMHwaXNO29usaY+U/DMY8NzFyGMX/uP/91P/q2CfPrN8f1
a7V8jBW/P6UbPLjFuhY5IuafCneybjGkSyDzr4cv1by+t8mH+ZPhLVY5LvOv
MH8OvE3SqEorZX6BGfrjmrP1xnRnfjv419TUJ23GMP8UuPXw4SfNZjF/MPzt
ZrBbj4XMnwRLGvQP3cH6yJ/CG/b2vp0xmvn/wC6tPqVcYj6tbQuN+F3QuRPF
bF8WLvCM53/7PWJ7lATB2+RlXzpVsP0nwj9a9Lm+Yyzzq+B7rUKrrTi+qH/B
t7akngluyvwdW2rE80+007/Kz3ecAFuUBq23+cT+vwruPuFrQaGG/f8InBbd
8e745sz/EI7vPC7rxj32/6p/n/eiq7c3XxdZtdKIS5/tHH7qMvu/M3xpcGez
wC3s/yvgyiNDDF/vZf9XwG5tklzWZLP/34PHWLtGliew/3+Hg+bkBo16y/7f
3lwjbhH44dqdB8w/BjZotXzed7aflKXw85dDOpqq2f9jYE2so7L8K/t/JrzE
aNPIPl2Y/wv806OgoDfrKWvTWiOeKq0RaUNZ/5Fw3D3rMv805pfBpfL75w/N
ZP0PwHdc1jVLtGT+23BqkwHfvpUwfwXsst4jcw1/n7xVG434ru1D91X1WP9h
8Nv32gWVHL+1vnCk1adwE15fi71wUdcGgxddYv4bcMAlj/WJcubXwE08Lrys
9uX4Z9YW+ZwPaldwfaZ2hG0eRBre4/1YoQ88V7Rx6BzOh4674YrAmf1Saut/
DR7i8cHwQTTr/xFuds7r0K5ZHP+btdOIn3UOO3ttBOs/GBbcs3k1ehPHf2+4
8YadhTe2M/8O+GCQvKaQ6w/5FfiNYEWdkxxvlcXwvoj4mMGcb7TC9hrxxaT+
o2Nr8zvAmi9r6me/YP55cMie5nWPFDD/NnjGnMjmM28x/0V4gEeHe4+43lMX
wHstY9vV5+cJm1poxKd2Twuy5XzhaA8/bR1699Ju5p8DL4iWzzmfzvyRcNes
e0ZPnzL/efhQu9j/XnJ+EbyD714b9Gkh27OokaVGrL3o0yWO85u0L/z6lWe9
v7uYfxZc00Q/86Af238EvPL8N3ulP/OnwtGnUxXmzGeRBwvvlNQsZj0khlYa
8fQGR54+4Hwd0gte8rLniYacn1M84KV2aTYa5lFvhF0uWs1Qcf0iPAMHPG6a
mhfI/K/hW9VdxMOUzF/PWiM+Yr7rmhXXW4oecN+1HVZFuDG/O1zR/mjVUV4P
QRgcV2f646wbzH8KPluQ/eAq25f0JXx81OOZK7kekut1wPURtF41YA7zd4XH
uXqO9nVifle4fJan3pUpzL8OFhnXn3ia61HJCbjwh9ngdK4XQp7DpWHyLycX
Mf9f2EM/IL3Qg/k7d0R78Hq8U8z1t3AyvDwy3Nqa9XNcCz/d+GzQbo6HsmPw
Sef/FrjcZ/5s+OwVv8YCrpdV1fCM4N9ndjGPwNZGI/49Rz0rgf1DNBEuX/LX
aTt/v3Q17JTedds5tid5Apwc7P7fJK6XlI/hBYer+nbg/VztT7jwsXx2K14P
iw62GnFvhcriaA/mHw/7v5ycfNCU+VfCfUujnvpwv5FyGO5zy2fXx57M/wCW
RRau6cr9qrASDjK2eTaS+y9Hy06oTwPPdJcurP9YOGHk2/kO/D7Fcjg69nyn
YVbMfwhelmFfNNSV+e/BJ9bX6zVuGPN/g6tnjy/W/8z87TpjfrT+GPac+zH5
aPhqslXYf+wPyiXwsG9XrJVcL2oPwjeaiir13jH/XfjRScfdtzKZ/zPc+2/7
NQvqc/5vbYffM3t8j/e8vikj4MfRB07bcX5Q+8M7OnU1a3OE+ffDk68o9jxI
ZP5b8PCsvIG305i/HL5sVr9kQyTzt+yC/VfH28tKM5h/KDzlsvEeV/Y3gS+c
UvEn0Zv7HdEeOPxHA6M/Jpz/r8MXha+ezSxn/lL4aBv1lL+0snlXjbjOnHPZ
Fzg/a4fAy/NPtqsScP5fCG+fIz1Wh3kku2CPTQN7fmH7DLkKfzTr+FbC8Sel
BD47t6egYe38Z9IN69mEUofZnF+Fg+C3HpVpJ1kfRy840PPM/r0cX2Xb4ef+
B90bcTxVXIYXTRS0cT3D/EXw4dHjx40PZ35hd414kCC3yaXa/c8A2G565mgv
jgdST3jYu46v57G/yaPgQ/KdD0s5PivT4d8vlwy4+5D1fw+HW3bIecDxyKJJ
D434fOsFni9YH0k/+JWkZV5j1i9kNtxYfO+BM19P2QKPu3K6V1oq85+DV3eO
zDoTx/xq+Hjl6ScmXF84NhRhvv+6bPEptj9ZH9G//dBgZ2OuPxUz4S53P9lV
c3+qCoen+E9bHMj1jSAVvr5oy4zfvF6it7CTqPLibo7PUoOemM+n9Xxjx7+X
94TnuyQYf9nJ/NPh1rLAM49ZT+0G+PjGwOSdx5g/BR705KTrZY6nklewreWq
gPpsfyF1e2H9f+577yGnmb87/P2+g1jG66d2g5MTLVPW8fuFoXD0z8Q1u9kf
HU/CW94OG2HD529kL+CnoglljXn9FHV6o362stdlrJ+qC9xFOcHqJud3gSv8
/mNp124cj0Uh8B3zPncS+DyV9DhcUrlq3LZg5n8GOx6qOvV3FfPXwC02vNKU
cn7SduqD3xMefGH+OuafBDdYXX9vN64fJWvg45M6Dktlfww5Cp+KdOrmyfE4
5Qkc+fO/ZrM5v6t/w18HTz5Zh/Ox0KYv8h3WNj1aO/9L4Bz5Jp9htfv/QFie
trHGl79XEQ8P/Lv3gw3PW1SP+v7bj5z85cDxWvATTgtsO3Eb53OR9X9oT38t
G3jsYf5x8EmTnR+Os33KA+BlzhuPr2ceZRzcPG+km/Fi5r8PyzKCnr/i9bH4
AVv86eOzcC7zW/TD+uHiJOV1zt8hTvCIDVnNZTx/SVkGX/1TuvUL50t1LLxr
wu1r7fj9wiz44w+TA3+4fnT8Cjf923RCB67fZG3tMR+5Nnu4l+ddilHwzAWb
Xkzk+KZaDJelOLapqh3/DsKDnfSmSrg+Fd2B/ct9K16zf0q1cONKRdBdrr/l
5v3R/jW2rVw6c/03HG4mTNZ7xvMKrR9sVrQ+4b4px799sJ+Pi3Fnjl+Sm/Dr
Vnrd7uYyfxmcvGl//Zl3mb/FAKx3BkeLBnN8U4vhXk0X9QhgfxAugqMXeR52
TWH+aPhix3Z7g9jfZErYyavZnh6cLxSf4BM175IiuH5UmTpgPBR18X7N8Usw
BE4akv59Dn+faAH8vXfp+TocL6U74UHzDcfJuL6XZ8D1fee0H8Pfq/wA/z16
1ngQzyO0xgM14nWCL069n7D+A+E5lWk76nJ8ksyHLZY4PT/N3xsih32sW++b
8535L8FByjf7nXpy/1cI73G3TpzK/anQaBDaS7ihcwT3h4794WmBRUpbGdc/
c+FR8kZpwksc/7bCHncmT9bwfEB1AXY402io/xzuf97DVo8kh8Tcz4saD8b6
I7RRZk7t+cd/sElMueS5hPsfKZz62X7tGb6u3Axv0xctX87zAm0aHHSomdiW
+3eLfLis6sqIap7fSBoM0Yjv63f8UMPzmJDesNkIuV17np+lzIDzzqQ4H+d+
Wb0Jzkz79eE799vCs7D6+W3PGfx7xzfwKsH5V4vNmb++o0a80PtI54XcTytE
8IKBj5Ji+jH/NNjyWa9J9Scz/wb49uqo+KBw5j8NT+oSoT+H7VuaC4s71Nec
5v5eri/WiF/aT0mz5Pcpu8FVRXkZ9u2Zfyp8s2XqvTgx86+Hhd8OdGg4nvv/
ZPicS0G90VwvhOTA719M9W1rwfyCoVhft3Jq/Zr7TbUd/HD4Ckv9tsw/Be4Y
0L7zulK2/2D4+s4DVXeZV5YEm84/5BB7nPmfwus/v7uUzval+gP/Gf7CexfP
XwSdhmnE7btEZrb4y/bvAldX7O1xnJ8vDYLPRnVSSmrbfyLsldxggZc986vg
AyPU96ePZP5f8F+39yV+XZm/43DM35YT6x/6xfpPgGPXiFT92jD/KrgoPb4m
pxHzH4FrSm46FPP71Q/hOl1LH6bV7v+r/rnbiVGHud5xtBqB9cUQ290m7G8y
Z9hq+bKMTjyvVKyAO+o/e+pTxfwKeOut1BvLOjD/fTj3bdizqoas/3f4/Z/Z
+1byPFDafiTqkX964wO2H/kY+PvCjPKJrI9yKTznzvLeyXy/NgZe0Pba1d7s
XxaZcOn1pKbPJ7D+X2Crq/7Tinm9QtqMwvc5RFTn1Z7/jIS/TxqsMq3t/zJ4
2LUTF1axfQkP/Hs9Nbp4/EC2/9vw9qm9k9vx/ExWAX+2eXQkmueDilajNeKf
q6aUmQxl+x8Gr3PwiBziwfx+cMdzncJGsP+J9sLVw9OHnebr0htwrFthcGFf
5tfAVQuq+ymYV2k2RiOeEOd04jnP17SOcONvgkGl/P0WPnD7WOWKcmfm3w0v
UY77aMTxK+QanHe3YsKIdsz/EY586NfcuQ/zN3PC/Bxg4BvOzxcOhjtHza2z
mv3B0RvOHCmf8pr9WbYDXvyhrfEfT+a/ArtNCBxizfFLVQyHL2+zKI/jk8B4
rEZc78EMp2D2d5ED7Dt8hpmW3yedB+ttql7Ym+1Vvg227mLyMJ31UF6EH3st
O+TLemgL4Ndd9J+3sGP+ps4a8X9mub4G7N8Se9j4r2tkyCjmnwNffv0+4BnP
U1IiYa3dnQHda+t/Hl5XUjJ/E79f+A5WtLg8PaYb8zcah/lo27kLZ4XM3xe+
dTk2xIhWzIJtr9nvH9qA+SPguCNq060cfwRp8GZX8QZFC+bPgzNtjeLnsL9I
Dcej/+t/v3b3A/t/L3hwyzWhNuzPSg94cr3Sqfd5f0O7EX7zNvV+MPc7Fmdg
reP10ita9v/X8JDTz003cjwJqTcB7W3aqqTdPK9M6QHPD3jfcfdP9n93eOvS
9PfCH+z/YXBu1+EeHdlfHU/B4zOHBFnx/bKX8NzdLfKmc/+m0JOgfZ6+YLb3
I/t/V7hndsyIZzyfEUyFFR3DP1py/yJaB/d/KDl4kL9PegLu16m6kx/vV8if
w56BygH3uF9V/oVH92swojfXa9rOE9GfKhQbNnC9bzEZ3jd7jV0bjkeStXBu
cPbXVbw/FnIM9o/8NO0/rmdSsuHHH+P1jE4yfzU8y3v36HdcjwptXbDe2X5i
3gHuTxwnwp/E103d+LpsNRwxsOPIpby/o0iA7RzXV/bj/k71GLZV9HGW8f6p
4Bf8bnG3iovzmb/DJMyfyW9fSHn+Ih0Pe82rF2jG9al8Jezw1TYmnvsD5WE4
pPP+z8lLmf8BvHNlcPODvH9pUQmfUlwJdOd5o8RyskacaLt5cwbvz4aMhe/3
rB8t9mb+5bBoV8H0Cfw89SF46CHDemv5e4T34H1X/qaO5vsdv8F240tj8vi6
rN0U9G8Pj4vb+e8PFKPhkEi/hXE8T1UtgZ80WX1xAV8XxMAfW3YzKuT9KdFd
ODCzyaUqnr9JP8N1e9ULCjrK/K1d8ftTfJ5NqT3/GQFnHVr1ZvFq5veHizQd
UtW8X2ixH04YG3hlKvdjkltwrMfP2SXPmb8cbj1GNTOf7SWl5VTkq3enSr2M
+YfC6bMaJ7Thel/oC98Kr6o7hudVjntg08QHPiN4/1R2Ha7wyyuoXQ8rSuHF
ph8W7+Xnq5q7of+Oihrbi+cjAkc4rnCS5Rd+vmghnHKmIH4T96PSXbBkVvje
ytr2fxVe/2bM1grOt8oS+PJPg6pArq+1Ju4acYeJJuPceb5jMQgO25s404fn
6RIv+LHPwIN6h5h/O3z/zOOTB7k/SbkMDzH+3b2G/UtdBH9dcDdqJvujUDhN
I37kPyjvIdcDjgPgnW08bo3lfkLmCd+clSFbWnv+EQW3fznw6U2OB6p0eK7M
M/cYz6MEBXBQUpKgsQHHvybTNeL99W5/d+b+WtoPDooJH/2t9t+/zYbrJnef
NZ3nI8otcIxokmEP3u/VnoO36M90NKtd/6vhzsZ6aSO+MX9DD+wn72x71ad2
/dsHtk37Yp/4hvlnwtZt3yuLeL9EHQ6vvn3aeFZt/lT4xP7qHRk8v3V8C5cF
DujdrPb8y2AG8lc9FRvcZP6esO2ZS8lXuF9RTYfPnfr88MNh5t8IZ2XeKWxX
e/8/BU4r9JFl1p7/v4IDw6NVedyvy+vOxHwTLer9mucRyu6wYeHWkmXcr2nd
4LMOt1w3cz9oEQqv2vFYIeR4JzkJ+9UrWTWf+6GQF/CR5oO3XTnO/HVmYX1+
aNGILVwvq7vAIWvHzm+wkfOfKyzs2aSwnPcvHUNgf5MeIW6zOf8dhz8Inz0Y
yPWD4hls/DVtuCPvz6pqYCe53hjJGs5/naXYv/p/HzGEFk2CwyLXTt00kfP/
GthG1MhrOy0/CotKpxQH8H6o8sm/13vVFeQmc/7/DXf4UXmzQTsrXX6b2bj+
72s6murpLJHARRnljSryWP9A+LmJZollAuf/eNhkTM3Neby/qX4Ep6nSGt+b
wfw/4Q/yX3bOtfOf9RyN+FrY8he92L5l4+BJV4PLI7geUgTAewNyv1hyPaCK
gy9tvrNLxfWY4AEcvK/nvKJpzP8DPr7zS8U1J+a3mKsRj1u6Z+l1Xl+5E3y2
739vnbh+US6Dp+R5K78vYf5YOKfNdvffvH9tkQWXXHFfkcT9p+QrXJT/u+XY
fczf1hPtucEx93kHmX8UXByzLqUR12/qxfAPu6qqoVzPCg/CZwd1sKpdzzre
gcuy7zxs7838WrjHw7Gz+nL9pDCfh/1BuOEY6xHMPxyu22Tn3T6uzO8PFy/r
phfEzxPtg7UFj7NKub+R3oQ7zXXutuI885fB1wOvR/tFMX+L+VgvbumSu4rr
b60Y/tDC1jmN99stFsF6lfeeZa1i/mhYnji4n7kt8yvhJ/H+Y/J5/zLlExw8
6P600dw/qU298Pnz+9mY8fkD4RA4bfs300Ten3ZcAAcLu6f1Xcr8O+FZeywH
OdSu/zPgMJ+80R7Mo/oA6yVo39zowfwm3hpxu/6H1f/tYf6BcOeB6bJz55h/
Ppw7qqlN+HTml8PKgatWL+T1Ul6Cuxgl6h3j92sL4e9ib0Evrs8tjBZgPVK+
+M1AI+bvDzscDWjejt8fMhf+Gvj9koTPU6RshfU+lc/uzPu76gvwl8y3A9Jr
93/v4dXCHB9rtnfHxgvR/1u+eR/H/YPsP/iPqt2N5frML4VPJrVqu5z7XdVm
eH9GfLfWHK8F52Cv8PF3kgo5/uXDo449yY3hfCJt4KMR2zdUDcypPf/vDUc8
HdVAyud3lDPgdiN/mZjXPv+0CZ6ypq5bFc/vLc7CDSrmOrzRY/43cNtmpyo+
cb4Jqb9II36aFmJ8t5jjnwg+esaj8WH+fvU0+FHahyOneL4i3PDv/Suz9nnX
tv/T8Ps7O385cD8py4WvVixId8plfn1fjTi/VbVsANurqhusv9f9Y8AR1t8N
DsvOnRTCeonWwyHdzodWc38gTYZ9PhRf6cDnA+Q58OmjW1/O5/5IKfBD/T/E
yEynsv52cPCdcRcyrVn/KXBD56Vx+lwPSILh+NyNGxezXiFJ8MbnX1sIuZ9I
efrv887f9Mzgebr6D2zo+/vReZ6vCTv5a8TDn/eL6Mr7744u8K9N96p+1WX+
IDju3PaSWzwfUCTCWYaHbeZzva9SwdVnZthc4OcJfsMR74e8msB6izrKMH8H
j7vZnu1FOgHuX7rilx73L/JVcFaT3G3JPN9UHoHDDSb8zuJ+WfsQDm5V32ow
92sWVfDg6mFdXvF5IInVYo142YT4aQN53hTiDH+4ZHGzHp2yApZYPLdWhLD+
CnjUM8M/+ZtY//vw7k9Hnfbw+RbH7/DaI0arEzgfydovwX7XOftPHNuDYgyc
/GOL85fa87+l8LV6+9wVHJ8FsfAabUfzqs+sfya8ydgmaOF85v8Cz83YE7CF
+1N5m6XYz1blJ5XVPv80Ej634+dlP3/ml8HGbhaJnjeY/wD87ph0+zYV89+G
ZwrbOAyOZf4K2HTitwXtYpi/1TLUL/hBdVQO8w+Dm7p+muylYH4/2HjUZ23K
ZubfC5+/bn648xnmvwGXvX1nOKKY+TVwpdeJlPLa/GbLsf6w8OpYGcD8Yvji
DL93W1gfkQ+c77fbKz+Y+XfDP4Oij1RtY/5r8Ix+GfaDOV8rP8KN3ptlrotg
/mYrsP+Nfh9kr2T+wbD/103jd51gfu8V/9r7+54Lo5l/B9zArWhZML8v5Qqc
XdIpeBn7k7oYtovKdjnN9ZDQOEAjNutp2KXhAuZ3gK+GnLVP4vwimwdv89/T
2c+P+bfBfW7YGsqYT3UR7rmmpO0TXk9BIbyl7+eDXrX5m67UiA/fvtVwDtcf
Unv4Texuk9xeVrr8c+BQ/Uf3VtfRWRkJX7NJF7TkfKE9D8+sl7d/2Rfmfwf3
3h+ffHeC7v2SRquwPhDVNQlN1DmkL1xaOGq/vbvOKbPg4T4jVSHHdFZHwP2M
N5gonax1+dPgJwNiJ6am6OyYB6+f2aJZepHu/TLDQIxfe6OjSr/orOgFTzRK
6HOV36fygDe4N3fxuaSzYBM8q85Brya3dBadgbN7xzy9sF1n6WvY42NsJ2uZ
7vvk9VZrxJqwlj3X7NBZ2QPu89Sk3Zr1HXT53eFCdfCFu1W61y3C4FuHn6XX
faOz5BTsWLW7Q4/7Ooe8hD+N3TWkSY7OKXpBGnHAum9e4ed0VneFHSIbHo/q
x/xTYZWBJnj6IOZfB/deaNF/xjvmPwF/Ozw19Owf5n8Ozw2dO3HQfN37VX/h
z5sbXKqzWWeB3RrkMyqYWLFJZ9FkOGzTuHFOa3WWroV7FDa6HObJ/Mfgndaf
B1SMY/5s2DkoK3LlAp211fDMEyP0Yvl9FrZrsX7zudnFV838E+Gjornbj0iY
fzXc/Gnw/N+uzJ8A7x8zWyXsxfyP/73+LjSwQZkuj/AXPHS1ye+aWJ0dOwQj
f5jtn/R7zD8eVqeeTK13m/lXwt6/Q+8sOs/6H4Z9jI4kFtxh/R/C0TMbbtuz
hfWvhCdmHzl3dD/rbxmC8X+ZNM5rJdv/WDh3x1fLdZfZ/pfDVSYmrk4HdNYe
gpuXdLBwu66zxT04MeZIwSG2N8k3+MnltlHF8Wz/7dZpxNJma1d8ucv2PxrO
H79iVcdHbP9L4MERk5NC4pg/Brb91HLkkv9Y/7vwwfgCe/9WOss+wwYrLCsb
dNBZ0Xq9Rvw299XFoJ6s/wj4uufkyCwt88tgm5VH9E/rsf774aPKgbNG2bP+
t9b/e77ILerdYta/HO6lMOsYsZX1bxmqEc+bHvzsE+upHQobd9wt6+LG+vvC
Q+rbtXPaxfrvgQukXmNK1rP+1+GEUb+GxU/U9Z+UUlh9veHEhl9Z/+ZhGvHv
FbN6xlxl+3eEk/L2n0ifxPwL4ZIPNbMan2T+XfDVhaL98/yY/yrcsqnH2qlH
mb8Ejq0/frwV+5eg2QbUZ8a7H/u0zD8IPt0zzfPCK+b3grd0F42+8IL5t8NN
gkIHlBUx/2X424khDS14vbRFcMcxB6RSY+YXbsT1KXR6MZyvSwbAi/xOBzRl
fw7xhE13ZxU+ac/2HwX7D80+bXmE+dPh+XdeyGPCmL8ArvPa+5iaf+/YZJNG
vDy62/KHNszfD+6T8v7ibdZLMRuuP6v/eXP+vWoL3LpVmM9RMfOfh09Vv5z4
hv1NpIY1bvfHzLVg/obhGvHH9Y+nDenB/H3gDWf2/PUZwfwzYcPpHu1vLWL+
cPhJO2nio1nMnwr3Ks7JLh/O/G/huZUa/20ZzG8Qgfa73n5dw47M3xNODD7o
KmnO/NNh91416fls78KNcP816dvG+jB/CuzZY2P5/tr2/wruvripu3EB89fd
rBEPyHVMT0xl/u7w2oVxfl/3Mr87rN9MeelXV+YPhTeMsbVwW8b8J+G2yxN7
vJYz/wu456ltlyasY/46WzTijJiu/XaMZ/4u8IAKf2t3Xk8LVzhXuKTnXo6X
khC4y5jp4Qt/6vpfyHE4yf5bzbN6zP8MDmrWq3ESf4+6Bn45uPmn+2xPws6R
GrHR+ClO9/l5jpPg8mZGRypGMf8aODtt6s/Uucx/FL5mEHL4YW3/fwIPiw55
3y1B9/2CaniJ3DrhabnOIputWB+v37y8DvNIJXDcrd4Z43h95YHwMoFttuiB
7v3KePjuf0tbj+L4qn0EmzmNkecn6WzxE57yecD15ck6S6yjNOLMPJcgL74/
ZBw8Iu5w1M9UnVMC4Bnme+zbLtJZHQevLKxKWD1KZ+EDOGvOyoGyhTo7/oC3
Bxx1dG6rs8xiG/qDi0H30Wt0VjjBZbai60mcP1TL4PDVLZPt+rP+h2CpdFIb
uYD1z4Lrxa61DeT4Lv0KZ3YbsLSC47e8rVwjPvO36aFhXB8oR8Gqc7e2jZ/B
/Ivheee3rdBwvrA4CC+J7m3UYhfz34FzZ65Os9rG/Fp4+oA6OXrDmd98u0Z8
Z8fWBwWtmX84/Of4om/fWzC/P9wgZmXQo9HMvw/u/Gd2x3fTmP8mXPgzY1ni
aeYvg3/vcrsUGMf8LXZgfXf8Q4kqkvUfCluZ7Sux5veLFsEjC912Xe3A/NHw
hmXf7sbbML8SNjJvXrye11/5CbYJWerr3p35TXeiPwa83/XRj/mHwKtyyrwi
WF/JAjgi1WDi4mXMvxMuEnWY23wA82fAUSPeDFnF9ab6A+xsrp89xYP5TXZp
xK7rB+i32MD8A+Hurp4bZuxm/vmwX4ug5v5cTyrk8HKj8+uvhzP/Jfikx9yB
R/j7BEWw+Umj0b+HMr/RbqzHlpm9EGYzf3/4veGVyL5cH8jnwldXHEzuzvap
3AoP6LP01DTWQ3sB/jyiLPPHfOZ/D7fIMvSdzPYgaRyNvFE/lUPXMf9/cMqX
NYdW8/tTpHCjUU9uDRvB/JvhknGzvG7+x/zn4JDNh67Fzmb+fLjX9PtFKh/m
b7AH/X/rsfMmbF+K3rCD24wHDfh+1Qx4SfzvA9b+zB8OB3RdUiU+zvxn4dG3
XorWP2b+N3D9L1GfG5xh/vp7NWLtYCOB9SrmF8G/1k27eu4g80+D+xY8OPiB
9bHYAJ8pmy+wz2H+0/AWt8ub2vD6huTCg8OMw5ukM7/+Po14Tn5NqKmK+bvB
148WL57H9ZHQDQ5cvMrB9ijzr4enGjRdUMPvkyXDi+7lWYs4fipy4OEjwg6f
4n5AJdivEa9e2XLNTUP2/y7wRAODedUG7P9T4Oz8UXvHP2H+YDix8tiAsiXM
nwQveL/HzmYt8z+FIzN6hJdwvaj9A69PGVBPoWT+TgdQn75FbbZeZH4XeOqE
VLtIji8hQbD71eFLMw8xfyI8zWt7SE+ON2oVvOe6+++TUcz/G3aeI5FUsn87
djyI/bii7d6GnA9kE+B7qgd93law/qvg4kfrJNrrzH8E/v5p9atX/D2CR/DW
O2UzP85l/avg5qP6VoxmXqlVjEbcbH2r2fdOMb8z/Fa/V9ZYb+ZfAXtWf/i8
eBPzK+BvGp+KC7Xj3314y/fQSwfZfyXf4aBH80XmA5m/fSzWPymR2kUi5h8D
j94jkPtmMP9S+EhiXGYLXh9hLHxhVljpf0uZPxMec+b5h97zWP8vsKjN7Pyq
w8zf5hDWy78lLr/YP1Uj4QPXr2YGcLwQLIYDz0x53Hs68x+A11qPqTOzP/Pf
hrsb7E9z5fWTV8BZegtKHNYzfysF1k/N9vUMPsH8w+B2T7uWj1rN/H7wrzWF
vg+nMP9eeGofgXcVx5+QG/Cj4IJLrWYyvwbufn5t0TO2J7VZnEY8zi7X/Sd/
r1AMt69Tqd/oNfP7/PP8HXnRY5l/N+yVH1+gkDD/Ndi+1VoPa1fm/wiHt9s0
cU8N85se1oifjrHc7s31m2gwnPIk/t127qek3nDo8kctx3N/Ld8Bv13+rFVv
ji/KK/CPIbl185lHWwyPa5DdpDV/v4XxEYyHmZeuWXD8lTjA3ueefNq7lfnn
wfXeKJcN/8X822CP5BbTvzCv+iKcXz9ufDNr5i+EbUzOrdOyvTg2jUd/Nd/1
7Jwj89vDPyJMR5q7Mf+c+H/3x0ubNWZ7UkXCkc87brjB8UhwAd76wcOl8yvW
/x18psWA6w/Z3qWNErBe2uO/Yynbk7wvHLXV7r8C7s+Us+Dc2/Um3b7B/BFw
78V+505x/LBIg4UTfLPczzF/Htyo7azsAEuufw0TMZ88X+XmVsD8veDSgxVG
Ud+Z3wP+a5G3w+4D82+Cx98Y865fbf8/A18e0qerNdfrstfwGM+XjXoxr6Le
UY049Xhs3OAU5u8Br90b81VRu/6bBnf88+tTe1oUBkfIuh19z/Wb9BQsGdI2
d6gt138v4a6/KrLFb5lf7xh+f+p036ZcP2q7wneMfw81YvuxmArPG7XQ6eQV
5l8H7/np/aSfgvU/cezfv3+62j40jfmfw0eiGni94Oep/8LNk50mmtJCu6R/
65PufQ05PzlOhk8eOxNcxf2MbC38cvsi92X8fsUx+F3JqaSl+cyfDVsrb2Y1
4vmA4A9cePhsz1W8/iLb41gPCt27B7C9SyfC4+b++J3C8Vy+GjaqvjdrKD9f
mQB/Hr1zyWxnrv8fw37mAzpbsT1Y/IL15q1Z/9ic6/8OJ7A/HrCmjlvt+dd4
OK70jFt+7fp3Jdz6omasrPb86zBcabXteskR5n8Ie4X5ZdyoXf9UwgM+1usY
76CzzDIZ+793Pe8+53yhGAs369d3046zzL8cXuI6/MhTtmeBAj6QMPTbKK4f
Rfdg+5rJEU6hzP8NnpZsctmb46G83UmM96duxa/oxPyj4aHdOpmN4PimXQIr
6zcQeU9m/hh4yH2thTXnC8ld2OLIz4EvNjP/Z/jNl773azjfpLQ+pREPLBrT
fyjzqEfAy2WiaY4c34Uy2DMxLnDSSebfD8d9bLZ9ZCHz34JfNDVUduF4rCiH
wxM9G27n+lvV8jTal13oE0+uVwTD4Eq/Y79iuX4S+cKNTeteWcvfL90Dm5lu
SZnPv5dfh9u9eHvLm/1PWQrnTbLZuPYT8zdPwXizSRy9fAz3f45w896am5U8
r5AshLNVSy/q8TwgZBf8+oSe26nG3P9dhTdfnVpycyD3fyXwjFM1Bz3498Jm
ZzAe7Z7RV+bA/d8geI99o0Nr+X6ZF9ysuo5gWTXzb4fv2ghNV3C9oroM/xcx
26VPMPMXw2+3ls85yPYmEp7ViGWxvlGpHA+kA+CD9k+a9Q9hfk/4+y2Z9U7u
H5RRsHl9ZchFnl9o0+H23QPmbnRk/gJ4zsWk2CL2L0mTVI147Kvvpp76zN8P
7rk0+ucJrodSZsNuW3ukGrC9qrfAVzZvn5vN6y88D7fSHlwd6sX6q+Flix8e
Ch3C+jdM04h76P9MXGfP/H3g2A/iDudq5/+Z8LbB9bcljGH+CHisV/HZW3y/
KBW21ipWNO7M/G9h47bzZvgHML/BOY14guWBQYt4/qjsCRctiXLrxPNt7XS4
8Ln+TVvuPy02whOFp/3rcXyTpMAN9l8PULI/hLyCXRoaFzvz81LqnteIV4zL
ri7i96m7w//t75XqPZL53WG9umErZ7Zn/lB4T+Ok5Oo+zH8SfuF43bUbx0fF
C9jFbIfSiv1LVeeCRtwwI816S+3+pyscOnZNTMs5zO8K97ILk1vYMn8IfCwz
MOEh88mPw1e63nZKY/9SPoMXXB32uT9/v7YGHrgxqHvt/sqic7pGPGjC4VMj
uP6WTIItL9pNXcn1YsgaWOtw5eK+Qcx/FM6KeflaweujfgLHvG0ZVc3xQlgN
L2q0IDS2lPltLqL+BRt8u3B9KJPAl3tn5zvw7xWBcLOHlqkOXI+p4uEIZ/XY
L/w+wWP49biiboM53oh+wlZNbB+HcX6SWl/CeKknn/Gd6035OLg4KcCoPucP
ZQDsv3SHzR72F20cvMKvi/6O2cz/AP4RVr0uwY75f8BHThY59uT6JcTiskac
tlX0Z9kk5neCRxZb6wdyP65eBs/Mzu4+cR3zH4Jf3WzZfIEv82fB+sF9fmxf
zPxf4QsmPmnlXE8q2l7BeiHN9FQbro9Uo+BHFy1vu8qYfwlcPeXHxpZcz4oO
wuFZRk9vsn7SO/D65u/bbN3I/Fo4vd31zxa8HkrzDOxfps8u2GHM/MPhh6Ee
uc05n1j4w069SvfXcL8m2QeXmztNvr6X+W/CwX9r1gdwPE8pg7sc/TvM4QXz
t7iK9mMaM2xaHvMPhWOOrcrYzvMjx0Vwz5FjNv3l58ui4ULhnUl92N8USjj1
cWwn29rz/0/wheFnL8o43giaX8P4dLXy4kH+vWgIfK5+1ZYLHG+kC+BquzX1
Tzox/064f2HrvMXOzJ8B72yZ9jOa60Xth3/vb7zyT//a8y8TJfpf940tFu9g
/oHwmB6myYk8PwmZD5vebvhmWu3+Rw7Hzrqx9XNd5r8E73rf2eSJCfMXwWaJ
B4+l8fzJ0eg61l87r+6cFMH8/eEGu+89EbA/KubC9fR61XXl71Nthf9GHJnQ
n+sDQTr8KDP7XcAw5n8Pn5MuX3i8K/M3voH13BLt2Squ9+X/wa1/pdx34nii
lMLrgke41OX+TrsZ7j607uA0rm8szsFvT1/N+MvfK8mHb9W1fjaO64WQBjfx
+eJVjgKOPym94emmpwI+cbxWz4CFwTNq4rj+EIbD45J631RzfHQ8C+9uMbXT
mevM/waeW7Or5ze2V0X9W2j/s+zLh7E/qESwp+nmNWqe5wimw2YL5oQ25v0Q
0QZ429XwKbM4P0lPw00e19v6mecJ8lz456N5IX/def6rfxvjc1TllHfvmb/b
PzseOVzC+dHCDbYs2bKlEestWQ8bvHbzrQxi/mT4+Ne9vdx4XpSSA09/2kHQ
jueJasEdzL+23xaWsz8Ku8BrrJs3rT3fdJwCC2PjZm3geCYLhnN+R7dqvYD5
k+DyRhWxHWvXf0/hT/dzrvtzfyaogR3qjVxjzPtXok53sf97Hx51hftLqQs8
epfpIvVT1j8ILvLd//wj66dMhC8n3NLryvFNq4If3/22uksc8/+Gm/ubjFzL
ekk6ZmrEhp37fO/E9UjIBPjFyOB7qd2YfxXssWiuaEhL5j8C//joUWnA5weE
j+C2yTePH8nk/e8qePvGrY0f8/fIrLIw3iwdMC6L11fhDD+SrukZ2Ib5V8CD
YuyeHH3E+99xsHDtYtGz2vPP+/C4ge3/G13b/r/DCWfrhCTy/Fne/h72S9c6
3Oydxfxj4ICY1eOtYph/KexcM2DfTa7nLWLh4vKo6qNTmT8TnvDs656PZsz/
BR63u1daMte3KW3uo/+O+3ngG9cz6pHwhXN1Fc17sP6LYY/Th2a1tGL9D8DD
K/smNm3E/LfhqbdahN/n84eKCvjrrmMtb5gzf6sHuN4FZqrZGuYfDk9tPDqn
9Bnv//vBG47v1g/n80PSvbDXo+VFkRzf5TfgC5kd34U0YX4N/GNWxu4yjk9a
s4f4fVktsu/xPNhCDB+wj09td5vPP/jA86ebV7ml8/mH3fBnq3uDow2Z/xps
01Pp1pjnQ+qP8CULsccOrm+Epo804vsHJILnvH6Og2GThruj3cTM7w3PKWzj
M/YNn3/YAR/e/LH5qwI+/3AFnrDKKP0wx1fBB1h+84ikA+8fiIwfo16TOr99
xPWO1AGOetxy3SP2J/k8eMOLKmsXrr+U2+D23xKEWfWZ/yK8OelSXUPWw6IQ
Hr50489vPC+WNFVpxLledy6kczwMsVf9+/fMIWfO1u5/5sDmC0Z96c/2p46E
f9ZJva+oPf+4AO9UVN3Jqc3/Do6+k/Ljfimf/2j0RCP+nbj4euc6rH9fuPhZ
340tKph/FlwyeGpxCs+LBJvhecfdVnXmebAoDS43TQ+1rz3/zIObfiwvi2L7
lBtmoz43zjjEsz7KXnCI5Pf0a7TWA44/d8zkOvu3xSb4Qf7b5uu4v5CcgQtc
d6oe1+Z/De+790G2qHb8q/cU65/GUUtr17fqHvCrF2MN8vSYfxqseeL6eSPH
O8cw2GTJ3Gda9m/ZKbjYSFNZHsj8L+F1va9L8ni+p9J7hvWjy5mZR3+z/XeD
o4/uH25Tw/Y/Ff5ldKN4Cp+Hkq6DHzWeZylj+5CfgDs26tLhcCWf/3kOt94Z
UbON92e0f2Hhk7zs1g2Y3+45xn+TUXtH1u5/J8Ob6h5Ufq09/1wLj66/QhDY
k/mPwdu6fht+nvtPdTbcbEu/pvEGzP/nn4fd/GTD3+dom4P23e2/d4a/WP+J
sFWDhSvnczxWrIb7dmkl2czfq0rI+fd8yepFq/h8lkAFp18MtTLg9RX9grcW
un314fWRdniB/WOTzDrdvvP5p/Gww73loqu0ciUcb/gsbArHZ+1hOCev1VBf
Pi9s8RCWpm9uaMvniSSVsMdj+wlSPj8VYvlSI3ace0S9n+07ZSx8oVvW8Cz+
XvVyOE605r3tO47/Cvhu5qVjJqyH4z34XEdJVlf2d9k32Kfb/a3fUtj/2+Vi
vz3JMvHMX+YfDYfdOuS/me1FsBRuZL2ib4sfrH8MfNhnzq6OHO+kd+GN1qFa
18fM/xle4Hfbdimf11K2fqURey/v18f3PvOPgPXVu8+XGrH+MvjmgJbOV14x
/344Yoqn+YzGrP8tOP/Y3rlt+XpKOfyqV/+zFWrmb/laI+48fuayBU+Zfxhs
2bZzi698XtrR9/W/8+UG1+rx+WTZHti97MvmIezviuvwOPMnZx69Zf5SWFxn
Y6Widv4ze4PxpLO+heYj8zvCR4evzP+8hfVfCEdkZu2N4fPx8l1v/v178/fK
PF5f5VXY0MbixdsHzF8C+62cnhNxmPVv9lYjHtU+4tBAti/JILjxO5FlH7af
EC94Tbj7cRs582+HK49vbNKR//0m9WX40q66Zb/jmL8YNqucFB/G5yUdhXlY
X2TfePik9vm3AfB3m3PTzDjfKTzho0WSpyVsn6ooWLDz1Vbr2n//fBF2Fnqu
msfnLUUFcJa6w5G1kczfJF8jriMXHJ3L52fl/eAFN0Zr8vl8unI27NdBeKt4
BfNvgWd8Faa05t9bnId7X90Zu4zPO0vU8PgXlSvC+d+fCmmoxn6xzxjZBP73
4VL6wJMUop9D+Pyceib8uOzQkyf6ujzCCDjCLKuB6D3zp8KtFpo/j2F7k72F
LXN3jZnP/YrC4J1GfC/OMOG1i86qnnD+5bEx5rwfL/CAs07HzhvG9YZoI/wp
YFgdOfc30hTY72SJyo3re/kr+G3/+/n9d+qsrPteIy71rpM1sfb+b3fYP2HP
wifsnxbucNaZd13bhbH+ofDdOc277VvB85+TsH7gyPcN+fxRygvYLHV+p5GZ
uver6xRoxL2E9Zv/5vmcsCsc6ttq6Xbej3Z0hafFxVbUZf+VhRT8ux/YOb+3
lPmPwyd2NR+zgutJ1TN4xKBGMzM+sf5/4bvjzzxrzf4h6lyoEe/3/Cb6yec1
pZPguydyniSuZv3XwKfzSguEF1j/o3Cd/x672Jgy/xO4KrT+lBD2L4tq2GrI
13fNavc/NkXY7yqe/RJyfg+RwNtK5ZUzv7H+gfA8x62vg2vn/3h49TelbwL7
l/Ax3KVOLxc9C+b/Cb+d9Sikspr5rYuxnzJ11bNkf1OMg4tf25br8X6QKgAO
SBr8o4rjpeAwfM27ddm7/cz/ALZYPcthFS39Aa+6NyAu4CzzW3zQiMfeGKcR
8flhpRPcIjPf9C7nE+0yOHjz8Fgj/vcNLQ7B5jEfVznweV9JFjw0SeYh4b93
CPkKfy4qu7ac/SmlbYlGvKOp6LOE85l6FBy3Pk51mtdPuAS+buv1+UU95j8I
228dUX4klfnvwKN6Be0x53pRoYWPnhRe+8nzLJX5R6wX/PVbZZYz/wjY165S
OYfP64r8Yc9pfucHJTL/Pnirz227lXy+W34T7tTpfOeZK5m/DJbNT92rX/vv
n1t8wvxW88B5Mf89rMVQ+GnLYcm1//1KySK4zs3eB3L430cKiYYbnfq/hTsN
avKKwgDMFIrSoiylKANIoDpxYApxqOyFRLEsxRKpCgXRAEW0FYJoKYyIUVwQ
SkmLgBslQANmBtKItVgsNeCAMCkQRopdJTJFtq8QUDZZ2hfP9/P5k+R+N7n3
3Mx9z/0rCbQ+qNRw4c7W7CDKE+tGYce8LV9J36D5f3MM+91y4mgZ9bfhB8Bz
WavEWjb/ehg+dSHOqZ/uu8uKYHlZNecI2/+yCb4TWXAimvInBsOwhnuzL5Sd
f0uGEchuFDusYvsf+cFH29VBi2z/u4Nw8oPaW+OUX1BLmZV+BPYZzrSe6hvh
11wWhzQdNP+DcGjecJkf9YsQmv3LCIxUfeUplL+ReMNPN5o99KL9QpUA721L
q+ii/VVXAOes25NRzv7/cQfex4uVeNJ6zR+A3Tb0eLjT/exU03Gsb3JR3Y+U
R5J5wMMF4VUxtL9qRfA21Z/VppQHMsiHz7srIgdpvnm34awtEWlnm2n8/fCl
hO3yetqPpCYTjOCy5XbfAbpfrXaHk3sanTMGafyxcGhvji2PXo+TC/cesf1V
RPfNhfWw/f2SwjXUz0PyF+zgFfR3C93XVxnrGcHAxd7jzlQf6Xiw5VzucCnl
pcxj4LbB9TM+7P3/c3CDbeF49iUa/3dwZXva7U5a32S/61fOX3WhOsqbaQ0n
GYHOobxkjO1/6QqHWQS2X/2Wxh8Fv2t80jCJ7vOLzsDRQ0JuLFlaC4vWTzlK
KF+k7oMLd937PILO43qDKawn0TULSrb/gQss4dZMVVN+RLgH5ojLOozo9SSn
4OTa6W6u/8v5VSlg//T5+Cj6PLqHsLq72J5Dz9N8GTbOlsonqB7mb36G87LT
DiWPvf8fAXPyu6Lt6P68LAt2dFn2qqT301bDXz7Y5mCuoPH3wNKDTm4VlC/k
LcBx39t036V+o6JNz1GPDe2v/OwjGn84/P7becMttB6oM+F4jxPO+gXK/1TB
7hYW3n5L9Pvvgpe8P3EcofyEcA7eFa61L2X7fzhNoz6McvVQ0O9RFQZrOms6
fSg/o0uHl7ZabChi7/9XwO21IVWOlJfna2Br/x7+U7b/4zQ84/3bk6RNNH6H
GUZw64/Vz3uo34U2BDasuJvbTPk9g+OwuH2ncxzl53jfwCn7ZEYl2TT+drj1
bHXwW9RfRjoFH6pX2HlS/aK2m2UEZ5ZTDzTavJwP/Xtw9GBd2xqqXzlHYc/5
cEEA9a8VXoM1yyal1+n/aEkrLDadG3ump/FPwNOzdpmb2fyHzRzOZ6XKcwW0
/5gHwlyvsseL1N+EnwJfvTI5GkT1cOpl+CT3nbT/6L6UrAW22h2/8RWaTy0D
f3AtUZlJ3w+DdfOM4Ea91Gee+svwBPCBw4MznZRPEn0Ku/ZH2ubS+iQthmN0
CvNX2fm/BzNBOae59Dz0I/D1jjjLALb+s3qB9XjqkXcn5beE/nCe/OOGR5TP
lBx6sZL3XmtTS3lL1ddwmVLjHkzfZ91PsMkPnuqt52j8Q7DMRWWtpvqcb7HA
CPKNnKw5bP7PFw45lqUYobyeLBEukJjtdaP30xbCSSNWNiZs/rERPh2YLo6i
fAzvH9hW+qG6aYjGv3YR57ljS75N9HylXvBuXnPwTaqP1PGwVO6VpaR6Vf8F
PMv8YiKk/kOcBrhI/DhgP51XhU/gHZPii+ep3pK8vsQILORhjat/duT/DxoX
2Kk=
        "]]}, {
       RGBColor[1, 0.75, 0], 
       PointSize[
        NCache[
         Rational[1, 360], 0.002777777777777778]], 
       AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1:eJws3XdcjH8AB/DLyEhcdlZXiLLOlow7RSK5IjNcSPFDJxnJuGxZly3kRDad
EbK6SFnVWS3rQhkdHSozfh/3Of94vV83P893Pt/nuW/2k0N8AysJBIJN1QSC
f//jn3DZ9WLptQzf8RNj7CWw5Bisj1Gkz+/k8M+KR/DHBYM7na3c8p/VFbCi
+2yXKQ1M1rVJLpYGOzxznbTA9HyBL7xud9K31ESTxYtho43jiAork+WH4cTj
iu+dW5us0sHTq+VrQ76YPl/7E37SST+qcyXT48ZW2mKptNbUlN9Ck0XD4YaO
7/o9P2V6viwcnrWrr43zN5OVB+FD7+w04kKTNRlw9TohK202m6z/Btftdla4
f6jp/YQOKcXSvus3LPD3NlniBTdoNPryos+m5yvmw7XCtk7otMxktRr+bp/X
dPgCk3V34XNtzoRY+pksKIOTL9of7z3FZLHdjWKp7PqyFaOGmCz3hC0mBnot
cDRZNRduebrmxZQWzL8Pzpg36E4nPm5MhzepCmz+fhSZ8n+Bz40ruf2bz5c1
u1ks3Xti8ud35abHlYPgV/2ubP07kPkVcL5zo0r5fL4+Bh55/cOxkvkmC2/B
mcKjX48+ZPmXwOu7Jm27dpL5bVOLpQZVdK2xFqbjo3aDz7bc7L4gn/lnwY69
Rle71YLlvwtWzXlQw+MR89+AbzofS3msZ34D7Lfv9Zi4i8zf8Fax1Cs2QDl/
FfNL4NBJr6qV8/gZZ8BdMwcN7jHPZNF2uOP5XaGBE5k/GR4wqv/qFimmz1e+
hxt5fxunPmiypl5asTTQo0XSuN4m6/vC72Ydk4x+yfzBcC+bomXzWN8kW+An
0YZO4lvMfxVOfLUivEUE8xfBh/NidTfbmKwTphdLC1smre/9k+XvCh8Y17hJ
69qs/4HwmoS1GTGsT/LNcIHz1v3ulqz/SfC+CYNvZ7uYrH397/Ub1JPXP2d+
69uoTwlfPvrfZP5e8M5nfrNSjzH/ZDhowb3Rkl2s/xvgTtMH7M4/zvK/AP92
9xA8Wsny18M1Bvy1W7KB+a3uoP3V/er0/SDLvzssziwpS09h/klwl9lZQYKt
rP/r4BuvbzrV+MryPwe/TWlon76T+V/A8pCjQdcPs/yr30X9PjpcW38583eB
JUvrFHUfzfL3h3d/vVrDdgLLfzU8se/nhoVK5tfA24ZvOX/Vg/mfwrb9Xp/1
78H8Ve8VSy/PuJP+jnmUneAjHid+Vgpm/rHw/osO/prJzL8CfuafUbpxJPOf
hjfOqGGo3JP5c2Hh7aTqIxowf6X7xdJBXu2DSw2m9qVuDz/r7zm34qbJulFw
gdb9YKdezB8Jr9zR/pWuHfOfgKU+bksCqjP/E1jnd3HC8PHM/xe+87x/9iQe
D61TRrH0z2RLpwKj6f2NI+CPI08dGqRn+18Ku1XZoZa+MFl2FG6w4X14a/YX
yofwfYP2q7UT8/+GZ99+FpFVYnq+3jGzWGo3f0e4+1WThT7wiy9bLdYcNlkS
AV++pujffJvJinj4W7Plur2PmT8L/tI0s6P3Pub/AdsOPT5/YJLJglZZaB+F
m+dfXcf83rBPq8BPAb7MvxB+7zdr0pxHpuer4uAn879EhDOf9j588oJ95SD2
d8ZyeKqz54HMuSx/e12xdLh1Xuc1zCcbCp+yfVOzjgvzz4ND61kI3Fjemv3w
3ZIR/q3ZX+jvwJ032j30rMPyL4WbvzjUZC2Pn6TFA4wHix26/93H8h8MRwsP
Thxrrv+hcM+RTdsIXVn/98KrTn5fcqM9yz8dji875+ZSm/k/w9mVP8rXdGD+
pg+Lpe0dqsyoZsPyHwiP93rjtIrWhsD1m2Uplbas/7vhWqcvfPu5jflT4SYX
nq4ZxfFa9gmuMXFA4n/XmL/xo2Kp9dhtLT+zPWoGwDnhn7WDze1/JvzV1mW6
/yjm3wnvDCjbsWoY86fA1c9ZHIwdwPzFsDH8+xcBj7+6wWPUt9yCiFweb11/
+IJPyfDLzsw/A27reLRo8Vrm3waveOyb/K0P81+He/hsGxzXiPnfwfPyrYdm
VWL+uk+KpaVFteZ8asn8feB2Vdb6uP9m/Q+CVS4rdte1ZP5ouPaguK/BPzn+
XYHHO8jP27P9aArhoXL/8e9bMX+d7GJprF/a9A/1mL83fPnjXf89X1j/p8Jj
vtjYqgtY/zfBwYnf/0xifVVfgl0Ob8lv9Jn1/xW8SJ64601D5rfOKZYeMx6Y
6/Td9Li4J9w3Oa2LmO8vD4Cvfo+tP4v1W7UebpmlWujIfNpEuOqsF4dUVZj/
JVwtfelxu1Lmr5lbLN1x2LfvF1rWDV5T0vZ9ZFWW/0R49saR/YeJWP5r4bEf
njmtec/2fxZu+bvLucupbP/P4UTPBRs6d2P5V8tD//N67X1FTZZ/ZzihQdcT
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
1JsX/LvfqFJE6RrW/yR406WmgzcXMv8bOO3Z8kZBfD9x7YWobzWDPwdwPU/e
C745/oPrePP672Q4eF3Jty1cX9RugD+sjh4mesH8F+CjN20PN7jD/AXwZckv
50dXmN8q3CBt/OdZSbcc5u8OT27k18LiFPNPggsXNfrVkd9Pvw4W+q20n1uZ
5X8ejtnUViPpyfJ/AbcztvLwL2H+6oswP6omszbYsPy7wDX8du13VbD8/WHB
vUNDj/di/V8D344seD1ngMniM3BR9a52m9l+5E/hEPXJCKWHyaqqETgfrLmo
msc95u8E63/WclEkMv9Y2H/ih5tNHzP/Srj4ZcynmNPMfxruEFOriUMZ8+fC
O4bFLq9bn/W/0mKMv8m58S0uMn97OPnA0Ikv2d6Eo+Hx9T9Gv7vL8o+ER/w3
MDmc63mKE3CHem3jJmxg+T+BazhN8Y7n/VC6v7BH7SbOe3g9W+C8xCDdUjBw
+ZK9LP+RcOP8qRrz/WzypfCqM9+uzzKv/x2F+4Q3m/aI8wHtQ/hpzo/09rbM
/xuuUj1+0XKud4raLMXxHDxEM4Lr0zIfuMPsOTfsdjN/BNznyovtzyew/OPh
2j1C3HfomD8Ldj8UNqcKv5/wJ9wu9e7LoayfklbL8H6HVzr05PUIhTd8doAi
Iprr++qF8KkQw5uVvD9QFwcHF11c2sg8/8mA9wUu+LiF50vib/A6l64CH96f
KrdXYvx2SPaMLzBZNRR2cv2x6CTXm7Xz4K+V4+zTeL3TuB9uWjDEpWFP5r/7
7/WZO15acj4lK4UdI+wKBvH1yhaROJ/5Ghg6nfe7awbDN22d3qzh/FUfCr99
eqV5Q65XC/fBfX3vBDc3X/9Lh9fHtPvVkdfzFZ9hP+XWOpXN639Nl2N+t95t
5WKu7+oGwkkVrbtO4fqsQAEH1bfZKTbf/xsDL0+dkywzj/+psOXKojMN2L5U
n+AUZ+dzPuy/tI1X4PwmJO1RdfP6/wDY5cUeq75cLxTNgnetn7A18jDz74S3
l0/cm3GM5Z8CG5WzIueHsPyL4W13osNvsj/QN1hpkB4wXPEezPYklMBpzY42
676f+WfAPmvjpt9ozf5/G9x9xPbUQ/3Y/q/D6tPv/TdwPNG9gx/ET8ko+Mz8
9Vahv457UzjyK+t/X7jvrENdn9xi/iC42vw/QZ84fqui4eueh3Muf2L+K/Ap
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
Iwg=
        "]]}, {
       RGBColor[0.647624, 0.37816, 0.614037], 
       PointSize[
        NCache[
         Rational[1, 360], 0.002777777777777778]], 
       AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1:eJws3XlYjG0bBvCK7DFCpDCKbEUK2UojEWlByD7ZJRok2bOTbSiFF42lsiQj
FSKmVdokEipGIWkwtqIs72nOvn++43dM2znXdW/P88yr61zfiQt0tLS0DjTW
0vr3//ifYPOdKtGIuHJz3+lCe9j+AqwS173YqdJY8gjusa/1osQzXf9Z9hsW
aJ80qNmrcX6Pu1Wir/tF5iuXaKw1Ed46MaFs6xfN91tugPOuHgmeHa+xOBL2
T/HMHPFUY2k+bKUtbCU5p7GiFrZ3mtZSfFdjdTdFlejHumnHh9/QWOgGS4OP
XRMLNb/PfS3c6L+QNi9/a14PPAtn2pb22rxEY3kuXJQu2175U/P1yhr4+Prz
E7WWmfyzwCS5SpTd1kOWuUZj+/HwFud3z4tsNJb4wxZDOlqG72Z+GazQ673u
ym3mz4K919mfG1XM/N/hZTm2CaW+Glt2SakSRb+zuBhgprF4LNwqe4qD5LLG
0lXwAP+Hg56f1lhxEnYuXe3a66HG6nvwwwA3nZnNNBZ+gQ13njft14j5jVOr
RF8cE691TGb+0XBqWuWrMGPN63IJ/PyH7OT6xcx/HF6QeqLH/X0aC9LhoUcy
Hr1xZ/5PcEh5bc0uZ+Y3TKsSGfkEClYWML8D7O53o7zTWeZfBlseG7Dygb3m
67WOwt6L9pn3usj8KfC6tvtT7Nsyvwpuul0v5/sA5jdIrxJNPnpCrPud+e3h
4JbmOveZV+0NNxkdPHFNOut/JP1f/0x9rMV+cr8LK89llu37yvyVsGGbvKwt
7Zi/TUaVqGDqdLs9hzSvK23hVu+0lzZrzfyL4Vmm/taVOez/w3Bo8IsGX1az
/2/DbZ7WrPr0RmPZW9jk07NxJWka5wvuVYkGypddH3RWY61hsOkU56Ciq+z/
BXDgeFP3sfbs/4PwuAbZ6+/fZ//fhJfO2zfO5AT7vxw29k6r2dOS/a+XWSXa
Nuec+L/OzD8YTp77PHjpbuafC+c1m/khqBXz74PHSguqr3Zh/yfAJnUBa4Le
dtHkV8Jd7y1+3/ak5nVB8/tVIn3t+KYP2jH/QHic9jFlxEHmnwPvPOhS13EV
8++Ba60mpqoymf8a3Co/vU3JYOZ/AR9rv+PDfG/mb5JVJbq2LHtj+S7mt4LP
bPaLU9dq/h7pTDg1Jm/HxAnMvxPePM+7IPMU88thvcIu3nu+ab5eWAzvO/w7
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
+wTzeQ7pAdjq/oSrBsc5/m/AK5YNHnt9C+tfBh/38KwUvmP99frh7/0U6bI7
gvlt4MYPWnZ/0ov5veDeGVtPtd3M/HvhjQG7y6z5PJ0yHu6e0bFDCO+HCZTw
4I0y8/rnDeybWWL/1KTpiGDez5IMgLe9Wq478BXzz7b8t55/nmDF50Hyd8MG
w3u+31Z//rkGx51xf9LiM/u/FO6zNvjY7KbM37i/SnSv5Y6bz4KYvz/cb0FW
mIsJ88+Av8c+88n5zfG/Ay5uuyDxwVDWXw5vqM3v0ov7BffnsOSx2mYer9cG
NrRSic7njchS8n6EvC+87nl7+30cb0pPuOM9uZntYtZ/G9x79eQUV15/s78M
D5mW/yfvPa9/FME7rVK6fj/D6z/a1tiPpCxTxPD+Vn4f+JBxoz7Jzdn/U+Bh
Tj3Proxh/QPhqx83zzLj/UzxRfjB6DNl+rweJX0M+wVLjWoWcfz/gRWfopNX
5/H6X88BWM+TTr7M2cj6T4KHrvMQpX7i+N8If/V6sKuiG+sfBTfWX+m8mffT
5Q/hEyv0T7bXZ/462LNh3dVVJ3j9x2wgzh/6J5eoQpjfHR77uO60vT3H/zp4
YXRX677VzH8Oth7Tv4duH+bPg8taCru+49+r9RO2MfU45LeN+U0HqUQXvkx6
nbaS179c4OYvi9tE836OdA0cvSCuiWQWr/+chjvkevXscZL5s+GDgvVfF/P6
q7AadvIOO3GG10/dhTbYfwxzb1zLegWOgzPD7jU6+4r7Pz+4e5ts31+TeP33
FNxrRNPe0gms/3340/K6gOX1zz98hSNslhtuS2P+ToNVotJOqiQ/3h+UjYGP
G2y7nBnH+W8FPKfXJGd1/f73BPxY2qy3vw77PwOeeEWk2KTF/lfDb1q5RXay
4vzXcQjGg+2ulu94PlWMgq2cfKd+3cP+Xw5vmb/gv3083wqPwQvinYpM6q9/
pMIuu4TFP3h9PfAD3K5F6beGvD8vbz8U54HVO+R+H7j/E8HlQ85/KOX4FvjA
5wP/NhsVyPEfCr/99mvNRV5vkShgl5YP3Vtw/Mrew2ZzXjZ7ZMnx33aYSqT3
3nzQhi/MPwKu9rgx4SmvD1gugcfsObPZk+dhcTDcZu+pQ8E8j0qT4BG5+6fJ
eL5XVMBbDrQUbjbg/N96uEo070bfgzv4PJ1wOPyucvvUyZzP3BfCn86XhDRq
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
5SjrfwdO3WuvPfcY87+DOxUlZf9MYn79aVjftl7tk3qH+W3hUa6ZJzqcYP5F
8Aj/8WfnuTH/ITg89/UxL36+S34LXnl17dgijjflGzgvfWD1tM7ML5iuEoke
zsnPHcH6D4V9xrdbMz6L+efDh4SGB/bz85uyA7Bhg161OUrmvwHn9nPzKCpn
/nJ4TdWt52+PsP56M9B/Tf1frWC/iG3gRzvE1tdH8vOPXvDra7l/y3+x//fC
0Vdilobw85nqeHhWuy1ll0YzvxLe+vNR3SJP5m82UyWa/uHKM/OOzD8A7hVa
HL9An/WfDV/6sS496B3z74bPZcY6Cvj7BdfghXdT3h1iP9mXwg1OO39M7c3+
bzwL8+XlR0v9/rD+/eGO028cuMr3L38GvO+x+2DxZ+bfCc/9Uh4znf1kKYet
Pzv3n833R/wc3nhTz8PZkfkbzlaJVv8etbOGP1/RF3Zxf/mkIX++2hN+2k9l
sZ7jV7gNfrRw9iX/vxz/l+Gfn95J2/HzxoFF8JfrxyZbuTO/9hz0+8Kb39qx
P5R9YL0Ofy7U1eefAu+0+9k+cQ7zB8I/f65Z6uTD/BdhtzDplymzWP/HcOoH
18mx/Pn5f+CaV7r9yzw4//cS43yQlu3f+TDrPwn2VfZ73mg7678R9my/eOOn
fOaPgucsvHhwaAb7/yE8IexbskTO/HXwpQsfP8/k60IzL5WordlpbdcS1t8d
XqDb0L8lP58buA726xCxY+dj5j8Hb/f6NmV+IfPnwbbvT35byZ8v+Al7/vhy
ujKE+U3nqkSCCsluy0vM7wJnT/dOTNjC/Gtgn9bP7ddxvco/Das+VD6YtpD5
c+CMC5/Wm+5n/mp4q+Oos+crmV84D3//5RmxteHMPw42P2WrveQm8/vBMyY1
2mbLv1d9Cs7IXtfsWTTz34dnmgTk6fHvdf8K99K/fLM354fATvNxfvVwKu33
hPnHwI9+j9wwlvOjcgW8b4nk5qsrzH8CjhpaPOJxGPNnwMeMH2fs/8v8ajhi
rN1kx2Dm77gA59frAwwi+fnt/FHwomXNBkanMr/vgn/XS7JbzvjI/MfgqrHj
hsTkMn8qHPKx+sAQ1kf6Ac7Uue92h1a0X4j9t8Fo29I45hfBkz7c9/68mfl9
4J2J6aMDmcc9FL5zbuqBVtOYXwFfGVndO4/jS/4enr8rfOYtL+Zvuwj7l2uK
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
Gdq/beKYPwXWG7XWXnWW+VXwqJF6liteaKw0OI312Kd4t7Ax84vg39fa1vzH
8Wy/FLY4KCl5GqKx5AhsNsX4qPkpjWV34c47cp/OTdY4vxKePVIxbSvfL622
Z3Ce+GIgSKllfjvY54531Kpo5l8MV/83f5Z3a9b/MBz/5P3rlmnMfxuWdWtj
qheusfot/L2Z8bw6rm/C1mdVoplRpSM3/WT+YfAt356yxtXMvwBOrDS9s8SK
/X8QHq743aZ+v6C8CTfbvHHSefaL4DX8dc6wuv4xzN/ynEpUo5jXdSP3u5LB
8Jffw6SW3H/I5sLJ7yb7+y1m/ffBR3JmduzH/ZXWdXj1+43z9lcx/ytY/FMh
28fzjLh5BOZXo2BlRQbrPxA+dffMugjulxRz4GSvsX17cr+v3gN3O6+7v980
9n8cXBZ0+/jBphz/L2CD7trSlATmbxKJ8/y3dtGJnL/lVvCoQeMES/Yy/0x4
fPsPR6P+Mv8u2KTuTEDSLfb/VbiJR7FxY+6/JcXwqn1FFTHG7H/dKOwXi7du
9nrL+veDm74V2J86obHWdHjIh4yN/Wcz/3Z4f4C5bQiv54lj4Od317j2EbD+
T+GoZQWF3hwPCp3zKlHcx84GOTnMbw4/un1l4VquV8Kp8MQS6eX6/36v+xa4
+HLFZwMr5r8E37PL+K+Y+xF5IbyywlwxbxPz/4X9etfucT7K/L0v4Hw0tVJ2
nP1k7wFnuf+I7/yd9d8ETwvvMOI711/ZeXhf4IZ+32KZvwCe4rNS/GYr8/+G
C781WbpiO/P3uKgSdS+p8d+1gvknwMV6dqfKTJl/PVzlImuazetrigi4b2Rg
tB/Pi+oHsEQ6yPo5+1tYC896aH2hCfvFvdslzEfmQ81ny5nfFdbq2SPSjnnl
AfCIm/EfjVYy/xl43pS20+5yvRfkwjo7bZX9VzN/DZxUualxd+73JF2jsf+Y
YzXHdyLzO8NL3RJ71C1i/tXw3ugieX/WQ0sG71y8qmf/IcyfBa9b1mvZn9HM
/+3f6wVD83e30Fja+TLq6ZC8w96c+Z3g+G/VZcN5vV+9Ev5tG9r1bWfmPwlf
EkcvmMf+cr8Hr/7+e9Sp08z/GV73asvkBHvmN4rBftE67baVNvM7wj0qn2dI
eT9LIIEdtrS7cHU/8x+HdT5FNrfj/CBJg2/+LJGfnsn8H2GrlKhDHZkvv8MV
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

        "]]}, {
       RGBColor[0.571589, 0.586483, 0.], 
       PointSize[
        NCache[
         Rational[1, 360], 0.002777777777777778]], 
       AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1: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
D6qgfNrL4HuvTb89uEv1D4VfOLHjSml/EXIBjtmp9fI2rZeE1bBT36yEzJHM
zxP/hauuTtqjpE/5jc5hv7Ng7J83yyn/Ejjz6iiTC6GUfw/ckjM9NZrmM0E2
PHzekjvvpZT/GVzMGykspPmI9QcWbPX6vHsh1d/gPD6PLSYso0qq/6Lzvc+L
bh7N1qH+3wVrWvwYu2cZrf8zYbvQJ2FRZOmT3u+/YNm5biSt/zvh/MQpbWI7
Wv+PuYB+3a10yWE9rf8XwJZHRLkqS2j9Hwjr6IfX546g/c9p2Djsvft4Ndr/
PIblP74pDDxD+X/Be/KUBgbQ+ODr5Eh4Po5H3Ideo/63g22O3rYPpP1DlT8c
8VvROYPGA0sAJ/N/N9rdovyP4KRtow5HCin/f7BZ7cHXGmep/qMuSnhvxuVn
q2+g+tvAcddy57hGUv23wVec2e1bb1D/n4Db7vnJ7lGl/KXwhY6stecNKH8b
/NJt/6/udObrhcNz4cJbKsdp/hDPgedmleicl6P8fNjRoNzf9TjlT4EnO/B3
LW2i/Pfhy+GmNXOqKP9XWP9LRM8zWs9VqedJeLenjnn9h86bWLPhRMk2h5e0
PuT4wMMybrQ40v3YIxlu7fb4vdeI8t+F9x5pz90yn/J/huM5SdP/0P5JqiqU
8IYGPr67K43yc+FhVtbdb+MZO3r3Xpez+rp7NuOQw8Le/eOxofkqlP82nL5/
UtdzT8rfAndp8Q5eyGHMVr6E++H6cVpL4yj/DHiyVkCyP81PfC/48SLzSelT
KP9BeOWQo3cm/xv/RZd632celWMmovHfBL/s6I7J3Er1Z1/Ges138rQo2n95
TINN3DUnhM2g/OtgOT9zT1laL4ri4aQ7mh1VuZT/Ouzw7HHtpBLK/x62W1Fq
+8KG8ivlS3jlq3/NL71D+afAc0cEjhy5mvKvhvnqSQoS6kdxLNz1eu90Z8rH
vga/XcxddJnWL1wxfHlt0d9TtJ7j978i4fGWrDaXvqDxPxHuE7hv86fPlH8l
3FezNfAA1Ze1Hz4xbEvOXLo/c/JhGQ5Pdc6/9U8DrGitO72T9reJfa9i/Tlo
e8cd2h+KzOGG1LfDttH6QuoKB6ysTrM9T/kj4cCLk/7IRVF+Iby7v//e9TTf
hNTBk5JuzE9Opvzy1yS83BXGCsNDKL8ZbL5py4rEAZR/OWx6ccsRc/p93DD4
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

        "]]}, {
       RGBColor[0.915, 0.3325, 0.2125], 
       PointSize[
        NCache[
         Rational[1, 360], 0.002777777777777778]], 
       AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1: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
zn83wb590m26Uij/Kfjc+a+csz2f/4nhHHb2pC103i3+Ag/Rc/4ziz4/lg07
gf3N15bJr+j9cWbAc3KWN5jQeQ7fG/Z4YLppJV0XnoDLzYvWzqPPr0UP4Nbd
phZP91H+RriUtzdG8xLlVz6J/pq+9eU5am9rS9ioQY49js6bBevgQx97B258
RPu/SJi7uvjhcfp7ZXfhjOxcUy8632Z9hL82fR3qRJ+fchWjcX/3DrneTvOj
x1S4z3z37vdDqf09YZvc840raD4TH4VFnxUnTKfzdNlteHjHIl8x7bc576P/
fX8vT7WY9k/8QafQ/hvOfDppTv3fFP6gbfUsia6LPOApXyor+rlS/z8E6wxy
Vwuj/SD7Jhy0bO71rbT/tK6Ft8zIvvSW5l+BQgzGZ1vMVW0tav9JsGxt79Xu
LGr/FfCX5R99leg8ihUG9+uYHzWd1nPc63Cd+Gnqy57931v4rMOcgYbGlL9f
LNbr9x46qNJ6QcyFjSRGlivo52XL4R/rY2bm0H6bsx++VVdhP6Pn/DcDFu/8
yVkdSflfw+3lWr2r1lN+uTjM18Jl0117zn/Hw3rbJjSf2U35l8Fy5Y/5m+j8
0ToUnrlm6LWJdF4hSIcVWrxCF9DPJ7/89/NaU5/4bqD8rHjsr2NWPJ5E6yWW
Ify8I6bT3ZLyL4GlgrN/D/Wc/wbDJUbS/L+3qf+nwmnlDYGTyqj/V8D3Huj/
l96L8v+Bi9pijZQpD0c/Afl2ZG4V0PkI3wle52Hs/47mb+FueEO4wcfttH4Q
Xfz3+uUV+TU0fiVlcLR/9W4O/T52F/zhcaznBzrvstZN/Nffpkr2mjLzj2AB
nMo9vnZqBeXfmfjvfH5Kv4jTlD8FPqqae3AI1UNWCXylS2H0BFp/cX/BMV/W
HQvsWf9pn0b/q3Nw/kjzc6QjPP5+POcS7S/E22E7qz3dS+jzBFkyXFtXGs6h
8yFOIRz1bZSmBs1P/FY40XesuYsC5R+dJOWdDtgVsukDjX97uLJpS/twOp+X
+MPzH1+0kqfxxE6C5Y3Vn2jTeb31M3jOeV/hfUNq/x/wf7tXBHjQ/UweeQb1
ZrUfK5ZH+WfDnXY3P3rTeQrLD34SvkPpLo0HbgJ8j2u/vYPWrx5P4PMr12ww
pPET2QzfrI9cuL6n/qslS3me0ysj+0+h/DbwqIKBTb/p93F84T+5bpvi6PMn
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
qnGNvfR/Q+CsQA==
        "]]}, {
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       PointSize[
        NCache[
         Rational[1, 360], 0.002777777777777778]], 
       AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1:eJwl0n1IE3EcBvBTwwTFhky3oSy3ZJKlbIyy0OB+CJHRi0wzGxQry5EVTYoi
WGykkWGgVNB6URaOwSpjxAIj0eU2tCK2qEgNZcWg8BbJUckktWffOziOD8/z
++O5O82xs6YTmRzHVeBOP3HJHKMCU6eO6HoqCnmY98F8zqYkmyxK2/YBdoR8
omKe7F6Gdbuqm9QT5Fj5mMC01zNVQ5sVaXMm+No+a872VrLeDptu5Rf3vaW+
xQt/LXMb/Apl2n0xOLpGefJwHvWDS3Cq8uJK+xPyQllQYBsPalRZBeTS/fDW
cG3N3RI633AJXjqv79e2UO4chHt2WO+/YJT738E/70yfDj2nPL4If04aDd0f
yTLtK4G1jBqvND0k83vg8MCpRG6XtP8C3Pvv9szfKmm/G66alfuPZ1M/9gau
u7rFNeyjnPsDR2fNobiT3qd+/bjAnInv1pEZsqUe/t3h6cxaldP+c/Du5Ude
1wY6H+yH2/PE5qPvqb8wAffOZ9gLvORSEX66raN22kP9hpKQwKqNkZerjZQ7
d8LuiKE+f4Tst8FTmuKxtXZy/B58Wd0YzX5AlkXgcnPAEVBI3/8X/FpMrJs6
QLapwgJ7nHJ8mZRL++vgZ3u/LXbdpDx2Bm7rbmtt1pE5Fzw3MHwj3CntH4d1
g8KPgJRbkrBP9JoPrUj7iyICU2aoQh5LIf9prjK3BpZ+TTn/H43HBAc=
        "]], 
       LineBox[{{3.7275645934068046`*^9, 5.}, {3.7276416*^9, 
        5.10041535096702}, {3.7276798155567017`*^9, 5.}}], 
       LineBox[{{3.727808258239675*^9, 5.}, {3.7278144*^9, 
        5.009688800204479}, {3.7279008*^9, 5.105012590058536}, {3.7279872*^9, 
        5.158172446683951}, {3.7280736*^9, 5.146109422658731}, {3.72816*^9, 
        5.077909073226959}, {3.7282464*^9, 5.200352469596358}, {3.7283328*^9, 
        5.1509405539654765`}, {3.7284192*^9, 5.080103142653068}, {
        3.7284633218294973`*^9, 5.}}], 
       LineBox[CompressedData["
1:eJxTTMoPSmViYGBQBmIQ/cxUqmHm8deODGAg4gAkJuwE8rk1Wic+/AHmH3gM
5GfWfj6+zBfM/8B74rXjvlsMerfvgPkKFkB+2YQZhicjwPyAJCA/ll9QppRP
FMRv6AHyE3ZZcL6EqN+wDcjf+Un1C2MqmP/gAci8C3UCtxaA+QLcJ187Cuic
497sAtbvYArk59YaBaYtAcsXxAP5NlZv9xQ9Bcsv6ATyb95VjlGoB/MvbAby
y3VuykSagPkM94D85qV8IeyVYL4Bx6nXjvLlF2Tfu4P5CUZAfolq4f0mUTB/
QgyQv0l5rfhqWTD/QBuQ/5DnsDu/OJj/YQOQ7x6dUb0Eol/hNpC/7Sizp8hl
iP9ZT7927OQ4sssuBuJ/fSB/2gURXgMpMH9DJJB/0c5NY8ouMP9BM5CfcDM7
5NM0cbD/1wH5HZGazwXyxcD+vwHkf93wqstGDay+gOnMa8f/3XsK9HQg/tcB
8m1Mv+wyhshfCAPyDxq1rLpWCPF/I5D/Q9vKPLoE7D6D1UD+eUeF8jNNYH7C
VSD/47bn+k0PIfH/H8g/dXx3//UWEYcJi1kVFc8i0gcAVqzSdg==
        "]], 
       LineBox[CompressedData["
1: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
sP+ckVWJlVT/VfCD44H6l+h+1e2Hh30pzVtEz59CBrxjqPq+XCPq/2q46env
sKP2lL//QDEnd1BT9s4xym8EP1VaU2HRyixcAfdWaau7ZDLz9sKVStL1MrS/
cRps6b9m06BpNP/ewq83rl7dTd9nBRKDxNwZh+sGw9bQ+mcMvJNnGmdwnx3f
vAz22Z5ooxhK+UNh49x13z+tov6/CqtVuZy/u5PqXw7fvnjnbMoUNp8yeuEm
e02FdB/mutFSYu6q0sGJoemUfyn8daBq4rE3lH8XbLggqV+LEs2/y/C2tmRl
rxuUvxROtlazE2yg/N3w/sOuKdrBlH+ktJg7WFpRpUrbje3gQcGnU8ym0/zb
AS++/77QJozqfwH+oPJkW/Eodr38EnhzpapjkhRz8y/Y2/4c3z+H8uvKiLn+
d+L2pi6l/Daw59kPI/qXUf4g+NHU9O7wHur/ZNjqvXtRfAXNvxdwrPlw6/G0
v0IHHBCxMa1iGrueOV9WzEVfGSqYW0r1Xwgf2NY5TTab8gfCe1yWjjNzovl/
Bi6yKd7jc56Z9wxu23O+viWK2bgNvhfTr2niOWZXzcG4nmJbpEMis2A+7Gtz
fVReCOXfCGuZf0zLcqX8p2APLk4n0JGZXwQ3zFny/ngjs10zXO1cPe30M+ZQ
dTnU7+ig0T9fUP0t4XmmTmH3fan+/8ImQqmZX+YxK5yAWz8khQ+IpfyP4Afd
ca8CjlP9v8OSNb4LDlfS+2/YEHyexbf1pjix94eQg1t9dbyuGjPz/GDv6h8m
Kx0ofwJcuLc4I4360TUfbnadlBRRTfmbYIvRS+sv6bLj85XlxZy+erDMDm/K
PxsOVrfxVzCj/N5wrFm8Qp495Y+Do/xK53YsoPx5sFPTw0Wt6yh/I1y502GI
bzzlV1QQcy6tFS0+npR/JizJOTZvK6D86+Hn/7VnuduzzxMggHV77+2ZlE/5
78Dfc278tXSh+tfDvPLXxjvkKL+8opirSNTmd2dT/mlwv4YJISozKL8HzFPZ
nnhjD+WPgrfuS1p1T4byZ8MTkj2Dvjyi/B9hyWgrg6k/KP9gJTFn7qFXVG/K
9rebAstMKfk1vIPyu8JqLS3/jvpI+SPh9+1VL68XUv6b8PeGww7H5en9X9t3
vpxDib7LmM2lh2Je1EjJLad+CjCBD94Mela3nPKvge1TjYvsdlD+A7BLrsQ2
39nU/5nwsEoV82telL8GFquaLdDis/O7DlRGHm2JtTtKKb8xvEMY5py6ivp/
JeytWBryaSbl3wcv8Fe/Pmkw5b8Ol7VpR92i+2FXBY9R7TaN+0L5JVUwP+dM
dnpzh/KPgy8Yp2qO5VP+5XCQlIrt/C56/sPgd7dkhzRoUf2vwUXtkm4q1F8B
FX3ne5o4d/5Xev/zVMVcrdLfRzqd7PfFQkPVvnnZGJgvT/NvGXysxPPDNl+a
f7thzyb510NofeR6BTaQmxyzit6vgjI4NOZRvBvd7/w/sObTpE8Ds9nfu5pH
DRNzKydleqvS/Obbw/ee9Ffptqb8wfCrf7M+hs6n/Jfgt7U75X3e0O//hPDi
Dfqbl/2hv//9htX/SK3Upf5S0FcTc/Ft6d/79af8i2H/lgq3i5sp/3b4Q25A
UMdkqv95eLgj92xiGtX/Jfwl09vJcjTV/xcckjvxSPlLyj/iH9x/tWzZwBSa
/4tgo0Gp4zWdKf9W2EScPO6zmNa/SfDzyXcSNBLp/fccjtpWMFljEs3//+D0
pXqxv6kf7bTVxdxlLdvrNVcpvxWsF/h1/pwEmv+b4V7rUfMctWn+J8Je2is+
nQnSMHe+Jvj0GOaxH2Xz/wEwXiPq
        "]], 
       LineBox[CompressedData["
1:eJxF2HlYTfkfB/CbJCnao9WVShRuZUmSjjZLTNNmTUmKCV1LJaSIEkZXsqQi
FdkmKVkrV2SrRtkiaUGGHCrLaOX37vuZ5/n1h57Xc849577P+7ucDPMPcV/W
RyAQKMoIBL2/EzqcyxR0eU7AfjTs8Y9YD95jHudSN5U53RkOXxJ0dOcS3V5X
iuH2y32f+KTq9FqQAvedmxdYvYpZVArLqFZIAh2Z/Vrg6drNeosCmSXaejx3
4PSj4Y1/MEsd4KU5D8Nqk5hbV8GzTBapxC1kFh6G1bzaAn9TYnYrgUNsVLwC
JMzRPHyo3HS/YYN2r3O19Hnuyy25UCU5drzBHra3vXq+/Ag7rhIM39ZLUkv+
xWx/AFZctV/omMksvgFb/TZErK7PPp/+AU7x4rYcvsSOV6ob8Jx6evm3By+Y
BXbwKeOK4tuG7PmIlsNfqj5U+gqY/RLh6qUj0hdSHkkh3BZ01OBjIfu89B1s
n9ByPXY95VcZynOPKvoE2RpR/smw7iKZgpef2fluy+Dbau1ZITKUPwFeu+W+
+YFHlP8qnGQS4a/0mvK/gXkdxzctEez7qAwS8txpRadhT56w4/bWMJdn99F9
FrPYH1YrWq+bwVH+PfBS2QfSHe7MlZfgO+ubbtucov4b4QV+Ibu+bqH8isN4
zkOxfO1SGg9+4+FgseVG2Zfs+0l84Rs5Kw0f3qP88bDT57pW1+PMrflw4jLz
x56TKH8dbC+OFXa4Uf7+hjw3OzI5fqIi5beENUsVo6yeUP5F8GrVb+YNCcwN
sfCgI/1u7DWj/i/AL+W39n/mTf2/hHViPxTyndS/3HCeczQM93mvR/nHwp3K
Y3NFUup/PlxjUBj+O50v2A6Hj36SZOND4z8HLk79ZjlhGOV/Dq9Zt7Ko0Ir6
72PEc4FvT4mqtWn8m8OC/sr1r6Mpvzf8aKdV0SRf9jyFW2Hfs3Zdmsco/1k4
zmag1ZEVzNFPYS2jbet66Pvk/oIHuMp7awRS/pHGPGdt7a/rcI3dT8UTfmZZ
HHt0OLu+/RbYK89r24gX1P8pWFXJv8SgHzue/ghudm3xuUfjvbIb/vfks0l7
qS/BCBOei/q59dOOOmbR7/ClbeGTbak/v03wx8D4D5+N9Vj+E3Ba9ePR46ex
60sfwvpt7Ws8LZhbO+CuLzcFqS+pf6MRPNf9YUyU0Uaa/3Pgv8LX1g7/b/5v
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
/5/4H7if5fU=
        "]], 
       LineBox[CompressedData["
1:eJxF0n9IE2EYwPHLsLTFtn7PuTnnCAyF1DLCQncFy1mJJIukwkMbRWM2E0pB
aUgRtqZjS1grxmis0oKESWNroUkWmsZWQiQWm6YoXlMqYawxeu55/+jg7vjw
vC/H9+7kDVdOadMoiiqCk7vf2+xbHFOxNIXHdiVcan6BCy5qPHnLUs5GyTGW
Fs8yhxkpekAFvjr1Yr5YIuEcMYBnff6VM3qcCx+AKYFYeT8l5qwcBedsje0f
mcC5YQUsb+mJWm6gXVmVsF+RsM5P4vrQUXB5oDWoac7hTDWB42d5+V4vri+y
g0//frfm6UMzI2BHYYemLYC2sGCmW5uqM+D+4Z1qluaZ1LYO8rxVJXgparLx
M3GeqwO7Z1qEdjO6phfsGXcG42XZ2D8E/pwlj9dP4nxgCSz+U+CoCqAj26rA
Q8Gv7Sm0sBz8U5j27HU7WnkJfMDeJnCnk34r+Af/enfSKMP+INipTzwdkOH7
DC2AC/lq2XMT6d9ynKX3LnzbdJM8r+gQuOLCncddY2hGy80V15qNWrSlB7xx
cLyxgSH9frCgb/nIlzB6dQ48moha98TwfefyT7C06OGjW40O0n8QbKjVCWuH
0cYGcHpy7M3lHaT/Ljg8PS16+xF7Ii/Bna2yJ34b+f5RcG2ZO2bWk37eSZZe
syS7ss+jDaXgidsZnyp2oV314MrSfbROhQ51gV+997pWe0n/ILd+MX+9aTfp
/w7+YFK5p8Lk+2dUs7TCOVO3Lo/0l4DN/RvmmkSk/xw4UFLc3+STKv9mqnWd
1f//93/vZxZY
        "]], 
       LineBox[{{3.799276225874364*^9, 5.}, {3.7993536*^9, 
        7.497807791067239}, {3.79944*^9, 7.399969581124887}, {3.7995264*^9, 
        5.037051807167251}, {3.7995668492824097`*^9, 5.}}], 
       LineBox[CompressedData["
1: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
Hdb7K4fN7Oj3+UyALWWrRxnOofxL4QBljw1bomj874TV84P3v6b5WnEejni3
2XofrQecV/CoAQWNk5cyPy/otR6f9/avcpYp45hx8LT3bbOf0ngRL4EHbcxw
ySuh/NvhPWsOtLqyjZj85+CxGyrjjN8aMvlf/Ht9re1J1XGMhT034PpJPz5x
L4+xaDQscr2SV23JWOoFH/s5tteVC4xZCfBDr+SEOhFjbjGcUmjRfEeDsc8z
WDU5YPKuOsqvshH7WcXberNjVP+RsKDkmuvIGqr/QrjzdcfqT0HMz3O2wqPX
2av4vaL8RfAVRVn4+0XM6zG1cPu7EVzvOYzFSlFyfqNurmtED8YyC7hhxYDv
RveZn2fPh92WSOedr2XMi4XZM9ffnvuaxv8J2NOro+eechr//8GpW8zXO92l
+f8v7BI1Z/D7U7T+m23C973abMY6T8rvBp/2Vn79qA/lj4a/fu9TGXiL8h+H
Q8NjU2M2Uf7HcJOGsNQ4iPL/hl/rZ3b8EdL4Hx6Nflsz6+fLeMrvDG91mlK9
6AHVfyPsNTHa+Mo+Gv95cLKkys33N9X/IVxVl3xMfxXzedg/4Rz+r1VRl6n+
wzZjfLUGP7skpPrPg60udrYF7aP6r4M/i2Su7E3M+JEehlNfeLzYY8OYdR8O
zdOoX1JK+X/Akl/eq/dMo/xDY+T8WStP9J6ixjhlDiwaInx/eDRjyRpYw+BI
7pw9jBWH4M/2y/o40fjkVMHaGaWqKnLGgm+wylYTr/ZZzN+PGRyL/nGxy6mD
MYzFs2DHj0MmObdT/VfBc+2mxbmnU/4cOH9QipnMknk/7zZ8ae/UsqmPGQtb
4Iepax/wRw5j8utvwX4wjK3U6w7lt4NXSwXrv3pQfiFcc+i4ZvNkxtws2LzS
KL3wHeW/BR9Jazmz7Srl/wx3n2m6860X836JbpycryV/MNBUTPmnw3+VNlnO
bKH8ofBgjcL5TkrM+wX74HDF9MeBsTT+r8Ovco4sSHlN4/8TXPZ43o53OZRf
eyvqmXT17h8Z5efB1ZN7Xvq6i+ofDNtUri2JDKH8afCnw9Ms3kip/lfhQ+tG
GSuNpfwf4ISDjf3vFTGvs/pvk/P1WhSO209R/afC32fM/f6AxpNPAGz/+mbU
gSzKvwe+cKtmV/JTqv8leE1gbsoIPuV/C3v0kHd8aqXxz45HfxMiNRy8huo/
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
FuXON6L7J4LJMO/r8EsWtN7H+MEm/I2GnGtU/2Q4Zml2zh6aj2Rl8Az1R7qH
Dej6fwOrBRu/Gk/XJ6/3Uay3xT7Hk+l6FE6A010d6nfS3xcthct3WCstm0r5
d8IpJuqbubR/ZpXCcZqzz7lm0vX/Cj46SqnZx4jy98qT86ecmz/WgMZfyjh4
xbmxoat3UP4lcL3rYVclmj8U22GnNbm9O2h+5JyDtS8tKS/yo/wv4KWs/JpI
6o9ieh7DfmrlHBV/6qfEo+Ha4CvGX6nfkXnBBguehggPUv4EeIL70bPp1B/z
iuHB9atdKhZQ/Z/Bvqv07C5TfydSyUd/0c/hjUk1zX8j4aT2/zK2UD/B8oTr
B5xf1UHfL3cr/J/H4q1Paf71KYJnzO/jWexI+Wvh6w7DdQOvUH6l49jv80ze
pCym8W8Bt51/pf4lnfLPh38f2VH0lO7PCWLhLX3s1WRDKP8JeIan9pBaWo/F
/8HG5nsv3hRQ/r+wnWnC0PHOlN+sAPvz0Y1+viup/m7wpOExQzLCKX80fIkz
fsoq2r+IjsP1hwcZPaX1XPoY9hO/e2u/nPL/gWsimnY0Ub/IHV4o57vv+qg4
HUz5nWHB396xE2m9T9kI+6le0tGj+yeSPLj1Y+CG7Zco/0OY53VuxK+u/v8n
XDGttn0M3R8SDDuB/a1JcUUU3Q+LmQfrTFAtvEjrmXgd/O1+c2EI3T+RHYbL
0yvGJdH6yr7/z8GCQDcaT7wfsMGg+x4zvtL9v6En8ftWjSqQUn8smgPna4p/
KdH9RekaeJJU71VfR8ovgp9uXbpofh31f1Vw/P0fb2bR5/P5BvMeWzfHU3+X
MvgU9j8LglbJ6fmCZBbcPsraa54Jjf9V8LLTe1y8qf/k5MBz72ev96R+XnAb
3hJZV3HEl/K3wLkLtQ+Ezab8+kVy/ojc2l/fvlH/Ywefaf7487ct5RfCA7OH
6Wh/oPxZ8NYDHe7+tN4Lb8GD1Q/NXkDrq+gz/Daz+7ET8ym/7mk5//b1vrYm
iyj/DPjaEr17159R/lD4z6GbdZPp7/vsg20c1dqWUD+Wch1u8s0r+VZM9f8E
f3qspsqlz6PQFsv5m/1nqvQKpPw8+MnIn4Y3cih/MBw2as1pj3mUPw1eriV/
Pukn9b9X4WN3knZfiqH6f4AHuw3j1yhR/v7Fcv6sgRMF1bMo/1S4j5vuz6Su
+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
3v+ZaDHe
        "]]}}, {{}, {{}, {}}}}, AspectRatio -> 
    NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
    AxesLabel -> {None, None}, 
    AxesOrigin -> {3.7237536*^9, 5.000000000000011}, DisplayFunction -> 
    Identity, Frame -> {{True, True}, {True, True}}, 
    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
    FrameTicks -> FrontEndValueCache[{{Automatic, Automatic}, {
        Charting`DateTicksFunction[Automatic, DateTicksFormat -> {Automatic}], 
        Charting`DateTicksFunction[
        Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}}, {{
       Automatic, Automatic}, {{{3.6605952*^9, 
          FormBox[
           StyleBox["\"2016\"", 
            Directive[], {}, StripOnInput -> False], TraditionalForm], {
           Rational[1, 72], 0}, 
          Directive[]}, {3.7237536*^9, 
          FormBox[
           StyleBox["\"2018\"", 
            Directive[], {}, StripOnInput -> False], TraditionalForm], {
           Rational[1, 72], 0}, 
          Directive[]}, {3.7868256*^9, 
          FormBox[
           StyleBox["\"2020\"", 
            Directive[], {}, StripOnInput -> False], TraditionalForm], {
           Rational[1, 72], 0}, 
          Directive[]}, {3.849984*^9, 
          FormBox[
           StyleBox["\"2022\"", 
            Directive[], {}, StripOnInput -> False], TraditionalForm], {
           Rational[1, 72], 0}, 
          Directive[]}, {3.913056*^9, 
          FormBox[
           StyleBox["\"2024\"", 
            Directive[], {}, StripOnInput -> False], TraditionalForm], {
           Rational[1, 72], 0}, 
          Directive[]}, {3.6605952*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.6922176*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.7237536*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.7237536*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.7552896*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.7868256*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.7868256*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.818448*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.849984*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.849984*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.88152*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.913056*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}}, {{3.6605952*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
           Rational[1, 72], 0}, 
          Directive[]}, {3.7237536*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
           Rational[1, 72], 0}, 
          Directive[]}, {3.7868256*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
           Rational[1, 72], 0}, 
          Directive[]}, {3.849984*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
           Rational[1, 72], 0}, 
          Directive[]}, {3.913056*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
           Rational[1, 72], 0}, 
          Directive[]}, {3.6605952*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.6922176*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.7237536*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.7237536*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.7552896*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.7868256*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.7868256*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.818448*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.849984*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.849984*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.88152*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}, {3.913056*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.009722222222222222, 0.}, 
          Directive[]}}}}], GridLines -> 
    FrontEndValueCache[{Charting`ScaledTickValues[
        ((Transpose[{#, 
          Table[
           Directive[
            GrayLevel[0.4, 0.5], 
            AbsoluteThickness[1], 
            AbsoluteDashing[{1, 2}]], {
            Length[#]}]}]& )[
         Part[
          Select[
           Charting`DateTicksFunction[
           Automatic, DateTicksFormat -> {Automatic}][
            SlotSequence[1]], And[
            FreeQ[#, 
             Alternatives["", 
              Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
          1]]& )[
         SlotSequence[1]], {Identity, Identity}]& , 
       Automatic}, {{{3.6605952*^9, 
         Directive[
          GrayLevel[0.4], 
          Opacity[0.5], 
          AbsoluteThickness[1.], 
          AbsoluteDashing[{1., 2.}]]}, {3.7237536*^9, 
         Directive[
          GrayLevel[0.4], 
          Opacity[0.5], 
          AbsoluteThickness[1.], 
          AbsoluteDashing[{1., 2.}]]}, {3.7868256*^9, 
         Directive[
          GrayLevel[0.4], 
          Opacity[0.5], 
          AbsoluteThickness[1.], 
          AbsoluteDashing[{1., 2.}]]}, {3.849984*^9, 
         Directive[
          GrayLevel[0.4], 
          Opacity[0.5], 
          AbsoluteThickness[1.], 
          AbsoluteDashing[{1., 2.}]]}, {3.913056*^9, 
         Directive[
          GrayLevel[0.4], 
          Opacity[0.5], 
          AbsoluteThickness[1.], 
          AbsoluteDashing[{1., 2.}]]}}, Automatic}], GridLinesStyle -> 
    Directive[
      GrayLevel[0.4, 0.5], 
      AbsoluteThickness[1], 
      AbsoluteDashing[{1, 2}]], ImageSize -> {507.94921875, Automatic}, 
    Method -> {
     "NoShowPlotTheme" -> "Detailed", "AxisPadding" -> Scaled[0.02], 
      "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
        Directive[
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        Directive[
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        Directive[
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        Directive[
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        Directive[
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        Directive[
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]], 
        Directive[
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[1.6]], 
        Directive[
         RGBColor[1, 0.75, 0], 
         AbsoluteThickness[1.6]], 
        Directive[
         RGBColor[0.647624, 0.37816, 0.614037], 
         AbsoluteThickness[1.6]], 
        Directive[
         RGBColor[0.571589, 0.586483, 0.], 
         AbsoluteThickness[1.6]], 
        Directive[
         RGBColor[0.915, 0.3325, 0.2125], 
         AbsoluteThickness[1.6]], 
        Directive[
         RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
         AbsoluteThickness[1.6]], 
        Directive[
         RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
         AbsoluteThickness[1.6]], 
        Directive[
         RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
         AbsoluteThickness[1.6]], 
        Directive[
         RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
         AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
      "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05],
       "AllowMicroRanges" -> {True, False}, "OptimizePlotMarkers" -> True, 
      "OptimizePlotMarkers" -> True, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& )}}, PlotLabel -> 
    FormBox["\"lg of cryptocurrencies trading volumes\"", TraditionalForm], 
    PlotRange -> {{3.7237536*^9, 3.8907648*^9}, {5., 13.920395043674441`}}, 
    PlotRangeClipping -> True, PlotRangePadding -> {{
       Scaled[0.02], 
       Scaled[0.02]}, {0, 
       Scaled[0.08090169943749476]}}, Ticks -> {{}, Automatic}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"USDT\"", "\"BTC\"", "\"ETH\"", "\"USDC\"", "\"XRP\"", "\"DOGE\"", 
       "\"BNB\"", "\"LTC\"", "\"ADA\"", "\"MATIC\"", "\"LINK\"", "\"FIL\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"], 
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #10}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #11}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #12}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.772079, 0.431554, 0.102387]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.363898, 0.618501, 0.782349]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[1, 0.75, 0]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.647624, 0.37816, 0.614037]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.571589, 0.586483, 0.]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[0.915, 0.3325, 0.2125]|>,
                     "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> 
                    RGBColor[
                    0.40082222609352647`, 0.5220066643438841, 0.85]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm], ",", 
               TagBox[#4, HoldForm], ",", 
               TagBox[#5, HoldForm], ",", 
               TagBox[#6, HoldForm], ",", 
               TagBox[#7, HoldForm], ",", 
               TagBox[#8, HoldForm], ",", 
               TagBox[#9, HoldForm], ",", 
               TagBox[#10, HoldForm], ",", 
               TagBox[#11, HoldForm], ",", 
               TagBox[#12, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True", ",", "True", ",", "True", ",", "True", ",", 
                 "True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.890858736818907*^9, 3.8908589244264727`*^9},
 CellLabel->"Out[215]=",
 CellID->1459762632,ExpressionUUID->"4fd76ee1-550a-451b-9bb6-898a50c5004f"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Related events", "Section",
 CellChangeTimes->{{3.8329097753094378`*^9, 3.832909780823078*^9}},
 CellID->471139076,ExpressionUUID->"4585c35e-6471-4360-bc1a-acbba485906e"],

Cell["\<\
In this section we make a dataset that has the dates of certain \
cryptocurrency related events and links to their news announcements.\
\>", "Text",
 CellChangeTimes->{{3.8332797395456247`*^9, 3.833279841708591*^9}},
 CellID->662243843,ExpressionUUID->"b94fd5c5-eacd-4807-90b9-1710d7cb194d"],

Cell[CellGroupData[{

Cell[TextData[{
 "The events were taken by observing cryptocurrency board stories in the news \
aggregation site ",
 ButtonBox["slashdot.org",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://slashdot.org/index2.pl?fhfilter=bitcoin"], None},
  ButtonNote->"https://slashdot.org/index2.pl?fhfilter=bitcoin"],
 ". "
}], "Text",
 CellChangeTimes->{{3.833291694208001*^9, 3.833291767791669*^9}, {
  3.833291829015439*^9, 3.8332918870917892`*^9}},
 CellID->2072010547,ExpressionUUID->"0e8cd5a8-f40b-44b8-9223-cf127cee7639"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"lsEventData", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "\"\<Jun 18, 2021\>\"", ",", 
       "\"\<China to shut down over 90% of its Bitcoin mining capacity after \
local bans\>\"", ",", 
       "\"\<https://www.globaltimes.cn/page/202106/1226598.shtml\>\""}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Jun 10, 2021\>\"", ",", 
       "\"\<Global banking regulators call for toughest rules for \
cryptocurrencies\>\"", ",", 
       "\"\<https://www.theguardian.com/technology/2021/jun/10/global-banking-\
regulators-cryptocurrencies-bitcoin\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<June 10, 2021\>\"", ",", 
       "\"\<IMF sees legal, economic issues with El Salvador's bitcoin move\>\
\"", ",", 
       "\"\<https://www.reuters.com/business/finance/imf-sees-legal-economic-\
issues-with-el-salvador-bitcoin-move-2021-06-10/\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<June 8, 2021\>\"", ",", 
       "\"\<El Salvador Becomes First Country To Adopt Bitcoin as Legal \
Tender After Passing Law\>\"", ",", 
       "\"\<https://www.cnbc.com/2021/06/09/el-salvador-proposes-law-to-make-\
bitcoin-legal-tender.html\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<June 8, 2021\>\"", ",", 
       "\"\<US recovers millions in cryptocurrency paid to Colonial Pipeline \
ransomware hackers\>\"", ",", 
       "\"\<https://edition.cnn.com/2021/06/07/politics/colonial-pipeline-\
ransomware-recovered/\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<June 4, 2021\>\"", ",", 
       "\"\<Start of Bitcoin 2021: World\[CloseCurlyQuote]s Largest \
Cryptocurrency Conference Coming To Wynwood\>\"", ",", 
       "\"\<https://miami.cbslocal.com/2021/06/04/bitcoin-2021-worlds-largest-\
cryptocurrency-conference-coming-to-wynwood/\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<June 6, 2021\>\"", ",", 
       "\"\<End of Bitcoin 2021: World\[CloseCurlyQuote]s Largest \
Cryptocurrency Conference Coming To Wynwood\>\"", ",", 
       "\"\<https://miami.cbslocal.com/2021/06/04/bitcoin-2021-worlds-largest-\
cryptocurrency-conference-coming-to-wynwood/\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<May 28, 2021\>\"", ",", 
       "\"\<Iran Bans Crypto Mining After Months of Blackouts\>\"", ",", 
       "\"\<https://gizmodo.com/iran-bans-crypto-mining-after-months-of-\
blackouts-1846991039\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<May 19, 2021\>\"", ",", 
       "\"\<Bitcoin, Ethereum prices in free fall as China plans crackdown on \
mining and trading\>\"", ",", 
       "\"\<https://www.cnet.com/news/bitcoin-ethereum-prices-in-freefall-as-\
china-plans-crackdown-on-mining-and-trading/#ftag=CAD590a51e\>\""}], "}"}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dsEventData", "=", 
   RowBox[{
    RowBox[{"Dataset", "[", "lsEventData", "]"}], "[", 
    RowBox[{"All", ",", 
     RowBox[{
      RowBox[{"AssociationThread", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<Date\>\"", ",", "\"\<Event\>\"", ",", "\"\<URL\>\""}], 
         "}"}], ",", "#"}], "]"}], "&"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dsEventData", "=", 
   RowBox[{"dsEventData", "[", 
    RowBox[{"All", ",", 
     RowBox[{
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"Prepend", "[", 
         RowBox[{"#", ",", 
          RowBox[{"\"\<DateObject\>\"", "->", 
           RowBox[{"DateObject", "[", "#Date", "]"}]}]}], "]"}], ",", 
        RowBox[{"<|", 
         RowBox[{"\"\<URL\>\"", "->", 
          RowBox[{"URL", "[", "#URL", "]"}]}], "|>"}]}], "]"}], "&"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"dsEventData", "=", 
  RowBox[{"dsEventData", "[", 
   RowBox[{"SortBy", "[", 
    RowBox[{"#DateObject", "&"}], "]"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.832909784094266*^9, 3.8329098705203733`*^9}, {
  3.832909906306554*^9, 3.832909927903228*^9}, {3.832909960861928*^9, 
  3.832909969070458*^9}, {3.8329100029025097`*^9, 3.8329100865665417`*^9}, {
  3.832910161717767*^9, 3.83291022602199*^9}, {3.832910256151451*^9, 
  3.832910286526184*^9}, {3.832910411727868*^9, 3.832910436028307*^9}, {
  3.832910572738954*^9, 3.8329106794786797`*^9}, {3.832913030187091*^9, 
  3.8329130672233562`*^9}, {3.832913124152315*^9, 3.832913124432664*^9}, {
  3.832913632908598*^9, 3.8329136601330833`*^9}, {3.8332789590754213`*^9, 
  3.833278959131342*^9}, {3.8333067091551647`*^9, 3.833306738441689*^9}, {
  3.833306777147895*^9, 3.833306796262949*^9}},
 CellLabel->"In[153]:=",
 CellID->686443677,ExpressionUUID->"9c4ffbe9-0434-4bee-b660-87bad262e65c"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|
       "DateObject" -> DateObject[{2021, 5, 19}, "Day"], "Date" -> 
        "May 19, 2021", "Event" -> 
        "Bitcoin, Ethereum prices in free fall as China plans crackdown on \
mining and trading", "URL" -> 
        URL["https://www.cnet.com/news/bitcoin-ethereum-prices-in-freefall-as-\
china-plans-crackdown-on-mining-and-trading/#ftag=CAD590a51e"]|>, <|
       "DateObject" -> DateObject[{2021, 5, 28}, "Day"], "Date" -> 
        "May 28, 2021", "Event" -> 
        "Iran Bans Crypto Mining After Months of Blackouts", "URL" -> 
        URL["https://gizmodo.com/iran-bans-crypto-mining-after-months-of-\
blackouts-1846991039"]|>, <|
       "DateObject" -> DateObject[{2021, 6, 4}, "Day"], "Date" -> 
        "June 4, 2021", "Event" -> 
        "Start of Bitcoin 2021: World\[CloseCurlyQuote]s Largest \
Cryptocurrency Conference Coming To Wynwood", "URL" -> 
        URL["https://miami.cbslocal.com/2021/06/04/bitcoin-2021-worlds-\
largest-cryptocurrency-conference-coming-to-wynwood/"]|>, <|
       "DateObject" -> DateObject[{2021, 6, 6}, "Day"], "Date" -> 
        "June 6, 2021", "Event" -> 
        "End of Bitcoin 2021: World\[CloseCurlyQuote]s Largest Cryptocurrency \
Conference Coming To Wynwood", "URL" -> 
        URL["https://miami.cbslocal.com/2021/06/04/bitcoin-2021-worlds-\
largest-cryptocurrency-conference-coming-to-wynwood/"]|>, <|
       "DateObject" -> DateObject[{2021, 6, 8}, "Day"], "Date" -> 
        "June 8, 2021", "Event" -> 
        "El Salvador Becomes First Country To Adopt Bitcoin as Legal Tender \
After Passing Law", "URL" -> 
        URL["https://www.cnbc.com/2021/06/09/el-salvador-proposes-law-to-make-\
bitcoin-legal-tender.html"]|>, <|
       "DateObject" -> DateObject[{2021, 6, 8}, "Day"], "Date" -> 
        "June 8, 2021", "Event" -> 
        "US recovers millions in cryptocurrency paid to Colonial Pipeline \
ransomware hackers", "URL" -> 
        URL["https://edition.cnn.com/2021/06/07/politics/colonial-pipeline-\
ransomware-recovered/"]|>, <|
       "DateObject" -> DateObject[{2021, 6, 10}, "Day"], "Date" -> 
        "Jun 10, 2021", "Event" -> 
        "Global banking regulators call for toughest rules for \
cryptocurrencies", "URL" -> 
        URL["https://www.theguardian.com/technology/2021/jun/10/global-\
banking-regulators-cryptocurrencies-bitcoin"]|>, <|
       "DateObject" -> DateObject[{2021, 6, 10}, "Day"], "Date" -> 
        "June 10, 2021", "Event" -> 
        "IMF sees legal, economic issues with El Salvador's bitcoin move", 
        "URL" -> URL[
         "https://www.reuters.com/business/finance/imf-sees-legal-economic-\
issues-with-el-salvador-bitcoin-move-2021-06-10/"]|>, <|
       "DateObject" -> DateObject[{2021, 6, 18}, "Day"], "Date" -> 
        "Jun 18, 2021", "Event" -> 
        "China to shut down over 90% of its Bitcoin mining capacity after \
local bans", "URL" -> 
        URL["https://www.globaltimes.cn/page/202106/1226598.shtml"]|>}, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "DateObject"} -> 
        1, {All, "Date"} -> 1, {All, "Event"} -> 1, {All, "URL"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "DateObject" -> TypeSystem`PackageScope`AtomShape[75], "Date" -> 
            TypeSystem`PackageScope`AtomShape[145.60000000000002`], "Event" -> 
            TypeSystem`PackageScope`AtomShape[560.], "URL" -> 
            TypeSystem`PackageScope`AtomShape[60]|>], 
          DirectedInfinity[1], 4, {All}]], 9, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"DateObject", "Date", "Event", "URL"}, {
         TypeSystem`Atom[DateObject], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[URL]}], 9], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "DateObject"} -> 
        1, {All, "Date"} -> 1, {All, "Event"} -> 1, {All, "URL"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "DateObject" -> TypeSystem`PackageScope`AtomShape[75], "Date" -> 
            TypeSystem`PackageScope`AtomShape[145.60000000000002`], "Event" -> 
            TypeSystem`PackageScope`AtomShape[560.], "URL" -> 
            TypeSystem`PackageScope`AtomShape[60]|>], 
          DirectedInfinity[1], 4, {All}]], 9, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"DateObject", "Date", "Event", "URL"}, {
         TypeSystem`Atom[DateObject], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[URL]}], 9], "Path" -> {}, "DisplayedRowCount" -> 9, 
     "DisplayedColumnCount" -> 4, "DataRowCount" -> 9, "DataColumnCount" -> 4,
      "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["DateObject", 
                  Style[
                  "DateObject", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "DateObject"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "DateObject"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Date", 
                  Style[
                  "Date", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Date"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Date"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Event", 
                  Style[
                  "Event", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Event"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Event"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["URL", 
                  Style[
                  "URL", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "URL"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "URL"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Wed 19 May 2021\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["DateObject"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["May 19, 2021", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{145.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "Bitcoin, Ethereum prices in free fall as China plans crackdown \
on mining and trading", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Event"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Hyperlink[
               "https://www.cnet.com/news/bitcoin-ethereum-prices-...", 
                URL[
                "https://www.cnet.com/news/bitcoin-ethereum-prices-in-\
freefall-as-china-plans-crackdown-on-mining-and-trading/#ftag=CAD590a51e"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["URL"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Fri 28 May 2021\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["DateObject"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["May 28, 2021", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{145.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "Iran Bans Crypto Mining After Months of Blackouts", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Event"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Hyperlink[
               "https://gizmodo.com/iran-bans-crypto-mining-after-...", 
                URL[
                "https://gizmodo.com/iran-bans-crypto-mining-after-months-of-\
blackouts-1846991039"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["URL"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Fri 4 Jun 2021\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["DateObject"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["June 4, 2021", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{145.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "Start of Bitcoin 2021: World\[CloseCurlyQuote]s Largest \
Cryptocurrency Conference Coming To Wynwood", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Event"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Hyperlink[
               "https://miami.cbslocal.com/2021/06/04/bitcoin-2021...", 
                URL[
                "https://miami.cbslocal.com/2021/06/04/bitcoin-2021-worlds-\
largest-cryptocurrency-conference-coming-to-wynwood/"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["URL"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Sun 6 Jun 2021\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["DateObject"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["June 6, 2021", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{145.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "End of Bitcoin 2021: World\[CloseCurlyQuote]s Largest \
Cryptocurrency Conference Coming To Wynwood", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Event"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Hyperlink[
               "https://miami.cbslocal.com/2021/06/04/bitcoin-2021...", 
                URL[
                "https://miami.cbslocal.com/2021/06/04/bitcoin-2021-worlds-\
largest-cryptocurrency-conference-coming-to-wynwood/"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["URL"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Tue 8 Jun 2021\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["DateObject"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["June 8, 2021", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{145.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "El Salvador Becomes First Country To Adopt Bitcoin as Legal \
Tender After Passing Law", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Event"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Hyperlink[
               "https://www.cnbc.com/2021/06/09/el-salvador-propos...", 
                URL[
                "https://www.cnbc.com/2021/06/09/el-salvador-proposes-law-to-\
make-bitcoin-legal-tender.html"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["URL"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Tue 8 Jun 2021\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["DateObject"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["June 8, 2021", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{145.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "US recovers millions in cryptocurrency paid to Colonial \
Pipeline ransomware hackers", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Event"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Hyperlink[
               "https://edition.cnn.com/2021/06/07/politics/coloni...", 
                URL[
                "https://edition.cnn.com/2021/06/07/politics/colonial-\
pipeline-ransomware-recovered/"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["URL"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Thu 10 Jun 2021\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["DateObject"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Jun 10, 2021", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{145.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "Global banking regulators call for toughest rules for \
cryptocurrencies", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Event"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Hyperlink[
               "https://www.theguardian.com/technology/2021/jun/10...", 
                URL[
                "https://www.theguardian.com/technology/2021/jun/10/global-\
banking-regulators-cryptocurrencies-bitcoin"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["URL"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Thu 10 Jun 2021\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["DateObject"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["June 10, 2021", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{145.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "IMF sees legal, economic issues with El Salvador's bitcoin \
move", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Event"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Hyperlink[
               "https://www.reuters.com/business/finance/imf-sees-...", 
                URL[
                "https://www.reuters.com/business/finance/imf-sees-legal-\
economic-issues-with-el-salvador-bitcoin-move-2021-06-10/"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["URL"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Fri 18 Jun 2021\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["DateObject"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Jun 18, 2021", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{145.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "China to shut down over 90% of its Bitcoin mining capacity \
after local bans", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Event"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Hyperlink[
               "https://www.globaltimes.cn/page/202106/1226598.sht...", 
                URL["https://www.globaltimes.cn/page/202106/1226598.shtml"]], 
               
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["URL"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{1176., {141.8544921875, 147.1455078125}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{1176., {141.8544921875, 147.1455078125}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.890858736905614*^9},
 CellLabel->"Out[156]=",
 CellID->1019271023,ExpressionUUID->"5e08e715-e29c-4ce6-9bf1-434cc77a636d"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Cryptocurrency time series with events", "Section",
 CellChangeTimes->{{3.8329109612358503`*^9, 3.832910965421047*^9}, {
  3.833279002207706*^9, 3.833279028398674*^9}},
 CellID->776727655,ExpressionUUID->"1a46493e-7bca-4500-9a00-ef62a8fde5c0"],

Cell["\<\
In this section we discuss possible correlation and causation effects of \
reported cryptocurrency events. \
\>", "Text",
 CellChangeTimes->{{3.833284061931422*^9, 3.8332841167207937`*^9}, {
  3.833293052183228*^9, 3.833293061767995*^9}},
 CellID->2056091119,ExpressionUUID->"feda22b3-fc79-4c2a-9400-284bf52b1cc6"],

Cell[TextData[{
 StyleBox["Remark:",
  FontWeight->"Bold"],
 " The discussion is based on time series and events only, without \
considering other operational properties of the cryptocurrencies."
}], "Text",
 CellChangeTimes->{{3.833293063534253*^9, 3.833293073591934*^9}, {
  3.833368590241981*^9, 3.833368672030905*^9}},
 CellID->1564073156,ExpressionUUID->"593e89ab-c8c8-4947-8389-c2001992b35d"],

Cell[CellGroupData[{

Cell["Here is a date range:", "Text",
 CellChangeTimes->{{3.8332835074302893`*^9, 3.833283542949266*^9}},
 CellID->30209965,ExpressionUUID->"c2d08032-82fd-4e19-8b04-163fb3098006"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dateRange", "=", 
   RowBox[{"{", 
    RowBox[{"\"\<May 15 2021\>\"", ",", "\"\<Jun 21 2021\>\""}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8332795463311577`*^9, 3.833279553354765*^9}, {
  3.833283535309442*^9, 3.8332835367392387`*^9}, {3.83328378500773*^9, 
  3.833283813831115*^9}, {3.833286717019003*^9, 3.833286792798235*^9}, {
  3.833290871031128*^9, 3.833290871559267*^9}},
 CellLabel->"In[157]:=",
 CellID->932741063,ExpressionUUID->"b12719d0-6032-441a-ae03-cc7a75e33146"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Here get time series for the daily opening and closing prices for the \
selected date range:\
\>", "Text",
 CellChangeTimes->{{3.833283873535632*^9, 3.833283887632092*^9}, {
  3.833283986635614*^9, 3.8332839999656982`*^9}, {3.8332848486788483`*^9, 
  3.833284854033263*^9}},
 CellID->2095906388,ExpressionUUID->"3b8c0d35-6466-4b82-bb08-5eb5632653bb"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"aBTCPrices", "=", 
   RowBox[{"CryptocurrencyData", "[", 
    RowBox[{"\"\<BTC\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Open\>\"", ",", "\"\<Close\>\""}], "}"}], ",", 
     "dateRange"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"aETHPrices", "=", 
   RowBox[{"CryptocurrencyData", "[", 
    RowBox[{"\"\<ETH\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Open\>\"", ",", "\"\<Close\>\""}], "}"}], ",", 
     "dateRange"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"aCCVolume", "=", 
   RowBox[{"CryptocurrencyData", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<BTC\>\"", ",", "\"\<ETH\>\""}], "}"}], ",", 
     "\"\<Volume\>\"", ",", "dateRange"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8332791690311327`*^9, 3.833279253334968*^9}, {
   3.833279484313614*^9, 3.833279500222052*^9}, {3.833279559611875*^9, 
   3.833279569285037*^9}, {3.833279714312204*^9, 3.8332797145475616`*^9}, 
   3.833283807086788*^9, {3.833284645687419*^9, 3.833284660658906*^9}, {
   3.833284691283003*^9, 3.8332847222779207`*^9}, {3.833284785211611*^9, 
   3.8332847853675537`*^9}, {3.8332858629874153`*^9, 3.833285897750174*^9}, {
   3.833367970486123*^9, 3.833367980960536*^9}, {3.8333681442665*^9, 
   3.833368156277917*^9}, {3.8908586853578863`*^9, 3.8908586853588047`*^9}},
 CellLabel->"In[158]:=",
 CellID->724401375,ExpressionUUID->"7311a2c2-de6c-415a-a491-5066614c5451"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Here are the summaries for prices:", "Text",
 CellChangeTimes->{{3.83336835982257*^9, 3.833368367630609*^9}, {
  3.8333685617658873`*^9, 3.8333685701822643`*^9}},
 CellID->929114782,ExpressionUUID->"f8465fe3-e8d2-4e80-9695-4fec884d23b8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<GridTableForm\>\"", "]"}], "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"ResourceFunction", "[", "\"\<RecordsSummary\>\"", "]"}], "[", 
        RowBox[{
         RowBox[{"#", "[", "\"\<Values\>\"", "]"}], ",", "\"\<USD\>\""}], 
        "]"}], "&"}], ",", "#"}], "]"}], "&"}], "/@", 
   RowBox[{"<|", 
    RowBox[{
     RowBox[{"\"\<BTC\>\"", "->", "aBTCPrices"}], ",", 
     RowBox[{"\"\<ETH\>\"", "->", "aETHPrices"}]}], "|>"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.833368297541823*^9, 3.833368331618724*^9}, {
  3.833368388770632*^9, 3.833368487010221*^9}},
 CellLabel->"In[161]:=",
 CellID->1278543737,ExpressionUUID->"e7d23a27-937c-45ab-a444-215ea41f0e81"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"#\"\>",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["\<\"BTC\"\>",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["\<\"ETH\"\>",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]]},
    {"1", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{"\<\"Close\"\>", "\[Rule]", 
        RowBox[{"{", 
         TagBox[GridBox[{
            {
             StyleBox["\<\"1 USD\"\>",
              StripOnInput->False,
              LineColor->RGBColor[0, 0, 1],
              FrontFaceColor->RGBColor[0, 0, 1],
              BackFaceColor->RGBColor[0, 0, 1],
              GraphicsColor->RGBColor[0, 0, 1],
              FontFamily->"Times",
              FontColor->RGBColor[0, 0, 1]]},
            {
             TagBox[GridBox[{
                {"\<\"Min\"\>", "31676.693359`"},
                {"\<\"1st Qu\"\>", "35697.605469`"},
                {"\<\"Median\"\>", "37333.6269535`"},
                {"\<\"Mean\"\>", "37786.08259665788`"},
                {"\<\"3rd Qu\"\>", "39097.859375`"},
                {"\<\"Max\"\>", "46760.1875`"}
               },
               AutoDelete->False,
               GridBoxAlignment->{"Columns" -> {{Left}}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
              "Grid"]}
           },
           DefaultBaseStyle->"Column",
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"], "}"}]}], ",", 
       RowBox[{"\<\"Open\"\>", "\[Rule]", 
        RowBox[{"{", 
         TagBox[GridBox[{
            {
             StyleBox["\<\"1 USD\"\>",
              StripOnInput->False,
              LineColor->RGBColor[0, 0, 1],
              FrontFaceColor->RGBColor[0, 0, 1],
              BackFaceColor->RGBColor[0, 0, 1],
              GraphicsColor->RGBColor[0, 0, 1],
              FontFamily->"Times",
              FontColor->RGBColor[0, 0, 1]]},
            {
             TagBox[GridBox[{
                {"\<\"Min\"\>", "33416.976563`"},
                {"\<\"1st Qu\"\>", "35684.15625`"},
                {"\<\"Median\"\>", "37380.2734375`"},
                {"\<\"Mean\"\>", "38250.74259876315`"},
                {"\<\"3rd Qu\"\>", "39242.484375`"},
                {"\<\"Max\"\>", "49855.496094`"}
               },
               AutoDelete->False,
               GridBoxAlignment->{"Columns" -> {{Left}}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
              "Grid"]}
           },
           DefaultBaseStyle->"Column",
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"], "}"}]}]}], "\[RightAssociation]"}], 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{"\<\"Close\"\>", "\[Rule]", 
        RowBox[{"{", 
         TagBox[GridBox[{
            {
             StyleBox["\<\"1 USD\"\>",
              StripOnInput->False,
              LineColor->RGBColor[0, 0, 1],
              FrontFaceColor->RGBColor[0, 0, 1],
              BackFaceColor->RGBColor[0, 0, 1],
              GraphicsColor->RGBColor[0, 0, 1],
              FontFamily->"Times",
              FontColor->RGBColor[0, 0, 1]]},
            {
             TagBox[GridBox[{
                {"\<\"Min\"\>", "1888.44751`"},
                {"\<\"1st Qu\"\>", "2372.001953`"},
                {"\<\"Median\"\>", "2564.0771485`"},
                {"\<\"Mean\"\>", "2600.8778653947365`"},
                {"\<\"3rd Qu\"\>", "2714.945313`"},
                {"\<\"Max\"\>", "3638.12207`"}
               },
               AutoDelete->False,
               GridBoxAlignment->{"Columns" -> {{Left}}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
              "Grid"]}
           },
           DefaultBaseStyle->"Column",
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"], "}"}]}], ",", 
       RowBox[{"\<\"Open\"\>", "\[Rule]", 
        RowBox[{"{", 
         TagBox[GridBox[{
            {
             StyleBox["\<\"1 USD\"\>",
              StripOnInput->False,
              LineColor->RGBColor[0, 0, 1],
              FrontFaceColor->RGBColor[0, 0, 1],
              BackFaceColor->RGBColor[0, 0, 1],
              GraphicsColor->RGBColor[0, 0, 1],
              FontFamily->"Times",
              FontColor->RGBColor[0, 0, 1]]},
            {
             TagBox[GridBox[{
                {"\<\"Min\"\>", "2099.936035`"},
                {"\<\"1st Qu\"\>", "2374.586914`"},
                {"\<\"Median\"\>", "2591.182495`"},
                {"\<\"Mean\"\>", "2656.977372026316`"},
                {"\<\"3rd Qu\"\>", "2713.047363`"},
                {"\<\"Max\"\>", "4075.95166`"}
               },
               AutoDelete->False,
               GridBoxAlignment->{"Columns" -> {{Left}}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
              "Grid"]}
           },
           DefaultBaseStyle->"Column",
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"], "}"}]}]}], "\[RightAssociation]"}]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxBackground->{"Columns" -> {{Automatic}}, "Rows" -> {
       GrayLevel[1], 
       GrayLevel[0.96]}},
   GridBoxDividers->{
    "ColumnsIndexed" -> {
      1 -> GrayLevel[0], 2 -> GrayLevel[0], 3 -> GrayLevel[0.8], 4 -> 
       GrayLevel[0.8], 4 -> GrayLevel[0]}, 
     "Rows" -> {True, True, {False}, True}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.8908587370461893`*^9},
 CellLabel->"Out[161]=",
 CellID->411031442,ExpressionUUID->"3b1f8f44-0817-4806-984f-00ac033e789c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Here are the summaries for trading volumes:", "Text",
 CellChangeTimes->{{3.83336835982257*^9, 3.833368367630609*^9}, {
  3.8333685617658873`*^9, 3.833368580521399*^9}},
 CellID->763215877,ExpressionUUID->"d6654746-6a5b-4ea7-9566-2721b53a63d7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ResourceFunction", "[", "\"\<RecordsSummary\>\"", "]"}], "[", 
    RowBox[{
     RowBox[{"#", "[", "\"\<Values\>\"", "]"}], ",", "\"\<USD\>\""}], "]"}], 
   "&"}], "/@", "aCCVolume"}]], "Input",
 CellChangeTimes->{{3.833368508666531*^9, 3.833368544509305*^9}},
 CellLabel->"In[162]:=",
 CellID->449421208,ExpressionUUID->"1490ce37-0cfd-4431-a3bc-4c2a56a8cd08"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"BTC\"\>", "\[Rule]", 
    RowBox[{"{", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"1 USD\"\>",
          StripOnInput->False,
          LineColor->RGBColor[0, 0, 1],
          FrontFaceColor->RGBColor[0, 0, 1],
          BackFaceColor->RGBColor[0, 0, 1],
          GraphicsColor->RGBColor[0, 0, 1],
          FontFamily->"Times",
          FontColor->RGBColor[0, 0, 1]]},
        {
         TagBox[GridBox[{
            {"\<\"Min\"\>", "28913440585"},
            {"\<\"1st Qu\"\>", "36664034054"},
            {"\<\"Median\"\>", "4.33935007875`*^10"},
            {"\<\"Mean\"\>", "5.0187266785052635`*^10"},
            {"\<\"3rd Qu\"\>", "56211915803"},
            {"\<\"Max\"\>", "126358098747"}
           },
           AutoDelete->False,
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Grid"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], "}"}]}], ",", 
   RowBox[{"\<\"ETH\"\>", "\[Rule]", 
    RowBox[{"{", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"1 USD\"\>",
          StripOnInput->False,
          LineColor->RGBColor[0, 0, 1],
          FrontFaceColor->RGBColor[0, 0, 1],
          BackFaceColor->RGBColor[0, 0, 1],
          GraphicsColor->RGBColor[0, 0, 1],
          FontFamily->"Times",
          FontColor->RGBColor[0, 0, 1]]},
        {
         TagBox[GridBox[{
            {"\<\"Min\"\>", "18765854896"},
            {"\<\"1st Qu\"\>", "26964576331"},
            {"\<\"Median\"\>", "3.21905092165`*^10"},
            {"\<\"Mean\"\>", "3.652232755073684`*^10"},
            {"\<\"3rd Qu\"\>", "42422321751"},
            {"\<\"Max\"\>", "84482912776"}
           },
           AutoDelete->False,
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Grid"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], "}"}]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.890858737061561*^9},
 CellLabel->"Out[162]=",
 CellID->1898036942,ExpressionUUID->"87acab8e-4eac-4a97-a4b8-c744b85b1628"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Here we plot the cryptocurrency events with together with the Bitcoin (BTC) \
price time series:\
\>", "Text",
 CellChangeTimes->{{3.833284015636484*^9, 3.8332840571280813`*^9}, {
  3.8332845657736063`*^9, 3.833284569081224*^9}, {3.83329154417391*^9, 
  3.8332916016834183`*^9}},
 CellID->722256357,ExpressionUUID->"6fab0050-1b7a-4791-9718-a94ddce0c4d6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CryptocurrencyPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"aBTCPrices", ",", "dsEventData"}], "}"}], ",", 
   RowBox[{"PlotLabel", "->", "\"\<BTC daily prices\>\""}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "1200"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8329250699410267`*^9, 3.832925089932872*^9}, {
   3.832925162599147*^9, 3.832925186178804*^9}, {3.832926507630858*^9, 
   3.8329265165848722`*^9}, {3.832926553329215*^9, 3.832926553665447*^9}, {
   3.8329289581758842`*^9, 3.832928993184001*^9}, {3.832929100972458*^9, 
   3.8329291013539753`*^9}, {3.833036533708997*^9, 3.833036534191513*^9}, {
   3.833036950184721*^9, 3.833036970391932*^9}, {3.833037391668231*^9, 
   3.833037394028474*^9}, {3.833279032550932*^9, 3.8332790400325527`*^9}, {
   3.833279156482471*^9, 3.8332791659327803`*^9}, {3.833279262706905*^9, 
   3.833279272584244*^9}, {3.833279475819562*^9, 3.833279475987836*^9}, {
   3.833279655418065*^9, 3.8332796557316723`*^9}, {3.833279688663138*^9, 
   3.833279689189535*^9}, 3.833285210560112*^9, {3.833285721190391*^9, 
   3.833285726060215*^9}, 3.8332859054475937`*^9, {3.833286076074914*^9, 
   3.833286107923925*^9}, {3.833286228018773*^9, 3.83328622843347*^9}, {
   3.833286976201148*^9, 3.8332869945955057`*^9}, {3.833287029154683*^9, 
   3.833287039245755*^9}, 3.8333679329907618`*^9, {3.8333680708740063`*^9, 
   3.8333680753621902`*^9}, 3.833372641052965*^9},
 CellLabel->"In[163]:=",
 CellID->1385019255,ExpressionUUID->"a5384dc6-d7ad-4942-babe-799fc936be81"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.011000000000000001`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGBQA2IQDQQbDDvfOIIYbFefOQCpB9FAvkUbwwPG9WC+QBuE
n2Dg9BTEd9gAlV/z+QmIX3ALyD9R+V/eT/ARiL+ApQvMn3/95WMQ/4IehC8v
Zg6WZ4gE8vN5GB1EQsB8g2ao+qBfD0D8hLVdEPvsn4HlJ1yH6nc/AOYfYOyG
yB/TB5v/Qbsb4v75R8DyCmFQeeO8hyB+QEM3RD/Tc7D5Daug/CPZYPkNV6Dq
Z1uB9T/4B5GfP/clWF5Aswfs3gNPI8DyDsE9YPsaJFTB9hfUQvgMZ5kh/l/e
A9H/Lxqs/8JFCF/+TBOYz/AHKi+WDHaPgVovNDwiIP4P6IWEr7INxP9VvRD9
l1+D9R9YAlF/4AzEvR/O9ULcIxADllf4CeVbi4PdF6DcBzHffzGY3+DbB7H/
xC4wf0N5H8T9STsh/l8IkZffMAXMFzjTB3FPeiXYfIdvUP7vZDC/QKEfYp8n
JLwXeAH5kbn/4nXe33MAAG8f8fw=
          "]]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.011000000000000001`], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGBQA2IQDQQbDDvfOFq0MTx4H/7CAch/EA3hJ0w5/wzEF2gD
8vN5GA/8WQnmO2yAqme0eQriF9yCyDvI/3gC4i9g6YLoN/30EMS/oAflz7v0
GMRniATyQXSi/SMQ36AZKp8XDOYnrAXyT1T+n9/98QGIP+E6VH3lR7D8AcZu
CF9kP5j/QRvCb5hjBDZfIawboj/pLFg+oAGqvjUH7J6GVVD+26dg8zdcgfKD
M8HyD/51Q9yz0xSsX0CzB2J+7WuwvENwD9h8+bfRYPmCWqi8vybY/gXLIXwG
Viaw/IWLUPngKLB+hj9QfkY9mG+g1gtx74Y0sHsSAnqh4RkI8X9VL0T9BkeI
/5dA+AyKEPd8OAfV32INllf4CdVfGQOWD1Dug6iX5wW7r8G3D+K/1L1g/oby
Poh/xOaC+Q8WQtQ3rN0B8f+ZPoh5+bPAfIdvEP0PLjSCzS9Q6IeoT4kF8xd4
9UPco5L+0AEAhkze4A==
          "]]}}}, {{}, {{}, {}}}}, {{}, {{{
         Directive[
          AbsoluteThickness[1.6], 
          GrayLevel[0.5], 
          Opacity[0.3], 
          PointSize[0.0035]], 
         PointBox[{{3.8303712*^9, 33696.560329555556`}, {3.8311488*^9, 
          35716.427300111114`}, {3.8317536*^9, 37736.294270666665`}, {
          3.8319264*^9, 39756.161241222224`}, {3.8320992*^9, 
          41776.02821177778}, {3.8320992*^9, 43795.895182333334`}, {
          3.832272*^9, 45815.76215288889}, {3.832272*^9, 47835.62912344444}, {
          3.8329632*^9, 49855.496094}}]}}, {
        TagBox[{
          Opacity[0.], 
          PointBox[{{3.8303712*^9, 33696.560329555556`}}]}, 
         Annotation[#, {{Callout}, Charting`Private`Tag$2879705, {1}}]& ], 
        TagBox[{
          Opacity[0.], 
          PointBox[{{3.8311488*^9, 35716.427300111114`}}]}, 
         Annotation[#, {{Callout}, Charting`Private`Tag$2879705, {2}}]& ], 
        TagBox[{
          Opacity[0.], 
          PointBox[{{3.8317536*^9, 37736.294270666665`}}]}, 
         Annotation[#, {{Callout}, Charting`Private`Tag$2879705, {3}}]& ], 
        TagBox[{
          Opacity[0.], 
          PointBox[{{3.8319264*^9, 39756.161241222224`}}]}, 
         Annotation[#, {{Callout}, Charting`Private`Tag$2879705, {4}}]& ], 
        TagBox[{
          Opacity[0.], 
          PointBox[{{3.8320992*^9, 41776.02821177778}}]}, 
         Annotation[#, {{Callout}, Charting`Private`Tag$2879705, {5}}]& ], 
        TagBox[{
          Opacity[0.], 
          PointBox[{{3.8320992*^9, 43795.895182333334`}}]}, 
         Annotation[#, {{Callout}, Charting`Private`Tag$2879705, {6}}]& ], 
        TagBox[{
          Opacity[0.], 
          PointBox[{{3.832272*^9, 45815.76215288889}}]}, 
         Annotation[#, {{Callout}, Charting`Private`Tag$2879705, {7}}]& ], 
        TagBox[{
          Opacity[0.], 
          PointBox[{{3.832272*^9, 47835.62912344444}}]}, 
         Annotation[#, {{Callout}, Charting`Private`Tag$2879705, {8}}]& ], 
        TagBox[{
          Opacity[0.], 
          PointBox[{{3.8329632*^9, 49855.496094}}]}, 
         Annotation[#, {{Callout}, Charting`Private`Tag$2879705, {
           9}}]& ]}}, {{{}, {{}, {{
           GraphicsGroupBox[{{
              Directive[
               AbsoluteThickness[4], 
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]], 
              CapForm["Butt"], 
              JoinForm["Round"], 
              BSplineCurveBox[{
                Offset[{3., 0.}, {3.83037616125*^9, 33696.560329555556`}], 
                Offset[{8., 0.}, {3.83037616125*^9, 33696.560329555556`}], 
                Offset[{10., 0.}, {3.83037616125*^9, 33696.560329555556`}], 
                Offset[{12., 0.}, {3.83037616125*^9, 33696.560329555556`}], 
                
                Offset[{12., 0.}, {3.83037616125*^9, 
                 33696.560329555556`}]}]}, {
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]], 
              BSplineCurveBox[{
                Offset[{3., 0.}, {3.83037616125*^9, 33696.560329555556`}], 
                Offset[{8., 0.}, {3.83037616125*^9, 33696.560329555556`}], 
                Offset[{10., 0.}, {3.83037616125*^9, 33696.560329555556`}], 
                Offset[{12., 0.}, {3.83037616125*^9, 33696.560329555556`}], 
                
                Offset[{12., 0.}, {3.83037616125*^9, 
                 33696.560329555556`}]}]}, {
              FaceForm[
               Directive[
                GrayLevel[1], 
                Opacity[
                 NCache[
                  Rational[2, 3], 0.6666666666666666]]]], 
              EdgeForm[], 
              PolygonBox[{
                
                Offset[{425., 12.000000000000046`}, {3.83037616125*^9, 
                 33696.560329555556`}], 
                
                Offset[{425., -11.999999999999954`}, {3.83037616125*^9, 
                 33696.560329555556`}], 
                
                Offset[{12., -12.000000000000046`}, {3.83037616125*^9, 
                 33696.560329555556`}], 
                
                Offset[{12., 11.999999999999954`}, {3.83037616125*^9, 
                 33696.560329555556`}]}]}, {
              EdgeForm[], 
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]]}, {}, 
             InsetBox[
              FormBox[
               StyleBox[
                RotationBox[
                 ButtonBox[
                  
                  PaneSelectorBox[{
                   False -> StyleBox[
                    "\"Bitcoin, Ethereum prices in free fall as China plans \
crackdown on mining and trading\"", 
                    GrayLevel[0.5], FontSize -> 10, StripOnInput -> False], 
                    True -> StyleBox[
                    "\"Bitcoin, Ethereum prices in free fall as China plans \
crackdown on mining and trading\"", 
                    RGBColor[1, 0.5, 0.5], FontSize -> 10, StripOnInput -> 
                    False]}, 
                   Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                   FrameMargins -> 0], ButtonFunction :> NotebookLocate[{
                    URL[
                    "https://www.cnet.com/news/bitcoin-ethereum-prices-in-\
freefall-as-china-plans-crackdown-on-mining-and-trading/#ftag=CAD590a51e"], 
                    None}], Appearance -> None, Evaluator -> Automatic, 
                  Method -> "Preemptive"], BoxRotation -> 0.], {
                 Opacity[1]}, StripOnInput -> False], TraditionalForm], 
              Offset[{218.5, 0.}, {3.83037616125*^9, 33696.560329555556`}], 
              NCache[
               ImageScaled[{
                 Rational[1, 2], 
                 Rational[1, 2]}], 
               ImageScaled[{0.5, 0.5}]]]}], 
           GraphicsGroupBox[{{
              Directive[
               AbsoluteThickness[4], 
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]], 
              CapForm["Butt"], 
              JoinForm["Round"], 
              BSplineCurveBox[{
                Offset[{3., 0.}, {3.83115376125*^9, 35716.427300111114`}], 
                Offset[{8., 0.}, {3.83115376125*^9, 35716.427300111114`}], 
                Offset[{10., 0.}, {3.83115376125*^9, 35716.427300111114`}], 
                Offset[{12., 0.}, {3.83115376125*^9, 35716.427300111114`}], 
                
                Offset[{12., 0.}, {3.83115376125*^9, 
                 35716.427300111114`}]}]}, {
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]], 
              BSplineCurveBox[{
                Offset[{3., 0.}, {3.83115376125*^9, 35716.427300111114`}], 
                Offset[{8., 0.}, {3.83115376125*^9, 35716.427300111114`}], 
                Offset[{10., 0.}, {3.83115376125*^9, 35716.427300111114`}], 
                Offset[{12., 0.}, {3.83115376125*^9, 35716.427300111114`}], 
                
                Offset[{12., 0.}, {3.83115376125*^9, 
                 35716.427300111114`}]}]}, {
              FaceForm[
               Directive[
                GrayLevel[1], 
                Opacity[
                 NCache[
                  Rational[2, 3], 0.6666666666666666]]]], 
              EdgeForm[], 
              PolygonBox[{
                
                Offset[{263., 12.000000000000028`}, {3.83115376125*^9, 
                 35716.427300111114`}], 
                
                Offset[{263., -11.999999999999972`}, {3.83115376125*^9, 
                 35716.427300111114`}], 
                
                Offset[{12., -12.000000000000028`}, {3.83115376125*^9, 
                 35716.427300111114`}], 
                
                Offset[{12., 11.999999999999972`}, {3.83115376125*^9, 
                 35716.427300111114`}]}]}, {
              EdgeForm[], 
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]]}, {}, 
             InsetBox[
              FormBox[
               StyleBox[
                RotationBox[
                 ButtonBox[
                  
                  PaneSelectorBox[{
                   False -> StyleBox[
                    "\"Iran Bans Crypto Mining After Months of Blackouts\"", 
                    GrayLevel[0.5], FontSize -> 10, StripOnInput -> False], 
                    True -> StyleBox[
                    "\"Iran Bans Crypto Mining After Months of Blackouts\"", 
                    RGBColor[1, 0.5, 0.5], FontSize -> 10, StripOnInput -> 
                    False]}, 
                   Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                   FrameMargins -> 0], ButtonFunction :> NotebookLocate[{
                    URL[
                    "https://gizmodo.com/iran-bans-crypto-mining-after-months-\
of-blackouts-1846991039"], None}], Appearance -> None, Evaluator -> Automatic,
                   Method -> "Preemptive"], BoxRotation -> 0.], {
                 Opacity[1]}, StripOnInput -> False], TraditionalForm], 
              Offset[{137.5, 0.}, {3.83115376125*^9, 35716.427300111114`}], 
              NCache[
               ImageScaled[{
                 Rational[1, 2], 
                 Rational[1, 2]}], 
               ImageScaled[{0.5, 0.5}]]]}], 
           GraphicsGroupBox[{{
              Directive[
               AbsoluteThickness[4], 
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]], 
              CapForm["Butt"], 
              JoinForm["Round"], 
              BSplineCurveBox[{
                Offset[{3., 0.}, {3.83175856125*^9, 37736.294270666665`}], 
                Offset[{8., 0.}, {3.83175856125*^9, 37736.294270666665`}], 
                Offset[{10., 0.}, {3.83175856125*^9, 37736.294270666665`}], 
                Offset[{12., 0.}, {3.83175856125*^9, 37736.294270666665`}], 
                
                Offset[{12., 0.}, {3.83175856125*^9, 
                 37736.294270666665`}]}]}, {
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]], 
              BSplineCurveBox[{
                Offset[{3., 0.}, {3.83175856125*^9, 37736.294270666665`}], 
                Offset[{8., 0.}, {3.83175856125*^9, 37736.294270666665`}], 
                Offset[{10., 0.}, {3.83175856125*^9, 37736.294270666665`}], 
                Offset[{12., 0.}, {3.83175856125*^9, 37736.294270666665`}], 
                
                Offset[{12., 0.}, {3.83175856125*^9, 
                 37736.294270666665`}]}]}, {
              FaceForm[
               Directive[
                GrayLevel[1], 
                Opacity[
                 NCache[
                  Rational[2, 3], 0.6666666666666666]]]], 
              EdgeForm[], 
              PolygonBox[{
                
                Offset[{441., 12.000000000000048`}, {3.83175856125*^9, 
                 37736.294270666665`}], 
                
                Offset[{441., -11.999999999999952`}, {3.83175856125*^9, 
                 37736.294270666665`}], 
                
                Offset[{12., -12.000000000000048`}, {3.83175856125*^9, 
                 37736.294270666665`}], 
                
                Offset[{12., 11.999999999999952`}, {3.83175856125*^9, 
                 37736.294270666665`}]}]}, {
              EdgeForm[], 
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]]}, {}, 
             InsetBox[
              FormBox[
               StyleBox[
                RotationBox[
                 ButtonBox[
                  
                  PaneSelectorBox[{
                   False -> StyleBox[
                    "\"Start of Bitcoin 2021: World\[CloseCurlyQuote]s \
Largest Cryptocurrency Conference Coming To Wynwood\"", 
                    GrayLevel[0.5], FontSize -> 10, StripOnInput -> False], 
                    True -> StyleBox[
                    "\"Start of Bitcoin 2021: World\[CloseCurlyQuote]s \
Largest Cryptocurrency Conference Coming To Wynwood\"", 
                    RGBColor[1, 0.5, 0.5], FontSize -> 10, StripOnInput -> 
                    False]}, 
                   Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                   FrameMargins -> 0], ButtonFunction :> NotebookLocate[{
                    URL[
                    "https://miami.cbslocal.com/2021/06/04/bitcoin-2021-\
worlds-largest-cryptocurrency-conference-coming-to-wynwood/"], None}], 
                  Appearance -> None, Evaluator -> Automatic, Method -> 
                  "Preemptive"], BoxRotation -> 0.], {
                 Opacity[1]}, StripOnInput -> False], TraditionalForm], 
              Offset[{226.5, 0.}, {3.83175856125*^9, 37736.294270666665`}], 
              NCache[
               ImageScaled[{
                 Rational[1, 2], 
                 Rational[1, 2]}], 
               ImageScaled[{0.5, 0.5}]]]}], 
           GraphicsGroupBox[{{
              Directive[
               AbsoluteThickness[4], 
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]], 
              CapForm["Butt"], 
              JoinForm["Round"], 
              BSplineCurveBox[{
                Offset[{3., 0.}, {3.83193136125*^9, 39756.161241222224`}], 
                Offset[{8., 0.}, {3.83193136125*^9, 39756.161241222224`}], 
                Offset[{10., 0.}, {3.83193136125*^9, 39756.161241222224`}], 
                Offset[{12., 0.}, {3.83193136125*^9, 39756.161241222224`}], 
                
                Offset[{12., 0.}, {3.83193136125*^9, 
                 39756.161241222224`}]}]}, {
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]], 
              BSplineCurveBox[{
                Offset[{3., 0.}, {3.83193136125*^9, 39756.161241222224`}], 
                Offset[{8., 0.}, {3.83193136125*^9, 39756.161241222224`}], 
                Offset[{10., 0.}, {3.83193136125*^9, 39756.161241222224`}], 
                Offset[{12., 0.}, {3.83193136125*^9, 39756.161241222224`}], 
                
                Offset[{12., 0.}, {3.83193136125*^9, 
                 39756.161241222224`}]}]}, {
              FaceForm[
               Directive[
                GrayLevel[1], 
                Opacity[
                 NCache[
                  Rational[2, 3], 0.6666666666666666]]]], 
              EdgeForm[], 
              PolygonBox[{
                
                Offset[{435., 12.000000000000046`}, {3.83193136125*^9, 
                 39756.161241222224`}], 
                
                Offset[{435., -11.999999999999954`}, {3.83193136125*^9, 
                 39756.161241222224`}], 
                
                Offset[{12., -12.000000000000046`}, {3.83193136125*^9, 
                 39756.161241222224`}], 
                Offset[{12., 11.999999999999954`}, {3.83193136125*^9, 
                 39756.161241222224`}]}]}, {
              EdgeForm[], 
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]]}, {}, 
             InsetBox[
              FormBox[
               StyleBox[
                RotationBox[
                 ButtonBox[
                  
                  PaneSelectorBox[{
                   False -> StyleBox[
                    "\"End of Bitcoin 2021: World\[CloseCurlyQuote]s Largest \
Cryptocurrency Conference Coming To Wynwood\"", 
                    GrayLevel[0.5], FontSize -> 10, StripOnInput -> False], 
                    True -> StyleBox[
                    "\"End of Bitcoin 2021: World\[CloseCurlyQuote]s Largest \
Cryptocurrency Conference Coming To Wynwood\"", 
                    RGBColor[1, 0.5, 0.5], FontSize -> 10, StripOnInput -> 
                    False]}, 
                   Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                   FrameMargins -> 0], ButtonFunction :> NotebookLocate[{
                    URL[
                    "https://miami.cbslocal.com/2021/06/04/bitcoin-2021-\
worlds-largest-cryptocurrency-conference-coming-to-wynwood/"], None}], 
                  Appearance -> None, Evaluator -> Automatic, Method -> 
                  "Preemptive"], BoxRotation -> 0.], {
                 Opacity[1]}, StripOnInput -> False], TraditionalForm], 
              Offset[{223.5, 0.}, {3.83193136125*^9, 39756.161241222224`}], 
              NCache[
               ImageScaled[{
                 Rational[1, 2], 
                 Rational[1, 2]}], 
               ImageScaled[{0.5, 0.5}]]]}], 
           GraphicsGroupBox[{{
              Directive[
               AbsoluteThickness[4], 
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]], 
              CapForm["Butt"], 
              JoinForm["Round"], 
              BSplineCurveBox[{
                Offset[{3., 0.}, {3.83210416125*^9, 41776.02821177778}], 
                Offset[{8., 0.}, {3.83210416125*^9, 41776.02821177778}], 
                Offset[{10., 0.}, {3.83210416125*^9, 41776.02821177778}], 
                Offset[{12., 0.}, {3.83210416125*^9, 41776.02821177778}], 
                Offset[{12., 0.}, {3.83210416125*^9, 41776.02821177778}]}]}, {
             
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]], 
              BSplineCurveBox[{
                Offset[{3., 0.}, {3.83210416125*^9, 41776.02821177778}], 
                Offset[{8., 0.}, {3.83210416125*^9, 41776.02821177778}], 
                Offset[{10., 0.}, {3.83210416125*^9, 41776.02821177778}], 
                Offset[{12., 0.}, {3.83210416125*^9, 41776.02821177778}], 
                Offset[{12., 0.}, {3.83210416125*^9, 41776.02821177778}]}]}, {
             
              FaceForm[
               Directive[
                GrayLevel[1], 
                Opacity[
                 NCache[
                  Rational[2, 3], 0.6666666666666666]]]], 
              EdgeForm[], 
              PolygonBox[{
                
                Offset[{437., 12.000000000000048`}, {3.83210416125*^9, 
                 41776.02821177778}], 
                
                Offset[{437., -11.999999999999952`}, {3.83210416125*^9, 
                 41776.02821177778}], 
                
                Offset[{12., -12.000000000000048`}, {3.83210416125*^9, 
                 41776.02821177778}], 
                
                Offset[{12., 11.999999999999952`}, {3.83210416125*^9, 
                 41776.02821177778}]}]}, {
              EdgeForm[], 
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]]}, {}, 
             InsetBox[
              FormBox[
               StyleBox[
                RotationBox[
                 ButtonBox[
                  
                  PaneSelectorBox[{
                   False -> StyleBox[
                    "\"El Salvador Becomes First Country To Adopt Bitcoin as \
Legal Tender After Passing Law\"", 
                    GrayLevel[0.5], FontSize -> 10, StripOnInput -> False], 
                    True -> StyleBox[
                    "\"El Salvador Becomes First Country To Adopt Bitcoin as \
Legal Tender After Passing Law\"", 
                    RGBColor[1, 0.5, 0.5], FontSize -> 10, StripOnInput -> 
                    False]}, 
                   Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                   FrameMargins -> 0], ButtonFunction :> NotebookLocate[{
                    URL[
                    "https://www.cnbc.com/2021/06/09/el-salvador-proposes-law-\
to-make-bitcoin-legal-tender.html"], None}], Appearance -> None, Evaluator -> 
                  Automatic, Method -> "Preemptive"], BoxRotation -> 0.], {
                 Opacity[1]}, StripOnInput -> False], TraditionalForm], 
              Offset[{224.5, 0.}, {3.83210416125*^9, 41776.02821177778}], 
              NCache[
               ImageScaled[{
                 Rational[1, 2], 
                 Rational[1, 2]}], 
               ImageScaled[{0.5, 0.5}]]]}], 
           GraphicsGroupBox[{{
              Directive[
               AbsoluteThickness[4], 
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]], 
              CapForm["Butt"], 
              JoinForm["Round"], 
              BSplineCurveBox[{
                Offset[{3., 0.}, {3.83210416125*^9, 43795.895182333334`}], 
                Offset[{8., 0.}, {3.83210416125*^9, 43795.895182333334`}], 
                Offset[{10., 0.}, {3.83210416125*^9, 43795.895182333334`}], 
                Offset[{12., 0.}, {3.83210416125*^9, 43795.895182333334`}], 
                
                Offset[{12., 0.}, {3.83210416125*^9, 
                 43795.895182333334`}]}]}, {
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]], 
              BSplineCurveBox[{
                Offset[{3., 0.}, {3.83210416125*^9, 43795.895182333334`}], 
                Offset[{8., 0.}, {3.83210416125*^9, 43795.895182333334`}], 
                Offset[{10., 0.}, {3.83210416125*^9, 43795.895182333334`}], 
                Offset[{12., 0.}, {3.83210416125*^9, 43795.895182333334`}], 
                
                Offset[{12., 0.}, {3.83210416125*^9, 
                 43795.895182333334`}]}]}, {
              FaceForm[
               Directive[
                GrayLevel[1], 
                Opacity[
                 NCache[
                  Rational[2, 3], 0.6666666666666666]]]], 
              EdgeForm[], 
              PolygonBox[{
                
                Offset[{429., 12.000000000000046`}, {3.83210416125*^9, 
                 43795.895182333334`}], 
                
                Offset[{429., -11.999999999999954`}, {3.83210416125*^9, 
                 43795.895182333334`}], 
                
                Offset[{12., -12.000000000000046`}, {3.83210416125*^9, 
                 43795.895182333334`}], 
                
                Offset[{12., 11.999999999999954`}, {3.83210416125*^9, 
                 43795.895182333334`}]}]}, {
              EdgeForm[], 
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]]}, {}, 
             InsetBox[
              FormBox[
               StyleBox[
                RotationBox[
                 ButtonBox[
                  
                  PaneSelectorBox[{
                   False -> StyleBox[
                    "\"US recovers millions in cryptocurrency paid to \
Colonial Pipeline ransomware hackers\"", 
                    GrayLevel[0.5], FontSize -> 10, StripOnInput -> False], 
                    True -> StyleBox[
                    "\"US recovers millions in cryptocurrency paid to \
Colonial Pipeline ransomware hackers\"", 
                    RGBColor[1, 0.5, 0.5], FontSize -> 10, StripOnInput -> 
                    False]}, 
                   Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                   FrameMargins -> 0], ButtonFunction :> NotebookLocate[{
                    URL[
                    "https://edition.cnn.com/2021/06/07/politics/colonial-\
pipeline-ransomware-recovered/"], None}], Appearance -> None, Evaluator -> 
                  Automatic, Method -> "Preemptive"], BoxRotation -> 0.], {
                 Opacity[1]}, StripOnInput -> False], TraditionalForm], 
              Offset[{220.5, 0.}, {3.83210416125*^9, 43795.895182333334`}], 
              NCache[
               ImageScaled[{
                 Rational[1, 2], 
                 Rational[1, 2]}], 
               ImageScaled[{0.5, 0.5}]]]}], 
           GraphicsGroupBox[{{
              Directive[
               AbsoluteThickness[4], 
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]], 
              CapForm["Butt"], 
              JoinForm["Round"], 
              BSplineCurveBox[{
                Offset[{3., 0.}, {3.83227696125*^9, 45815.76215288889}], 
                Offset[{8., 0.}, {3.83227696125*^9, 45815.76215288889}], 
                Offset[{10., 0.}, {3.83227696125*^9, 45815.76215288889}], 
                Offset[{12., 0.}, {3.83227696125*^9, 45815.76215288889}], 
                Offset[{12., 0.}, {3.83227696125*^9, 45815.76215288889}]}]}, {
             
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]], 
              BSplineCurveBox[{
                Offset[{3., 0.}, {3.83227696125*^9, 45815.76215288889}], 
                Offset[{8., 0.}, {3.83227696125*^9, 45815.76215288889}], 
                Offset[{10., 0.}, {3.83227696125*^9, 45815.76215288889}], 
                Offset[{12., 0.}, {3.83227696125*^9, 45815.76215288889}], 
                Offset[{12., 0.}, {3.83227696125*^9, 45815.76215288889}]}]}, {
             
              FaceForm[
               Directive[
                GrayLevel[1], 
                Opacity[
                 NCache[
                  Rational[2, 3], 0.6666666666666666]]]], 
              EdgeForm[], 
              PolygonBox[{
                
                Offset[{354., 12.000000000000037`}, {3.83227696125*^9, 
                 45815.76215288889}], 
                
                Offset[{354., -11.999999999999963`}, {3.83227696125*^9, 
                 45815.76215288889}], 
                
                Offset[{12., -12.000000000000037`}, {3.83227696125*^9, 
                 45815.76215288889}], 
                
                Offset[{12., 11.999999999999963`}, {3.83227696125*^9, 
                 45815.76215288889}]}]}, {
              EdgeForm[], 
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]]}, {}, 
             InsetBox[
              FormBox[
               StyleBox[
                RotationBox[
                 ButtonBox[
                  
                  PaneSelectorBox[{
                   False -> StyleBox[
                    "\"Global banking regulators call for toughest rules for \
cryptocurrencies\"", 
                    GrayLevel[0.5], FontSize -> 10, StripOnInput -> False], 
                    True -> StyleBox[
                    "\"Global banking regulators call for toughest rules for \
cryptocurrencies\"", 
                    RGBColor[1, 0.5, 0.5], FontSize -> 10, StripOnInput -> 
                    False]}, 
                   Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                   FrameMargins -> 0], ButtonFunction :> NotebookLocate[{
                    URL[
                    "https://www.theguardian.com/technology/2021/jun/10/\
global-banking-regulators-cryptocurrencies-bitcoin"], None}], Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 BoxRotation -> 0.], {
                 Opacity[1]}, StripOnInput -> False], TraditionalForm], 
              Offset[{183., 0.}, {3.83227696125*^9, 45815.76215288889}], 
              NCache[
               ImageScaled[{
                 Rational[1, 2], 
                 Rational[1, 2]}], 
               ImageScaled[{0.5, 0.5}]]]}], 
           GraphicsGroupBox[{{
              Directive[
               AbsoluteThickness[4], 
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]], 
              CapForm["Butt"], 
              JoinForm["Round"], 
              BSplineCurveBox[{
                Offset[{3., 0.}, {3.83227696125*^9, 47835.62912344444}], 
                Offset[{8., 0.}, {3.83227696125*^9, 47835.62912344444}], 
                Offset[{10., 0.}, {3.83227696125*^9, 47835.62912344444}], 
                Offset[{12., 0.}, {3.83227696125*^9, 47835.62912344444}], 
                Offset[{12., 0.}, {3.83227696125*^9, 47835.62912344444}]}]}, {
             
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]], 
              BSplineCurveBox[{
                Offset[{3., 0.}, {3.83227696125*^9, 47835.62912344444}], 
                Offset[{8., 0.}, {3.83227696125*^9, 47835.62912344444}], 
                Offset[{10., 0.}, {3.83227696125*^9, 47835.62912344444}], 
                Offset[{12., 0.}, {3.83227696125*^9, 47835.62912344444}], 
                Offset[{12., 0.}, {3.83227696125*^9, 47835.62912344444}]}]}, {
             
              FaceForm[
               Directive[
                GrayLevel[1], 
                Opacity[
                 NCache[
                  Rational[2, 3], 0.6666666666666666]]]], 
              EdgeForm[], 
              PolygonBox[{
                
                Offset[{325., 12.000000000000036`}, {3.83227696125*^9, 
                 47835.62912344444}], 
                
                Offset[{325., -11.999999999999964`}, {3.83227696125*^9, 
                 47835.62912344444}], 
                
                Offset[{12., -12.000000000000036`}, {3.83227696125*^9, 
                 47835.62912344444}], 
                
                Offset[{12., 11.999999999999964`}, {3.83227696125*^9, 
                 47835.62912344444}]}]}, {
              EdgeForm[], 
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]]}, {}, 
             InsetBox[
              FormBox[
               StyleBox[
                RotationBox[
                 ButtonBox[
                  
                  PaneSelectorBox[{
                   False -> StyleBox[
                    "\"IMF sees legal, economic issues with El Salvador's \
bitcoin move\"", 
                    GrayLevel[0.5], FontSize -> 10, StripOnInput -> False], 
                    True -> StyleBox[
                    "\"IMF sees legal, economic issues with El Salvador's \
bitcoin move\"", 
                    RGBColor[1, 0.5, 0.5], FontSize -> 10, StripOnInput -> 
                    False]}, 
                   Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                   FrameMargins -> 0], ButtonFunction :> NotebookLocate[{
                    URL[
                    "https://www.reuters.com/business/finance/imf-sees-legal-\
economic-issues-with-el-salvador-bitcoin-move-2021-06-10/"], None}], 
                  Appearance -> None, Evaluator -> Automatic, Method -> 
                  "Preemptive"], BoxRotation -> 0.], {
                 Opacity[1]}, StripOnInput -> False], TraditionalForm], 
              Offset[{168.5, 0.}, {3.83227696125*^9, 47835.62912344444}], 
              NCache[
               ImageScaled[{
                 Rational[1, 2], 
                 Rational[1, 2]}], 
               ImageScaled[{0.5, 0.5}]]]}], 
           GraphicsGroupBox[{{
              Directive[
               AbsoluteThickness[4], 
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]], 
              CapForm["Butt"], 
              JoinForm["Round"], 
              BSplineCurveBox[{
                Offset[{3., 0.}, {3.83296816125*^9, 49855.496094}], 
                Offset[{8., 0.}, {3.83296816125*^9, 49855.496094}], 
                Offset[{10., 0.}, {3.83296816125*^9, 49855.496094}], 
                Offset[{12., 0.}, {3.83296816125*^9, 49855.496094}], 
                Offset[{12., 0.}, {3.83296816125*^9, 49855.496094}]}]}, {
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]], 
              BSplineCurveBox[{
                Offset[{3., 0.}, {3.83296816125*^9, 49855.496094}], 
                Offset[{8., 0.}, {3.83296816125*^9, 49855.496094}], 
                Offset[{10., 0.}, {3.83296816125*^9, 49855.496094}], 
                Offset[{12., 0.}, {3.83296816125*^9, 49855.496094}], 
                Offset[{12., 0.}, {3.83296816125*^9, 49855.496094}]}]}, {
              FaceForm[
               Directive[
                GrayLevel[1], 
                Opacity[
                 NCache[
                  Rational[2, 3], 0.6666666666666666]]]], 
              EdgeForm[], 
              PolygonBox[{
                
                Offset[{381., 12.00000000000004}, {3.83296816125*^9, 
                 49855.496094}], 
                
                Offset[{381., -11.99999999999996}, {3.83296816125*^9, 
                 49855.496094}], 
                
                Offset[{12., -12.00000000000004}, {3.83296816125*^9, 
                 49855.496094}], 
                
                Offset[{12., 11.99999999999996}, {3.83296816125*^9, 
                 49855.496094}]}]}, {
              EdgeForm[], 
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]]}, {}, 
             InsetBox[
              FormBox[
               StyleBox[
                RotationBox[
                 ButtonBox[
                  
                  PaneSelectorBox[{
                   False -> StyleBox[
                    "\"China to shut down over 90% of its Bitcoin mining \
capacity after local bans\"", 
                    GrayLevel[0.5], FontSize -> 10, StripOnInput -> False], 
                    True -> StyleBox[
                    "\"China to shut down over 90% of its Bitcoin mining \
capacity after local bans\"", 
                    RGBColor[1, 0.5, 0.5], FontSize -> 10, StripOnInput -> 
                    False]}, 
                   Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                   FrameMargins -> 0], ButtonFunction :> NotebookLocate[{
                    URL[
                    "https://www.globaltimes.cn/page/202106/1226598.shtml"], 
                    None}], Appearance -> None, Evaluator -> Automatic, 
                  Method -> "Preemptive"], BoxRotation -> 0.], {
                 Opacity[1]}, StripOnInput -> False], TraditionalForm], 
              Offset[{196.5, 0.}, {3.83296816125*^9, 49855.496094}], 
              NCache[
               ImageScaled[{
                 Rational[1, 2], 
                 Rational[1, 2]}], 
               ImageScaled[{0.5, 0.5}]]]}]}}}}, {}}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, DisplayFunction -> 
     Identity, AspectRatio -> NCache[
       Rational[1, 4], 0.25], Axes -> {False, False}, 
     AxesLabel -> {None, None}, 
     AxesOrigin -> {3.8300256*^9, 30666.75987372229}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {
        Charting`DateTicksFunction[Automatic, DateTicksFormat -> {Automatic}], 
        Charting`DateTicksFunction[
        Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}}, 
     GridLines -> {{3.8303712*^9, 3.8311488*^9, 3.8317536*^9, 3.8319264*^9, 
       3.8320992*^9, 3.8320992*^9, 3.832272*^9, 3.832272*^9, 3.8329632*^9}, 
       None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 1200, 
     Method -> {
      "NoShowPlotTheme" -> Automatic, "AxisPadding" -> Scaled[0.02], 
       "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.647624, 0.37816, 0.614037], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.571589, 0.586483, 0.], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.915, 0.3325, 0.2125], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
          AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
       "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
       Scaled[0.05], "AllowMicroRanges" -> {True, False}, 
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"BTC daily prices\"", TraditionalForm], 
     PlotRange -> {{3.8300256*^9, 3.8332224*^9}, {30666.75987372229, 
      49855.496094}}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.2]}}, Ticks -> {{}, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"Close\"", "\"Open\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.89085873722659*^9},
 CellLabel->"Out[163]=",
 CellID->1584791656,ExpressionUUID->"1425728b-e032-420b-abdb-44adac062eb6"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Here we plot the cryptocurrency events with together with the Ether (ETH) \
price time series:\
\>", "Text",
 CellChangeTimes->{{3.833284015636484*^9, 3.8332840571280813`*^9}, {
  3.8332845657736063`*^9, 3.833284569081224*^9}, {3.83329154417391*^9, 
  3.8332916016834183`*^9}, {3.8333682113196487`*^9, 3.833368215167532*^9}},
 CellID->1443368952,ExpressionUUID->"de120fdd-bc0e-4ef6-96c7-111b6c8c8e9d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CryptocurrencyPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"aETHPrices", ",", "dsEventData"}], "}"}], ",", 
   RowBox[{"PlotRange", "->", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.95", ",", "1.05"}], "}"}], 
     RowBox[{"MinMax", "[", 
      RowBox[{
       RowBox[{
       "aETHPrices", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
       "[", "\"\<Values\>\"", "]"}], "]"}]}]}], ",", 
   RowBox[{"PlotLabel", "->", "\"\<BTC daily prices\>\""}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "1200"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8329250699410267`*^9, 3.832925089932872*^9}, {
   3.832925162599147*^9, 3.832925186178804*^9}, {3.832926507630858*^9, 
   3.8329265165848722`*^9}, {3.832926553329215*^9, 3.832926553665447*^9}, {
   3.8329289581758842`*^9, 3.832928993184001*^9}, {3.832929100972458*^9, 
   3.8329291013539753`*^9}, {3.833036533708997*^9, 3.833036534191513*^9}, {
   3.833036950184721*^9, 3.833036970391932*^9}, {3.833037391668231*^9, 
   3.833037394028474*^9}, {3.833279032550932*^9, 3.8332790400325527`*^9}, {
   3.833279156482471*^9, 3.8332791659327803`*^9}, {3.833279262706905*^9, 
   3.833279272584244*^9}, {3.833279475819562*^9, 3.833279475987836*^9}, {
   3.833279655418065*^9, 3.8332796557316723`*^9}, {3.833279688663138*^9, 
   3.833279689189535*^9}, 3.833285210560112*^9, {3.833285721190391*^9, 
   3.833285726060215*^9}, 3.8332859054475937`*^9, {3.833286076074914*^9, 
   3.833286107923925*^9}, {3.833286228018773*^9, 3.83328622843347*^9}, {
   3.833286976201148*^9, 3.8332869945955057`*^9}, {3.833287029154683*^9, 
   3.833287039245755*^9}, 3.8333679329907618`*^9, {3.8333680708740063`*^9, 
   3.8333680753621902`*^9}, {3.8333681181275063`*^9, 3.833368127820565*^9}, 
   3.833368165843045*^9, {3.833368806731205*^9, 3.833368897057534*^9}},
 CellLabel->"In[164]:=",
 CellID->726699752,ExpressionUUID->"a86a78c5-5ed9-48ff-8720-837db92a7033"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.011000000000000001`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGBQA2IQDQQbDDvfOC5t/lpvl7PGAch/EA3kH3AQUGBmB/MF
2oD8lwl/559eshLEd9gA5P/78Pm+csYqEL/gFpD/ZcWP/dGWi0H8BSxdbxw3
nP4wf9qBpSD+BT0gv201s4Ld30UgPkMkkB8e98k+8/1CEN+gGci3aGN4oFG9
AMRPWAvVr7d8CYg/4TqQ3zLn+39HVbB5Bxi73zhWuH7YnzpxGYj/QRvI73/y
Sf5XAlheIQzIB9lz4TnYvoAGIP/ywV/27OfB9jWsAvLF5zMlzFkDlt9wBcj/
cUyA4YkpWP+Df0B+gAl/AudksP0Cmj0Q8xxUwPIOwUC+rh3rAQc/sP0FtT2Q
8EhmAMsvWA7k3+X8Fq/eC9Z/4SKQ/zzwY72+GVie4Q+Qv3Ih74E2G7C8gVrv
G0flb5wLHqwCh19CQC/E/I4EiP+rgPzoGq4GTn+w/IElQH7qEdYFnclg9384
1wtx348OMF/hJ5AvuY6v4cQMsPoA5b43jqITvtmfuAzmN/gC+Q/V+RbcTwWb
v6G8DxJ/wfVg/Q8WAvlO537/Z4CYJ3CmD+Kf8nxw+Dl864P45z8LmF+g0P/G
cfkkxgW7esD8BV5AfscufodTjXMdAIkS+nw=
          "]]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.011000000000000001`], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGBQA2IQ7Vxzpc+r842j1amDOXw31joAhR5EA/kBJvwJK4vX
gPgCbUD+Q3W+Bet/rQbxHTYA+RtOf5i/b+ZKEL/gFpAvuY6vISB3FYi/gKXr
jeM+QxYGd/7FIP4FPSB/5ULeA+tWLAXxGSKB/OeBH+vZOcDyBs1A/o9jAgx7
viwE8RPWAvmXD/6yv5++AMSfcB3Idzr3+7/ApiUg/gHG7jeOx7I+/5dSA5v3
QRvID4/7ZN84cRmIrxAG5HN5/Jb/kAOWD2gA8iczcSco3VkE4jesAvL/ffh8
f/IZsH0brgD5uX+/zE9dBpZ/8K8b4n55dbB+Ac2eN47RNVwNL6eA7XcIBvKV
v3EuOKABli+oBfLNyr/sDwkC279gOZDvcpddwZYdLH/hIpB/l/NbfH03WD/D
HyBfdMI3ewkjsLyBWu8bR/H5TAkmrmD5hAAgvyaZgyFtDjh8JlT1QvzvkQbx
/xIg/3U+54HtgWD5D+eAfB+x7/KNqWD3K/zshcRfYieYH6Dc98ZxrhdbQ9dM
sPoGXyB/afPX+jZzsHkbyoH8Tbf+7N/1ECz/YCGQ77D//f05dWD9AmeAfMXn
f+t1esF8h299kPAILAOHX4FCPzD9TOVhWPsNHF8LvPoh5i3qWugAAFV//Cc=

          "]]}}}, {{}, {{}, {}}}}, {{}, {{{
         Directive[
          AbsoluteThickness[1.6], 
          GrayLevel[0.5], 
          Opacity[0.3], 
          PointSize[0.0035]], 
         PointBox[{{3.8303712*^9, 2131.5035266666664`}, {3.8311488*^9, 
          2374.5595433333333`}, {3.8317536*^9, 2617.61556}, {3.8319264*^9, 
          2860.6715766666666`}, {3.8320992*^9, 3103.7275933333335`}, {
          3.8320992*^9, 3346.78361}, {3.832272*^9, 3589.839626666667}, {
          3.832272*^9, 3832.8956433333333`}, {3.8329632*^9, 4075.95166}}]}}, {
       
        TagBox[{
          Opacity[0.], 
          PointBox[{{3.8303712*^9, 2131.5035266666664`}}]}, 
         Annotation[#, {{Callout}, Charting`Private`Tag$2880369, {1}}]& ], 
        TagBox[{
          Opacity[0.], 
          PointBox[{{3.8311488*^9, 2374.5595433333333`}}]}, 
         Annotation[#, {{Callout}, Charting`Private`Tag$2880369, {2}}]& ], 
        TagBox[{
          Opacity[0.], 
          PointBox[{{3.8317536*^9, 2617.61556}}]}, 
         Annotation[#, {{Callout}, Charting`Private`Tag$2880369, {3}}]& ], 
        TagBox[{
          Opacity[0.], 
          PointBox[{{3.8319264*^9, 2860.6715766666666`}}]}, 
         Annotation[#, {{Callout}, Charting`Private`Tag$2880369, {4}}]& ], 
        TagBox[{
          Opacity[0.], 
          PointBox[{{3.8320992*^9, 3103.7275933333335`}}]}, 
         Annotation[#, {{Callout}, Charting`Private`Tag$2880369, {5}}]& ], 
        TagBox[{
          Opacity[0.], 
          PointBox[{{3.8320992*^9, 3346.78361}}]}, 
         Annotation[#, {{Callout}, Charting`Private`Tag$2880369, {6}}]& ], 
        TagBox[{
          Opacity[0.], 
          PointBox[{{3.832272*^9, 3589.839626666667}}]}, 
         Annotation[#, {{Callout}, Charting`Private`Tag$2880369, {7}}]& ], 
        TagBox[{
          Opacity[0.], 
          PointBox[{{3.832272*^9, 3832.8956433333333`}}]}, 
         Annotation[#, {{Callout}, Charting`Private`Tag$2880369, {8}}]& ], 
        TagBox[{
          Opacity[0.], 
          PointBox[{{3.8329632*^9, 4075.95166}}]}, 
         Annotation[#, {{Callout}, Charting`Private`Tag$2880369, {
           9}}]& ]}}, {{{}, {{}, {{
           GraphicsGroupBox[{{
              Directive[
               AbsoluteThickness[4], 
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]], 
              CapForm["Butt"], 
              JoinForm["Round"], 
              BSplineCurveBox[{
                Offset[{3., 0.}, {3.83037616125*^9, 2131.5035266666664`}], 
                Offset[{8., 0.}, {3.83037616125*^9, 2131.5035266666664`}], 
                Offset[{10., 0.}, {3.83037616125*^9, 2131.5035266666664`}], 
                Offset[{12., 0.}, {3.83037616125*^9, 2131.5035266666664`}], 
                
                Offset[{12., 0.}, {3.83037616125*^9, 
                 2131.5035266666664`}]}]}, {
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]], 
              BSplineCurveBox[{
                Offset[{3., 0.}, {3.83037616125*^9, 2131.5035266666664`}], 
                Offset[{8., 0.}, {3.83037616125*^9, 2131.5035266666664`}], 
                Offset[{10., 0.}, {3.83037616125*^9, 2131.5035266666664`}], 
                Offset[{12., 0.}, {3.83037616125*^9, 2131.5035266666664`}], 
                
                Offset[{12., 0.}, {3.83037616125*^9, 
                 2131.5035266666664`}]}]}, {
              FaceForm[
               Directive[
                GrayLevel[1], 
                Opacity[
                 NCache[
                  Rational[2, 3], 0.6666666666666666]]]], 
              EdgeForm[], 
              PolygonBox[{
                
                Offset[{425., 12.000000000000046`}, {3.83037616125*^9, 
                 2131.5035266666664`}], 
                
                Offset[{425., -11.999999999999954`}, {3.83037616125*^9, 
                 2131.5035266666664`}], 
                
                Offset[{12., -12.000000000000046`}, {3.83037616125*^9, 
                 2131.5035266666664`}], 
                
                Offset[{12., 11.999999999999954`}, {3.83037616125*^9, 
                 2131.5035266666664`}]}]}, {
              EdgeForm[], 
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]]}, {}, 
             InsetBox[
              FormBox[
               StyleBox[
                RotationBox[
                 ButtonBox[
                  
                  PaneSelectorBox[{
                   False -> StyleBox[
                    "\"Bitcoin, Ethereum prices in free fall as China plans \
crackdown on mining and trading\"", 
                    GrayLevel[0.5], FontSize -> 10, StripOnInput -> False], 
                    True -> StyleBox[
                    "\"Bitcoin, Ethereum prices in free fall as China plans \
crackdown on mining and trading\"", 
                    RGBColor[1, 0.5, 0.5], FontSize -> 10, StripOnInput -> 
                    False]}, 
                   Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                   FrameMargins -> 0], ButtonFunction :> NotebookLocate[{
                    URL[
                    "https://www.cnet.com/news/bitcoin-ethereum-prices-in-\
freefall-as-china-plans-crackdown-on-mining-and-trading/#ftag=CAD590a51e"], 
                    None}], Appearance -> None, Evaluator -> Automatic, 
                  Method -> "Preemptive"], BoxRotation -> 0.], {
                 Opacity[1]}, StripOnInput -> False], TraditionalForm], 
              Offset[{218.5, 0.}, {3.83037616125*^9, 2131.5035266666664`}], 
              NCache[
               ImageScaled[{
                 Rational[1, 2], 
                 Rational[1, 2]}], 
               ImageScaled[{0.5, 0.5}]]]}], 
           GraphicsGroupBox[{{
              Directive[
               AbsoluteThickness[4], 
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]], 
              CapForm["Butt"], 
              JoinForm["Round"], 
              BSplineCurveBox[{
                Offset[{3., 0.}, {3.83115376125*^9, 2374.5595433333333`}], 
                Offset[{8., 0.}, {3.83115376125*^9, 2374.5595433333333`}], 
                Offset[{10., 0.}, {3.83115376125*^9, 2374.5595433333333`}], 
                Offset[{12., 0.}, {3.83115376125*^9, 2374.5595433333333`}], 
                
                Offset[{12., 0.}, {3.83115376125*^9, 
                 2374.5595433333333`}]}]}, {
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]], 
              BSplineCurveBox[{
                Offset[{3., 0.}, {3.83115376125*^9, 2374.5595433333333`}], 
                Offset[{8., 0.}, {3.83115376125*^9, 2374.5595433333333`}], 
                Offset[{10., 0.}, {3.83115376125*^9, 2374.5595433333333`}], 
                Offset[{12., 0.}, {3.83115376125*^9, 2374.5595433333333`}], 
                
                Offset[{12., 0.}, {3.83115376125*^9, 
                 2374.5595433333333`}]}]}, {
              FaceForm[
               Directive[
                GrayLevel[1], 
                Opacity[
                 NCache[
                  Rational[2, 3], 0.6666666666666666]]]], 
              EdgeForm[], 
              PolygonBox[{
                
                Offset[{263., 12.000000000000028`}, {3.83115376125*^9, 
                 2374.5595433333333`}], 
                
                Offset[{263., -11.999999999999972`}, {3.83115376125*^9, 
                 2374.5595433333333`}], 
                
                Offset[{12., -12.000000000000028`}, {3.83115376125*^9, 
                 2374.5595433333333`}], 
                
                Offset[{12., 11.999999999999972`}, {3.83115376125*^9, 
                 2374.5595433333333`}]}]}, {
              EdgeForm[], 
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]]}, {}, 
             InsetBox[
              FormBox[
               StyleBox[
                RotationBox[
                 ButtonBox[
                  
                  PaneSelectorBox[{
                   False -> StyleBox[
                    "\"Iran Bans Crypto Mining After Months of Blackouts\"", 
                    GrayLevel[0.5], FontSize -> 10, StripOnInput -> False], 
                    True -> StyleBox[
                    "\"Iran Bans Crypto Mining After Months of Blackouts\"", 
                    RGBColor[1, 0.5, 0.5], FontSize -> 10, StripOnInput -> 
                    False]}, 
                   Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                   FrameMargins -> 0], ButtonFunction :> NotebookLocate[{
                    URL[
                    "https://gizmodo.com/iran-bans-crypto-mining-after-months-\
of-blackouts-1846991039"], None}], Appearance -> None, Evaluator -> Automatic,
                   Method -> "Preemptive"], BoxRotation -> 0.], {
                 Opacity[1]}, StripOnInput -> False], TraditionalForm], 
              Offset[{137.5, 0.}, {3.83115376125*^9, 2374.5595433333333`}], 
              NCache[
               ImageScaled[{
                 Rational[1, 2], 
                 Rational[1, 2]}], 
               ImageScaled[{0.5, 0.5}]]]}], 
           GraphicsGroupBox[{{
              Directive[
               AbsoluteThickness[4], 
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]], 
              CapForm["Butt"], 
              JoinForm["Round"], 
              BSplineCurveBox[{
                Offset[{3., 0.}, {3.83175856125*^9, 2617.61556}], 
                Offset[{8., 0.}, {3.83175856125*^9, 2617.61556}], 
                Offset[{10., 0.}, {3.83175856125*^9, 2617.61556}], 
                Offset[{12., 0.}, {3.83175856125*^9, 2617.61556}], 
                Offset[{12., 0.}, {3.83175856125*^9, 2617.61556}]}]}, {
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]], 
              BSplineCurveBox[{
                Offset[{3., 0.}, {3.83175856125*^9, 2617.61556}], 
                Offset[{8., 0.}, {3.83175856125*^9, 2617.61556}], 
                Offset[{10., 0.}, {3.83175856125*^9, 2617.61556}], 
                Offset[{12., 0.}, {3.83175856125*^9, 2617.61556}], 
                Offset[{12., 0.}, {3.83175856125*^9, 2617.61556}]}]}, {
              FaceForm[
               Directive[
                GrayLevel[1], 
                Opacity[
                 NCache[
                  Rational[2, 3], 0.6666666666666666]]]], 
              EdgeForm[], 
              PolygonBox[{
                
                Offset[{441., 12.000000000000048`}, {3.83175856125*^9, 
                 2617.61556}], 
                
                Offset[{441., -11.999999999999952`}, {3.83175856125*^9, 
                 2617.61556}], 
                
                Offset[{12., -12.000000000000048`}, {3.83175856125*^9, 
                 2617.61556}], 
                
                Offset[{12., 11.999999999999952`}, {3.83175856125*^9, 
                 2617.61556}]}]}, {
              EdgeForm[], 
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]]}, {}, 
             InsetBox[
              FormBox[
               StyleBox[
                RotationBox[
                 ButtonBox[
                  
                  PaneSelectorBox[{
                   False -> StyleBox[
                    "\"Start of Bitcoin 2021: World\[CloseCurlyQuote]s \
Largest Cryptocurrency Conference Coming To Wynwood\"", 
                    GrayLevel[0.5], FontSize -> 10, StripOnInput -> False], 
                    True -> StyleBox[
                    "\"Start of Bitcoin 2021: World\[CloseCurlyQuote]s \
Largest Cryptocurrency Conference Coming To Wynwood\"", 
                    RGBColor[1, 0.5, 0.5], FontSize -> 10, StripOnInput -> 
                    False]}, 
                   Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                   FrameMargins -> 0], ButtonFunction :> NotebookLocate[{
                    URL[
                    "https://miami.cbslocal.com/2021/06/04/bitcoin-2021-\
worlds-largest-cryptocurrency-conference-coming-to-wynwood/"], None}], 
                  Appearance -> None, Evaluator -> Automatic, Method -> 
                  "Preemptive"], BoxRotation -> 0.], {
                 Opacity[1]}, StripOnInput -> False], TraditionalForm], 
              Offset[{226.5, 0.}, {3.83175856125*^9, 2617.61556}], 
              NCache[
               ImageScaled[{
                 Rational[1, 2], 
                 Rational[1, 2]}], 
               ImageScaled[{0.5, 0.5}]]]}], 
           GraphicsGroupBox[{{
              Directive[
               AbsoluteThickness[4], 
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]], 
              CapForm["Butt"], 
              JoinForm["Round"], 
              BSplineCurveBox[{
                Offset[{3., 0.}, {3.83193136125*^9, 2860.6715766666666`}], 
                Offset[{8., 0.}, {3.83193136125*^9, 2860.6715766666666`}], 
                Offset[{10., 0.}, {3.83193136125*^9, 2860.6715766666666`}], 
                Offset[{12., 0.}, {3.83193136125*^9, 2860.6715766666666`}], 
                
                Offset[{12., 0.}, {3.83193136125*^9, 
                 2860.6715766666666`}]}]}, {
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]], 
              BSplineCurveBox[{
                Offset[{3., 0.}, {3.83193136125*^9, 2860.6715766666666`}], 
                Offset[{8., 0.}, {3.83193136125*^9, 2860.6715766666666`}], 
                Offset[{10., 0.}, {3.83193136125*^9, 2860.6715766666666`}], 
                Offset[{12., 0.}, {3.83193136125*^9, 2860.6715766666666`}], 
                
                Offset[{12., 0.}, {3.83193136125*^9, 
                 2860.6715766666666`}]}]}, {
              FaceForm[
               Directive[
                GrayLevel[1], 
                Opacity[
                 NCache[
                  Rational[2, 3], 0.6666666666666666]]]], 
              EdgeForm[], 
              PolygonBox[{
                
                Offset[{435., 12.000000000000046`}, {3.83193136125*^9, 
                 2860.6715766666666`}], 
                
                Offset[{435., -11.999999999999954`}, {3.83193136125*^9, 
                 2860.6715766666666`}], 
                Offset[{12., -12.000000000000046`}, {3.83193136125*^9, 
                 2860.6715766666666`}], 
                
                Offset[{12., 11.999999999999954`}, {3.83193136125*^9, 
                 2860.6715766666666`}]}]}, {
              EdgeForm[], 
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]]}, {}, 
             InsetBox[
              FormBox[
               StyleBox[
                RotationBox[
                 ButtonBox[
                  
                  PaneSelectorBox[{
                   False -> StyleBox[
                    "\"End of Bitcoin 2021: World\[CloseCurlyQuote]s Largest \
Cryptocurrency Conference Coming To Wynwood\"", 
                    GrayLevel[0.5], FontSize -> 10, StripOnInput -> False], 
                    True -> StyleBox[
                    "\"End of Bitcoin 2021: World\[CloseCurlyQuote]s Largest \
Cryptocurrency Conference Coming To Wynwood\"", 
                    RGBColor[1, 0.5, 0.5], FontSize -> 10, StripOnInput -> 
                    False]}, 
                   Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                   FrameMargins -> 0], ButtonFunction :> NotebookLocate[{
                    URL[
                    "https://miami.cbslocal.com/2021/06/04/bitcoin-2021-\
worlds-largest-cryptocurrency-conference-coming-to-wynwood/"], None}], 
                  Appearance -> None, Evaluator -> Automatic, Method -> 
                  "Preemptive"], BoxRotation -> 0.], {
                 Opacity[1]}, StripOnInput -> False], TraditionalForm], 
              Offset[{223.5, 0.}, {3.83193136125*^9, 2860.6715766666666`}], 
              NCache[
               ImageScaled[{
                 Rational[1, 2], 
                 Rational[1, 2]}], 
               ImageScaled[{0.5, 0.5}]]]}], 
           GraphicsGroupBox[{{
              Directive[
               AbsoluteThickness[4], 
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]], 
              CapForm["Butt"], 
              JoinForm["Round"], 
              BSplineCurveBox[{
                Offset[{3., 0.}, {3.83210416125*^9, 3103.7275933333335`}], 
                Offset[{8., 0.}, {3.83210416125*^9, 3103.7275933333335`}], 
                Offset[{10., 0.}, {3.83210416125*^9, 3103.7275933333335`}], 
                Offset[{12., 0.}, {3.83210416125*^9, 3103.7275933333335`}], 
                
                Offset[{12., 0.}, {3.83210416125*^9, 
                 3103.7275933333335`}]}]}, {
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]], 
              BSplineCurveBox[{
                Offset[{3., 0.}, {3.83210416125*^9, 3103.7275933333335`}], 
                Offset[{8., 0.}, {3.83210416125*^9, 3103.7275933333335`}], 
                Offset[{10., 0.}, {3.83210416125*^9, 3103.7275933333335`}], 
                Offset[{12., 0.}, {3.83210416125*^9, 3103.7275933333335`}], 
                
                Offset[{12., 0.}, {3.83210416125*^9, 
                 3103.7275933333335`}]}]}, {
              FaceForm[
               Directive[
                GrayLevel[1], 
                Opacity[
                 NCache[
                  Rational[2, 3], 0.6666666666666666]]]], 
              EdgeForm[], 
              PolygonBox[{
                
                Offset[{437., 12.000000000000048`}, {3.83210416125*^9, 
                 3103.7275933333335`}], 
                
                Offset[{437., -11.999999999999952`}, {3.83210416125*^9, 
                 3103.7275933333335`}], 
                
                Offset[{12., -12.000000000000048`}, {3.83210416125*^9, 
                 3103.7275933333335`}], 
                
                Offset[{12., 11.999999999999952`}, {3.83210416125*^9, 
                 3103.7275933333335`}]}]}, {
              EdgeForm[], 
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]]}, {}, 
             InsetBox[
              FormBox[
               StyleBox[
                RotationBox[
                 ButtonBox[
                  
                  PaneSelectorBox[{
                   False -> StyleBox[
                    "\"El Salvador Becomes First Country To Adopt Bitcoin as \
Legal Tender After Passing Law\"", 
                    GrayLevel[0.5], FontSize -> 10, StripOnInput -> False], 
                    True -> StyleBox[
                    "\"El Salvador Becomes First Country To Adopt Bitcoin as \
Legal Tender After Passing Law\"", 
                    RGBColor[1, 0.5, 0.5], FontSize -> 10, StripOnInput -> 
                    False]}, 
                   Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                   FrameMargins -> 0], ButtonFunction :> NotebookLocate[{
                    URL[
                    "https://www.cnbc.com/2021/06/09/el-salvador-proposes-law-\
to-make-bitcoin-legal-tender.html"], None}], Appearance -> None, Evaluator -> 
                  Automatic, Method -> "Preemptive"], BoxRotation -> 0.], {
                 Opacity[1]}, StripOnInput -> False], TraditionalForm], 
              Offset[{224.5, 0.}, {3.83210416125*^9, 3103.7275933333335`}], 
              NCache[
               ImageScaled[{
                 Rational[1, 2], 
                 Rational[1, 2]}], 
               ImageScaled[{0.5, 0.5}]]]}], 
           GraphicsGroupBox[{{
              Directive[
               AbsoluteThickness[4], 
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]], 
              CapForm["Butt"], 
              JoinForm["Round"], 
              BSplineCurveBox[{
                Offset[{3., 0.}, {3.83210416125*^9, 3346.78361}], 
                Offset[{8., 0.}, {3.83210416125*^9, 3346.78361}], 
                Offset[{10., 0.}, {3.83210416125*^9, 3346.78361}], 
                Offset[{12., 0.}, {3.83210416125*^9, 3346.78361}], 
                Offset[{12., 0.}, {3.83210416125*^9, 3346.78361}]}]}, {
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]], 
              BSplineCurveBox[{
                Offset[{3., 0.}, {3.83210416125*^9, 3346.78361}], 
                Offset[{8., 0.}, {3.83210416125*^9, 3346.78361}], 
                Offset[{10., 0.}, {3.83210416125*^9, 3346.78361}], 
                Offset[{12., 0.}, {3.83210416125*^9, 3346.78361}], 
                Offset[{12., 0.}, {3.83210416125*^9, 3346.78361}]}]}, {
              FaceForm[
               Directive[
                GrayLevel[1], 
                Opacity[
                 NCache[
                  Rational[2, 3], 0.6666666666666666]]]], 
              EdgeForm[], 
              PolygonBox[{
                
                Offset[{429., 12.000000000000046`}, {3.83210416125*^9, 
                 3346.78361}], 
                
                Offset[{429., -11.999999999999954`}, {3.83210416125*^9, 
                 3346.78361}], 
                
                Offset[{12., -12.000000000000046`}, {3.83210416125*^9, 
                 3346.78361}], 
                
                Offset[{12., 11.999999999999954`}, {3.83210416125*^9, 
                 3346.78361}]}]}, {
              EdgeForm[], 
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]]}, {}, 
             InsetBox[
              FormBox[
               StyleBox[
                RotationBox[
                 ButtonBox[
                  
                  PaneSelectorBox[{
                   False -> StyleBox[
                    "\"US recovers millions in cryptocurrency paid to \
Colonial Pipeline ransomware hackers\"", 
                    GrayLevel[0.5], FontSize -> 10, StripOnInput -> False], 
                    True -> StyleBox[
                    "\"US recovers millions in cryptocurrency paid to \
Colonial Pipeline ransomware hackers\"", 
                    RGBColor[1, 0.5, 0.5], FontSize -> 10, StripOnInput -> 
                    False]}, 
                   Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                   FrameMargins -> 0], ButtonFunction :> NotebookLocate[{
                    URL[
                    "https://edition.cnn.com/2021/06/07/politics/colonial-\
pipeline-ransomware-recovered/"], None}], Appearance -> None, Evaluator -> 
                  Automatic, Method -> "Preemptive"], BoxRotation -> 0.], {
                 Opacity[1]}, StripOnInput -> False], TraditionalForm], 
              Offset[{220.5, 0.}, {3.83210416125*^9, 3346.78361}], 
              NCache[
               ImageScaled[{
                 Rational[1, 2], 
                 Rational[1, 2]}], 
               ImageScaled[{0.5, 0.5}]]]}], 
           GraphicsGroupBox[{{
              Directive[
               AbsoluteThickness[4], 
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]], 
              CapForm["Butt"], 
              JoinForm["Round"], 
              BSplineCurveBox[{
                Offset[{3., 0.}, {3.83227696125*^9, 3589.839626666667}], 
                Offset[{8., 0.}, {3.83227696125*^9, 3589.839626666667}], 
                Offset[{10., 0.}, {3.83227696125*^9, 3589.839626666667}], 
                Offset[{12., 0.}, {3.83227696125*^9, 3589.839626666667}], 
                Offset[{12., 0.}, {3.83227696125*^9, 3589.839626666667}]}]}, {
             
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]], 
              BSplineCurveBox[{
                Offset[{3., 0.}, {3.83227696125*^9, 3589.839626666667}], 
                Offset[{8., 0.}, {3.83227696125*^9, 3589.839626666667}], 
                Offset[{10., 0.}, {3.83227696125*^9, 3589.839626666667}], 
                Offset[{12., 0.}, {3.83227696125*^9, 3589.839626666667}], 
                Offset[{12., 0.}, {3.83227696125*^9, 3589.839626666667}]}]}, {
             
              FaceForm[
               Directive[
                GrayLevel[1], 
                Opacity[
                 NCache[
                  Rational[2, 3], 0.6666666666666666]]]], 
              EdgeForm[], 
              PolygonBox[{
                
                Offset[{354., 12.000000000000037`}, {3.83227696125*^9, 
                 3589.839626666667}], 
                
                Offset[{354., -11.999999999999963`}, {3.83227696125*^9, 
                 3589.839626666667}], 
                
                Offset[{12., -12.000000000000037`}, {3.83227696125*^9, 
                 3589.839626666667}], 
                
                Offset[{12., 11.999999999999963`}, {3.83227696125*^9, 
                 3589.839626666667}]}]}, {
              EdgeForm[], 
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]]}, {}, 
             InsetBox[
              FormBox[
               StyleBox[
                RotationBox[
                 ButtonBox[
                  
                  PaneSelectorBox[{
                   False -> StyleBox[
                    "\"Global banking regulators call for toughest rules for \
cryptocurrencies\"", 
                    GrayLevel[0.5], FontSize -> 10, StripOnInput -> False], 
                    True -> StyleBox[
                    "\"Global banking regulators call for toughest rules for \
cryptocurrencies\"", 
                    RGBColor[1, 0.5, 0.5], FontSize -> 10, StripOnInput -> 
                    False]}, 
                   Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                   FrameMargins -> 0], ButtonFunction :> NotebookLocate[{
                    URL[
                    "https://www.theguardian.com/technology/2021/jun/10/\
global-banking-regulators-cryptocurrencies-bitcoin"], None}], Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 BoxRotation -> 0.], {
                 Opacity[1]}, StripOnInput -> False], TraditionalForm], 
              Offset[{183., 0.}, {3.83227696125*^9, 3589.839626666667}], 
              NCache[
               ImageScaled[{
                 Rational[1, 2], 
                 Rational[1, 2]}], 
               ImageScaled[{0.5, 0.5}]]]}], 
           GraphicsGroupBox[{{
              Directive[
               AbsoluteThickness[4], 
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]], 
              CapForm["Butt"], 
              JoinForm["Round"], 
              BSplineCurveBox[{
                Offset[{3., 0.}, {3.83227696125*^9, 3832.8956433333333`}], 
                Offset[{8., 0.}, {3.83227696125*^9, 3832.8956433333333`}], 
                Offset[{10., 0.}, {3.83227696125*^9, 3832.8956433333333`}], 
                Offset[{12., 0.}, {3.83227696125*^9, 3832.8956433333333`}], 
                
                Offset[{12., 0.}, {3.83227696125*^9, 
                 3832.8956433333333`}]}]}, {
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]], 
              BSplineCurveBox[{
                Offset[{3., 0.}, {3.83227696125*^9, 3832.8956433333333`}], 
                Offset[{8., 0.}, {3.83227696125*^9, 3832.8956433333333`}], 
                Offset[{10., 0.}, {3.83227696125*^9, 3832.8956433333333`}], 
                Offset[{12., 0.}, {3.83227696125*^9, 3832.8956433333333`}], 
                
                Offset[{12., 0.}, {3.83227696125*^9, 
                 3832.8956433333333`}]}]}, {
              FaceForm[
               Directive[
                GrayLevel[1], 
                Opacity[
                 NCache[
                  Rational[2, 3], 0.6666666666666666]]]], 
              EdgeForm[], 
              PolygonBox[{
                
                Offset[{325., 12.000000000000036`}, {3.83227696125*^9, 
                 3832.8956433333333`}], 
                
                Offset[{325., -11.999999999999964`}, {3.83227696125*^9, 
                 3832.8956433333333`}], 
                
                Offset[{12., -12.000000000000036`}, {3.83227696125*^9, 
                 3832.8956433333333`}], 
                
                Offset[{12., 11.999999999999964`}, {3.83227696125*^9, 
                 3832.8956433333333`}]}]}, {
              EdgeForm[], 
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]]}, {}, 
             InsetBox[
              FormBox[
               StyleBox[
                RotationBox[
                 ButtonBox[
                  
                  PaneSelectorBox[{
                   False -> StyleBox[
                    "\"IMF sees legal, economic issues with El Salvador's \
bitcoin move\"", 
                    GrayLevel[0.5], FontSize -> 10, StripOnInput -> False], 
                    True -> StyleBox[
                    "\"IMF sees legal, economic issues with El Salvador's \
bitcoin move\"", 
                    RGBColor[1, 0.5, 0.5], FontSize -> 10, StripOnInput -> 
                    False]}, 
                   Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                   FrameMargins -> 0], ButtonFunction :> NotebookLocate[{
                    URL[
                    "https://www.reuters.com/business/finance/imf-sees-legal-\
economic-issues-with-el-salvador-bitcoin-move-2021-06-10/"], None}], 
                  Appearance -> None, Evaluator -> Automatic, Method -> 
                  "Preemptive"], BoxRotation -> 0.], {
                 Opacity[1]}, StripOnInput -> False], TraditionalForm], 
              Offset[{168.5, 0.}, {3.83227696125*^9, 3832.8956433333333`}], 
              NCache[
               ImageScaled[{
                 Rational[1, 2], 
                 Rational[1, 2]}], 
               ImageScaled[{0.5, 0.5}]]]}], 
           GraphicsGroupBox[{{
              Directive[
               AbsoluteThickness[4], 
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]], 
              CapForm["Butt"], 
              JoinForm["Round"], 
              BSplineCurveBox[{
                Offset[{3., 0.}, {3.83296816125*^9, 4075.95166}], 
                Offset[{8., 0.}, {3.83296816125*^9, 4075.95166}], 
                Offset[{10., 0.}, {3.83296816125*^9, 4075.95166}], 
                Offset[{12., 0.}, {3.83296816125*^9, 4075.95166}], 
                Offset[{12., 0.}, {3.83296816125*^9, 4075.95166}]}]}, {
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]], 
              BSplineCurveBox[{
                Offset[{3., 0.}, {3.83296816125*^9, 4075.95166}], 
                Offset[{8., 0.}, {3.83296816125*^9, 4075.95166}], 
                Offset[{10., 0.}, {3.83296816125*^9, 4075.95166}], 
                Offset[{12., 0.}, {3.83296816125*^9, 4075.95166}], 
                Offset[{12., 0.}, {3.83296816125*^9, 4075.95166}]}]}, {
              FaceForm[
               Directive[
                GrayLevel[1], 
                Opacity[
                 NCache[
                  Rational[2, 3], 0.6666666666666666]]]], 
              EdgeForm[], 
              PolygonBox[{
                
                Offset[{381., 12.00000000000004}, {3.83296816125*^9, 
                 4075.95166}], 
                
                Offset[{381., -11.99999999999996}, {3.83296816125*^9, 
                 4075.95166}], 
                
                Offset[{12., -12.00000000000004}, {3.83296816125*^9, 
                 4075.95166}], 
                
                Offset[{12., 11.99999999999996}, {3.83296816125*^9, 
                 4075.95166}]}]}, {
              EdgeForm[], 
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]]}, {}, 
             InsetBox[
              FormBox[
               StyleBox[
                RotationBox[
                 ButtonBox[
                  
                  PaneSelectorBox[{
                   False -> StyleBox[
                    "\"China to shut down over 90% of its Bitcoin mining \
capacity after local bans\"", 
                    GrayLevel[0.5], FontSize -> 10, StripOnInput -> False], 
                    True -> StyleBox[
                    "\"China to shut down over 90% of its Bitcoin mining \
capacity after local bans\"", 
                    RGBColor[1, 0.5, 0.5], FontSize -> 10, StripOnInput -> 
                    False]}, 
                   Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                   FrameMargins -> 0], ButtonFunction :> NotebookLocate[{
                    URL[
                    "https://www.globaltimes.cn/page/202106/1226598.shtml"], 
                    None}], Appearance -> None, Evaluator -> Automatic, 
                  Method -> "Preemptive"], BoxRotation -> 0.], {
                 Opacity[1]}, StripOnInput -> False], TraditionalForm], 
              Offset[{196.5, 0.}, {3.83296816125*^9, 4075.95166}], 
              NCache[
               ImageScaled[{
                 Rational[1, 2], 
                 Rational[1, 2]}], 
               ImageScaled[{0.5, 0.5}]]]}]}}}}, {}}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, DisplayFunction -> 
     Identity, AspectRatio -> NCache[
       Rational[1, 4], 0.25], Axes -> {False, False}, 
     AxesLabel -> {None, None}, 
     AxesOrigin -> {3.8300256*^9, 1794.025134500004}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {
        Charting`DateTicksFunction[Automatic, DateTicksFormat -> {Automatic}], 
        Charting`DateTicksFunction[
        Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}}, 
     GridLines -> {{3.8303712*^9, 3.8311488*^9, 3.8317536*^9, 3.8319264*^9, 
       3.8320992*^9, 3.8320992*^9, 3.832272*^9, 3.832272*^9, 3.8329632*^9}, 
       None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 1200, 
     Method -> {
      "NoShowPlotTheme" -> Automatic, "AxisPadding" -> Scaled[0.02], 
       "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.647624, 0.37816, 0.614037], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.571589, 0.586483, 0.], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.915, 0.3325, 0.2125], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
          AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
       "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
       Scaled[0.05], "AllowMicroRanges" -> {True, False}, 
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"BTC daily prices\"", TraditionalForm], 
     PlotRange -> {{3.8300256*^9, 3.8332224*^9}, {1794.0251345, 
      3820.0281735}}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 
        Scaled[0.2]}}, Ticks -> {{}, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"Close\"", "\"Open\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.890858737450194*^9},
 CellLabel->"Out[164]=",
 CellID->353688651,ExpressionUUID->"b6dd3534-35a0-4464-a5b2-b1f2c08e36fe"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Here we plot the cryptocurrency events with together with the BTC trading \
volume time series:\
\>", "Text",
 CellChangeTimes->{{3.833284015636484*^9, 3.8332840571280813`*^9}, {
  3.8332845657736063`*^9, 3.833284569081224*^9}, {3.83329154417391*^9, 
  3.833291607735806*^9}},
 CellID->903231375,ExpressionUUID->"4f269298-3300-47a8-b5f4-41f6665b376e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CryptocurrencyPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"aCCVolume", ",", "dsEventData"}], "}"}], ",", 
   RowBox[{"PlotLabel", "->", "\"\<BTC and ETH trading volumes\>\""}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "1200"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8329250699410267`*^9, 3.832925089932872*^9}, {
   3.832925162599147*^9, 3.832925186178804*^9}, {3.832926507630858*^9, 
   3.8329265165848722`*^9}, {3.832926553329215*^9, 3.832926553665447*^9}, {
   3.8329289581758842`*^9, 3.832928993184001*^9}, {3.832929100972458*^9, 
   3.8329291013539753`*^9}, {3.833036533708997*^9, 3.833036534191513*^9}, {
   3.833036950184721*^9, 3.833036970391932*^9}, {3.833037391668231*^9, 
   3.833037394028474*^9}, {3.833279032550932*^9, 3.8332790400325527`*^9}, {
   3.833279156482471*^9, 3.8332791659327803`*^9}, {3.833279262706905*^9, 
   3.833279272584244*^9}, {3.833279475819562*^9, 3.833279475987836*^9}, {
   3.833279655418065*^9, 3.8332796557316723`*^9}, {3.833279688663138*^9, 
   3.833279689189535*^9}, 3.833285210560112*^9, {3.833285721190391*^9, 
   3.833285726060215*^9}, {3.833285787532308*^9, 3.833285841452777*^9}, {
   3.833285890439221*^9, 3.833285915219726*^9}, {3.8332869976129837`*^9, 
   3.8332870258694*^9}, {3.833367938738298*^9, 3.8333679472440033`*^9}},
 CellLabel->"In[165]:=",
 CellID->47818982,ExpressionUUID->"c00c6cbd-e6db-4a9b-a80b-7beca3c11e45"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.011000000000000001`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwl0F0oQ2Ecx/HDuFBiLZEVtjPGNm8bSSGzcKHoRE1is7TlwoVzJxOdpo6X
DSsXyktNKRI65PVGu+BCLZGFuBEXkpd2ISWS/X87dTp9+j/POc/3qHv6W13x
DMNoozc9o5dknHirYxjnk9dnsET90AmLb5lXRWS5CO9czvNGslmCD5tT9Hoy
fwdXzY711ZADCZPk2inZdDn5ohi2cWvKMjLTAZf2PR9gf+ko/K1kG0xkxyZ8
Yn+ylZD9N3DF+E8h1gfjvGSeiX/JJ0cMMJulzcklq6xwwODY1ZE5Ad76+UzN
IwvrsHNENphFlsKxucKqZ9H/B3ta2tUq9Ot85FvvXigb/W3wfqV5FHN+GE73
r7o16F+FP5J2jzG/uIRzbcK7Ev2/cJf1wZ6Dfu0UOe3orBo9Dg4OnipYnN/v
hjd+15vQF1yBTbX2RJw3cg77Fl7X1Oj/hpPDbARzTjNNfuwOZmC/0Ax7xvaX
8D+kAbhS47TE+pfhY7G+Ee+Th+Dr3qF79Ji/4EWjS47/x6tm8D1xW4H1gSY4
4attrsDyDwfnvcQ=
          "]]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.011000000000000001`], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwdz10oQ2Ecx/GDNSJF5mW22rFpaywbLt0gF1qjEyUSSVlLyZKsDVkjYcMa
xeRipDBtjnLhgpAL0tLGQl5qKXIhrWWyWsue36nT6dPznOf5f0t6B1v6UimK
kiZf8k0+bOXsVx1FeafE55L6pEOd8PoKmy0lzpmGNbJdhZy4loUbDNxbMbH+
Cc6IOPaqiV2cOWL9/v2okthfAZfqujPxP9UB/0UtTtynmoQjCS2vjLjHA68K
qlKw3/4A25v9eTLisxQr7vvuusb/4XJYk/XOExHTbXC/sMGF+RgzrFc3DmPd
7IbtFgO/iJgNwkfG45AQ/Qn4avVjlI9+uY147OckANe2wjted0yA/nFYceG5
w/mubZhRxrQ4zx+AH18vHIXoj8OHjs0JrKuk88TL7vQp9PQw8A93yUej3wS3
87SXxejfgm2DVhrnhW/gT2dZFKZjsE42UoN5GckC5it5FsLmJth32peG+VkD
bA+2DxWgfwOesa1189Dvg5m7A1U++n/hszfalIt+epH4JSMex36XGuZEjQOi
+n8w9sQg
          "]]}}}, {{}, {{}, {}}}}, {{}, {{{
         Directive[
          AbsoluteThickness[1.6], 
          GrayLevel[0.5], 
          Opacity[0.3], 
          PointSize[0.0035]], 
         PointBox[{{3.8303712*^9, 3.072054865722222*^10}, {3.8311488*^9, 
          4.267524241844444*^10}, {3.8317536*^9, 5.4629936179666664`*^10}, {
          3.8319264*^9, 6.6584629940888885`*^10}, {3.8320992*^9, 
          7.853932370211111*^10}, {3.8320992*^9, 9.049401746333333*^10}, {
          3.832272*^9, 1.0244871122455556`*^11}, {3.832272*^9, 
          1.1440340498577777`*^11}, {3.8329632*^9, 1.26358098747*^11}}]}}, {
        TagBox[{
          Opacity[0.], 
          PointBox[{{3.8303712*^9, 3.072054865722222*^10}}]}, 
         Annotation[#, {{Callout}, Charting`Private`Tag$2881006, {1}}]& ], 
        TagBox[{
          Opacity[0.], 
          PointBox[{{3.8311488*^9, 4.267524241844444*^10}}]}, 
         Annotation[#, {{Callout}, Charting`Private`Tag$2881006, {2}}]& ], 
        TagBox[{
          Opacity[0.], 
          PointBox[{{3.8317536*^9, 5.4629936179666664`*^10}}]}, 
         Annotation[#, {{Callout}, Charting`Private`Tag$2881006, {3}}]& ], 
        TagBox[{
          Opacity[0.], 
          PointBox[{{3.8319264*^9, 6.6584629940888885`*^10}}]}, 
         Annotation[#, {{Callout}, Charting`Private`Tag$2881006, {4}}]& ], 
        TagBox[{
          Opacity[0.], 
          PointBox[{{3.8320992*^9, 7.853932370211111*^10}}]}, 
         Annotation[#, {{Callout}, Charting`Private`Tag$2881006, {5}}]& ], 
        TagBox[{
          Opacity[0.], 
          PointBox[{{3.8320992*^9, 9.049401746333333*^10}}]}, 
         Annotation[#, {{Callout}, Charting`Private`Tag$2881006, {6}}]& ], 
        TagBox[{
          Opacity[0.], 
          PointBox[{{3.832272*^9, 1.0244871122455556`*^11}}]}, 
         Annotation[#, {{Callout}, Charting`Private`Tag$2881006, {7}}]& ], 
        TagBox[{
          Opacity[0.], 
          PointBox[{{3.832272*^9, 1.1440340498577777`*^11}}]}, 
         Annotation[#, {{Callout}, Charting`Private`Tag$2881006, {8}}]& ], 
        TagBox[{
          Opacity[0.], 
          PointBox[{{3.8329632*^9, 1.26358098747*^11}}]}, 
         Annotation[#, {{Callout}, Charting`Private`Tag$2881006, {
           9}}]& ]}}, {{{}, {{}, {{
           GraphicsGroupBox[{{
              Directive[
               AbsoluteThickness[4], 
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]], 
              CapForm["Butt"], 
              JoinForm["Round"], 
              BSplineCurveBox[{
                Offset[{3., 0.}, {3.83037616125*^9, 3.072054865722222*^10}], 
                Offset[{8., 0.}, {3.83037616125*^9, 3.072054865722222*^10}], 
                Offset[{10., 0.}, {3.83037616125*^9, 3.072054865722222*^10}], 
                
                Offset[{12., 0.}, {3.83037616125*^9, 3.072054865722222*^10}], 
                
                
                Offset[{12., 0.}, {3.83037616125*^9, 
                 3.072054865722222*^10}]}]}, {
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]], 
              BSplineCurveBox[{
                Offset[{3., 0.}, {3.83037616125*^9, 3.072054865722222*^10}], 
                Offset[{8., 0.}, {3.83037616125*^9, 3.072054865722222*^10}], 
                Offset[{10., 0.}, {3.83037616125*^9, 3.072054865722222*^10}], 
                
                Offset[{12., 0.}, {3.83037616125*^9, 3.072054865722222*^10}], 
                
                
                Offset[{12., 0.}, {3.83037616125*^9, 
                 3.072054865722222*^10}]}]}, {
              FaceForm[
               Directive[
                GrayLevel[1], 
                Opacity[
                 NCache[
                  Rational[2, 3], 0.6666666666666666]]]], 
              EdgeForm[], 
              PolygonBox[{
                
                Offset[{425., 12.000000000000046`}, {3.83037616125*^9, 
                 3.072054865722222*^10}], 
                
                Offset[{425., -11.999999999999954`}, {3.83037616125*^9, 
                 3.072054865722222*^10}], 
                
                Offset[{12., -12.000000000000046`}, {3.83037616125*^9, 
                 3.072054865722222*^10}], 
                
                Offset[{12., 11.999999999999954`}, {3.83037616125*^9, 
                 3.072054865722222*^10}]}]}, {
              EdgeForm[], 
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]]}, {}, 
             InsetBox[
              FormBox[
               StyleBox[
                RotationBox[
                 ButtonBox[
                  
                  PaneSelectorBox[{
                   False -> StyleBox[
                    "\"Bitcoin, Ethereum prices in free fall as China plans \
crackdown on mining and trading\"", 
                    GrayLevel[0.5], FontSize -> 10, StripOnInput -> False], 
                    True -> StyleBox[
                    "\"Bitcoin, Ethereum prices in free fall as China plans \
crackdown on mining and trading\"", 
                    RGBColor[1, 0.5, 0.5], FontSize -> 10, StripOnInput -> 
                    False]}, 
                   Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                   FrameMargins -> 0], ButtonFunction :> NotebookLocate[{
                    URL[
                    "https://www.cnet.com/news/bitcoin-ethereum-prices-in-\
freefall-as-china-plans-crackdown-on-mining-and-trading/#ftag=CAD590a51e"], 
                    None}], Appearance -> None, Evaluator -> Automatic, 
                  Method -> "Preemptive"], BoxRotation -> 0.], {
                 Opacity[1]}, StripOnInput -> False], TraditionalForm], 
              Offset[{218.5, 0.}, {3.83037616125*^9, 3.072054865722222*^10}], 
              
              NCache[
               ImageScaled[{
                 Rational[1, 2], 
                 Rational[1, 2]}], 
               ImageScaled[{0.5, 0.5}]]]}], 
           GraphicsGroupBox[{{
              Directive[
               AbsoluteThickness[4], 
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]], 
              CapForm["Butt"], 
              JoinForm["Round"], 
              BSplineCurveBox[{
                Offset[{3., 0.}, {3.83115376125*^9, 4.267524241844444*^10}], 
                Offset[{8., 0.}, {3.83115376125*^9, 4.267524241844444*^10}], 
                Offset[{10., 0.}, {3.83115376125*^9, 4.267524241844444*^10}], 
                
                Offset[{12., 0.}, {3.83115376125*^9, 4.267524241844444*^10}], 
                
                
                Offset[{12., 0.}, {3.83115376125*^9, 
                 4.267524241844444*^10}]}]}, {
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]], 
              BSplineCurveBox[{
                Offset[{3., 0.}, {3.83115376125*^9, 4.267524241844444*^10}], 
                Offset[{8., 0.}, {3.83115376125*^9, 4.267524241844444*^10}], 
                Offset[{10., 0.}, {3.83115376125*^9, 4.267524241844444*^10}], 
                
                Offset[{12., 0.}, {3.83115376125*^9, 4.267524241844444*^10}], 
                
                
                Offset[{12., 0.}, {3.83115376125*^9, 
                 4.267524241844444*^10}]}]}, {
              FaceForm[
               Directive[
                GrayLevel[1], 
                Opacity[
                 NCache[
                  Rational[2, 3], 0.6666666666666666]]]], 
              EdgeForm[], 
              PolygonBox[{
                
                Offset[{263., 12.000000000000028`}, {3.83115376125*^9, 
                 4.267524241844444*^10}], 
                
                Offset[{263., -11.999999999999972`}, {3.83115376125*^9, 
                 4.267524241844444*^10}], 
                
                Offset[{12., -12.000000000000028`}, {3.83115376125*^9, 
                 4.267524241844444*^10}], 
                
                Offset[{12., 11.999999999999972`}, {3.83115376125*^9, 
                 4.267524241844444*^10}]}]}, {
              EdgeForm[], 
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]]}, {}, 
             InsetBox[
              FormBox[
               StyleBox[
                RotationBox[
                 ButtonBox[
                  
                  PaneSelectorBox[{
                   False -> StyleBox[
                    "\"Iran Bans Crypto Mining After Months of Blackouts\"", 
                    GrayLevel[0.5], FontSize -> 10, StripOnInput -> False], 
                    True -> StyleBox[
                    "\"Iran Bans Crypto Mining After Months of Blackouts\"", 
                    RGBColor[1, 0.5, 0.5], FontSize -> 10, StripOnInput -> 
                    False]}, 
                   Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                   FrameMargins -> 0], ButtonFunction :> NotebookLocate[{
                    URL[
                    "https://gizmodo.com/iran-bans-crypto-mining-after-months-\
of-blackouts-1846991039"], None}], Appearance -> None, Evaluator -> Automatic,
                   Method -> "Preemptive"], BoxRotation -> 0.], {
                 Opacity[1]}, StripOnInput -> False], TraditionalForm], 
              Offset[{137.5, 0.}, {3.83115376125*^9, 4.267524241844444*^10}], 
              
              NCache[
               ImageScaled[{
                 Rational[1, 2], 
                 Rational[1, 2]}], 
               ImageScaled[{0.5, 0.5}]]]}], 
           GraphicsGroupBox[{{
              Directive[
               AbsoluteThickness[4], 
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]], 
              CapForm["Butt"], 
              JoinForm["Round"], 
              BSplineCurveBox[{
                Offset[{3., 0.}, {3.83175856125*^9, 5.4629936179666664`*^10}], 
                Offset[{8., 0.}, {3.83175856125*^9, 5.4629936179666664`*^10}], 
                
                Offset[{10., 0.}, {3.83175856125*^9, 
                 5.4629936179666664`*^10}], 
                
                Offset[{12., 0.}, {3.83175856125*^9, 
                 5.4629936179666664`*^10}], 
                
                Offset[{12., 0.}, {3.83175856125*^9, 
                 5.4629936179666664`*^10}]}]}, {
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]], 
              BSplineCurveBox[{
                Offset[{3., 0.}, {3.83175856125*^9, 5.4629936179666664`*^10}], 
                Offset[{8., 0.}, {3.83175856125*^9, 5.4629936179666664`*^10}], 
                
                Offset[{10., 0.}, {3.83175856125*^9, 
                 5.4629936179666664`*^10}], 
                
                Offset[{12., 0.}, {3.83175856125*^9, 
                 5.4629936179666664`*^10}], 
                
                Offset[{12., 0.}, {3.83175856125*^9, 
                 5.4629936179666664`*^10}]}]}, {
              FaceForm[
               Directive[
                GrayLevel[1], 
                Opacity[
                 NCache[
                  Rational[2, 3], 0.6666666666666666]]]], 
              EdgeForm[], 
              PolygonBox[{
                
                Offset[{441., 12.000000000000048`}, {3.83175856125*^9, 
                 5.4629936179666664`*^10}], 
                
                Offset[{441., -11.999999999999952`}, {3.83175856125*^9, 
                 5.4629936179666664`*^10}], 
                
                Offset[{12., -12.000000000000048`}, {3.83175856125*^9, 
                 5.4629936179666664`*^10}], 
                
                Offset[{12., 11.999999999999952`}, {3.83175856125*^9, 
                 5.4629936179666664`*^10}]}]}, {
              EdgeForm[], 
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]]}, {}, 
             InsetBox[
              FormBox[
               StyleBox[
                RotationBox[
                 ButtonBox[
                  
                  PaneSelectorBox[{
                   False -> StyleBox[
                    "\"Start of Bitcoin 2021: World\[CloseCurlyQuote]s \
Largest Cryptocurrency Conference Coming To Wynwood\"", 
                    GrayLevel[0.5], FontSize -> 10, StripOnInput -> False], 
                    True -> StyleBox[
                    "\"Start of Bitcoin 2021: World\[CloseCurlyQuote]s \
Largest Cryptocurrency Conference Coming To Wynwood\"", 
                    RGBColor[1, 0.5, 0.5], FontSize -> 10, StripOnInput -> 
                    False]}, 
                   Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                   FrameMargins -> 0], ButtonFunction :> NotebookLocate[{
                    URL[
                    "https://miami.cbslocal.com/2021/06/04/bitcoin-2021-\
worlds-largest-cryptocurrency-conference-coming-to-wynwood/"], None}], 
                  Appearance -> None, Evaluator -> Automatic, Method -> 
                  "Preemptive"], BoxRotation -> 0.], {
                 Opacity[1]}, StripOnInput -> False], TraditionalForm], 
              
              Offset[{226.5, 0.}, {3.83175856125*^9, 
               5.4629936179666664`*^10}], 
              NCache[
               ImageScaled[{
                 Rational[1, 2], 
                 Rational[1, 2]}], 
               ImageScaled[{0.5, 0.5}]]]}], 
           GraphicsGroupBox[{{
              Directive[
               AbsoluteThickness[4], 
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]], 
              CapForm["Butt"], 
              JoinForm["Round"], 
              BSplineCurveBox[{
                Offset[{3., 0.}, {3.83193136125*^9, 6.6584629940888885`*^10}], 
                Offset[{8., 0.}, {3.83193136125*^9, 6.6584629940888885`*^10}], 
                
                Offset[{10., 0.}, {3.83193136125*^9, 
                 6.6584629940888885`*^10}], 
                
                Offset[{12., 0.}, {3.83193136125*^9, 
                 6.6584629940888885`*^10}], 
                
                Offset[{12., 0.}, {3.83193136125*^9, 
                 6.6584629940888885`*^10}]}]}, {
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]], 
              BSplineCurveBox[{
                Offset[{3., 0.}, {3.83193136125*^9, 6.6584629940888885`*^10}], 
                Offset[{8., 0.}, {3.83193136125*^9, 6.6584629940888885`*^10}], 
                
                Offset[{10., 0.}, {3.83193136125*^9, 
                 6.6584629940888885`*^10}], 
                
                Offset[{12., 0.}, {3.83193136125*^9, 
                 6.6584629940888885`*^10}], 
                
                Offset[{12., 0.}, {3.83193136125*^9, 
                 6.6584629940888885`*^10}]}]}, {
              FaceForm[
               Directive[
                GrayLevel[1], 
                Opacity[
                 NCache[
                  Rational[2, 3], 0.6666666666666666]]]], 
              EdgeForm[], 
              PolygonBox[{
                
                Offset[{435., 12.000000000000046`}, {3.83193136125*^9, 
                 6.6584629940888885`*^10}], 
                
                Offset[{435., -11.999999999999954`}, {3.83193136125*^9, 
                 6.6584629940888885`*^10}], 
                
                Offset[{12., -12.000000000000046`}, {3.83193136125*^9, 
                 6.6584629940888885`*^10}], 
                
                Offset[{12., 11.999999999999954`}, {3.83193136125*^9, 
                 6.6584629940888885`*^10}]}]}, {
              EdgeForm[], 
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]]}, {}, 
             InsetBox[
              FormBox[
               StyleBox[
                RotationBox[
                 ButtonBox[
                  
                  PaneSelectorBox[{
                   False -> StyleBox[
                    "\"End of Bitcoin 2021: World\[CloseCurlyQuote]s Largest \
Cryptocurrency Conference Coming To Wynwood\"", 
                    GrayLevel[0.5], FontSize -> 10, StripOnInput -> False], 
                    True -> StyleBox[
                    "\"End of Bitcoin 2021: World\[CloseCurlyQuote]s Largest \
Cryptocurrency Conference Coming To Wynwood\"", 
                    RGBColor[1, 0.5, 0.5], FontSize -> 10, StripOnInput -> 
                    False]}, 
                   Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                   FrameMargins -> 0], ButtonFunction :> NotebookLocate[{
                    URL[
                    "https://miami.cbslocal.com/2021/06/04/bitcoin-2021-\
worlds-largest-cryptocurrency-conference-coming-to-wynwood/"], None}], 
                  Appearance -> None, Evaluator -> Automatic, Method -> 
                  "Preemptive"], BoxRotation -> 0.], {
                 Opacity[1]}, StripOnInput -> False], TraditionalForm], 
              
              Offset[{223.5, 0.}, {3.83193136125*^9, 
               6.6584629940888885`*^10}], 
              NCache[
               ImageScaled[{
                 Rational[1, 2], 
                 Rational[1, 2]}], 
               ImageScaled[{0.5, 0.5}]]]}], 
           GraphicsGroupBox[{{
              Directive[
               AbsoluteThickness[4], 
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]], 
              CapForm["Butt"], 
              JoinForm["Round"], 
              BSplineCurveBox[{
                Offset[{3., 0.}, {3.83210416125*^9, 7.853932370211111*^10}], 
                Offset[{8., 0.}, {3.83210416125*^9, 7.853932370211111*^10}], 
                Offset[{10., 0.}, {3.83210416125*^9, 7.853932370211111*^10}], 
                
                Offset[{12., 0.}, {3.83210416125*^9, 7.853932370211111*^10}], 
                
                
                Offset[{12., 0.}, {3.83210416125*^9, 
                 7.853932370211111*^10}]}]}, {
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]], 
              BSplineCurveBox[{
                Offset[{3., 0.}, {3.83210416125*^9, 7.853932370211111*^10}], 
                Offset[{8., 0.}, {3.83210416125*^9, 7.853932370211111*^10}], 
                Offset[{10., 0.}, {3.83210416125*^9, 7.853932370211111*^10}], 
                
                Offset[{12., 0.}, {3.83210416125*^9, 7.853932370211111*^10}], 
                
                
                Offset[{12., 0.}, {3.83210416125*^9, 
                 7.853932370211111*^10}]}]}, {
              FaceForm[
               Directive[
                GrayLevel[1], 
                Opacity[
                 NCache[
                  Rational[2, 3], 0.6666666666666666]]]], 
              EdgeForm[], 
              PolygonBox[{
                
                Offset[{437., 12.000000000000048`}, {3.83210416125*^9, 
                 7.853932370211111*^10}], 
                
                Offset[{437., -11.999999999999952`}, {3.83210416125*^9, 
                 7.853932370211111*^10}], 
                
                Offset[{12., -12.000000000000048`}, {3.83210416125*^9, 
                 7.853932370211111*^10}], 
                
                Offset[{12., 11.999999999999952`}, {3.83210416125*^9, 
                 7.853932370211111*^10}]}]}, {
              EdgeForm[], 
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]]}, {}, 
             InsetBox[
              FormBox[
               StyleBox[
                RotationBox[
                 ButtonBox[
                  
                  PaneSelectorBox[{
                   False -> StyleBox[
                    "\"El Salvador Becomes First Country To Adopt Bitcoin as \
Legal Tender After Passing Law\"", 
                    GrayLevel[0.5], FontSize -> 10, StripOnInput -> False], 
                    True -> StyleBox[
                    "\"El Salvador Becomes First Country To Adopt Bitcoin as \
Legal Tender After Passing Law\"", 
                    RGBColor[1, 0.5, 0.5], FontSize -> 10, StripOnInput -> 
                    False]}, 
                   Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                   FrameMargins -> 0], ButtonFunction :> NotebookLocate[{
                    URL[
                    "https://www.cnbc.com/2021/06/09/el-salvador-proposes-law-\
to-make-bitcoin-legal-tender.html"], None}], Appearance -> None, Evaluator -> 
                  Automatic, Method -> "Preemptive"], BoxRotation -> 0.], {
                 Opacity[1]}, StripOnInput -> False], TraditionalForm], 
              Offset[{224.5, 0.}, {3.83210416125*^9, 7.853932370211111*^10}], 
              
              NCache[
               ImageScaled[{
                 Rational[1, 2], 
                 Rational[1, 2]}], 
               ImageScaled[{0.5, 0.5}]]]}], 
           GraphicsGroupBox[{{
              Directive[
               AbsoluteThickness[4], 
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]], 
              CapForm["Butt"], 
              JoinForm["Round"], 
              BSplineCurveBox[{
                Offset[{3., 0.}, {3.83210416125*^9, 9.049401746333333*^10}], 
                Offset[{8., 0.}, {3.83210416125*^9, 9.049401746333333*^10}], 
                Offset[{10., 0.}, {3.83210416125*^9, 9.049401746333333*^10}], 
                
                Offset[{12., 0.}, {3.83210416125*^9, 9.049401746333333*^10}], 
                
                
                Offset[{12., 0.}, {3.83210416125*^9, 
                 9.049401746333333*^10}]}]}, {
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]], 
              BSplineCurveBox[{
                Offset[{3., 0.}, {3.83210416125*^9, 9.049401746333333*^10}], 
                Offset[{8., 0.}, {3.83210416125*^9, 9.049401746333333*^10}], 
                Offset[{10., 0.}, {3.83210416125*^9, 9.049401746333333*^10}], 
                
                Offset[{12., 0.}, {3.83210416125*^9, 9.049401746333333*^10}], 
                
                
                Offset[{12., 0.}, {3.83210416125*^9, 
                 9.049401746333333*^10}]}]}, {
              FaceForm[
               Directive[
                GrayLevel[1], 
                Opacity[
                 NCache[
                  Rational[2, 3], 0.6666666666666666]]]], 
              EdgeForm[], 
              PolygonBox[{
                
                Offset[{429., 12.000000000000046`}, {3.83210416125*^9, 
                 9.049401746333333*^10}], 
                
                Offset[{429., -11.999999999999954`}, {3.83210416125*^9, 
                 9.049401746333333*^10}], 
                
                Offset[{12., -12.000000000000046`}, {3.83210416125*^9, 
                 9.049401746333333*^10}], 
                
                Offset[{12., 11.999999999999954`}, {3.83210416125*^9, 
                 9.049401746333333*^10}]}]}, {
              EdgeForm[], 
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]]}, {}, 
             InsetBox[
              FormBox[
               StyleBox[
                RotationBox[
                 ButtonBox[
                  
                  PaneSelectorBox[{
                   False -> StyleBox[
                    "\"US recovers millions in cryptocurrency paid to \
Colonial Pipeline ransomware hackers\"", 
                    GrayLevel[0.5], FontSize -> 10, StripOnInput -> False], 
                    True -> 
                    StyleBox[
                    "\"US recovers millions in cryptocurrency paid to \
Colonial Pipeline ransomware hackers\"", 
                    RGBColor[1, 0.5, 0.5], FontSize -> 10, StripOnInput -> 
                    False]}, 
                   Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                   FrameMargins -> 0], ButtonFunction :> NotebookLocate[{
                    URL[
                    "https://edition.cnn.com/2021/06/07/politics/colonial-\
pipeline-ransomware-recovered/"], None}], Appearance -> None, Evaluator -> 
                  Automatic, Method -> "Preemptive"], BoxRotation -> 0.], {
                 Opacity[1]}, StripOnInput -> False], TraditionalForm], 
              Offset[{220.5, 0.}, {3.83210416125*^9, 9.049401746333333*^10}], 
              
              NCache[
               ImageScaled[{
                 Rational[1, 2], 
                 Rational[1, 2]}], 
               ImageScaled[{0.5, 0.5}]]]}], 
           GraphicsGroupBox[{{
              Directive[
               AbsoluteThickness[4], 
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]], 
              CapForm["Butt"], 
              JoinForm["Round"], 
              BSplineCurveBox[{
                Offset[{3., 0.}, {3.83227696125*^9, 1.0244871122455556`*^11}], 
                Offset[{8., 0.}, {3.83227696125*^9, 1.0244871122455556`*^11}], 
                
                Offset[{10., 0.}, {3.83227696125*^9, 
                 1.0244871122455556`*^11}], 
                
                Offset[{12., 0.}, {3.83227696125*^9, 
                 1.0244871122455556`*^11}], 
                
                Offset[{12., 0.}, {3.83227696125*^9, 
                 1.0244871122455556`*^11}]}]}, {
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]], 
              BSplineCurveBox[{
                Offset[{3., 0.}, {3.83227696125*^9, 1.0244871122455556`*^11}], 
                Offset[{8., 0.}, {3.83227696125*^9, 1.0244871122455556`*^11}], 
                
                Offset[{10., 0.}, {3.83227696125*^9, 
                 1.0244871122455556`*^11}], 
                
                Offset[{12., 0.}, {3.83227696125*^9, 
                 1.0244871122455556`*^11}], 
                
                Offset[{12., 0.}, {3.83227696125*^9, 
                 1.0244871122455556`*^11}]}]}, {
              FaceForm[
               Directive[
                GrayLevel[1], 
                Opacity[
                 NCache[
                  Rational[2, 3], 0.6666666666666666]]]], 
              EdgeForm[], 
              PolygonBox[{
                
                Offset[{354., 12.000000000000037`}, {3.83227696125*^9, 
                 1.0244871122455556`*^11}], 
                
                Offset[{354., -11.999999999999963`}, {3.83227696125*^9, 
                 1.0244871122455556`*^11}], 
                
                Offset[{12., -12.000000000000037`}, {3.83227696125*^9, 
                 1.0244871122455556`*^11}], 
                
                Offset[{12., 11.999999999999963`}, {3.83227696125*^9, 
                 1.0244871122455556`*^11}]}]}, {
              EdgeForm[], 
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]]}, {}, 
             InsetBox[
              FormBox[
               StyleBox[
                RotationBox[
                 ButtonBox[
                  
                  PaneSelectorBox[{
                   False -> StyleBox[
                    "\"Global banking regulators call for toughest rules for \
cryptocurrencies\"", 
                    GrayLevel[0.5], FontSize -> 10, StripOnInput -> False], 
                    True -> StyleBox[
                    "\"Global banking regulators call for toughest rules for \
cryptocurrencies\"", 
                    RGBColor[1, 0.5, 0.5], FontSize -> 10, StripOnInput -> 
                    False]}, 
                   Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                   FrameMargins -> 0], ButtonFunction :> NotebookLocate[{
                    URL[
                    "https://www.theguardian.com/technology/2021/jun/10/\
global-banking-regulators-cryptocurrencies-bitcoin"], None}], Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 BoxRotation -> 0.], {
                 Opacity[1]}, StripOnInput -> False], TraditionalForm], 
              Offset[{183., 0.}, {3.83227696125*^9, 1.0244871122455556`*^11}], 
              NCache[
               ImageScaled[{
                 Rational[1, 2], 
                 Rational[1, 2]}], 
               ImageScaled[{0.5, 0.5}]]]}], 
           GraphicsGroupBox[{{
              Directive[
               AbsoluteThickness[4], 
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]], 
              CapForm["Butt"], 
              JoinForm["Round"], 
              BSplineCurveBox[{
                Offset[{3., 0.}, {3.83227696125*^9, 1.1440340498577777`*^11}], 
                Offset[{8., 0.}, {3.83227696125*^9, 1.1440340498577777`*^11}], 
                
                Offset[{10., 0.}, {3.83227696125*^9, 
                 1.1440340498577777`*^11}], 
                
                Offset[{12., 0.}, {3.83227696125*^9, 
                 1.1440340498577777`*^11}], 
                
                Offset[{12., 0.}, {3.83227696125*^9, 
                 1.1440340498577777`*^11}]}]}, {
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]], 
              BSplineCurveBox[{
                Offset[{3., 0.}, {3.83227696125*^9, 1.1440340498577777`*^11}], 
                Offset[{8., 0.}, {3.83227696125*^9, 1.1440340498577777`*^11}], 
                
                Offset[{10., 0.}, {3.83227696125*^9, 
                 1.1440340498577777`*^11}], 
                
                Offset[{12., 0.}, {3.83227696125*^9, 
                 1.1440340498577777`*^11}], 
                
                Offset[{12., 0.}, {3.83227696125*^9, 
                 1.1440340498577777`*^11}]}]}, {
              FaceForm[
               Directive[
                GrayLevel[1], 
                Opacity[
                 NCache[
                  Rational[2, 3], 0.6666666666666666]]]], 
              EdgeForm[], 
              PolygonBox[{
                
                Offset[{325., 12.000000000000036`}, {3.83227696125*^9, 
                 1.1440340498577777`*^11}], 
                
                Offset[{325., -11.999999999999964`}, {3.83227696125*^9, 
                 1.1440340498577777`*^11}], 
                
                Offset[{12., -12.000000000000036`}, {3.83227696125*^9, 
                 1.1440340498577777`*^11}], 
                
                Offset[{12., 11.999999999999964`}, {3.83227696125*^9, 
                 1.1440340498577777`*^11}]}]}, {
              EdgeForm[], 
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]]}, {}, 
             InsetBox[
              FormBox[
               StyleBox[
                RotationBox[
                 ButtonBox[
                  
                  PaneSelectorBox[{
                   False -> StyleBox[
                    "\"IMF sees legal, economic issues with El Salvador's \
bitcoin move\"", 
                    GrayLevel[0.5], FontSize -> 10, StripOnInput -> False], 
                    True -> StyleBox[
                    "\"IMF sees legal, economic issues with El Salvador's \
bitcoin move\"", 
                    RGBColor[1, 0.5, 0.5], FontSize -> 10, StripOnInput -> 
                    False]}, 
                   Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                   FrameMargins -> 0], ButtonFunction :> NotebookLocate[{
                    URL[
                    "https://www.reuters.com/business/finance/imf-sees-legal-\
economic-issues-with-el-salvador-bitcoin-move-2021-06-10/"], None}], 
                  Appearance -> None, Evaluator -> Automatic, Method -> 
                  "Preemptive"], BoxRotation -> 0.], {
                 Opacity[1]}, StripOnInput -> False], TraditionalForm], 
              
              Offset[{168.5, 0.}, {3.83227696125*^9, 
               1.1440340498577777`*^11}], 
              NCache[
               ImageScaled[{
                 Rational[1, 2], 
                 Rational[1, 2]}], 
               ImageScaled[{0.5, 0.5}]]]}], 
           GraphicsGroupBox[{{
              Directive[
               AbsoluteThickness[4], 
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]], 
              CapForm["Butt"], 
              JoinForm["Round"], 
              BSplineCurveBox[{
                Offset[{3., 0.}, {3.83296816125*^9, 1.26358098747*^11}], 
                Offset[{8., 0.}, {3.83296816125*^9, 1.26358098747*^11}], 
                Offset[{10., 0.}, {3.83296816125*^9, 1.26358098747*^11}], 
                Offset[{12., 0.}, {3.83296816125*^9, 1.26358098747*^11}], 
                Offset[{12., 0.}, {3.83296816125*^9, 1.26358098747*^11}]}]}, {
             
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]], 
              BSplineCurveBox[{
                Offset[{3., 0.}, {3.83296816125*^9, 1.26358098747*^11}], 
                Offset[{8., 0.}, {3.83296816125*^9, 1.26358098747*^11}], 
                Offset[{10., 0.}, {3.83296816125*^9, 1.26358098747*^11}], 
                Offset[{12., 0.}, {3.83296816125*^9, 1.26358098747*^11}], 
                Offset[{12., 0.}, {3.83296816125*^9, 1.26358098747*^11}]}]}, {
             
              FaceForm[
               Directive[
                GrayLevel[1], 
                Opacity[
                 NCache[
                  Rational[2, 3], 0.6666666666666666]]]], 
              EdgeForm[], 
              PolygonBox[{
                
                Offset[{381., 12.00000000000004}, {3.83296816125*^9, 
                 1.26358098747*^11}], 
                
                Offset[{381., -11.99999999999996}, {3.83296816125*^9, 
                 1.26358098747*^11}], 
                
                Offset[{12., -12.00000000000004}, {3.83296816125*^9, 
                 1.26358098747*^11}], 
                
                Offset[{12., 11.99999999999996}, {3.83296816125*^9, 
                 1.26358098747*^11}]}]}, {
              EdgeForm[], 
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.25]]}, {}, 
             InsetBox[
              FormBox[
               StyleBox[
                RotationBox[
                 ButtonBox[
                  
                  PaneSelectorBox[{
                   False -> StyleBox[
                    "\"China to shut down over 90% of its Bitcoin mining \
capacity after local bans\"", 
                    GrayLevel[0.5], FontSize -> 10, StripOnInput -> False], 
                    True -> StyleBox[
                    "\"China to shut down over 90% of its Bitcoin mining \
capacity after local bans\"", 
                    RGBColor[1, 0.5, 0.5], FontSize -> 10, StripOnInput -> 
                    False]}, 
                   Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                   FrameMargins -> 0], ButtonFunction :> NotebookLocate[{
                    URL[
                    "https://www.globaltimes.cn/page/202106/1226598.shtml"], 
                    None}], Appearance -> None, Evaluator -> Automatic, 
                  Method -> "Preemptive"], BoxRotation -> 0.], {
                 Opacity[1]}, StripOnInput -> False], TraditionalForm], 
              Offset[{196.5, 0.}, {3.83296816125*^9, 1.26358098747*^11}], 
              NCache[
               ImageScaled[{
                 Rational[1, 2], 
                 Rational[1, 2]}], 
               ImageScaled[{0.5, 0.5}]]]}]}}}}, {}}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, DisplayFunction -> 
     Identity, AspectRatio -> NCache[
       Rational[1, 4], 0.25], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {3.8300256*^9, 0}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {
        Charting`DateTicksFunction[Automatic, DateTicksFormat -> {Automatic}], 
        Charting`DateTicksFunction[
        Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}}, 
     GridLines -> {{3.8303712*^9, 3.8311488*^9, 3.8317536*^9, 3.8319264*^9, 
       3.8320992*^9, 3.8320992*^9, 3.832272*^9, 3.832272*^9, 3.8329632*^9}, 
       None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 1200, 
     Method -> {
      "NoShowPlotTheme" -> Automatic, "AxisPadding" -> Scaled[0.02], 
       "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.647624, 0.37816, 0.614037], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.571589, 0.586483, 0.], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.915, 0.3325, 0.2125], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
          AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
       "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
       Scaled[0.05], "AllowMicroRanges" -> {True, False}, 
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"BTC and ETH trading volumes\"", TraditionalForm], 
     PlotRange -> {{3.8300256*^9, 3.8332224*^9}, {0, 1.26358098747*^11}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.2]}}, Ticks -> {{}, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"BTC\"", "\"ETH\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.890858737673004*^9},
 CellLabel->"Out[165]=",
 CellID->210422461,ExpressionUUID->"ec9d94ec-ef53-4576-a214-734a3130d63e"]
}, Open  ]]
}, Open  ]],

Cell["", "Text",
 CellChangeTimes->{{3.833368106141592*^9, 3.833368110348988*^9}},
 CellID->534746496,ExpressionUUID->"e0050155-f41e-448b-87d3-a73f19150e3a"],

Cell[CellGroupData[{

Cell["Observations", "Subsection",
 CellChangeTimes->{{3.833285292346196*^9, 3.833285295135407*^9}},
 CellID->265295577,ExpressionUUID->"82baa0ed-6ccb-4e31-86a8-91d52566b0a1"],

Cell[CellGroupData[{

Cell["Going down", "Subsubsection",
 CellChangeTimes->{{3.8332923678436203`*^9, 3.833292370703321*^9}},
 CellID->646711467,ExpressionUUID->"6eff2aea-1b4f-4aae-8598-ae69644c53a1"],

Cell["\<\
We can see that opening prices and volume going down correlate with:\
\>", "Text",
 CellChangeTimes->{{3.8332853736641808`*^9, 3.83328550732653*^9}, {
  3.83328557238618*^9, 3.833285573790243*^9}, {3.833285940655325*^9, 
  3.83328594364848*^9}},
 CellID->864888402,ExpressionUUID->"28464abd-0602-4340-97e5-51410f356976"],

Cell["\<\
The news announcement that China plans to crackdown on mining and trading\
\>", "ItemNumbered",
 CellChangeTimes->{{3.833285299625104*^9, 3.833285397525943*^9}, {
   3.83328544892424*^9, 3.833285471121347*^9}, 3.833285502477895*^9, {
   3.833285577167136*^9, 3.833285584770081*^9}},
 CellID->2010049518,ExpressionUUID->"f0f78484-fc07-440b-a474-d415b8417104"],

Cell["The news announcement Iran bans crypto mining", "ItemNumbered",
 CellChangeTimes->{{3.833285299625104*^9, 3.833285390582189*^9}, {
  3.833285461952187*^9, 3.833285464925241*^9}, {3.833285511453109*^9, 
  3.83328552254608*^9}, {3.8332855864373426`*^9, 3.83328558832544*^9}, {
  3.833306819302574*^9, 3.833306819302863*^9}},
 CellID->836998069,ExpressionUUID->"76d34af9-9910-4244-99c1-14c6ca810a92"],

Cell["\<\
The Sichuan Provincial Development and Reform Commission and the Sichuan \
Energy Bureau issue of a joint notice, ordering local electricity companies \
to \[OpenCurlyDoubleQuote]screen, clean up and terminate\
\[CloseCurlyDoubleQuote] mining operations\
\>", "ItemNumbered",
 CellChangeTimes->{{3.833285299625104*^9, 3.833285390582189*^9}, {
  3.833285461952187*^9, 3.833285464925241*^9}, {3.833285511453109*^9, 
  3.83328552254608*^9}, {3.8332855864373426`*^9, 3.83328558832544*^9}, {
  3.833306820403376*^9, 3.833306824398067*^9}, {3.8333068800542717`*^9, 
  3.833306909462862*^9}},
 CellID->1408657833,ExpressionUUID->"de3217ff-f355-4007-96fa-08d89e6effa5"],

Cell["The start of the \[OpenCurlyDoubleQuote]Bitcoin 2021\
\[CloseCurlyDoubleQuote] conference", "ItemNumbered",
 CellChangeTimes->{{3.833285299625104*^9, 3.833285390582189*^9}, {
  3.833285461952187*^9, 3.833285464925241*^9}, {3.833285511453109*^9, 
  3.83328552254608*^9}, {3.8332855864373426`*^9, 3.833285610094305*^9}},
 CellID->1452474703,ExpressionUUID->"056a65d7-e33f-4582-a362-2ed298f7f3af"],

Cell["Related conjectures:", "Text",
 CellChangeTimes->{{3.8332909456626*^9, 3.83329095389902*^9}},
 CellID->1295717872,ExpressionUUID->"7bde41e7-539b-442f-93c1-283b646c4327"],

Cell["\<\
We can easily conjecture that 1 and 2 made cryptocurrencies (Bitcoin) less \
attractive to miners or traders in China and Iran, hence the price and the \
volume went down. \
\>", "Item",
 CellChangeTimes->{{3.833285646803053*^9, 3.833285783233577*^9}, {
  3.83329088941294*^9, 3.833290916030875*^9}, {3.83329096816415*^9, 
  3.8332909834347343`*^9}},
 CellID->1646094124,ExpressionUUID->"76be5bf9-df67-4a31-a72c-dbe2e423de85"],

Cell["\<\
The most active Bitcoin traders were attending the \
\[OpenCurlyDoubleQuote]Bitcoin 2021\[CloseCurlyDoubleQuote] conference, hence \
the price and volume went down.\
\>", "Item",
 CellChangeTimes->{{3.833285646803053*^9, 3.833285783233577*^9}, {
  3.83329088941294*^9, 3.833290916030875*^9}, {3.83329096816415*^9, 
  3.833291022637398*^9}, {3.833291081511407*^9, 3.833291102143508*^9}, {
  3.8332916157469597`*^9, 3.833291665280939*^9}},
 CellID->2019601414,ExpressionUUID->"49466913-c7cf-4c32-b2a1-75fdd852f71d"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Going up", "Subsubsection",
 CellChangeTimes->{{3.83329237600014*^9, 3.833292378272913*^9}},
 CellID->314440616,ExpressionUUID->"6b8a25fa-a4d8-48fe-8cc1-101ea1d9e566"],

Cell["We can see the prices and volume going up correlate with:", "Text",
 CellChangeTimes->{{3.8332916821328993`*^9, 3.8332916871509647`*^9}, {
  3.833291899070581*^9, 3.83329194605168*^9}},
 CellID->1993661492,ExpressionUUID->"bf2f126d-9f03-4b69-8277-0950a9a28c15"],

Cell["\<\
The news announcement of El Salvador adopting BTC as legal tender currency\
\>", "ItemNumbered",
 CellChangeTimes->{{3.833291986474245*^9, 3.8332920682525597`*^9}, 
   3.83329222496562*^9},
 CellID->281351903,ExpressionUUID->"68402f07-ea0f-44b8-9aa1-f5e04ac784c5"],

Cell["\<\
The news announcement that US Justice Department recovered most of the ransom \
paid to the Colonial Pipeline hackers\
\>", "ItemNumbered",
 CellChangeTimes->{{3.833291986474245*^9, 3.833292070084165*^9}, {
  3.833292220015972*^9, 3.8332922318620157`*^9}, {3.833292269316688*^9, 
  3.833292326712945*^9}},
 CellID->2069926674,ExpressionUUID->"db4eb5f8-0486-4192-8fcf-1e7864f6ce68"],

Cell["The end of the \[OpenCurlyDoubleQuote]Bitcoin 2021\
\[CloseCurlyDoubleQuote] conference", "ItemNumbered",
 CellChangeTimes->{{3.833291986474245*^9, 3.833292066563249*^9}},
 CellID->22528518,ExpressionUUID->"e2748fe8-63e5-41e7-858b-562c3d039ac0"],

Cell["Related conjectures:", "Text",
 CellChangeTimes->{{3.833292536698251*^9, 3.833292544946875*^9}},
 CellID->679680154,ExpressionUUID->"fc228e53-0b34-442e-a6fd-5aedb098ed2a"],

Cell["\<\
Of course, a country deciding to use BTC as legal tender would make (some) \
traders willing to invest in BTC.\
\>", "Item",
 CellChangeTimes->{{3.8332925840509977`*^9, 3.833292683066408*^9}, {
   3.833292754659622*^9, 3.833292757640811*^9}, 3.833292820776719*^9},
 CellID->918829885,ExpressionUUID->"f2cd9ef3-7152-4723-ac22-833236a14b6a"],

Cell["\<\
The announcement that USA Justice Department, have made (some) traders to \
more confidently invest in BTC.\
\>", "Item",
 CellChangeTimes->{{3.8332925840509977`*^9, 3.833292828970498*^9}},
 CellID->218971618,ExpressionUUID->"8f61c07a-3699-4ff5-b421-52f9ac1df335"],

Cell["\<\
Although, the opposite could also happen -- for some people if BTC can be \
recovered by law enforcement, then BTC is less attractive for financial \
transactions.\
\>", "Subitem",
 CellChangeTimes->{{3.8332925840509977`*^9, 3.833292924103283*^9}},
 CellID->1616496415,ExpressionUUID->"fdeb20b9-6cdf-4763-8ee3-d857684e9c7c"],

Cell["\<\
After the end of \[OpenCurlyDoubleQuote]Bitcoin 2021\[CloseCurlyDoubleQuote] \
conference the attending traders resumed their usual activity.\
\>", "Item",
 CellChangeTimes->{{3.8332925840509977`*^9, 3.833292971140465*^9}},
 CellID->639628708,ExpressionUUID->"77f43c26-47df-4cfe-82c8-027e0bcd3146"],

Cell["\<\
That conjecture and the \[OpenCurlyDoubleQuote]start of Bitcoin 2021\
\[CloseCurlyDoubleQuote] conjecture above support each other.\
\>", "Subitem",
 CellChangeTimes->{{3.8332925840509977`*^9, 3.8332930439930897`*^9}, {
  3.833367999951551*^9, 3.833368000026161*^9}},
 CellID->2084042121,ExpressionUUID->"14ee29dc-fe2f-4313-a42a-56ea37003176"],

Cell["\<\
The same pattern is observed for both BTC and ETH trading volumes.\
\>", "Subitem",
 CellChangeTimes->{{3.8332925840509977`*^9, 3.8332930439930897`*^9}, {
  3.833368000637061*^9, 3.833368034556471*^9}},
 CellID->1037645077,ExpressionUUID->"88849b19-6a49-4b6b-bb34-bdfcaa745c00"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Time series correlations", "Section",
 CellChangeTimes->{{3.833013181859569*^9, 3.833013212400588*^9}},
 CellID->2133595499,ExpressionUUID->"b40797ec-7d16-418e-962f-a038def7b2f7"],

Cell["\<\
In this section we compute and visualize correlations between the time series \
of a set of cryptocurrencies.\
\>", "Text",
 CellChangeTimes->{{3.833279971580923*^9, 3.833280024388904*^9}},
 CellID->657614087,ExpressionUUID->"6a101fc6-ccf4-4d63-952e-df5994448e6c"],

Cell[CellGroupData[{

Cell["Getting time series data", "Subsection",
 CellChangeTimes->{{3.833293446265877*^9, 3.8332934518686934`*^9}},
 CellID->1569112747,ExpressionUUID->"f36dd83d-08aa-4727-8b9e-0b3038b84d2b"],

Cell[CellGroupData[{

Cell["Here are the cryptocurrencies we consider:", "Text",
 CellChangeTimes->{{3.8332799663045387`*^9, 3.8332799692411003`*^9}, {
  3.833280006422339*^9, 3.8332800461694603`*^9}},
 CellID->978753669,ExpressionUUID->"27552f34-af8a-4b22-b94b-862a72bb8eee"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lsCCFocus", "=", 
  RowBox[{
  "CryptocurrencyData", "[", "\"\<Cryptocurrencies\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.833279942632493*^9, 3.833279963290041*^9}, {
   3.8333040568531647`*^9, 3.833304094172811*^9}, {3.833305568339781*^9, 
   3.833305579269298*^9}, 3.890858685359309*^9},
 CellLabel->"In[230]:=",
 CellID->188178863,ExpressionUUID->"552d9f00-1618-4688-b043-71be6140fa47"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"ADA\"\>", ",", "\<\"BCH\"\>", ",", "\<\"BNB\"\>", 
   ",", "\<\"BTC\"\>", ",", "\<\"DOGE\"\>", ",", "\<\"DOT1\"\>", 
   ",", "\<\"EOS\"\>", ",", "\<\"ETC\"\>", ",", "\<\"ETH\"\>", 
   ",", "\<\"FIL\"\>", ",", "\<\"HEX\"\>", ",", "\<\"ICP1\"\>", 
   ",", "\<\"LINK\"\>", ",", "\<\"LTC\"\>", ",", "\<\"MATIC\"\>", 
   ",", "\<\"SOL1\"\>", ",", "\<\"THETA\"\>", ",", "\<\"TRX\"\>", 
   ",", "\<\"UNI3\"\>", ",", "\<\"USDC\"\>", ",", "\<\"USDT\"\>", 
   ",", "\<\"VET\"\>", ",", "\<\"XLM\"\>", ",", "\<\"XMR\"\>", 
   ",", "\<\"XRP\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.8908587377570066`*^9, 3.890859126801457*^9},
 CellLabel->"Out[230]=",
 CellID->1008742356,ExpressionUUID->"e3eeee39-1f66-427b-85b0-df3266ced6d1"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "The start date we use is the one that was ",
 Cell[BoxData[
  FormBox["90", TraditionalForm]],ExpressionUUID->
  "bce23568-5e76-42a3-8a69-f087a7ee5d66"],
 " days ago:"
}], "Text",
 CellChangeTimes->{{3.8332800598602448`*^9, 3.833280081101416*^9}, {
   3.833280165478057*^9, 3.833280181464904*^9}, {3.833281123673669*^9, 
   3.833281128186121*^9}, {3.833294453034013*^9, 3.833294453607258*^9}, {
   3.833295607732489*^9, 3.833295607811659*^9}, 3.8333637418836937`*^9},
 CellID->1626222057,ExpressionUUID->"1e75c067-2f35-4e4c-a894-eeee8409c386"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"startDate", "=", 
  RowBox[{"DatePlus", "[", 
   RowBox[{
    RowBox[{"Date", "[", "]"}], ",", 
    RowBox[{"-", 
     RowBox[{"Quantity", "[", 
      RowBox[{"90", ",", "\"\<Days\>\""}], "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.833280082445321*^9, 3.833280097706764*^9}, {
  3.8332801563550653`*^9, 3.833280226466012*^9}, {3.833281130213148*^9, 
  3.8332811308741407`*^9}, {3.833294159135447*^9, 3.833294159820365*^9}, {
  3.833294449501292*^9, 3.833294451233395*^9}, {3.833295610758154*^9, 
  3.833295610851613*^9}},
 CellLabel->"In[231]:=",
 CellID->889736630,ExpressionUUID->"1df1c6f3-02b2-4976-9afa-612d72cdb5bc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2023", ",", "1", ",", "18", ",", "22", ",", "12", ",", "6.836868`"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8908587377732477`*^9, 3.890859126840932*^9},
 CellLabel->"Out[231]=",
 CellID->1696867874,ExpressionUUID->"22258757-833f-4790-8e3e-feb03ddb9ee8"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"aTSOpen", "=", 
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{"CryptocurrencyData", "[", 
      RowBox[{"lsCCFocus", ",", "\"\<Open\>\"", ",", "startDate"}], "]"}], 
     ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Head", "[", "#", "]"}], "===", "TemporalData"}], "&"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"aTSVolume", "=", 
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{"CryptocurrencyData", "[", 
      RowBox[{"lsCCFocus", ",", "\"\<Volume\>\"", ",", "startDate"}], "]"}], 
     ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Head", "[", "#", "]"}], "===", "TemporalData"}], "&"}]}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.833013222921318*^9, 3.833013372090393*^9}, {
   3.833013640763783*^9, 3.833013648482081*^9}, {3.8330138407917757`*^9, 
   3.833013861818623*^9}, {3.833279932982904*^9, 3.833279939282342*^9}, 
   3.833280053080147*^9, {3.833280103748961*^9, 3.8332801290158567`*^9}, {
   3.890858685359844*^9, 3.89085868536022*^9}, {3.890859021333947*^9, 
   3.8908590827157087`*^9}, 3.890859255250207*^9},
 CellLabel->"In[242]:=",
 CellID->874906349,ExpressionUUID->"11415c51-f3cb-4fb4-bec2-af172038aef5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dateRange", "=", 
   RowBox[{"{", 
    RowBox[{"startDate", ",", 
     RowBox[{"Date", "[", "]"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"aTSOpen2", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Quiet", "@", 
      RowBox[{"TimeSeriesResample", "[", 
       RowBox[{"#", ",", 
        RowBox[{"Append", "[", 
         RowBox[{"dateRange", ",", "\"\<Day\>\""}], "]"}]}], "]"}]}], "&"}], "/@",
     "aTSOpen"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"aTSVolume2", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Quiet", "@", 
      RowBox[{"TimeSeriesResample", "[", 
       RowBox[{"#", ",", 
        RowBox[{"Append", "[", 
         RowBox[{"dateRange", ",", "\"\<Day\>\""}], "]"}]}], "]"}]}], "&"}], "/@",
     "aTSVolume"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.833013905470892*^9, 3.8330139690384493`*^9}, {
   3.833013999347054*^9, 3.833014028934702*^9}, {3.833014123818162*^9, 
   3.8330141899130173`*^9}, 3.833014373631439*^9, {3.833280221292605*^9, 
   3.8332802888451138`*^9}},
 CellLabel->"In[244]:=",
 CellID->730476634,ExpressionUUID->"ce552769-e9ae-496d-bb00-9b0c467b4294"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\"Cleaning\" the data:", "Text",
 CellChangeTimes->{{3.89085953872014*^9, 3.8908595452538233`*^9}},
 CellID->254136533,ExpressionUUID->"f76ec478-5cc9-4055-9a83-6f1b036a8082"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"aTSOpen2", "=", 
   RowBox[{"Select", "[", 
    RowBox[{"aTSOpen2", ",", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"Length", "[", 
        RowBox[{"#", "[", "\"\<Values\>\"", "]"}], "]"}], " ", ">", " ", 
       "0"}], " ", "&"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"aTSVolume2", "=", 
   RowBox[{"KeyTake", "[", 
    RowBox[{"aTSVolume2", ",", 
     RowBox[{"Keys", "[", "aTSOpen2", "]"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.890859526221923*^9, 3.890859572728076*^9}},
 CellLabel->"In[267]:=",
 CellID->1866686397,ExpressionUUID->"f87ef3c2-b43b-40f3-9ab1-23db6f414137"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Opening price time series", "Subsection",
 CellChangeTimes->{{3.833014989263335*^9, 3.833014990477744*^9}, {
  3.8332805419577017`*^9, 3.83328056909343*^9}},
 CellID->2104261386,ExpressionUUID->"bd9b6854-b953-4e9d-bb5a-010eb8585d1e"],

Cell[CellGroupData[{

Cell["\<\
Show heat-map plot corresponding to the max-normalized time series with \
clustering:\
\>", "Text",
 CellChangeTimes->{{3.83328063576219*^9, 3.8332806563500032`*^9}, {
  3.833281057072205*^9, 3.833281076311699*^9}, {3.833281355393111*^9, 
  3.8332813663226433`*^9}},
 CellID->1560415706,ExpressionUUID->"54984b94-e403-446b-8317-228fe6efb62d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"matVals", "=", 
   RowBox[{"Association", "[", 
    RowBox[{
     RowBox[{"\"\<SparseMatrix\>\"", "->", 
      RowBox[{"SparseArray", "[", 
       RowBox[{"Values", "@", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"#", "[", "\"\<Values\>\"", "]"}], "/", 
            RowBox[{"Max", "[", 
             RowBox[{"#", "[", "\"\<Values\>\"", "]"}], "]"}]}], "&"}], ",", 
          "aTSOpen2"}], "]"}]}], "]"}]}], ",", 
     RowBox[{"\"\<RowNames\>\"", "\[Rule]", 
      RowBox[{"Keys", "[", "aTSOpen2", "]"}]}], ",", 
     RowBox[{"\"\<ColumnNames\>\"", "\[Rule]", 
      RowBox[{"Range", "[", 
       RowBox[{"Length", "[", 
        RowBox[{
         RowBox[{
         "aTSOpen2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
         "[", "\"\<Times\>\"", "]"}], "]"}], "]"}]}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{"HeatmapPlot", "[", 
  RowBox[{
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"#", "/.", 
       RowBox[{"x_Association", "\[RuleDelayed]", 
        RowBox[{"Keys", "[", "x", "]"}]}]}], "&"}], ",", "matVals"}], "]"}], 
   ",", 
   RowBox[{"Dendrogram", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"True", ",", "False"}], "}"}]}], ",", 
   RowBox[{"DistanceFunction", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"CosineDistance", ",", "None"}], "}"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "1200"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.833280667544353*^9, 3.833280690123899*^9}, {
  3.833280761047305*^9, 3.833280764539287*^9}, {3.8332811027825727`*^9, 
  3.833281138884143*^9}, {3.8332815223824997`*^9, 3.833281532316518*^9}, {
  3.8332816119815607`*^9, 3.833281633771822*^9}},
 CellLabel->"In[270]:=",
 CellID->836473578,ExpressionUUID->"6bc48f32-bdf1-46e9-b842-dd618d6c303a"],

Cell[BoxData[
 GraphicsBox[{RasterBox[CompressedData["
1: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
bb9AxXNCK4/LtBzf/SZf3HxJoMogT515m45VAXsWrQ1qwaupdEUZFwI/TG5I
5XTREK4bYruPrwmSYnf23PnNwu/vJ62lOkiudhp9EKNZjH3FGqtGDxM4f3Cx
lJcQDdM3Iy8H9lZjzzezD03HCazRPn+/SoWGxAevT2jI1eInj220fCKBq2/l
56Rb6Njn7JGIgVb8iA96uNqWgPBoFC9XBg03A6w+CvQ0INgyM3cvqZO57XXc
97LouNz563quTSv4Yvq2PPYhc4fXhsZ1O+gwfuEwYK3VjMdy3Yf8P5P1239R
BXgZ8OlSvn00sw00by03ei2BE0Gjk7rODLR1cJ+zPdoB0+Jb9lbpBIJ2yfT+
nqFjnfKHNHnHNgj9nBniGiVg6vHj/VM2A70hp47MHehCyujTFSsrCDxerd5Y
eoYB5/Sxlr+D7XjnJz39N4zAdHHPE85DOnhclvlcy2nBg/w/kWX5BHod72p+
3c7AY523H3r3tKNj/SLVdVEE3J97PRoMp6P8V5vG4oUWLHtwyqjvPYEtUT5m
zXl0JN+bveHn24obRbxOO3IJbOZOdvklysD1Jkc++kQbju0Y4N7ylfxeUUeT
wxIMrLH5aVmwqB2mH1bDkeTt6S33ZBW30LE0smrfBoVmaBRb99nfJvn8u4L0
CSE6+CkvJGZ6m7AziCfq4hsCp+OIX/Xv6dBbvnPxqi2tqGNNqlolEej8ye9q
1klHeIDGpqqpVli+s/0nkklA/LdVocMCHUqrSrs9AtrQcFxp7EkW6S8lX0+1
LCF52/a5W3xMG9p/pYY++I/MX9037ikE0qFzVfze+aIWGJvyvch6S55XG6+K
SaTjvERf+pxqK0b4Ey/+TSVQVvToNmWcjgC7rVFKRm1IrRDJMPMjIKPVHXFN
mY46qY35Ex7N2H9u6+se0//blwJq8G0a2OOV0eHK9Rjh7KS8JHXAm+/Iiw+y
NAzEUPl4SmpQvX1o9w1lApc+/DRx7KPizOK7pW2GVRAPMn+zk/RfqoCFedVz
Uje6KBMmRD3KN9fWL31KPrdVZk7Amo6Oa1lX1Ha3YFh+fNyf7P/3yRuBhCQD
Lfq5fga87SgRL30pTO4Xs0fx+uZbdLCN6IfF/FrQGpr7s4fMU8u5PHp4g6gI
Kc82iW3+Drk3n1hMFQKFBwzae8ap2LBXUv7LWBVeRg1PrCbzoDXPnQ1HLo6A
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
C358JP141ALbgule1BRysvR/FuPUgED/pnJyf6dNz5ws70V50yP2lZ95eKpj
+kRzMQHZgmL+jPMMjH/7IRh62AciZ83E0crEcruM9ZpJDMiKOfy2KfVFpV2G
xfF0Jurbok//1e+FQYbGk4erMnDMdHW7HumPblp5pdBayL37oXStZqE/iH0B
fh8+EPAfCgy0ekLHCWXDg9Kp7hCoHroq/pAJadnwOKXDvfhc8WemoSEV7FNF
9brNTAidK5ZWSWGgcTHtbH2VL7TYjwK2ihN4J1tz9KcW6R+/Pi9VfOmN1KsB
ly+TvDm88DVfnQqpoyxW7XDd7419YpdbVksR8H3usmTBMQbu7lP8eDLaG501
v/ZldJL+bmHAyOQ90p8ucaAkefviwMWykEmSx0d/e3ru+MZAqiNxKEbJH4u/
rxqb6GBCofZS8we1PqQP3lv4c/oF5G1e/j7CYaJyqGvwSk4fBAvU6ui1b/B8
/e5nRQtIPhL/m2Q134czN3aNagRU41Vf6KtrpK5zisid+HSrD8T+/tMtY69A
JZI2saaZ6JEXcnn+tQ/PL85sP76zCn4zMn5uJL+kHig8t7aqDymt982ebH+H
4tffrSPJfEr7ClxZqiTvyKvs4Ka8wFH7EJPDP5k43bC4QuZuHyTWfI59JPMa
4TskRM2UCeQPvaIfpvdjbtDJY7lzPdL3mDl8lCT7Lua+yCmmH9O8ZaZ5wh+R
fX3doxwuAt/Hwj2CJvqwwvcQy3ZvNTrj5dtOfGDC2GLV6MqfvbB2puwrGyuC
jV27fx2bCRNWe6rOkz4YvzxMdXz0Bnlael+7/vteT8mJcU+ZAdzxLOxb+LQR
zz1CL1ibE7ihNE8J9xkA2/N6RJlUM6KMEnwC8gkcl9W8U8YaRGXMkQX5Wu3g
ubJJVd6dwFqX0mX57AH8/Zo6/dDyM2iHnEwrJ8g+LtlcXVDbh6qTC7YGBL/D
B/0FjofbmfjO/3m30W6ynkJ1fZQbL6Cp61NdR+rt4KxYWlM5Wf8HW96VvHwL
1fCgHClyrnSWdzu0+fZja7rCJuGTtRgr5or24iHxk992cS13P+7rMbPoidWQ
PylnP1nDRD+nYd5xtBc6/0pdnWyLkRScZJo3Sz5f3BFk3N2Hp2KqkYEOVSjb
pyeyqp6Ji+1G/KvnexEl1RB1Sr0EqwebtYNoTJxRYlICrfvgfFPl892bFdDg
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
WTDxafTT1AZuKkL4zx7VSHaBeM+ZNG8VFlabTD9wNBhEWEoT5dQRKzyf5VHn
VGGi5rnmrpkdVDhQG5dPB7qCx5kivHaMCWP/LbzsfBRY1K4MN3hrh1Ony1e5
XySgtUIweG4NDWOJumc/XPTGyJsUvqBSAh6uAZ0P8qlYIbeQyxrxgChFZZlU
M9m/PPJRV5JoCD60Le1fpx/Z2Qqij2YZkJSbVlZypaHsub/n3Ctf7IyclXjG
Inv55n5dCX8apgKGT/oTvoi6XLJWopCBzEcL/xpfDKH7AbdDSE02RAcOcCzk
kv3YF8ytE01yQo+m/cvFTKwDP9vkbQYkhhKmZKg0lLtnnE30CMCTqY3ybRkk
p703rP3lQnJg6L+XY1vSwbuop3eXvE/FLSun9+U07HocfKU11B+bleXO928h
EN0V5XTkBA3y9/jU5J744G9KEe1nNAPCJ+7k7eimQbd616S5SgDS8xmzQe4E
DFUFqWIzVFTeMVJPSfTCac9Dd05YEXB8/pqiwknD6s0yh1g/vFClcfPDsA2B
HB11wcxlNKS+VRs8RvPCz32u0ttkSE+XzQj6pUbm3tsDiTHhPthD4+qtJHlp
dc/Tu1MhNOQ7OEUv3+qH0/LHDumSnG/wToGXt5CG7VlLBs8u+SO4bNXyn8sJ
ZBXos01fpeGYw2vXj/pkXy910TtvEzjhrybFolEReX1tSPE6LxDXrizl9JHc
eygjMuUeFU95UhgVyz3wL8ZA+m4rAd6iWMncBCripdc/8bjkgZzAg6t2qzGx
M9qDr12WCm6Fjg5ZN1fc12UXr79F7nOT8xnGHyi4zafOsc3PGVf9Dnf1xzGR
fdpf0TqDgsqb/Y5IdsKAjzC/1RQTnWtNL/nND2Ld6AnRszp2MB0Y4Be3YSLI
eE2RBCcVPi1GXPVhZF/3nnPt/EJA/MGAiEMcFUYvxOq2HPPA2olPXuOknz68
MhFREEXDCsrlNevt/OBgwPGOHwSe6L/aemgnDRc4DPpoDG9EeaZ8oTux4Py0
RmvP4gC+fxR+Zjh7FY8+lt4YbGAifXLj96XTFPzJHm0d1HNAiN7DnU9vsXAn
r95z7acB1Ia/VL1YYY6cah/P5CoWPC7bMBuvDEA5YBv/i1ETnNNdV6WxiYmv
4jV5bueoEM3p7LJ2cYOVt6SlUAkT2jNcD83tKcjgX5A7KOEIASuJKg4mE0Vb
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
    "], {{0, 0}, {91, 21}}, {0, 1}], 
   {GrayLevel[0.6], 
    {RGBColor[
     0, 1, 0]}, {{}, {
      LineBox[{{91., 2.5}, {91.30470444169178, 2.5}, {91.30470444169178, 
       3.5}, {91., 3.5}}], 
      LineBox[{{91., 4.5}, {91.28166493845559, 4.5}, {91.28166493845559, 
       5.5}, {91., 5.5}}], 
      LineBox[{{91.30470444169178, 3.}, {91.43728258754592, 3.}, {
       91.43728258754592, 5.}, {91.28166493845559, 5.}}], 
      LineBox[{{91., 1.5}, {91.43901435725519, 1.5}, {91.43901435725519, 
       4.}, {91.43728258754592, 4.}}], 
      LineBox[{{91., 7.5}, {91.00429888680887, 7.5}, {91.00429888680887, 
       8.5}, {91., 8.5}}], 
      LineBox[{{91., 6.5}, {91.43498220192171, 6.5}, {91.43498220192171, 
       8.}, {91.00429888680887, 8.}}], 
      LineBox[{{91.43901435725519, 2.75}, {91.47836504361953, 2.75}, {
       91.47836504361953, 7.25}, {91.43498220192171, 7.25}}], 
      LineBox[{{91.47836504361953, 5.}, {91.48433150709195, 5.}, {
       91.48433150709195, 9.5}, {91., 9.5}}], 
      LineBox[{{91.48433150709195, 7.25}, {91.50183230495307, 7.25}, {
       91.50183230495307, 10.5}, {91., 10.5}}], 
      LineBox[{{91.50183230495307, 8.875}, {91.50675655700587, 8.875}, {
       91.50675655700587, 11.5}, {91., 11.5}}], 
      LineBox[{{91.50675655700587, 10.1875}, {91.54793804246344, 10.1875}, {
       91.54793804246344, 12.5}, {91., 12.5}}], 
      LineBox[{{91.54793804246344, 11.34375}, {91.58616565472185, 11.34375}, {
       91.58616565472185, 13.5}, {91., 13.5}}], 
      LineBox[{{91., 0.5}, {91.59705522724896, 0.5}, {91.59705522724896, 
       12.421875}, {91.58616565472185, 12.421875}}], 
      LineBox[{{91.59705522724896, 6.4609375}, {91.78927955712415, 
       6.4609375}, {91.78927955712415, 14.5}, {91., 14.5}}], 
      LineBox[{{91., 16.5}, {91.42366933545894, 16.5}, {91.42366933545894, 
       17.5}, {91., 17.5}}], 
      LineBox[{{91., 15.5}, {91.59448833838835, 15.5}, {91.59448833838835, 
       17.}, {91.42366933545894, 17.}}], 
      LineBox[{{91.59448833838835, 16.25}, {91.75874176473175, 16.25}, {
       91.75874176473175, 18.5}, {91., 18.5}}], 
      LineBox[{{91.78927955712415, 10.48046875}, {91.88415697050083, 
       10.48046875}, {91.88415697050083, 17.375}, {91.75874176473175, 
       17.375}}], 
      LineBox[{{91.88415697050083, 13.927734375}, {92.45474010063032, 
       13.927734375}, {92.45474010063032, 19.5}, {91., 19.5}}], 
      LineBox[{{92.45474010063032, 16.7138671875}, {109.2, 16.7138671875}, {
       109.2, 20.5}, {91., 20.5}}]}}, {}}},
  BaseStyle->{FontSize -> 10},
  CoordinatesToolOptions:>{
   "DisplayFunction" -> Function[HeatmapPlot`Private`pt$, 
      Column[{
        Part[{
         "ADA", "LTC", "ETC", "BCH", "THETA", "VET", "TRX", "USDC", "USDT", 
          "LINK", "BNB", "XMR", "DOGE", "EOS", "MATIC", "XLM", "ETH", "BTC", 
          "XRP", "FIL", "HEX"}, 
         Part[
          ({
           Clip[Floor[Part[#, 1] - Part[#2, 2]] + 1, {1, 
             Part[#, 1]}], 
           Clip[Floor[
              Part[#2, 1]] + 1, {1, 
             Part[#, 2]}]}& )[{21, 91}, HeatmapPlot`Private`pt$], 1]], 
        Part[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 
         19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 
         36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 
         53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 
         70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 
         87, 88, 89, 90, 91}, 
         Part[
          ({
           Clip[Floor[Part[#, 1] - Part[#2, 2]] + 1, {1, 
             Part[#, 1]}], 
           Clip[Floor[
              Part[#2, 1]] + 1, {1, 
             Part[#, 2]}]}& )[{21, 91}, HeatmapPlot`Private`pt$], 2]], 
        Extract[CompressedData["
1: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
nngxKg==
         "], 
         ({
          Clip[Floor[Part[#, 1] - Part[#2, 2]] + 1, {1, 
            Part[#, 1]}], 
          Clip[Floor[
             Part[#2, 1]] + 1, {1, 
            Part[#, 2]}]}& )[{21, 91}, HeatmapPlot`Private`pt$]]}, Background -> 
       White, ImageSize -> {Automatic, 30}, 
       ImageMargins -> {{5, 5}, {10, 10}}, Alignment -> Center]], 
    "CopiedValueFunction" -> Function[HeatmapPlot`Private`pt$, {
       ({
        Clip[Floor[Part[#, 1] - Part[#2, 2]] + 1, {1, 
          Part[#, 1]}], 
        Clip[Floor[
           Part[#2, 1]] + 1, {1, 
          Part[#, 2]}]}& )[{21, 91}, HeatmapPlot`Private`pt$], 
       Extract[CompressedData["
1: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
nngxKg==
        "], 
        ({
         Clip[Floor[Part[#, 1] - Part[#2, 2]] + 1, {1, 
           Part[#, 1]}], 
         Clip[Floor[
            Part[#2, 1]] + 1, {1, 
           Part[#, 2]}]}& )[{21, 91}, HeatmapPlot`Private`pt$]]}]},
  Frame->True,
  FrameLabel->{None, None},
  FrameStyle->AbsoluteThickness[0],
  FrameTicks->{{{{20.5, 
       FormBox["\"ADA\"", TraditionalForm], {0, 0}}, {19.5, 
       FormBox["\"LTC\"", TraditionalForm], {0, 0}}, {18.5, 
       FormBox["\"ETC\"", TraditionalForm], {0, 0}}, {17.5, 
       FormBox["\"BCH\"", TraditionalForm], {0, 0}}, {16.5, 
       FormBox["\"THETA\"", TraditionalForm], {0, 0}}, {15.5, 
       FormBox["\"VET\"", TraditionalForm], {0, 0}}, {14.5, 
       FormBox["\"TRX\"", TraditionalForm], {0, 0}}, {13.5, 
       FormBox["\"USDC\"", TraditionalForm], {0, 0}}, {12.5, 
       FormBox["\"USDT\"", TraditionalForm], {0, 0}}, {11.5, 
       FormBox["\"LINK\"", TraditionalForm], {0, 0}}, {10.5, 
       FormBox["\"BNB\"", TraditionalForm], {0, 0}}, {9.5, 
       FormBox["\"XMR\"", TraditionalForm], {0, 0}}, {8.5, 
       FormBox["\"DOGE\"", TraditionalForm], {0, 0}}, {7.5, 
       FormBox["\"EOS\"", TraditionalForm], {0, 0}}, {6.5, 
       FormBox["\"MATIC\"", TraditionalForm], {0, 0}}, {5.5, 
       FormBox["\"XLM\"", TraditionalForm], {0, 0}}, {4.5, 
       FormBox["\"ETH\"", TraditionalForm], {0, 0}}, {3.5, 
       FormBox["\"BTC\"", TraditionalForm], {0, 0}}, {2.5, 
       FormBox["\"XRP\"", TraditionalForm], {0, 0}}, {1.5, 
       FormBox["\"FIL\"", TraditionalForm], {0, 0}}, {0.5, 
       FormBox["\"HEX\"", TraditionalForm], {0, 0}}}, None}, {{{0.5, 
       FormBox[
        RotationBox["1", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {1.5, 
       FormBox[
        RotationBox["2", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {2.5, 
       FormBox[
        RotationBox["3", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {3.5, 
       FormBox[
        RotationBox["4", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {4.5, 
       FormBox[
        RotationBox["5", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {5.5, 
       FormBox[
        RotationBox["6", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {6.5, 
       FormBox[
        RotationBox["7", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {7.5, 
       FormBox[
        RotationBox["8", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {8.5, 
       FormBox[
        RotationBox["9", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {9.5, 
       FormBox[
        RotationBox["10", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {10.5, 
       FormBox[
        RotationBox["11", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {11.5, 
       FormBox[
        RotationBox["12", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {12.5, 
       FormBox[
        RotationBox["13", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {13.5, 
       FormBox[
        RotationBox["14", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {14.5, 
       FormBox[
        RotationBox["15", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {15.5, 
       FormBox[
        RotationBox["16", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {16.5, 
       FormBox[
        RotationBox["17", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {17.5, 
       FormBox[
        RotationBox["18", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {18.5, 
       FormBox[
        RotationBox["19", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {19.5, 
       FormBox[
        RotationBox["20", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {20.5, 
       FormBox[
        RotationBox["21", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {21.5, 
       FormBox[
        RotationBox["22", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {22.5, 
       FormBox[
        RotationBox["23", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {23.5, 
       FormBox[
        RotationBox["24", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {24.5, 
       FormBox[
        RotationBox["25", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {25.5, 
       FormBox[
        RotationBox["26", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {26.5, 
       FormBox[
        RotationBox["27", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {27.5, 
       FormBox[
        RotationBox["28", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {28.5, 
       FormBox[
        RotationBox["29", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {29.5, 
       FormBox[
        RotationBox["30", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {30.5, 
       FormBox[
        RotationBox["31", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {31.5, 
       FormBox[
        RotationBox["32", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {32.5, 
       FormBox[
        RotationBox["33", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {33.5, 
       FormBox[
        RotationBox["34", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {34.5, 
       FormBox[
        RotationBox["35", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {35.5, 
       FormBox[
        RotationBox["36", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {36.5, 
       FormBox[
        RotationBox["37", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {37.5, 
       FormBox[
        RotationBox["38", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {38.5, 
       FormBox[
        RotationBox["39", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {39.5, 
       FormBox[
        RotationBox["40", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {40.5, 
       FormBox[
        RotationBox["41", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {41.5, 
       FormBox[
        RotationBox["42", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {42.5, 
       FormBox[
        RotationBox["43", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {43.5, 
       FormBox[
        RotationBox["44", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {44.5, 
       FormBox[
        RotationBox["45", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {45.5, 
       FormBox[
        RotationBox["46", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {46.5, 
       FormBox[
        RotationBox["47", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {47.5, 
       FormBox[
        RotationBox["48", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {48.5, 
       FormBox[
        RotationBox["49", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {49.5, 
       FormBox[
        RotationBox["50", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {50.5, 
       FormBox[
        RotationBox["51", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {51.5, 
       FormBox[
        RotationBox["52", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {52.5, 
       FormBox[
        RotationBox["53", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {53.5, 
       FormBox[
        RotationBox["54", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {54.5, 
       FormBox[
        RotationBox["55", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {55.5, 
       FormBox[
        RotationBox["56", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {56.5, 
       FormBox[
        RotationBox["57", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {57.5, 
       FormBox[
        RotationBox["58", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {58.5, 
       FormBox[
        RotationBox["59", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {59.5, 
       FormBox[
        RotationBox["60", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {60.5, 
       FormBox[
        RotationBox["61", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {61.5, 
       FormBox[
        RotationBox["62", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {62.5, 
       FormBox[
        RotationBox["63", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {63.5, 
       FormBox[
        RotationBox["64", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {64.5, 
       FormBox[
        RotationBox["65", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {65.5, 
       FormBox[
        RotationBox["66", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {66.5, 
       FormBox[
        RotationBox["67", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {67.5, 
       FormBox[
        RotationBox["68", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {68.5, 
       FormBox[
        RotationBox["69", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {69.5, 
       FormBox[
        RotationBox["70", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {70.5, 
       FormBox[
        RotationBox["71", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {71.5, 
       FormBox[
        RotationBox["72", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {72.5, 
       FormBox[
        RotationBox["73", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {73.5, 
       FormBox[
        RotationBox["74", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {74.5, 
       FormBox[
        RotationBox["75", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {75.5, 
       FormBox[
        RotationBox["76", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {76.5, 
       FormBox[
        RotationBox["77", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {77.5, 
       FormBox[
        RotationBox["78", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {78.5, 
       FormBox[
        RotationBox["79", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {79.5, 
       FormBox[
        RotationBox["80", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {80.5, 
       FormBox[
        RotationBox["81", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {81.5, 
       FormBox[
        RotationBox["82", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {82.5, 
       FormBox[
        RotationBox["83", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {83.5, 
       FormBox[
        RotationBox["84", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {84.5, 
       FormBox[
        RotationBox["85", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {85.5, 
       FormBox[
        RotationBox["86", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {86.5, 
       FormBox[
        RotationBox["87", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {87.5, 
       FormBox[
        RotationBox["88", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {88.5, 
       FormBox[
        RotationBox["89", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {89.5, 
       FormBox[
        RotationBox["90", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {90.5, 
       FormBox[
        RotationBox["91", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}}, None}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->1200,
  Method->{
   "GridLinesInFront" -> True, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic, "DomainPadding" -> Scaled[0.02], "RangePadding" -> 
    Scaled[0.05]}]], "Output",
 CellChangeTimes->{3.890858739026132*^9, 3.890858952631342*^9, 
  3.890859089954533*^9, 3.8908591296739817`*^9, 3.890859581503384*^9},
 CellLabel->"Out[271]=",
 CellID->891221476,ExpressionUUID->"a1786600-fa8a-4fab-a9b6-aca501fb29dc"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Derive correlation triplets using ",
 StyleBox["SpearmanRho", "Program"],
 " :"
}], "Text",
 CellChangeTimes->{{3.833280500154409*^9, 3.8332805219209547`*^9}},
 CellID->1183472184,ExpressionUUID->"644cc153-04cb-4b54-bf35-9fd591b20878"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"lsCorTriplets", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Outer", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"#1", ",", "#2", ",", 
          RowBox[{"SpearmanRho", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"aTSOpen2", "[", "#1", "]"}], "[", "\"\<Values\>\"", 
             "]"}], ",", 
            RowBox[{
             RowBox[{"aTSOpen2", "[", "#2", "]"}], "[", "\"\<Values\>\"", 
             "]"}]}], "]"}]}], "}"}], "&"}], ",", 
       RowBox[{"Keys", "@", "aTSOpen2"}], ",", 
       RowBox[{"Keys", "@", "aTSOpen2"}]}], "]"}], ",", "1"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"dsCorTriplets", "=", 
   RowBox[{
    RowBox[{"Dataset", "[", "lsCorTriplets", "]"}], "[", 
    RowBox[{"All", ",", 
     RowBox[{
      RowBox[{"AssociationThread", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "\"\<TS1\>\"", ",", "\"\<TS2\>\"", ",", "\"\<Correlation\>\""}], 
         "}"}], ",", "#"}], "]"}], "&"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dsCorTriplets", "=", 
   RowBox[{"dsCorTriplets", "[", 
    RowBox[{"Select", "[", 
     RowBox[{
      RowBox[{"#TS1", "\[NotEqual]", "#TS2"}], "&"}], "]"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.833014237379572*^9, 3.833014282130918*^9}, {
  3.833014561531404*^9, 3.833014855702478*^9}, {3.833280301302314*^9, 
  3.8332803084242697`*^9}, {3.833280922789289*^9, 3.833280959839538*^9}},
 CellLabel->"In[272]:=",
 CellID->623457974,ExpressionUUID->"a4724570-aac6-4155-8d1e-a339b0d99365"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Show summary of the correlation triplets:", "Text",
 CellChangeTimes->{{3.8332804746159143`*^9, 3.8332804906903753`*^9}},
 CellID->885455305,ExpressionUUID->"40ec1167-60ac-4300-b4da-12991f56bf63"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<RecordsSummary\>\"", "]"}], "[", 
  "dsCorTriplets", "]"}]], "Input",
 CellChangeTimes->{{3.833014294024376*^9, 3.833014312000688*^9}, {
   3.833014703260983*^9, 3.833014707693556*^9}, 3.833280961888205*^9},
 CellLabel->"In[275]:=",
 CellID->1933121072,ExpressionUUID->"ee0c7656-b3f0-40c8-be9c-a82b3e4c7a05"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[GridBox[{
      {
       StyleBox["\<\"1 TS1\"\>",
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontFamily->"Times",
        FontColor->RGBColor[0, 0, 1]]},
      {
       TagBox[GridBox[{
          {"\<\"ADA\"\>", "20"},
          {"\<\"BCH\"\>", "20"},
          {"\<\"BNB\"\>", "20"},
          {"\<\"BTC\"\>", "20"},
          {"\<\"DOGE\"\>", "20"},
          {"\<\"EOS\"\>", "20"},
          {"\<\"(Other)\"\>", "300"}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"], ",", 
   TagBox[GridBox[{
      {
       StyleBox["\<\"2 TS2\"\>",
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontFamily->"Times",
        FontColor->RGBColor[0, 0, 1]]},
      {
       TagBox[GridBox[{
          {"\<\"ADA\"\>", "20"},
          {"\<\"BCH\"\>", "20"},
          {"\<\"BNB\"\>", "20"},
          {"\<\"BTC\"\>", "20"},
          {"\<\"DOGE\"\>", "20"},
          {"\<\"EOS\"\>", "20"},
          {"\<\"(Other)\"\>", "300"}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"], ",", 
   TagBox[GridBox[{
      {
       StyleBox["\<\"3 Correlation\"\>",
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontFamily->"Times",
        FontColor->RGBColor[0, 0, 1]]},
      {
       TagBox[GridBox[{
          {"\<\"Min\"\>", 
           RowBox[{"-", "0.53737856346552`"}]},
          {"\<\"1st Qu\"\>", "0.08509316770186336`"},
          {"\<\"Mean\"\>", "0.32120340666924513`"},
          {"\<\"Median\"\>", "0.34211657907310083`"},
          {"\<\"3rd Qu\"\>", "0.6129160694378086`"},
          {"\<\"Max\"\>", "0.9693581780538303`"}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"]}], "}"}]], "Output",
 CellChangeTimes->{3.890858740042563*^9, 3.890859586995398*^9},
 CellLabel->"Out[275]=",
 CellID->1483730539,ExpressionUUID->"58b8f2be-ce32-4fca-93f3-bb29db7b0411"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Show correlations that too high or too low:", "Text",
 CellChangeTimes->{{3.833280335109672*^9, 3.833280379684595*^9}},
 CellID->685761641,ExpressionUUID->"d9313fea-9cf0-45f9-9dea-07194842e7a8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Dataset", "[", 
   RowBox[{"Union", "[", 
    RowBox[{
     RowBox[{"Normal", "@", 
      RowBox[{"dsCorTriplets", "[", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Abs", "[", "#Correlation", "]"}], ">", "0.85"}], "&"}], 
        "]"}], "]"}]}], ",", 
     RowBox[{"\"\<SameTest\>\"", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Sort", "[", 
          RowBox[{"Values", "@", "#1"}], "]"}], "\[Equal]", 
         RowBox[{"Sort", "[", 
          RowBox[{"Values", "@", "#2"}], "]"}]}], "&"}], ")"}]}]}], "]"}], 
   "]"}], "[", 
  RowBox[{"ReverseSortBy", "[", 
   RowBox[{"#Correlation", "&"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.833015133772579*^9, 3.8330151577913322`*^9}, {
   3.8330151895173073`*^9, 3.833015220593174*^9}, {3.83301526273458*^9, 
   3.833015285255155*^9}, 3.8330153307266903`*^9, {3.8330154422130423`*^9, 
   3.8330155365652857`*^9}, {3.833015583220996*^9, 3.83301560449807*^9}, {
   3.8332803324462557`*^9, 3.833280368231761*^9}, 3.833280964442099*^9, {
   3.833281152003581*^9, 3.833281152429422*^9}},
 CellLabel->"In[276]:=",
 CellID->51166838,ExpressionUUID->"c32fd15b-5b7e-4344-bbac-805ccd549cc3"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|
       "TS1" -> "BTC", "TS2" -> "ETH", "Correlation" -> 
        0.9693581780538303|>, <|
       "TS1" -> "XLM", "TS2" -> "XRP", "Correlation" -> 
        0.9122153209109731|>, <|
       "TS1" -> "THETA", "TS2" -> "VET", "Correlation" -> 
        0.8946169772256729|>}, "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "TS1"} -> 1, {All, "TS2"} -> 
        1, {All, "Correlation"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "TS1" -> TypeSystem`PackageScope`AtomShape[56.00000000000001], 
            "TS2" -> TypeSystem`PackageScope`AtomShape[33.6], "Correlation" -> 
            TypeSystem`PackageScope`AtomShape[60]|>], 
          DirectedInfinity[1], 3, {All}]], 3, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"TS1", "TS2", "Correlation"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Real]}], 3], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "TS1"} -> 1, {All, "TS2"} -> 
        1, {All, "Correlation"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "TS1" -> TypeSystem`PackageScope`AtomShape[56.00000000000001], 
            "TS2" -> TypeSystem`PackageScope`AtomShape[33.6], "Correlation" -> 
            TypeSystem`PackageScope`AtomShape[60]|>], 
          DirectedInfinity[1], 3, {All}]], 3, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"TS1", "TS2", "Correlation"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Real]}], 3], "Path" -> {}, "DisplayedRowCount" -> 3, 
     "DisplayedColumnCount" -> 3, "DataRowCount" -> 3, "DataColumnCount" -> 3,
      "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["TS1", 
                  Style[
                  "TS1", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "TS1"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "TS1"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["TS2", 
                  Style[
                  "TS2", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "TS2"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "TS2"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Correlation", 
                  Style[
                  "Correlation", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Correlation"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Correlation"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation["BTC", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["TS1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["ETH", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["TS2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.969358"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Correlation"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["XLM", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["TS1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["XRP", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["TS2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.912215"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Correlation"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["THETA", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["TS1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["VET", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["TS2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.894617"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Correlation"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{182., {60.8544921875, 66.1455078125}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{182., {60.8544921875, 66.1455078125}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8908587402782087`*^9, 3.890859588621482*^9},
 CellLabel->"Out[276]=",
 CellID->2086721270,ExpressionUUID->"1a1607d7-4717-4c55-9606-a53e22394425"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Cross tabulate the correlation triplets and show the corresponding dataset:\
\>", "Text",
 CellChangeTimes->{{3.833280390112844*^9, 3.833280461091337*^9}},
 CellID->967587466,ExpressionUUID->"f897d740-d8fa-4511-9ab8-8f1712507f86"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dsMatCor", "=", 
  RowBox[{
   RowBox[{"ResourceFunction", "[", "\"\<CrossTabulate\>\"", "]"}], "[", 
   "dsCorTriplets", "]"}]}]], "Input",
 CellChangeTimes->{{3.833014869087783*^9, 3.833014923471737*^9}, {
  3.833280984174877*^9, 3.8332809957923117`*^9}},
 CellLabel->"In[277]:=",
 CellID->1496365978,ExpressionUUID->"6be8c55c-a8be-437c-8f9b-53636c422042"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "ADA" -> <|
        "ADA" -> 0, "BCH" -> 0.5502309284917981, "BNB" -> 0.5581302755215799, 
         "BTC" -> 0.528428093645485, "DOGE" -> 0.8197005892658067, "EOS" -> 
         0.39503105590062115`, "ETC" -> 0.7722089504698201, "ETH" -> 
         0.5447682752030578, "FIL" -> 0.1565217391304348, 
         "HEX" -> -0.1379678292721771, "LINK" -> 0.7130753304666348, "LTC" -> 
         0.7596432552954293, "MATIC" -> 0.33602484472049693`, "THETA" -> 
         0.659022137283007, "TRX" -> 0.21403089663959232`, "USDC" -> 
         0.06685777990125817, "USDT" -> -0.021484312788660618`, "VET" -> 
         0.5717789456919892, "XLM" -> 0.7738015607580826, "XMR" -> 
         0.6182194616977226, "XRP" -> 0.668052237617455|>, 
       "BCH" -> <|
        "ADA" -> 0.5502309284917981, "BCH" -> 0, "BNB" -> 0.4124860646599777, 
         "BTC" -> 0.1933906673037108, "DOGE" -> 0.6172957477305304, "EOS" -> 
         0.21930243669374105`, "ETC" -> 0.783627966236662, "ETH" -> 
         0.1756171364867017, "FIL" -> 0.40127408823061, 
         "HEX" -> -0.23315814620162448`, "LINK" -> 0.5837394489568403, "LTC" -> 
         0.5827201783723523, "MATIC" -> 0.6144927536231884, "THETA" -> 
         0.7824335085204651, "TRX" -> 0.368944099378882, "USDC" -> 
         0.30402930402930406`, "USDT" -> -0.06058289536550407, "VET" -> 
         0.7047141264532569, "XLM" -> 0.2893295110686415, "XMR" -> 
         0.391431756649148, "XRP" -> 0.06923076923076923|>, 
       "BNB" -> <|
        "ADA" -> 0.5581302755215799, "BCH" -> 0.4124860646599777, "BNB" -> 0, 
         "BTC" -> 0.7214365344800128, "DOGE" -> 0.3175824175824176, "EOS" -> 
         0.3286351329829591, "ETC" -> 0.3373626373626374, "ETH" -> 
         0.7387004300047779, "FIL" -> 0.20761267717789458`, "HEX" -> 
         0.406577480490524, "LINK" -> 0.5245899028507724, "LTC" -> 
         0.40743749004618574`, "MATIC" -> 0.21274088230609972`, "THETA" -> 
         0.31533683707596755`, "TRX" -> 0.10549450549450551`, 
         "USDC" -> -0.25440356744704573`, "USDT" -> 0.3453734671125976, "VET" -> 
         0.25693581780538305`, "XLM" -> 0.5712533842968626, "XMR" -> 
         0.2916547220895047, "XRP" -> 0.5371555980251633|>, 
       "BTC" -> <|
        "ADA" -> 0.528428093645485, "BCH" -> 0.1933906673037108, "BNB" -> 
         0.7214365344800128, "BTC" -> 0, "DOGE" -> 0.14083452779104955`, 
         "EOS" -> 0.6612995699952222, "ETC" -> 0.08752986144290494, "ETH" -> 
         0.9693581780538303, "FIL" -> 0.48165312947921646`, "HEX" -> 
         0.6835642618251314, "LINK" -> 0.6937728937728939, "LTC" -> 
         0.24632903328555505`, "MATIC" -> -0.007899347029781813, "THETA" -> 
         0.2735945214206084, "TRX" -> 0.3372670807453416, 
         "USDC" -> -0.36249402771141903`, "USDT" -> 0.3684981684981685, "VET" -> 
         0.2885969103360408, "XLM" -> 0.76644370122631, "XMR" -> 
         0.056537665233317415`, "XRP" -> 0.7003503742634178|>, 
       "DOGE" -> <|
        "ADA" -> 0.8197005892658067, "BCH" -> 0.6172957477305304, "BNB" -> 
         0.3175824175824176, "BTC" -> 0.14083452779104955`, "DOGE" -> 0, 
         "EOS" -> 0.09952221691352127, "ETC" -> 0.8496257365822584, "ETH" -> 
         0.19496735148909064`, "FIL" -> -0.09633699633699634, 
         "HEX" -> -0.49761108456760633`, "LINK" -> 0.4462653288740246, "LTC" -> 
         0.7125019907628604, "MATIC" -> 0.2937569676700112, "THETA" -> 
         0.6129160694378086, "TRX" -> 0.01505016722408027, "USDC" -> 
         0.2516483516483517, "USDT" -> -0.22110208631947764`, "VET" -> 
         0.4687848383500558, "XLM" -> 0.5338907469342252, "XMR" -> 
         0.7455964325529544, "XRP" -> 0.42325211020863196`|>, 
       "EOS" -> <|
        "ADA" -> 0.39503105590062115`, "BCH" -> 0.21930243669374105`, "BNB" -> 
         0.3286351329829591, "BTC" -> 0.6612995699952222, "DOGE" -> 
         0.09952221691352127, "EOS" -> 0, "ETC" -> 0.09429845516802039, "ETH" -> 
         0.640691192865106, "FIL" -> 0.7541965281095716, "HEX" -> 
         0.5222009874183787, "LINK" -> 0.7031692944736424, "LTC" -> 
         0.2955088389870999, "MATIC" -> 0.17477305303392263`, "THETA" -> 
         0.4106386367255933, "TRX" -> 0.6420767638158943, 
         "USDC" -> -0.0455327281414238, "USDT" -> 0.026134734830387005`, 
         "VET" -> 0.6164357381748686, "XLM" -> 0.5330625895843287, 
         "XMR" -> -0.12040133779264216`, "XRP" -> 0.40791527313266446`|>, 
       "ETC" -> <|
        "ADA" -> 0.7722089504698201, "BCH" -> 0.783627966236662, "BNB" -> 
         0.3373626373626374, "BTC" -> 0.08752986144290494, "DOGE" -> 
         0.8496257365822584, "EOS" -> 0.09429845516802039, "ETC" -> 0, "ETH" -> 
         0.12035355948399427`, "FIL" -> 0.03720337633381112, 
         "HEX" -> -0.5211339385252429, "LINK" -> 0.5045230132186654, "LTC" -> 
         0.7153049848702023, "MATIC" -> 0.4506450071667463, "THETA" -> 
         0.7087115782767958, "TRX" -> 0.10371078197165155`, "USDC" -> 
         0.3388596910336041, "USDT" -> -0.17776716037585605`, "VET" -> 
         0.561522535435579, "XLM" -> 0.432075171205606, "XMR" -> 
         0.7251313903487817, "XRP" -> 0.3058608058608059|>, 
       "ETH" -> <|
        "ADA" -> 0.5447682752030578, "BCH" -> 0.1756171364867017, "BNB" -> 
         0.7387004300047779, "BTC" -> 0.9693581780538303, "DOGE" -> 
         0.19496735148909064`, "EOS" -> 0.640691192865106, "ETC" -> 
         0.12035355948399427`, "ETH" -> 0, "FIL" -> 0.4370281892021023, "HEX" -> 
         0.6517439082656474, "LINK" -> 0.6517598343685301, "LTC" -> 
         0.257445453097627, "MATIC" -> -0.02142060837713012, "THETA" -> 
         0.26529702181876097`, "TRX" -> 0.3190476190476191, 
         "USDC" -> -0.4021022455805065, "USDT" -> 0.38117534639273776`, "VET" -> 
         0.2668100015926103, "XLM" -> 0.7681477942347509, "XMR" -> 
         0.08931358496575889, "XRP" -> 0.7144768275203058|>, 
       "FIL" -> <|
        "ADA" -> 0.1565217391304348, "BCH" -> 0.40127408823061, "BNB" -> 
         0.20761267717789458`, "BTC" -> 0.48165312947921646`, 
         "DOGE" -> -0.09633699633699634, "EOS" -> 0.7541965281095716, "ETC" -> 
         0.03720337633381112, "ETH" -> 0.4370281892021023, "FIL" -> 0, "HEX" -> 
         0.4988533205924511, "LINK" -> 0.6049848702022615, "LTC" -> 
         0.2103360407708234, "MATIC" -> 0.4544513457556936, "THETA" -> 
         0.5027233635929289, "TRX" -> 0.811116419812072, "USDC" -> 
         0.06301958910654563, "USDT" -> 0.0986303551520943, "VET" -> 
         0.6740882306099698, "XLM" -> 0.15972288580984234`, 
         "XMR" -> -0.39612995699952225`, "XRP" -> -0.04218824653607263|>, 
       "HEX" -> <|
        "ADA" -> -0.1379678292721771, "BCH" -> -0.23315814620162448`, "BNB" -> 
         0.406577480490524, "BTC" -> 0.6835642618251314, 
         "DOGE" -> -0.49761108456760633`, "EOS" -> 0.5222009874183787, 
         "ETC" -> -0.5211339385252429, "ETH" -> 0.6517439082656474, "FIL" -> 
         0.4988533205924511, "HEX" -> 0, "LINK" -> 0.275139353400223, 
         "LTC" -> -0.19616180920528747`, "MATIC" -> -0.05306577480490524, 
         "THETA" -> -0.12474916387959867`, "TRX" -> 0.36192068800764454`, 
         "USDC" -> -0.491559165472209, "USDT" -> 0.42976588628762546`, 
         "VET" -> -0.010622710622710623`, "XLM" -> 0.21985985029463292`, 
         "XMR" -> -0.53737856346552, "XRP" -> 0.2025163242554547|>, 
       "LINK" -> <|
        "ADA" -> 0.7130753304666348, "BCH" -> 0.5837394489568403, "BNB" -> 
         0.5245899028507724, "BTC" -> 0.6937728937728939, "DOGE" -> 
         0.4462653288740246, "EOS" -> 0.7031692944736424, "ETC" -> 
         0.5045230132186654, "ETH" -> 0.6517598343685301, "FIL" -> 
         0.6049848702022615, "HEX" -> 0.275139353400223, "LINK" -> 0, "LTC" -> 
         0.6132982959069916, "MATIC" -> 0.4152572065615544, "THETA" -> 
         0.7318999840738972, "TRX" -> 0.5110049370918937, "USDC" -> 
         0.07947125338429686, "USDT" -> 0.0074215639433030745`, "VET" -> 
         0.7186176142697882, "XLM" -> 0.7075171205605989, "XMR" -> 
         0.1840101927058449, "XRP" -> 0.542936773371556|>, 
       "LTC" -> <|
        "ADA" -> 0.7596432552954293, "BCH" -> 0.5827201783723523, "BNB" -> 
         0.40743749004618574`, "BTC" -> 0.24632903328555505`, "DOGE" -> 
         0.7125019907628604, "EOS" -> 0.2955088389870999, "ETC" -> 
         0.7153049848702023, "ETH" -> 0.257445453097627, "FIL" -> 
         0.2103360407708234, "HEX" -> -0.19616180920528747`, "LINK" -> 
         0.6132982959069916, "LTC" -> 0, "MATIC" -> 0.6209587513935341, 
         "THETA" -> 0.7627488453575411, "TRX" -> 0.36868928173276005`, "USDC" -> 
         0.31555980251632426`, "USDT" -> -0.18254499124064344`, "VET" -> 
         0.7107501194457717, "XLM" -> 0.3849020544672719, "XMR" -> 
         0.40926899187768756`, "XRP" -> 0.3009396400700749|>, 
       "MATIC" -> <|
        "ADA" -> 0.33602484472049693`, "BCH" -> 0.6144927536231884, "BNB" -> 
         0.21274088230609972`, "BTC" -> -0.007899347029781813, "DOGE" -> 
         0.2937569676700112, "EOS" -> 0.17477305303392263`, "ETC" -> 
         0.4506450071667463, "ETH" -> -0.02142060837713012, "FIL" -> 
         0.4544513457556936, "HEX" -> -0.05306577480490524, "LINK" -> 
         0.4152572065615544, "LTC" -> 0.6209587513935341, "MATIC" -> 0, 
         "THETA" -> 0.7836598184424272, "TRX" -> 0.6567128523650263, "USDC" -> 
         0.4116738334129639, "USDT" -> -0.044242713807931204`, "VET" -> 
         0.7627488453575411, "XLM" -> -0.07856346551998726, 
         "XMR" -> -0.0758719541328237, "XRP" -> -0.2999840738971174|>, 
       "THETA" -> <|
        "ADA" -> 0.659022137283007, "BCH" -> 0.7824335085204651, "BNB" -> 
         0.31533683707596755`, "BTC" -> 0.2735945214206084, "DOGE" -> 
         0.6129160694378086, "EOS" -> 0.4106386367255933, "ETC" -> 
         0.7087115782767958, "ETH" -> 0.26529702181876097`, "FIL" -> 
         0.5027233635929289, "HEX" -> -0.12474916387959867`, "LINK" -> 
         0.7318999840738972, "LTC" -> 0.7627488453575411, "MATIC" -> 
         0.7836598184424272, "THETA" -> 0, "TRX" -> 0.6311355311355312, 
         "USDC" -> 0.37939162286988376`, "USDT" -> -0.08450390189520625, 
         "VET" -> 0.8946169772256729, "XLM" -> 0.36545628284758724`, "XMR" -> 
         0.20818601688166907`, "XRP" -> 0.11041567128523651`|>, 
       "TRX" -> <|
        "ADA" -> 0.21403089663959232`, "BCH" -> 0.368944099378882, "BNB" -> 
         0.10549450549450551`, "BTC" -> 0.3372670807453416, "DOGE" -> 
         0.01505016722408027, "EOS" -> 0.6420767638158943, "ETC" -> 
         0.10371078197165155`, "ETH" -> 0.3190476190476191, "FIL" -> 
         0.811116419812072, "HEX" -> 0.36192068800764454`, "LINK" -> 
         0.5110049370918937, "LTC" -> 0.36868928173276005`, "MATIC" -> 
         0.6567128523650263, "THETA" -> 0.6311355311355312, "TRX" -> 0, 
         "USDC" -> 0.2084567606306737, "USDT" -> 0.030259595476986784`, "VET" -> 
         0.7505175983436854, "XLM" -> 0.08321388756171366, 
         "XMR" -> -0.3492753623188406, "XRP" -> -0.13643892339544514`|>, 
       "USDC" -> <|
        "ADA" -> 0.06685777990125817, "BCH" -> 0.30402930402930406`, 
         "BNB" -> -0.25440356744704573`, "BTC" -> -0.36249402771141903`, 
         "DOGE" -> 0.2516483516483517, "EOS" -> -0.0455327281414238, "ETC" -> 
         0.3388596910336041, "ETH" -> -0.4021022455805065, "FIL" -> 
         0.06301958910654563, "HEX" -> -0.491559165472209, "LINK" -> 
         0.07947125338429686, "LTC" -> 0.31555980251632426`, "MATIC" -> 
         0.4116738334129639, "THETA" -> 0.37939162286988376`, "TRX" -> 
         0.2084567606306737, "USDC" -> 0, "USDT" -> -0.4127090301003345, 
         "VET" -> 0.4134575569358178, "XLM" -> -0.21070234113712377`, "XMR" -> 
         0.08509316770186336, "XRP" -> -0.2949992036948559|>, 
       "USDT" -> <|
        "ADA" -> -0.021484312788660618`, "BCH" -> -0.06058289536550407, "BNB" -> 
         0.3453734671125976, "BTC" -> 0.3684981684981685, 
         "DOGE" -> -0.22110208631947764`, "EOS" -> 0.026134734830387005`, 
         "ETC" -> -0.17776716037585605`, "ETH" -> 0.38117534639273776`, "FIL" -> 
         0.0986303551520943, "HEX" -> 0.42976588628762546`, "LINK" -> 
         0.0074215639433030745`, "LTC" -> -0.18254499124064344`, 
         "MATIC" -> -0.044242713807931204`, "THETA" -> -0.08450390189520625, 
         "TRX" -> 0.030259595476986784`, "USDC" -> -0.4127090301003345, 
         "USDT" -> 0, "VET" -> -0.1481286829112916, "XLM" -> 
         0.03322185061315496, "XMR" -> -0.1393215480172002, "XRP" -> 
         0.026644370122630996`|>, 
       "VET" -> <|
        "ADA" -> 0.5717789456919892, "BCH" -> 0.7047141264532569, "BNB" -> 
         0.25693581780538305`, "BTC" -> 0.2885969103360408, "DOGE" -> 
         0.4687848383500558, "EOS" -> 0.6164357381748686, "ETC" -> 
         0.561522535435579, "ETH" -> 0.2668100015926103, "FIL" -> 
         0.6740882306099698, "HEX" -> -0.010622710622710623`, "LINK" -> 
         0.7186176142697882, "LTC" -> 0.7107501194457717, "MATIC" -> 
         0.7627488453575411, "THETA" -> 0.8946169772256729, "TRX" -> 
         0.7505175983436854, "USDC" -> 0.4134575569358178, 
         "USDT" -> -0.1481286829112916, "VET" -> 0, "XLM" -> 
         0.2930721452460583, "XMR" -> 0.063768115942029, "XRP" -> 
         0.06321070234113713|>, 
       "XLM" -> <|
        "ADA" -> 0.7738015607580826, "BCH" -> 0.2893295110686415, "BNB" -> 
         0.5712533842968626, "BTC" -> 0.76644370122631, "DOGE" -> 
         0.5338907469342252, "EOS" -> 0.5330625895843287, "ETC" -> 
         0.432075171205606, "ETH" -> 0.7681477942347509, "FIL" -> 
         0.15972288580984234`, "HEX" -> 0.21985985029463292`, "LINK" -> 
         0.7075171205605989, "LTC" -> 0.3849020544672719, 
         "MATIC" -> -0.07856346551998726, "THETA" -> 0.36545628284758724`, 
         "TRX" -> 0.08321388756171366, "USDC" -> -0.21070234113712377`, 
         "USDT" -> 0.03322185061315496, "VET" -> 0.2930721452460583, "XLM" -> 
         0, "XMR" -> 0.459993629558847, "XRP" -> 0.9122153209109731|>, 
       "XMR" -> <|
        "ADA" -> 0.6182194616977226, "BCH" -> 0.391431756649148, "BNB" -> 
         0.2916547220895047, "BTC" -> 0.056537665233317415`, "DOGE" -> 
         0.7455964325529544, "EOS" -> -0.12040133779264216`, "ETC" -> 
         0.7251313903487817, "ETH" -> 0.08931358496575889, 
         "FIL" -> -0.39612995699952225`, "HEX" -> -0.53737856346552, "LINK" -> 
         0.1840101927058449, "LTC" -> 0.40926899187768756`, 
         "MATIC" -> -0.0758719541328237, "THETA" -> 0.20818601688166907`, 
         "TRX" -> -0.3492753623188406, "USDC" -> 0.08509316770186336, 
         "USDT" -> -0.1393215480172002, "VET" -> 0.063768115942029, "XLM" -> 
         0.459993629558847, "XMR" -> 0, "XRP" -> 0.5076286032807772|>, 
       "XRP" -> <|
        "ADA" -> 0.668052237617455, "BCH" -> 0.06923076923076923, "BNB" -> 
         0.5371555980251633, "BTC" -> 0.7003503742634178, "DOGE" -> 
         0.42325211020863196`, "EOS" -> 0.40791527313266446`, "ETC" -> 
         0.3058608058608059, "ETH" -> 0.7144768275203058, 
         "FIL" -> -0.04218824653607263, "HEX" -> 0.2025163242554547, "LINK" -> 
         0.542936773371556, "LTC" -> 0.3009396400700749, 
         "MATIC" -> -0.2999840738971174, "THETA" -> 0.11041567128523651`, 
         "TRX" -> -0.13643892339544514`, "USDC" -> -0.2949992036948559, 
         "USDT" -> 0.026644370122630996`, "VET" -> 0.06321070234113713, "XLM" -> 
         0.9122153209109731, "XMR" -> 0.5076286032807772, "XRP" -> 0|>|>, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[1]} -> 1, {All, "ADA"} -> 
        1, {All, "BCH"} -> 1, {All, "BNB"} -> 1, {All, "BTC"} -> 
        1, {All, "DOGE"} -> 1, {All, "EOS"} -> 1, {All, "ETC"} -> 
        1, {All, "ETH"} -> 1, {All, "FIL"} -> 1, {All, "HEX"} -> 
        1, {All, "LINK"} -> 1, {All, "LTC"} -> 1, {All, "MATIC"} -> 
        1, {All, "THETA"} -> 1, {All, "TRX"} -> 1, {All, "USDC"} -> 
        1, {All, "USDT"} -> 1, {All, "VET"} -> 1, {All, "XLM"} -> 
        1, {All, "XMR"} -> 1, {All, "XRP"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[44.800000000000004`], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "ADA" -> TypeSystem`PackageScope`AtomShape[60], "BCH" -> 
             TypeSystem`PackageScope`AtomShape[60], "BNB" -> 
             TypeSystem`PackageScope`AtomShape[60], "BTC" -> 
             TypeSystem`PackageScope`AtomShape[60], "DOGE" -> 
             TypeSystem`PackageScope`AtomShape[60], "EOS" -> 
             TypeSystem`PackageScope`AtomShape[60], "ETC" -> 
             TypeSystem`PackageScope`AtomShape[60], "ETH" -> 
             TypeSystem`PackageScope`AtomShape[60], "FIL" -> 
             TypeSystem`PackageScope`AtomShape[60], "HEX" -> 
             TypeSystem`PackageScope`AtomShape[60], "LINK" -> 
             TypeSystem`PackageScope`AtomShape[60], "LTC" -> 
             TypeSystem`PackageScope`AtomShape[60], "MATIC" -> 
             TypeSystem`PackageScope`AtomShape[60], "THETA" -> 
             TypeSystem`PackageScope`AtomShape[60], "TRX" -> 
             TypeSystem`PackageScope`AtomShape[60], "USDC" -> 
             TypeSystem`PackageScope`AtomShape[60], "USDT" -> 
             TypeSystem`PackageScope`AtomShape[60], "VET" -> 
             TypeSystem`PackageScope`AtomShape[60], "XLM" -> 
             TypeSystem`PackageScope`AtomShape[60], "XMR" -> 
             TypeSystem`PackageScope`AtomShape[60], "XRP" -> 
             TypeSystem`PackageScope`AtomShape[60]|>], 
           DirectedInfinity[1], 10, {All}]]], 20, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{
        "ADA", "BCH", "BNB", "BTC", "DOGE", "EOS", "ETC", "ETH", "FIL", "HEX",
          "LINK", "LTC", "MATIC", "THETA", "TRX", "USDC", "USDT", "VET", 
         "XLM", "XMR", "XRP"}, {
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real]}], 21], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[1]} -> 1, {All, "ADA"} -> 
        1, {All, "BCH"} -> 1, {All, "BNB"} -> 1, {All, "BTC"} -> 
        1, {All, "DOGE"} -> 1, {All, "EOS"} -> 1, {All, "ETC"} -> 
        1, {All, "ETH"} -> 1, {All, "FIL"} -> 1, {All, "HEX"} -> 
        1, {All, "LINK"} -> 1, {All, "LTC"} -> 1, {All, "MATIC"} -> 
        1, {All, "THETA"} -> 1, {All, "TRX"} -> 1, {All, "USDC"} -> 
        1, {All, "USDT"} -> 1, {All, "VET"} -> 1, {All, "XLM"} -> 
        1, {All, "XMR"} -> 1, {All, "XRP"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[44.800000000000004`], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "ADA" -> TypeSystem`PackageScope`AtomShape[60], "BCH" -> 
             TypeSystem`PackageScope`AtomShape[60], "BNB" -> 
             TypeSystem`PackageScope`AtomShape[60], "BTC" -> 
             TypeSystem`PackageScope`AtomShape[60], "DOGE" -> 
             TypeSystem`PackageScope`AtomShape[60], "EOS" -> 
             TypeSystem`PackageScope`AtomShape[60], "ETC" -> 
             TypeSystem`PackageScope`AtomShape[60], "ETH" -> 
             TypeSystem`PackageScope`AtomShape[60], "FIL" -> 
             TypeSystem`PackageScope`AtomShape[60], "HEX" -> 
             TypeSystem`PackageScope`AtomShape[60], "LINK" -> 
             TypeSystem`PackageScope`AtomShape[60], "LTC" -> 
             TypeSystem`PackageScope`AtomShape[60], "MATIC" -> 
             TypeSystem`PackageScope`AtomShape[60], "THETA" -> 
             TypeSystem`PackageScope`AtomShape[60], "TRX" -> 
             TypeSystem`PackageScope`AtomShape[60], "USDC" -> 
             TypeSystem`PackageScope`AtomShape[60], "USDT" -> 
             TypeSystem`PackageScope`AtomShape[60], "VET" -> 
             TypeSystem`PackageScope`AtomShape[60], "XLM" -> 
             TypeSystem`PackageScope`AtomShape[60], "XMR" -> 
             TypeSystem`PackageScope`AtomShape[60], "XRP" -> 
             TypeSystem`PackageScope`AtomShape[60]|>], 
           DirectedInfinity[1], 10, {All}]]], 20, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{
        "ADA", "BCH", "BNB", "BTC", "DOGE", "EOS", "ETC", "ETH", "FIL", "HEX",
          "LINK", "LTC", "MATIC", "THETA", "TRX", "USDC", "USDT", "VET", 
         "XLM", "XMR", "XRP"}, {
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real]}], 21], "Path" -> {}, "DisplayedRowCount" -> 
     20, "DisplayedColumnCount" -> 10, "DataRowCount" -> 21, 
     "DataColumnCount" -> 21, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["ADA", 
                  Style[
                  "ADA", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "ADA"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "ADA"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["BCH", 
                  Style[
                  "BCH", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "BCH"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "BCH"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["BNB", 
                  Style[
                  "BNB", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "BNB"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "BNB"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["BTC", 
                  Style[
                  "BTC", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "BTC"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "BTC"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["DOGE", 
                  Style[
                  "DOGE", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "DOGE"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "DOGE"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["EOS", 
                  Style[
                  "EOS", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "EOS"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "EOS"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["ETC", 
                  Style[
                  "ETC", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "ETC"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "ETC"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["ETH", 
                  Style[
                  "ETH", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "ETH"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "ETH"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["FIL", 
                  Style[
                  "FIL", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "FIL"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "FIL"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["HEX", 
                  Style[
                  "HEX", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "HEX"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "HEX"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["ADA", 
                  Style[
                  "ADA", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["ADA"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["ADA"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["ADA"], 
                 Key["ADA"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.550231"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["ADA"], 
                 Key["BCH"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.55813"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["ADA"], 
                 Key["BNB"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.528428"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["ADA"], 
                 Key["BTC"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.819701"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["ADA"], 
                 Key["DOGE"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.395031"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["ADA"], 
                 Key["EOS"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.772209"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["ADA"], 
                 Key["ETC"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.544768"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["ADA"], 
                 Key["ETH"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.156522"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["ADA"], 
                 Key["FIL"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-0.137968"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["ADA"], 
                 Key["HEX"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["BCH", 
                  Style[
                  "BCH", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["BCH"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["BCH"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.550231"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["BCH"], 
                 Key["ADA"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["BCH"], 
                 Key["BCH"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.412486"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["BCH"], 
                 Key["BNB"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.193391"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["BCH"], 
                 Key["BTC"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.617296"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["BCH"], 
                 Key["DOGE"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.219302"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["BCH"], 
                 Key["EOS"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.783628"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["BCH"], 
                 Key["ETC"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.175617"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["BCH"], 
                 Key["ETH"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.401274"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["BCH"], 
                 Key["FIL"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-0.233158"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["BCH"], 
                 Key["HEX"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["BNB", 
                  Style[
                  "BNB", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["BNB"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["BNB"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.55813"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["BNB"], 
                 Key["ADA"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.412486"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["BNB"], 
                 Key["BCH"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["BNB"], 
                 Key["BNB"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.721437"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["BNB"], 
                 Key["BTC"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.317582"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["BNB"], 
                 Key["DOGE"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.328635"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["BNB"], 
                 Key["EOS"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.337363"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["BNB"], 
                 Key["ETC"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.7387"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["BNB"], 
                 Key["ETH"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.207613"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["BNB"], 
                 Key["FIL"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.406577"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["BNB"], 
                 Key["HEX"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["BTC", 
                  Style[
                  "BTC", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["BTC"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["BTC"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.528428"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["BTC"], 
                 Key["ADA"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.193391"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["BTC"], 
                 Key["BCH"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.721437"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["BTC"], 
                 Key["BNB"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["BTC"], 
                 Key["BTC"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.140835"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["BTC"], 
                 Key["DOGE"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.6613"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["BTC"], 
                 Key["EOS"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0875299"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["BTC"], 
                 Key["ETC"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.969358"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["BTC"], 
                 Key["ETH"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.481653"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["BTC"], 
                 Key["FIL"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.683564"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["BTC"], 
                 Key["HEX"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["DOGE", 
                  Style[
                  "DOGE", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["DOGE"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["DOGE"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.819701"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["DOGE"], 
                 Key["ADA"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.617296"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["DOGE"], 
                 Key["BCH"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.317582"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["DOGE"], 
                 Key["BNB"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.140835"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["DOGE"], 
                 Key["BTC"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["DOGE"], 
                 Key["DOGE"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0995222"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["DOGE"], 
                 Key["EOS"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.849626"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["DOGE"], 
                 Key["ETC"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.194967"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["DOGE"], 
                 Key["ETH"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-0.096337"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["DOGE"], 
                 Key["FIL"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-0.497611"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["DOGE"], 
                 Key["HEX"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["EOS", 
                  Style[
                  "EOS", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["EOS"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["EOS"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.395031"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["EOS"], 
                 Key["ADA"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.219302"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["EOS"], 
                 Key["BCH"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.328635"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["EOS"], 
                 Key["BNB"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.6613"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["EOS"], 
                 Key["BTC"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0995222"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["EOS"], 
                 Key["DOGE"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["EOS"], 
                 Key["EOS"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0942985"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["EOS"], 
                 Key["ETC"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.640691"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["EOS"], 
                 Key["ETH"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.754197"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["EOS"], 
                 Key["FIL"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.522201"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["EOS"], 
                 Key["HEX"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["ETC", 
                  Style[
                  "ETC", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["ETC"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["ETC"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.772209"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["ETC"], 
                 Key["ADA"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.783628"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["ETC"], 
                 Key["BCH"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.337363"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["ETC"], 
                 Key["BNB"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0875299"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["ETC"], 
                 Key["BTC"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.849626"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["ETC"], 
                 Key["DOGE"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0942985"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["ETC"], 
                 Key["EOS"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["ETC"], 
                 Key["ETC"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.120354"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["ETC"], 
                 Key["ETH"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0372034"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["ETC"], 
                 Key["FIL"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-0.521134"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["ETC"], 
                 Key["HEX"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["ETH", 
                  Style[
                  "ETH", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["ETH"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["ETH"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.544768"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["ETH"], 
                 Key["ADA"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.175617"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["ETH"], 
                 Key["BCH"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.7387"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["ETH"], 
                 Key["BNB"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.969358"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["ETH"], 
                 Key["BTC"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.194967"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["ETH"], 
                 Key["DOGE"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.640691"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["ETH"], 
                 Key["EOS"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.120354"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["ETH"], 
                 Key["ETC"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["ETH"], 
                 Key["ETH"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.437028"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["ETH"], 
                 Key["FIL"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.651744"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["ETH"], 
                 Key["HEX"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["FIL", 
                  Style[
                  "FIL", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["FIL"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["FIL"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.156522"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["FIL"], 
                 Key["ADA"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.401274"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["FIL"], 
                 Key["BCH"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.207613"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["FIL"], 
                 Key["BNB"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.481653"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["FIL"], 
                 Key["BTC"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-0.096337"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["FIL"], 
                 Key["DOGE"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.754197"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["FIL"], 
                 Key["EOS"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0372034"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["FIL"], 
                 Key["ETC"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.437028"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["FIL"], 
                 Key["ETH"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["FIL"], 
                 Key["FIL"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.498853"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["FIL"], 
                 Key["HEX"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["HEX", 
                  Style[
                  "HEX", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["HEX"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["HEX"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-0.137968"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["HEX"], 
                 Key["ADA"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-0.233158"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["HEX"], 
                 Key["BCH"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.406577"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["HEX"], 
                 Key["BNB"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.683564"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["HEX"], 
                 Key["BTC"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-0.497611"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["HEX"], 
                 Key["DOGE"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.522201"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["HEX"], 
                 Key["EOS"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-0.521134"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["HEX"], 
                 Key["ETC"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.651744"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["HEX"], 
                 Key["ETH"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.498853"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["HEX"], 
                 Key["FIL"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["HEX"], 
                 Key["HEX"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["LINK", 
                  Style[
                  "LINK", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["LINK"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["LINK"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.713075"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["LINK"], 
                 Key["ADA"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.583739"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["LINK"], 
                 Key["BCH"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.52459"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["LINK"], 
                 Key["BNB"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.693773"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["LINK"], 
                 Key["BTC"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.446265"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["LINK"], 
                 Key["DOGE"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.703169"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["LINK"], 
                 Key["EOS"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.504523"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["LINK"], 
                 Key["ETC"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.65176"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["LINK"], 
                 Key["ETH"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.604985"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["LINK"], 
                 Key["FIL"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.275139"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["LINK"], 
                 Key["HEX"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["LTC", 
                  Style[
                  "LTC", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["LTC"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["LTC"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.759643"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["LTC"], 
                 Key["ADA"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.58272"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["LTC"], 
                 Key["BCH"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.407437"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["LTC"], 
                 Key["BNB"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.246329"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["LTC"], 
                 Key["BTC"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.712502"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["LTC"], 
                 Key["DOGE"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.295509"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["LTC"], 
                 Key["EOS"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.715305"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["LTC"], 
                 Key["ETC"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.257445"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["LTC"], 
                 Key["ETH"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.210336"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["LTC"], 
                 Key["FIL"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-0.196162"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["LTC"], 
                 Key["HEX"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["MATIC", 
                  Style[
                  "MATIC", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["MATIC"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["MATIC"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.336025"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["MATIC"], 
                 Key["ADA"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.614493"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["MATIC"], 
                 Key["BCH"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.212741"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["MATIC"], 
                 Key["BNB"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-0.00789935"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["MATIC"], 
                 Key["BTC"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.293757"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["MATIC"], 
                 Key["DOGE"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.174773"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["MATIC"], 
                 Key["EOS"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.450645"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["MATIC"], 
                 Key["ETC"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-0.0214206"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["MATIC"], 
                 Key["ETH"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.454451"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["MATIC"], 
                 Key["FIL"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-0.0530658"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["MATIC"], 
                 Key["HEX"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["THETA", 
                  Style[
                  "THETA", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["THETA"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["THETA"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.659022"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["THETA"], 
                 Key["ADA"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.782434"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["THETA"], 
                 Key["BCH"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.315337"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["THETA"], 
                 Key["BNB"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.273595"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["THETA"], 
                 Key["BTC"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.612916"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["THETA"], 
                 Key["DOGE"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.410639"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["THETA"], 
                 Key["EOS"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.708712"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["THETA"], 
                 Key["ETC"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.265297"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["THETA"], 
                 Key["ETH"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.502723"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["THETA"], 
                 Key["FIL"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-0.124749"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["THETA"], 
                 Key["HEX"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["TRX", 
                  Style[
                  "TRX", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["TRX"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["TRX"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.214031"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["TRX"], 
                 Key["ADA"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.368944"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["TRX"], 
                 Key["BCH"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.105495"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["TRX"], 
                 Key["BNB"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.337267"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["TRX"], 
                 Key["BTC"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0150502"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["TRX"], 
                 Key["DOGE"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.642077"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["TRX"], 
                 Key["EOS"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.103711"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["TRX"], 
                 Key["ETC"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.319048"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["TRX"], 
                 Key["ETH"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.811116"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["TRX"], 
                 Key["FIL"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.361921"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["TRX"], 
                 Key["HEX"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["USDC", 
                  Style[
                  "USDC", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["USDC"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["USDC"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0668578"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["USDC"], 
                 Key["ADA"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.304029"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["USDC"], 
                 Key["BCH"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-0.254404"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["USDC"], 
                 Key["BNB"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-0.362494"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["USDC"], 
                 Key["BTC"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.251648"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["USDC"], 
                 Key["DOGE"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-0.0455327"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["USDC"], 
                 Key["EOS"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.33886"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["USDC"], 
                 Key["ETC"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-0.402102"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["USDC"], 
                 Key["ETH"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0630196"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["USDC"], 
                 Key["FIL"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-0.491559"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["USDC"], 
                 Key["HEX"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["USDT", 
                  Style[
                  "USDT", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["USDT"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["USDT"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-0.0214843"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["USDT"], 
                 Key["ADA"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-0.0605829"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["USDT"], 
                 Key["BCH"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.345373"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["USDT"], 
                 Key["BNB"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.368498"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["USDT"], 
                 Key["BTC"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-0.221102"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["USDT"], 
                 Key["DOGE"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0261347"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["USDT"], 
                 Key["EOS"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-0.177767"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["USDT"], 
                 Key["ETC"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.381175"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["USDT"], 
                 Key["ETH"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0986304"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["USDT"], 
                 Key["FIL"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.429766"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["USDT"], 
                 Key["HEX"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["VET", 
                  Style[
                  "VET", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["VET"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["VET"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.571779"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["VET"], 
                 Key["ADA"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.704714"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["VET"], 
                 Key["BCH"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.256936"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["VET"], 
                 Key["BNB"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.288597"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["VET"], 
                 Key["BTC"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.468785"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["VET"], 
                 Key["DOGE"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.616436"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["VET"], 
                 Key["EOS"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.561523"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["VET"], 
                 Key["ETC"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.26681"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["VET"], 
                 Key["ETH"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.674088"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["VET"], 
                 Key["FIL"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-0.0106227"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["VET"], 
                 Key["HEX"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["XLM", 
                  Style[
                  "XLM", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["XLM"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["XLM"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.773802"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["XLM"], 
                 Key["ADA"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.28933"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["XLM"], 
                 Key["BCH"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.571253"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["XLM"], 
                 Key["BNB"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.766444"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["XLM"], 
                 Key["BTC"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.533891"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["XLM"], 
                 Key["DOGE"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.533063"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["XLM"], 
                 Key["EOS"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.432075"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["XLM"], 
                 Key["ETC"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.768148"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["XLM"], 
                 Key["ETH"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.159723"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["XLM"], 
                 Key["FIL"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.21986"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["XLM"], 
                 Key["HEX"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["XMR", 
                  Style[
                  "XMR", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["XMR"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["XMR"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.618219"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["XMR"], 
                 Key["ADA"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.391432"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["XMR"], 
                 Key["BCH"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.291655"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["XMR"], 
                 Key["BNB"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0565377"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["XMR"], 
                 Key["BTC"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.745596"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["XMR"], 
                 Key["DOGE"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-0.120401"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["XMR"], 
                 Key["EOS"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.725131"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["XMR"], 
                 Key["ETC"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0893136"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["XMR"], 
                 Key["ETH"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-0.39613"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["XMR"], 
                 Key["FIL"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-0.537379"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["XMR"], 
                 Key["HEX"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[True, 21, 1], {1, 21 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[False, 21, 1], {1, 21 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[21, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[21, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 21, 1], {1, 21 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 21, 1], {1, 21 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}], 
                 Graphics[{
                   RGBColor[
                   0.8196078431372549, 0.8196078431372549, 
                    0.8196078431372549], 
                   Line[{{0, 0}, {0, 19}}]}, ImageSize -> (1 -> 1), 
                  ImagePadding -> {{0, 0}, {0, 0}}, BaselinePosition -> 
                  Scaled[0.35]], 
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 90 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 90 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + (-10) 
                    If[True, 21, 1], {1, 21 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 90 Degree, {9,
                     9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 90 Degree, {9,
                     9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + (-10) 
                    If[False, 21, 1], {1, 21 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"columns ", 1, "\[Dash]", 10, " of ", 
                    Style[21, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"columns ", 1, "\[Dash]", 10, " of ", 
                    Style[21, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 2 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 2, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 5 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 5, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 100000000, {}]], MenuEvaluator -> Automatic]}],
                     " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], (-90) 
                    Degree, {9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], (-90) 
                    Degree, {9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + 
                    10 If[False, 21, 1], {1, 21 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], (-90) Degree, {9, 
                    9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], (-90) Degree, {9, 
                    9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + 
                    10 If[True, 21, 1], {1, 21 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
               ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{812., {310.8544921875, 316.1455078125}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{812., {310.8544921875, 316.1455078125}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.890858740346232*^9, 3.8908595905649357`*^9},
 CellLabel->"Out[277]=",
 CellID->1180211751,ExpressionUUID->"68447bd4-fa8a-4e77-aa4c-e1ea63399d5a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Cross tabulate the correlation triplets and plot the corresponding matrix \
with heat-map plot:\
\>", "Text",
 CellChangeTimes->{{3.833280443371715*^9, 3.833280466674245*^9}, {
   3.8332807304441433`*^9, 3.833280745598424*^9}, 3.83328132216376*^9},
 CellID->242002229,ExpressionUUID->"7c69e5f7-100c-4599-94e4-ed7904907ecc"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"matCor1", "=", 
   RowBox[{
    RowBox[{"ResourceFunction", "[", "\"\<CrossTabulate\>\"", "]"}], "[", 
    RowBox[{"dsCorTriplets", ",", 
     RowBox[{"\"\<Sparse\>\"", "\[Rule]", "True"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"gr1", "=", 
  RowBox[{"HeatmapPlot", "[", 
   RowBox[{"matCor1", ",", 
    RowBox[{"Dendrogram", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"True", ",", "True"}], "}"}]}], ",", 
    RowBox[{"DistanceFunction", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"CosineDistance", ",", "CosineDistance"}], "}"}]}], ",", 
    RowBox[{"ImageSize", "->", "Medium"}], ",", 
    RowBox[{"PlotLabel", "->", "\"\<Opening price\>\""}]}], "]"}]}]}], "Input",\

 CellChangeTimes->{{3.8330149276588287`*^9, 3.833014955602392*^9}, {
   3.833280709069497*^9, 3.833280719893345*^9}, {3.8332808323735857`*^9, 
   3.83328083951093*^9}, 3.833280987414939*^9, {3.833281032929421*^9, 
   3.833281034740595*^9}, {3.833281328395461*^9, 3.833281333663753*^9}, {
   3.8332817160795794`*^9, 3.833281740231798*^9}, {3.833281827821143*^9, 
   3.833281828402467*^9}, {3.833282134883555*^9, 3.833282138288999*^9}},
 CellLabel->"In[278]:=",
 CellID->2144919032,ExpressionUUID->"d7465cdd-5b63-474c-b8b9-11fda6883c06"],

Cell[BoxData[
 GraphicsBox[{RasterBox[CompressedData["
1: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
JOXdpP0H0j4MaT+KtC9H2p/8L+ylgu0=
    "], {{0, 0}, {21, 21}}, {0, 1}], 
   {GrayLevel[0.6], 
    {RGBColor[
     0, 1, 0]}, {{}, {
      LineBox[{{21., 1.5}, {21.80480093899165, 1.5}, {21.80480093899165, 
       2.5}, {21., 2.5}}], 
      LineBox[{{21.80480093899165, 2.}, {22.247846032903464`, 2.}, {
       22.247846032903464`, 3.5}, {21., 3.5}}], 
      LineBox[{{22.247846032903464`, 2.75}, {22.353820938845853`, 2.75}, {
       22.353820938845853`, 4.5}, {21., 4.5}}], 
      LineBox[{{22.353820938845853`, 3.625}, {22.36525644956839, 3.625}, {
       22.36525644956839, 5.5}, {21., 5.5}}], 
      LineBox[{{22.36525644956839, 4.5625}, {22.41492019788413, 4.5625}, {
       22.41492019788413, 6.5}, {21., 6.5}}], 
      LineBox[{{21., 0.5}, {22.494111966459325`, 0.5}, {22.494111966459325`, 
       5.53125}, {22.41492019788413, 5.53125}}], 
      LineBox[{{21., 8.5}, {22.172335868511635`, 8.5}, {22.172335868511635`, 
       9.5}, {21., 9.5}}], 
      LineBox[{{21., 7.5}, {22.434196291143415`, 7.5}, {22.434196291143415`, 
       9.}, {22.172335868511635`, 9.}}], 
      LineBox[{{22.494111966459325`, 3.015625}, {22.50143341733398, 
       3.015625}, {22.50143341733398, 8.25}, {22.434196291143415`, 8.25}}], 
      LineBox[{{22.50143341733398, 5.6328125}, {22.648446080742307`, 
       5.6328125}, {22.648446080742307`, 10.5}, {21., 10.5}}], 
      LineBox[{{21., 11.5}, {22.638991689727995`, 11.5}, {22.638991689727995`,
        12.5}, {21., 12.5}}], 
      LineBox[{{22.648446080742307`, 8.06640625}, {22.68504052172337, 
       8.06640625}, {22.68504052172337, 12.}, {22.638991689727995`, 12.}}], 
      LineBox[{{22.68504052172337, 10.033203125}, {22.753751033636874`, 
       10.033203125}, {22.753751033636874`, 13.5}, {21., 13.5}}], 
      LineBox[{{22.753751033636874`, 11.7666015625}, {22.823936019328546`, 
       11.7666015625}, {22.823936019328546`, 14.5}, {21., 14.5}}], 
      LineBox[{{21., 15.5}, {22.878265205025766`, 15.5}, {22.878265205025766`,
        16.5}, {21., 16.5}}], 
      LineBox[{{22.823936019328546`, 13.13330078125}, {23.18482151406368, 
       13.13330078125}, {23.18482151406368, 16.}, {22.878265205025766`, 
       16.}}], LineBox[{{23.18482151406368, 14.566650390625}, {
       23.31548500574697, 14.566650390625}, {23.31548500574697, 17.5}, {21., 
       17.5}}], 
      LineBox[{{23.31548500574697, 16.0333251953125}, {24.462417843836153`, 
       16.0333251953125}, {24.462417843836153`, 18.5}, {21., 18.5}}], 
      LineBox[{{21., 19.5}, {23.344870176623537`, 19.5}, {23.344870176623537`,
        20.5}, {21., 20.5}}], 
      LineBox[{{24.462417843836153`, 17.26666259765625}, {25.2, 
       17.26666259765625}, {25.2, 20.}, {23.344870176623537`, 20.}}]}}, {}}, 
   {GrayLevel[0.6], 
    {RGBColor[
     0, 1, 0]}, {{}, {
      LineBox[{{1.5, 21.}, {1.5, 21.80480093899165}, {2.5, 
       21.80480093899165}, {2.5, 21.}}], 
      LineBox[{{2., 21.80480093899165}, {2., 22.247846032903464`}, {3.5, 
       22.247846032903464`}, {3.5, 21.}}], 
      LineBox[{{2.75, 22.247846032903464`}, {2.75, 22.353820938845853`}, {4.5,
        22.353820938845853`}, {4.5, 21.}}], 
      LineBox[{{3.625, 22.353820938845853`}, {3.625, 22.36525644956839}, {5.5,
        22.36525644956839}, {5.5, 21.}}], 
      LineBox[{{4.5625, 22.36525644956839}, {4.5625, 22.41492019788413}, {6.5,
        22.41492019788413}, {6.5, 21.}}], 
      LineBox[{{0.5, 21.}, {0.5, 22.494111966459325`}, {5.53125, 
       22.494111966459325`}, {5.53125, 22.41492019788413}}], 
      LineBox[{{8.5, 21.}, {8.5, 22.172335868511635`}, {9.5, 
       22.172335868511635`}, {9.5, 21.}}], 
      LineBox[{{7.5, 21.}, {7.5, 22.434196291143415`}, {9., 
       22.434196291143415`}, {9., 22.172335868511635`}}], 
      LineBox[{{3.015625, 22.494111966459325`}, {3.015625, 
       22.50143341733398}, {8.25, 22.50143341733398}, {8.25, 
       22.434196291143415`}}], 
      LineBox[{{5.6328125, 22.50143341733398}, {5.6328125, 
       22.648446080742307`}, {10.5, 22.648446080742307`}, {10.5, 21.}}], 
      LineBox[{{11.5, 21.}, {11.5, 22.638991689727995`}, {12.5, 
       22.638991689727995`}, {12.5, 21.}}], 
      LineBox[{{8.06640625, 22.648446080742307`}, {8.06640625, 
       22.68504052172337}, {12., 22.68504052172337}, {12., 
       22.638991689727995`}}], 
      LineBox[{{10.033203125, 22.68504052172337}, {10.033203125, 
       22.753751033636874`}, {13.5, 22.753751033636874`}, {13.5, 21.}}], 
      LineBox[{{11.7666015625, 22.753751033636874`}, {11.7666015625, 
       22.823936019328546`}, {14.5, 22.823936019328546`}, {14.5, 21.}}], 
      LineBox[{{15.5, 21.}, {15.5, 22.878265205025766`}, {16.5, 
       22.878265205025766`}, {16.5, 21.}}], 
      LineBox[{{13.13330078125, 22.823936019328546`}, {13.13330078125, 
       23.18482151406368}, {16., 23.18482151406368}, {16., 
       22.878265205025766`}}], 
      LineBox[{{14.566650390625, 23.18482151406368}, {14.566650390625, 
       23.31548500574697}, {17.5, 23.31548500574697}, {17.5, 21.}}], 
      LineBox[{{16.0333251953125, 23.31548500574697}, {16.0333251953125, 
       24.462417843836153`}, {18.5, 24.462417843836153`}, {18.5, 21.}}], 
      LineBox[{{19.5, 21.}, {19.5, 23.344870176623537`}, {20.5, 
       23.344870176623537`}, {20.5, 21.}}], 
      LineBox[{{17.26666259765625, 24.462417843836153`}, {17.26666259765625, 
       25.2}, {20., 25.2}, {20., 23.344870176623537`}}]}}, {}}},
  BaseStyle->{FontSize -> 10},
  CoordinatesToolOptions:>{
   "DisplayFunction" -> Function[HeatmapPlot`Private`pt$, 
      Column[{
        Part[{
         "ADA", "BCH", "LTC", "THETA", "ETC", "VET", "DOGE", "LINK", "BNB", 
          "XLM", "EOS", "ETH", "BTC", "XRP", "MATIC", "FIL", "TRX", "XMR", 
          "USDC", "HEX", "USDT"}, 
         Part[
          ({
           Clip[Floor[Part[#, 1] - Part[#2, 2]] + 1, {1, 
             Part[#, 1]}], 
           Clip[Floor[
              Part[#2, 1]] + 1, {1, 
             Part[#, 2]}]}& )[{21, 21}, HeatmapPlot`Private`pt$], 1]], 
        Part[{
         "ADA", "BCH", "LTC", "THETA", "ETC", "VET", "DOGE", "LINK", "BNB", 
          "XLM", "EOS", "ETH", "BTC", "XRP", "MATIC", "FIL", "TRX", "XMR", 
          "USDC", "HEX", "USDT"}, 
         Part[
          ({
           Clip[Floor[Part[#, 1] - Part[#2, 2]] + 1, {1, 
             Part[#, 1]}], 
           Clip[Floor[
              Part[#2, 1]] + 1, {1, 
             Part[#, 2]}]}& )[{21, 21}, HeatmapPlot`Private`pt$], 2]], 
        Extract[{{
          0, 0.5502309284917981, 0.7596432552954293, 0.659022137283007, 
           0.7722089504698201, 0.5717789456919892, 0.8197005892658067, 
           0.7130753304666348, 0.5581302755215799, 0.7738015607580826, 
           0.39503105590062115`, 0.5447682752030578, 0.528428093645485, 
           0.668052237617455, 0.33602484472049693`, 0.1565217391304348, 
           0.21403089663959232`, 0.6182194616977226, 
           0.06685777990125817, -0.1379678292721771, -0.021484312788660618`}, \
{0.5502309284917981, 0, 0.5827201783723523, 0.7824335085204651, 
           0.783627966236662, 0.7047141264532569, 0.6172957477305304, 
           0.5837394489568403, 0.4124860646599777, 0.2893295110686415, 
           0.21930243669374105`, 0.1756171364867017, 0.1933906673037108, 
           0.06923076923076923, 0.6144927536231884, 0.40127408823061, 
           0.368944099378882, 0.391431756649148, 
           0.30402930402930406`, -0.23315814620162448`, \
-0.06058289536550407}, {
          0.7596432552954293, 0.5827201783723523, 0, 0.7627488453575411, 
           0.7153049848702023, 0.7107501194457717, 0.7125019907628604, 
           0.6132982959069916, 0.40743749004618574`, 0.3849020544672719, 
           0.2955088389870999, 0.257445453097627, 0.24632903328555505`, 
           0.3009396400700749, 0.6209587513935341, 0.2103360407708234, 
           0.36868928173276005`, 0.40926899187768756`, 
           0.31555980251632426`, -0.19616180920528747`, \
-0.18254499124064344`}, {
          0.659022137283007, 0.7824335085204651, 0.7627488453575411, 0, 
           0.7087115782767958, 0.8946169772256729, 0.6129160694378086, 
           0.7318999840738972, 0.31533683707596755`, 0.36545628284758724`, 
           0.4106386367255933, 0.26529702181876097`, 0.2735945214206084, 
           0.11041567128523651`, 0.7836598184424272, 0.5027233635929289, 
           0.6311355311355312, 0.20818601688166907`, 
           0.37939162286988376`, -0.12474916387959867`, \
-0.08450390189520625}, {
          0.7722089504698201, 0.783627966236662, 0.7153049848702023, 
           0.7087115782767958, 0, 0.561522535435579, 0.8496257365822584, 
           0.5045230132186654, 0.3373626373626374, 0.432075171205606, 
           0.09429845516802039, 0.12035355948399427`, 0.08752986144290494, 
           0.3058608058608059, 0.4506450071667463, 0.03720337633381112, 
           0.10371078197165155`, 0.7251313903487817, 
           0.3388596910336041, -0.5211339385252429, -0.17776716037585605`}, {
          0.5717789456919892, 0.7047141264532569, 0.7107501194457717, 
           0.8946169772256729, 0.561522535435579, 0, 0.4687848383500558, 
           0.7186176142697882, 0.25693581780538305`, 0.2930721452460583, 
           0.6164357381748686, 0.2668100015926103, 0.2885969103360408, 
           0.06321070234113713, 0.7627488453575411, 0.6740882306099698, 
           0.7505175983436854, 0.063768115942029, 
           0.4134575569358178, -0.010622710622710623`, -0.1481286829112916}, {
          0.8197005892658067, 0.6172957477305304, 0.7125019907628604, 
           0.6129160694378086, 0.8496257365822584, 0.4687848383500558, 0, 
           0.4462653288740246, 0.3175824175824176, 0.5338907469342252, 
           0.09952221691352127, 0.19496735148909064`, 0.14083452779104955`, 
           0.42325211020863196`, 0.2937569676700112, -0.09633699633699634, 
           0.01505016722408027, 0.7455964325529544, 
           0.2516483516483517, -0.49761108456760633`, -0.22110208631947764`}, \
{0.7130753304666348, 0.5837394489568403, 0.6132982959069916, 
           0.7318999840738972, 0.5045230132186654, 0.7186176142697882, 
           0.4462653288740246, 0, 0.5245899028507724, 0.7075171205605989, 
           0.7031692944736424, 0.6517598343685301, 0.6937728937728939, 
           0.542936773371556, 0.4152572065615544, 0.6049848702022615, 
           0.5110049370918937, 0.1840101927058449, 0.07947125338429686, 
           0.275139353400223, 0.0074215639433030745`}, {
          0.5581302755215799, 0.4124860646599777, 0.40743749004618574`, 
           0.31533683707596755`, 0.3373626373626374, 0.25693581780538305`, 
           0.3175824175824176, 0.5245899028507724, 0, 0.5712533842968626, 
           0.3286351329829591, 0.7387004300047779, 0.7214365344800128, 
           0.5371555980251633, 0.21274088230609972`, 0.20761267717789458`, 
           0.10549450549450551`, 0.2916547220895047, -0.25440356744704573`, 
           0.406577480490524, 0.3453734671125976}, {
          0.7738015607580826, 0.2893295110686415, 0.3849020544672719, 
           0.36545628284758724`, 0.432075171205606, 0.2930721452460583, 
           0.5338907469342252, 0.7075171205605989, 0.5712533842968626, 0, 
           0.5330625895843287, 0.7681477942347509, 0.76644370122631, 
           0.9122153209109731, -0.07856346551998726, 0.15972288580984234`, 
           0.08321388756171366, 0.459993629558847, -0.21070234113712377`, 
           0.21985985029463292`, 0.03322185061315496}, {
          0.39503105590062115`, 0.21930243669374105`, 0.2955088389870999, 
           0.4106386367255933, 0.09429845516802039, 0.6164357381748686, 
           0.09952221691352127, 0.7031692944736424, 0.3286351329829591, 
           0.5330625895843287, 0, 0.640691192865106, 0.6612995699952222, 
           0.40791527313266446`, 0.17477305303392263`, 0.7541965281095716, 
           0.6420767638158943, -0.12040133779264216`, -0.0455327281414238, 
           0.5222009874183787, 0.026134734830387005`}, {
          0.5447682752030578, 0.1756171364867017, 0.257445453097627, 
           0.26529702181876097`, 0.12035355948399427`, 0.2668100015926103, 
           0.19496735148909064`, 0.6517598343685301, 0.7387004300047779, 
           0.7681477942347509, 0.640691192865106, 0, 0.9693581780538303, 
           0.7144768275203058, -0.02142060837713012, 0.4370281892021023, 
           0.3190476190476191, 0.08931358496575889, -0.4021022455805065, 
           0.6517439082656474, 0.38117534639273776`}, {
          0.528428093645485, 0.1933906673037108, 0.24632903328555505`, 
           0.2735945214206084, 0.08752986144290494, 0.2885969103360408, 
           0.14083452779104955`, 0.6937728937728939, 0.7214365344800128, 
           0.76644370122631, 0.6612995699952222, 0.9693581780538303, 0, 
           0.7003503742634178, -0.007899347029781813, 0.48165312947921646`, 
           0.3372670807453416, 0.056537665233317415`, -0.36249402771141903`, 
           0.6835642618251314, 0.3684981684981685}, {
          0.668052237617455, 0.06923076923076923, 0.3009396400700749, 
           0.11041567128523651`, 0.3058608058608059, 0.06321070234113713, 
           0.42325211020863196`, 0.542936773371556, 0.5371555980251633, 
           0.9122153209109731, 0.40791527313266446`, 0.7144768275203058, 
           0.7003503742634178, 
           0, -0.2999840738971174, -0.04218824653607263, \
-0.13643892339544514`, 0.5076286032807772, -0.2949992036948559, 
           0.2025163242554547, 0.026644370122630996`}, {
          0.33602484472049693`, 0.6144927536231884, 0.6209587513935341, 
           0.7836598184424272, 0.4506450071667463, 0.7627488453575411, 
           0.2937569676700112, 0.4152572065615544, 
           0.21274088230609972`, -0.07856346551998726, 
           0.17477305303392263`, -0.02142060837713012, -0.007899347029781813, \
-0.2999840738971174, 0, 0.4544513457556936, 
           0.6567128523650263, -0.0758719541328237, 
           0.4116738334129639, -0.05306577480490524, -0.044242713807931204`}, \
{0.1565217391304348, 0.40127408823061, 0.2103360407708234, 0.5027233635929289,
            0.03720337633381112, 0.6740882306099698, -0.09633699633699634, 
           0.6049848702022615, 0.20761267717789458`, 0.15972288580984234`, 
           0.7541965281095716, 0.4370281892021023, 
           0.48165312947921646`, -0.04218824653607263, 0.4544513457556936, 0, 
           0.811116419812072, -0.39612995699952225`, 0.06301958910654563, 
           0.4988533205924511, 0.0986303551520943}, {
          0.21403089663959232`, 0.368944099378882, 0.36868928173276005`, 
           0.6311355311355312, 0.10371078197165155`, 0.7505175983436854, 
           0.01505016722408027, 0.5110049370918937, 0.10549450549450551`, 
           0.08321388756171366, 0.6420767638158943, 0.3190476190476191, 
           0.3372670807453416, -0.13643892339544514`, 0.6567128523650263, 
           0.811116419812072, 0, -0.3492753623188406, 0.2084567606306737, 
           0.36192068800764454`, 0.030259595476986784`}, {
          0.6182194616977226, 0.391431756649148, 0.40926899187768756`, 
           0.20818601688166907`, 0.7251313903487817, 0.063768115942029, 
           0.7455964325529544, 0.1840101927058449, 0.2916547220895047, 
           0.459993629558847, -0.12040133779264216`, 0.08931358496575889, 
           0.056537665233317415`, 
           0.5076286032807772, -0.0758719541328237, -0.39612995699952225`, \
-0.3492753623188406, 0, 
           0.08509316770186336, -0.53737856346552, -0.1393215480172002}, {
          0.06685777990125817, 0.30402930402930406`, 0.31555980251632426`, 
           0.37939162286988376`, 0.3388596910336041, 0.4134575569358178, 
           0.2516483516483517, 
           0.07947125338429686, -0.25440356744704573`, -0.21070234113712377`, \
-0.0455327281414238, -0.4021022455805065, -0.36249402771141903`, \
-0.2949992036948559, 0.4116738334129639, 0.06301958910654563, 
           0.2084567606306737, 0.08509316770186336, 
           0, -0.491559165472209, -0.4127090301003345}, {-0.1379678292721771, \
-0.23315814620162448`, -0.19616180920528747`, -0.12474916387959867`, \
-0.5211339385252429, -0.010622710622710623`, -0.49761108456760633`, 
           0.275139353400223, 0.406577480490524, 0.21985985029463292`, 
           0.5222009874183787, 0.6517439082656474, 0.6835642618251314, 
           0.2025163242554547, -0.05306577480490524, 0.4988533205924511, 
           0.36192068800764454`, -0.53737856346552, -0.491559165472209, 0, 
           0.42976588628762546`}, {-0.021484312788660618`, \
-0.06058289536550407, -0.18254499124064344`, -0.08450390189520625, \
-0.17776716037585605`, -0.1481286829112916, -0.22110208631947764`, 
           0.0074215639433030745`, 0.3453734671125976, 0.03322185061315496, 
           0.026134734830387005`, 0.38117534639273776`, 0.3684981684981685, 
           0.026644370122630996`, -0.044242713807931204`, 0.0986303551520943, 
           0.030259595476986784`, -0.1393215480172002, -0.4127090301003345, 
           0.42976588628762546`, 0}}, 
         ({
          Clip[Floor[Part[#, 1] - Part[#2, 2]] + 1, {1, 
            Part[#, 1]}], 
          Clip[Floor[
             Part[#2, 1]] + 1, {1, 
            Part[#, 2]}]}& )[{21, 21}, HeatmapPlot`Private`pt$]]}, Background -> 
       White, ImageSize -> {Automatic, 30}, 
       ImageMargins -> {{5, 5}, {10, 10}}, Alignment -> Center]], 
    "CopiedValueFunction" -> Function[HeatmapPlot`Private`pt$, {
       ({
        Clip[Floor[Part[#, 1] - Part[#2, 2]] + 1, {1, 
          Part[#, 1]}], 
        Clip[Floor[
           Part[#2, 1]] + 1, {1, 
          Part[#, 2]}]}& )[{21, 21}, HeatmapPlot`Private`pt$], 
       Extract[{{
         0, 0.5502309284917981, 0.7596432552954293, 0.659022137283007, 
          0.7722089504698201, 0.5717789456919892, 0.8197005892658067, 
          0.7130753304666348, 0.5581302755215799, 0.7738015607580826, 
          0.39503105590062115`, 0.5447682752030578, 0.528428093645485, 
          0.668052237617455, 0.33602484472049693`, 0.1565217391304348, 
          0.21403089663959232`, 0.6182194616977226, 
          0.06685777990125817, -0.1379678292721771, -0.021484312788660618`}, {
         0.5502309284917981, 0, 0.5827201783723523, 0.7824335085204651, 
          0.783627966236662, 0.7047141264532569, 0.6172957477305304, 
          0.5837394489568403, 0.4124860646599777, 0.2893295110686415, 
          0.21930243669374105`, 0.1756171364867017, 0.1933906673037108, 
          0.06923076923076923, 0.6144927536231884, 0.40127408823061, 
          0.368944099378882, 0.391431756649148, 
          0.30402930402930406`, -0.23315814620162448`, -0.06058289536550407}, \
{0.7596432552954293, 0.5827201783723523, 0, 0.7627488453575411, 
          0.7153049848702023, 0.7107501194457717, 0.7125019907628604, 
          0.6132982959069916, 0.40743749004618574`, 0.3849020544672719, 
          0.2955088389870999, 0.257445453097627, 0.24632903328555505`, 
          0.3009396400700749, 0.6209587513935341, 0.2103360407708234, 
          0.36868928173276005`, 0.40926899187768756`, 
          0.31555980251632426`, -0.19616180920528747`, \
-0.18254499124064344`}, {
         0.659022137283007, 0.7824335085204651, 0.7627488453575411, 0, 
          0.7087115782767958, 0.8946169772256729, 0.6129160694378086, 
          0.7318999840738972, 0.31533683707596755`, 0.36545628284758724`, 
          0.4106386367255933, 0.26529702181876097`, 0.2735945214206084, 
          0.11041567128523651`, 0.7836598184424272, 0.5027233635929289, 
          0.6311355311355312, 0.20818601688166907`, 
          0.37939162286988376`, -0.12474916387959867`, -0.08450390189520625}, \
{0.7722089504698201, 0.783627966236662, 0.7153049848702023, 
          0.7087115782767958, 0, 0.561522535435579, 0.8496257365822584, 
          0.5045230132186654, 0.3373626373626374, 0.432075171205606, 
          0.09429845516802039, 0.12035355948399427`, 0.08752986144290494, 
          0.3058608058608059, 0.4506450071667463, 0.03720337633381112, 
          0.10371078197165155`, 0.7251313903487817, 
          0.3388596910336041, -0.5211339385252429, -0.17776716037585605`}, {
         0.5717789456919892, 0.7047141264532569, 0.7107501194457717, 
          0.8946169772256729, 0.561522535435579, 0, 0.4687848383500558, 
          0.7186176142697882, 0.25693581780538305`, 0.2930721452460583, 
          0.6164357381748686, 0.2668100015926103, 0.2885969103360408, 
          0.06321070234113713, 0.7627488453575411, 0.6740882306099698, 
          0.7505175983436854, 0.063768115942029, 
          0.4134575569358178, -0.010622710622710623`, -0.1481286829112916}, {
         0.8197005892658067, 0.6172957477305304, 0.7125019907628604, 
          0.6129160694378086, 0.8496257365822584, 0.4687848383500558, 0, 
          0.4462653288740246, 0.3175824175824176, 0.5338907469342252, 
          0.09952221691352127, 0.19496735148909064`, 0.14083452779104955`, 
          0.42325211020863196`, 0.2937569676700112, -0.09633699633699634, 
          0.01505016722408027, 0.7455964325529544, 
          0.2516483516483517, -0.49761108456760633`, -0.22110208631947764`}, {
         0.7130753304666348, 0.5837394489568403, 0.6132982959069916, 
          0.7318999840738972, 0.5045230132186654, 0.7186176142697882, 
          0.4462653288740246, 0, 0.5245899028507724, 0.7075171205605989, 
          0.7031692944736424, 0.6517598343685301, 0.6937728937728939, 
          0.542936773371556, 0.4152572065615544, 0.6049848702022615, 
          0.5110049370918937, 0.1840101927058449, 0.07947125338429686, 
          0.275139353400223, 0.0074215639433030745`}, {
         0.5581302755215799, 0.4124860646599777, 0.40743749004618574`, 
          0.31533683707596755`, 0.3373626373626374, 0.25693581780538305`, 
          0.3175824175824176, 0.5245899028507724, 0, 0.5712533842968626, 
          0.3286351329829591, 0.7387004300047779, 0.7214365344800128, 
          0.5371555980251633, 0.21274088230609972`, 0.20761267717789458`, 
          0.10549450549450551`, 0.2916547220895047, -0.25440356744704573`, 
          0.406577480490524, 0.3453734671125976}, {
         0.7738015607580826, 0.2893295110686415, 0.3849020544672719, 
          0.36545628284758724`, 0.432075171205606, 0.2930721452460583, 
          0.5338907469342252, 0.7075171205605989, 0.5712533842968626, 0, 
          0.5330625895843287, 0.7681477942347509, 0.76644370122631, 
          0.9122153209109731, -0.07856346551998726, 0.15972288580984234`, 
          0.08321388756171366, 0.459993629558847, -0.21070234113712377`, 
          0.21985985029463292`, 0.03322185061315496}, {
         0.39503105590062115`, 0.21930243669374105`, 0.2955088389870999, 
          0.4106386367255933, 0.09429845516802039, 0.6164357381748686, 
          0.09952221691352127, 0.7031692944736424, 0.3286351329829591, 
          0.5330625895843287, 0, 0.640691192865106, 0.6612995699952222, 
          0.40791527313266446`, 0.17477305303392263`, 0.7541965281095716, 
          0.6420767638158943, -0.12040133779264216`, -0.0455327281414238, 
          0.5222009874183787, 0.026134734830387005`}, {
         0.5447682752030578, 0.1756171364867017, 0.257445453097627, 
          0.26529702181876097`, 0.12035355948399427`, 0.2668100015926103, 
          0.19496735148909064`, 0.6517598343685301, 0.7387004300047779, 
          0.7681477942347509, 0.640691192865106, 0, 0.9693581780538303, 
          0.7144768275203058, -0.02142060837713012, 0.4370281892021023, 
          0.3190476190476191, 0.08931358496575889, -0.4021022455805065, 
          0.6517439082656474, 0.38117534639273776`}, {
         0.528428093645485, 0.1933906673037108, 0.24632903328555505`, 
          0.2735945214206084, 0.08752986144290494, 0.2885969103360408, 
          0.14083452779104955`, 0.6937728937728939, 0.7214365344800128, 
          0.76644370122631, 0.6612995699952222, 0.9693581780538303, 0, 
          0.7003503742634178, -0.007899347029781813, 0.48165312947921646`, 
          0.3372670807453416, 0.056537665233317415`, -0.36249402771141903`, 
          0.6835642618251314, 0.3684981684981685}, {
         0.668052237617455, 0.06923076923076923, 0.3009396400700749, 
          0.11041567128523651`, 0.3058608058608059, 0.06321070234113713, 
          0.42325211020863196`, 0.542936773371556, 0.5371555980251633, 
          0.9122153209109731, 0.40791527313266446`, 0.7144768275203058, 
          0.7003503742634178, 
          0, -0.2999840738971174, -0.04218824653607263, -0.13643892339544514`,
           0.5076286032807772, -0.2949992036948559, 0.2025163242554547, 
          0.026644370122630996`}, {
         0.33602484472049693`, 0.6144927536231884, 0.6209587513935341, 
          0.7836598184424272, 0.4506450071667463, 0.7627488453575411, 
          0.2937569676700112, 0.4152572065615544, 
          0.21274088230609972`, -0.07856346551998726, 
          0.17477305303392263`, -0.02142060837713012, -0.007899347029781813, \
-0.2999840738971174, 0, 0.4544513457556936, 
          0.6567128523650263, -0.0758719541328237, 
          0.4116738334129639, -0.05306577480490524, -0.044242713807931204`}, {
         0.1565217391304348, 0.40127408823061, 0.2103360407708234, 
          0.5027233635929289, 0.03720337633381112, 
          0.6740882306099698, -0.09633699633699634, 0.6049848702022615, 
          0.20761267717789458`, 0.15972288580984234`, 0.7541965281095716, 
          0.4370281892021023, 0.48165312947921646`, -0.04218824653607263, 
          0.4544513457556936, 0, 0.811116419812072, -0.39612995699952225`, 
          0.06301958910654563, 0.4988533205924511, 0.0986303551520943}, {
         0.21403089663959232`, 0.368944099378882, 0.36868928173276005`, 
          0.6311355311355312, 0.10371078197165155`, 0.7505175983436854, 
          0.01505016722408027, 0.5110049370918937, 0.10549450549450551`, 
          0.08321388756171366, 0.6420767638158943, 0.3190476190476191, 
          0.3372670807453416, -0.13643892339544514`, 0.6567128523650263, 
          0.811116419812072, 0, -0.3492753623188406, 0.2084567606306737, 
          0.36192068800764454`, 0.030259595476986784`}, {
         0.6182194616977226, 0.391431756649148, 0.40926899187768756`, 
          0.20818601688166907`, 0.7251313903487817, 0.063768115942029, 
          0.7455964325529544, 0.1840101927058449, 0.2916547220895047, 
          0.459993629558847, -0.12040133779264216`, 0.08931358496575889, 
          0.056537665233317415`, 
          0.5076286032807772, -0.0758719541328237, -0.39612995699952225`, \
-0.3492753623188406, 0, 
          0.08509316770186336, -0.53737856346552, -0.1393215480172002}, {
         0.06685777990125817, 0.30402930402930406`, 0.31555980251632426`, 
          0.37939162286988376`, 0.3388596910336041, 0.4134575569358178, 
          0.2516483516483517, 
          0.07947125338429686, -0.25440356744704573`, -0.21070234113712377`, \
-0.0455327281414238, -0.4021022455805065, -0.36249402771141903`, \
-0.2949992036948559, 0.4116738334129639, 0.06301958910654563, 
          0.2084567606306737, 0.08509316770186336, 
          0, -0.491559165472209, -0.4127090301003345}, {-0.1379678292721771, \
-0.23315814620162448`, -0.19616180920528747`, -0.12474916387959867`, \
-0.5211339385252429, -0.010622710622710623`, -0.49761108456760633`, 
          0.275139353400223, 0.406577480490524, 0.21985985029463292`, 
          0.5222009874183787, 0.6517439082656474, 0.6835642618251314, 
          0.2025163242554547, -0.05306577480490524, 0.4988533205924511, 
          0.36192068800764454`, -0.53737856346552, -0.491559165472209, 0, 
          0.42976588628762546`}, {-0.021484312788660618`, \
-0.06058289536550407, -0.18254499124064344`, -0.08450390189520625, \
-0.17776716037585605`, -0.1481286829112916, -0.22110208631947764`, 
          0.0074215639433030745`, 0.3453734671125976, 0.03322185061315496, 
          0.026134734830387005`, 0.38117534639273776`, 0.3684981684981685, 
          0.026644370122630996`, -0.044242713807931204`, 0.0986303551520943, 
          0.030259595476986784`, -0.1393215480172002, -0.4127090301003345, 
          0.42976588628762546`, 0}}, 
        ({
         Clip[Floor[Part[#, 1] - Part[#2, 2]] + 1, {1, 
           Part[#, 1]}], 
         Clip[Floor[
            Part[#2, 1]] + 1, {1, 
           Part[#, 2]}]}& )[{21, 21}, HeatmapPlot`Private`pt$]]}]},
  Frame->True,
  FrameLabel->{None, None},
  FrameStyle->AbsoluteThickness[0],
  FrameTicks->{{{{20.5, 
       FormBox["\"ADA\"", TraditionalForm], {0, 0}}, {19.5, 
       FormBox["\"BCH\"", TraditionalForm], {0, 0}}, {18.5, 
       FormBox["\"LTC\"", TraditionalForm], {0, 0}}, {17.5, 
       FormBox["\"THETA\"", TraditionalForm], {0, 0}}, {16.5, 
       FormBox["\"ETC\"", TraditionalForm], {0, 0}}, {15.5, 
       FormBox["\"VET\"", TraditionalForm], {0, 0}}, {14.5, 
       FormBox["\"DOGE\"", TraditionalForm], {0, 0}}, {13.5, 
       FormBox["\"LINK\"", TraditionalForm], {0, 0}}, {12.5, 
       FormBox["\"BNB\"", TraditionalForm], {0, 0}}, {11.5, 
       FormBox["\"XLM\"", TraditionalForm], {0, 0}}, {10.5, 
       FormBox["\"EOS\"", TraditionalForm], {0, 0}}, {9.5, 
       FormBox["\"ETH\"", TraditionalForm], {0, 0}}, {8.5, 
       FormBox["\"BTC\"", TraditionalForm], {0, 0}}, {7.5, 
       FormBox["\"XRP\"", TraditionalForm], {0, 0}}, {6.5, 
       FormBox["\"MATIC\"", TraditionalForm], {0, 0}}, {5.5, 
       FormBox["\"FIL\"", TraditionalForm], {0, 0}}, {4.5, 
       FormBox["\"TRX\"", TraditionalForm], {0, 0}}, {3.5, 
       FormBox["\"XMR\"", TraditionalForm], {0, 0}}, {2.5, 
       FormBox["\"USDC\"", TraditionalForm], {0, 0}}, {1.5, 
       FormBox["\"HEX\"", TraditionalForm], {0, 0}}, {0.5, 
       FormBox["\"USDT\"", TraditionalForm], {0, 0}}}, None}, {{{0.5, 
       FormBox[
        RotationBox["\"ADA\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {1.5, 
       FormBox[
        RotationBox["\"BCH\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {2.5, 
       FormBox[
        RotationBox["\"LTC\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {3.5, 
       FormBox[
        RotationBox["\"THETA\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {4.5, 
       FormBox[
        RotationBox["\"ETC\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {5.5, 
       FormBox[
        RotationBox["\"VET\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {6.5, 
       FormBox[
        RotationBox["\"DOGE\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {7.5, 
       FormBox[
        RotationBox["\"LINK\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {8.5, 
       FormBox[
        RotationBox["\"BNB\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {9.5, 
       FormBox[
        RotationBox["\"XLM\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {10.5, 
       FormBox[
        RotationBox["\"EOS\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {11.5, 
       FormBox[
        RotationBox["\"ETH\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {12.5, 
       FormBox[
        RotationBox["\"BTC\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {13.5, 
       FormBox[
        RotationBox["\"XRP\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {14.5, 
       FormBox[
        RotationBox["\"MATIC\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {15.5, 
       FormBox[
        RotationBox["\"FIL\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {16.5, 
       FormBox[
        RotationBox["\"TRX\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {17.5, 
       FormBox[
        RotationBox["\"XMR\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {18.5, 
       FormBox[
        RotationBox["\"USDC\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {19.5, 
       FormBox[
        RotationBox["\"HEX\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {20.5, 
       FormBox[
        RotationBox["\"USDT\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}}, None}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Medium,
  Method->{
   "GridLinesInFront" -> True, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic, "DomainPadding" -> Scaled[0.02], "RangePadding" -> 
    Scaled[0.05]},
  PlotLabel->FormBox["\"Opening price\"", TraditionalForm]]], "Output",
 CellChangeTimes->{3.89085874037854*^9, 3.890859593730864*^9},
 CellLabel->"Out[279]=",
 CellID->800408663,ExpressionUUID->"e60c7a05-67d2-4a01-a814-e3a5aeff7383"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Trading volume time series", "Subsection",
 CellChangeTimes->{{3.833014989263335*^9, 3.833014990477744*^9}, {
  3.8332805419577017`*^9, 3.83328056909343*^9}, {3.833281227186763*^9, 
  3.833281231596911*^9}},
 CellID->1993672282,ExpressionUUID->"1491c1a4-958d-4d0b-b622-14074259fa96"],

Cell[CellGroupData[{

Cell["\<\
Show heat-map plot corresponding to the max-normalized time series with \
clustering:\
\>", "Text",
 CellChangeTimes->{{3.83328063576219*^9, 3.8332806563500032`*^9}, {
   3.833281057072205*^9, 3.833281076311699*^9}, 3.833281384513629*^9},
 CellID->462699433,ExpressionUUID->"7ff07e9c-eac3-4232-a7a5-fd4c141ae0fa"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"matVals", "=", 
   RowBox[{"Association", "[", 
    RowBox[{
     RowBox[{"\"\<SparseMatrix\>\"", "->", 
      RowBox[{"SparseArray", "[", 
       RowBox[{"Values", "@", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"#", "[", "\"\<Values\>\"", "]"}], "/", 
            RowBox[{"Max", "[", 
             RowBox[{"#", "[", "\"\<Values\>\"", "]"}], "]"}]}], "&"}], ",", 
          "aTSVolume2"}], "]"}]}], "]"}]}], ",", 
     RowBox[{"\"\<RowNames\>\"", "\[Rule]", 
      RowBox[{"Keys", "[", "aTSOpen2", "]"}]}], ",", 
     RowBox[{"\"\<ColumnNames\>\"", "\[Rule]", 
      RowBox[{"Range", "[", 
       RowBox[{"Length", "[", 
        RowBox[{
         RowBox[{
         "aTSVolume2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
          "[", "\"\<Times\>\"", "]"}], "]"}], "]"}]}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"HeatmapPlot", "[", 
  RowBox[{
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"#", "/.", 
       RowBox[{"x_Association", "\[RuleDelayed]", 
        RowBox[{"Keys", "[", "x", "]"}]}]}], "&"}], ",", "matVals"}], "]"}], 
   ",", 
   RowBox[{"Dendrogram", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"True", ",", "False"}], "}"}]}], ",", 
   RowBox[{"DistanceFunction", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"CosineDistance", ",", "None"}], "}"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "1200"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.833280667544353*^9, 3.833280690123899*^9}, {
  3.833280761047305*^9, 3.833280764539287*^9}, {3.8332811027825727`*^9, 
  3.833281138884143*^9}, {3.8332815223824997`*^9, 3.833281532316518*^9}, {
  3.8332816119815607`*^9, 3.833281633771822*^9}, {3.833281669390204*^9, 
  3.833281676524728*^9}},
 CellLabel->"In[280]:=",
 CellID->551084644,ExpressionUUID->"dfdf75ad-7048-4303-b263-609dbe50b85d"],

Cell[BoxData[
 GraphicsBox[{RasterBox[CompressedData["
1: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
FFwPvmKFTObi2LLTgyDn+Yi389vwDArDPu9bdkzg4FJmH/fBL+LbYtfu/ZtH
IaT4ne0nZZLz74Y8zEgeDsW/dYpZRoHpLHX6+E4OOtSmRy8gHtu+xTp98zDx
d08Vu+OFbPxJpxbuVyT9l6JidKCIhyFnrYlVDt048PFfxg1NCsHJrpLHMllQ
OOxy71/RRyj+E2rtJc+R5hGdPmjCQsupDo1pyWWQbOzirR4UIps7lvTnEBM+
lxWKtMdfodzebNPfMgrRDqeqMndyYTyPF7XibSs+vjzj//wqBXZdaNFHPw4+
TN6X4Lq3CV/sotf8944iPhW3VHk5F6OfDhdRO1v/z/x5+mrbdrlPFFihm98Z
eHPRPrCTlbKoDa/K9TSukHn1vWIhNmuxAGp6lYE54oM49qihLOMXhc9Tvhem
LeOBOeVP+j+DTnxaW2dqSXJmu/Qle70nAsznP5g5z4OBtukuSgqLaWiU6fds
G+ZBXEkzYatJD57xGEZxEoRH2cfn2bqQnpv+py/6aycMrKVie0bIuR/ap8hf
QT7fktX51qwT5Yntd7zLaVwrelLp6iTEuyTDHC0NFpyOSuqenk6BCnqYqgoW
7qj3Rp8JK8P6g+KyJt6kR1M4vfd+8qH503y0M2oA/4JzW/L6haiR+vnW2osJ
JdHvVQ43X0HN0iVEJZ+CU7qn/+V/HIgpTjr2M6oFvu4pp74STprqKl1ns2wQ
ipNnzNz7OwjdIfqvLhnQqEXYNIYhHy/yqiWWmffis3ajuPYSERzkrX8n1FMQ
KT0uE33lQvOjU2d+B439taX/phNfnL6gKjabZmFnZtYPQTyNGpNNa1uIh9Sl
7/+xWIeBU55PlcOLaYS/Kq5oMhViwmL1AuoHE2Oj65yfadEI3Oi+smUKH5Vn
8+62pfXgz/xcxbE04oeHfZj9exlomHll8vWYNAxsCP8QWCyEyKZGfFcHA0qP
ptRYU3k42YYAxTQKUo8lXP97SXLqcv30Hceb0XE6eIUHmTeGcsr0iWZc6EjJ
v+l41ooYi6vzIomHSzlk7lU6wUT5vgYFuzuv0RX3KvHKRor4hMFc3hQ2tEr6
0jbUV8MiWDuIR3ze10/89eY8Nr66Tzhg0lKHWffa7B6QHg3fffR+ZCAP62du
/sAy7ULTX0/3QDEK2yVcbHwODsJgEl+q7WQIsk6oBQ89FyLctH+r7CMGSkIT
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
7tw8QmOatMc/uxkCLDkcn8JpGIBl2fm8c15kLx6qNtUOEQ4pbzI9e3YAJz06
KmtPE16tkmYs3S3A1+bu6V8jBnEsw+TkkkoK3zWH3kTt4SI15Htd+fdWHHTY
qn6dFkL81piWTBoTeR+O28fZvMP/o+PM36H63zAupEiUFG2oEFEhUVJ3pUWR
kJAIJS3WEFmzRCptKkpRSaFN2SrZs2/Z92XGbGbmHCSiTd/z+QO+v3a55jpz
3s9z369XM3N6j8dcsDpD4MuD9Xl7i6i+1Dmyz2H/VzDP3xzOFSHwqCwva0qS
iZCqp9nxoqXQsfn0eh3l6YurrKSXXmXhsuLJIpm0epwa9Hu0+DXlNUK+czcz
2Fik6n3JY0UruB+dTXtESOhuOz62zHMIS7oMInz0unHIkR2yhPKdoE1GtwTd
uXiV/SHx7/5++G1Q2znzFomk0Ql43uWhaoOfgcWqQUyJWAhetyLBPrWxfm4R
F2t5mofujw6gbmLJgHQDgZ/dkoKtfhxUKSQY8s+0Y/l95ycB6ykvk795rnQF
F3zGh92qE70Iy9m+2rCUQEnbqVl6uzgIju8r/ZHUhm0zzxqKpFHvq9LDy7mJ
jSHPJTqWPS3wstY3jKH6K/Gng5jiVS7cUspHLfr6MbSrxrE3lco35t7jUcM8
PNxc2vtiLgP5tGun9uqTKJicvVzAmov+HDH9kM4+lP+5lmZO+ePOy5cUaz0o
z43jawqVUV7wQrXWleItfbasW8jOIUyKrDgz63IXLop+M2opIXBtnYDAlp0c
mOS0Ni2Lb8M+1lqPU0sJXNCOmfI6y0R7wtTvg01lyJFIkHSwoThqk+msvGou
ascS+RLSNGweKTm6b4TEJ4njD10pb5Odc4f5tpYFR4cPVsNfqLn6Qe69b81H
0hbj4JgVTGSLfvjT2Eng/p3PveUvOHhQLDrr5soOhK9dVHvYkMSm1HNVNyK5
SHVv8g4u74eX8o73RDqBo8vf3MnpYmPbhxuBwn9awIsw+HVhI4HZM/fpePcy
saSj9LGUeRU8tGVTj/UQSGJ5uI6+pziSFrsswKQDvIGI2SMXCTjRnacWrGRj
Kja/oFy1CQpb1+ubZRBo8Bvr3f+NjdLXM1nl1q3Q+javo2gzARV217rVI0w8
ig0Q1mJVYfxJKOlH5XPP3KRLRYk0hFaL+Js4+GB9dI6AgAqBem7OmeinTFzV
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
gmS5tiPPNzhh+8yjp2e5CBjwNSXJLmLg+/GFpwLPKnAmOW/DTbK/+LniW696
0SGzM2dkUroY6cWfl+tfJudQKPcgB2MUxKNKy2vnKXjD3bpJlOwjg2Dbk05S
Y7B8VpMs/IMC2kajuIsM0rvd/X1Uu4eR/HK2Z9HoN5gQOdLvmAR2PHYI9aQP
Q0Ooy/7i0i7UWJUzMklPzHmxxULJhIlFhYIGO8Xb0P/6wLt8XbIH9x0LenF2
CFYyTv06fxqh3uftoJ1HgEPihd9yvmFQAlJfOWa1w7ZYa+5pIRtM33o1tx0s
BI70eDYU02Hpuy+1IomNY7YWWWHMMXwW+d02M0uD8aLRnU0lBGLXmMYmKw3D
Wz/r2KxeB/6ckKUeVGEjyjA4yByjiN2370GWVT9KuDz2SvCSX+c3rq21GcGj
UzxD57f24Mx7tyfTlqS/rLSt7uYYQ55ZSK1dAgUBo+EfaP99jmS7u/AfU5Kv
HXKCPikz0P5J1P3SJBs6lQ7nj3ETiArSXFhLGcLMgytblDLYUA8OvUn5NwZ3
jzyp7XvpKBbM1vpCcvithysM/xkOI2ZK/+V7ogO/JFNC6C8JTBTkndePZqJI
bJVRlMBXZF3tGpypJrAiX1zggv4wSkYXt5oMdKDLVvaMzQQBPzexyPjFI/Da
fczrakoXLmkl3q/XI6A/ofbzyPkh/OXkmJGQ/oxW/6m5yXA2EqRcdwiljCH8
AuNt8Vka9FJblNOesuF7V+fbjvgxpL7/vG/tMRqspqV7xacIBN+tszy5YgRr
z7ls0OjoQrftzZmJYgK+OUkaHnLDiH0ikdq5owNRenG2q8MI7O/qkwywZ2Kx
rYaolnkbBjpVja+1ETg8PuHwIXAY7WdSynfkdSLoxJvK0tUEfopKGT25zsBc
Z3t+UlEVmAGj5zlDyHxYpKS2speKr/H3OTfpeyKhUuXpOnECMX++m545y4BQ
3L9lFmuqUDJSsKWL7MG2JYdj9N+SnHApz8JnZynyty/9ZjbDAi10s9XwZ9If
VSVvCP4sw2Pr/istkSyMTX00/riL7FMOtSkVtZfwdJDraCNznichcEdZDB1i
krE5lHUlKFllNpA0x0LLbutvu3rJczR78dndG+WI7lO9w0EhIJKpuH9nzTDk
06tCN8d8g53Tj5qk9QRovm6F5Q8YyJLwk1uZWg2tI7J0yRrSW1fX3vP6RYOv
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
H0wYNh8=
    "], {{0, 0}, {91, 21}}, {0, 1}], 
   {GrayLevel[0.6], 
    {RGBColor[
     0, 1, 0]}, {{}, {
      LineBox[{{91., 2.5}, {91.6435934325334, 2.5}, {91.6435934325334, 3.5}, {
       91., 3.5}}], 
      LineBox[{{91., 1.5}, {92.57574141341021, 1.5}, {92.57574141341021, 
       3.}, {91.6435934325334, 3.}}], 
      LineBox[{{92.57574141341021, 2.25}, {93.38663180068023, 2.25}, {
       93.38663180068023, 4.5}, {91., 4.5}}], 
      LineBox[{{91., 0.5}, {93.75712227176028, 0.5}, {93.75712227176028, 
       3.375}, {93.38663180068023, 3.375}}], 
      LineBox[{{93.75712227176028, 1.9375}, {93.88143614348185, 1.9375}, {
       93.88143614348185, 5.5}, {91., 5.5}}], 
      LineBox[{{93.88143614348185, 3.71875}, {94.19492590897833, 3.71875}, {
       94.19492590897833, 6.5}, {91., 6.5}}], 
      LineBox[{{94.19492590897833, 5.109375}, {94.5734142826803, 5.109375}, {
       94.5734142826803, 7.5}, {91., 7.5}}], 
      LineBox[{{94.5734142826803, 6.3046875}, {94.59807693831392, 
       6.3046875}, {94.59807693831392, 8.5}, {91., 8.5}}], 
      LineBox[{{94.59807693831392, 7.40234375}, {95.32417193638366, 
       7.40234375}, {95.32417193638366, 9.5}, {91., 9.5}}], 
      LineBox[{{95.32417193638366, 8.451171875}, {96.48479582023184, 
       8.451171875}, {96.48479582023184, 10.5}, {91., 10.5}}], 
      LineBox[{{96.48479582023184, 9.4755859375}, {96.75545343718603, 
       9.4755859375}, {96.75545343718603, 11.5}, {91., 11.5}}], 
      LineBox[{{91., 12.5}, {94.47762999357143, 12.5}, {94.47762999357143, 
       13.5}, {91., 13.5}}], 
      LineBox[{{96.75545343718603, 10.48779296875}, {96.9780117664618, 
       10.48779296875}, {96.9780117664618, 13.}, {94.47762999357143, 13.}}], 
      LineBox[{{96.9780117664618, 11.743896484375}, {97.86246359172621, 
       11.743896484375}, {97.86246359172621, 14.5}, {91., 14.5}}], 
      LineBox[{{97.86246359172621, 13.1219482421875}, {97.88139720873698, 
       13.1219482421875}, {97.88139720873698, 15.5}, {91., 15.5}}], 
      LineBox[{{97.88139720873698, 14.31097412109375}, {99.01703864115359, 
       14.31097412109375}, {99.01703864115359, 16.5}, {91., 16.5}}], 
      LineBox[{{99.01703864115359, 15.405487060546875`}, {99.11320695990005, 
       15.405487060546875`}, {99.11320695990005, 17.5}, {91., 17.5}}], 
      LineBox[{{99.11320695990005, 16.452743530273438`}, {100.28343393860783`,
        16.452743530273438`}, {100.28343393860783`, 18.5}, {91., 18.5}}], 
      LineBox[{{100.28343393860783`, 17.47637176513672}, {106.89849594785855`,
        17.47637176513672}, {106.89849594785855`, 19.5}, {91., 19.5}}], 
      LineBox[{{106.89849594785855`, 18.48818588256836}, {109.2, 
       18.48818588256836}, {109.2, 20.5}, {91., 20.5}}]}}, {}}},
  BaseStyle->{FontSize -> 10},
  CoordinatesToolOptions:>{
   "DisplayFunction" -> Function[HeatmapPlot`Private`pt$, 
      Column[{
        Part[{
         "ADA", "ETH", "USDT", "BTC", "LTC", "XMR", "BCH", "BNB", "TRX", 
          "MATIC", "VET", "LINK", "XLM", "XRP", "ETC", "EOS", "THETA", "USDC",
           "FIL", "HEX", "DOGE"}, 
         Part[
          ({
           Clip[Floor[Part[#, 1] - Part[#2, 2]] + 1, {1, 
             Part[#, 1]}], 
           Clip[Floor[
              Part[#2, 1]] + 1, {1, 
             Part[#, 2]}]}& )[{21, 91}, HeatmapPlot`Private`pt$], 1]], 
        Part[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 
         19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 
         36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 
         53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 
         70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 
         87, 88, 89, 90, 91}, 
         Part[
          ({
           Clip[Floor[Part[#, 1] - Part[#2, 2]] + 1, {1, 
             Part[#, 1]}], 
           Clip[Floor[
              Part[#2, 1]] + 1, {1, 
             Part[#, 2]}]}& )[{21, 91}, HeatmapPlot`Private`pt$], 2]], 
        Extract[CompressedData["
1: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
r/LSdgiFdmOI8bH3rAET10/wnYwJ4kFEgvHOro6DVF/508JJXchq7zx+anUv
Tg6Fl739MAhWbsmn/Of9OP+sg2mk1QuhNrdwX8EuOO9zOnbi7QCu75TeFTg6
ANdD89QWF/bhWPlKH4/5/eAXzZdk2fZC0rs5K8qaA+t3+dfKr3dj98jE4sc2
QxBfdU9GrLIHWncSK4VMubimPKEyRuh7o+jLNi2C87f51qRW0zuQMxifUneM
jd4/NptyjnZAIu9Zp/95Ls7NGHScyu7Cz/rJzfN6eHhGy7u11paLI+qDy2/x
2iD0lq32cIYJx4X9818RfBqttWT9cvsuXDDY4P6Q4OPFCturg3SJORn6O6k0
9+DsXIxFY0MfyrJ0WtUu9sF6cNX7n78H8OtiWOb6ed8hsKbGf0VNL8yu+Os/
+MEBzS3SrkGmB67vWU0Ge4jPIa6pxiHm/9XlcWxuQTckk3nFD8QH/9OLddWN
5LP835HJZB3S9CF+zgrxfBf14FP1+VhZYu9FjdqWjk6DaN5cRpqQ7kbKGq0u
G/E+WPKHuh4t78e+Fts+naNd2L/g7vkji9owJSz88/5RLsKFEK+wsxuLBE7H
z1ZzsfYj5ZQsP5F/1wUmgoU46FC7kHpmG6GDppMF8SEcfGfMhS4iePbssLex
xfpBvL++rtLVoh+FjscXqU71Ys/yhZs5S7sgnnP+5vSfbmDF026raR4OHvGZ
Wz/ejp0hUs6mll24JFTibnWCCzm9c9G8O2w47Dh0hLGqHYKFD8b5s9hI1dHI
3LqkG5513RZDS7lYk+VkqznVhZgX4u/Pt3FBKkpZ83wLB89mfX+n7SFymz12
VTOpExq08dZMgh+OX0qINSzjwNbzyJu1HzhwqpluXpDQgam3p9XJFWxEn94Z
1baYhz1sqsDB1HZ8tXm/JvpnK6YfpJmdkSZ40+hvwJ7IFlw2t240u9KJ10Km
i9soHHAFz+4/It2HA0u2r+yM44HTPhfxQKsTlzdy99P92iHrc2Xz4YWEzm26
JDS/dkJN3s1PkNDRSyU6/0oGD1Mnda/pnOdh3d1fsjO9HMSZen9+dZbQzanC
f59V/rdvmuyDs6ZGPciU9S+5vY8Hmm4zLobxECNlqyRCcMKdZ7XGtvYc7AuL
MjkXTfQpzbixzcqd+BYvWB0/wsYiHUNOVlwHaH/890oPc+B8o/vmtX9MnFt3
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
9LjFD2aW1SHFrbk/gvCnqyW1dXfTmvHDRfzIxZ916FHYLSRL8AJ2bY/MIZOR
eDPKZ/IbDUvepPSWn6LCc4o5JPOLjHn+Rxlqg11YGHio56gKB34nTJYkWLVj
bLtP6NYgMiYHovfOfWlBroPqjPj7IdB4BVTlGDaGUsxLPwm1Y79222XHx2wU
3VkWEdLeDo672dnLMkz8tJ+6/GorDbWOGxUb3Mn4ePzwm5HIeghT3E4rO5DR
6Ep/QL1ERpBq4Y2XtylIMKz+bM4jfM31S/jfjc1ofsxW1f5HhdSfXY12+ylw
zb87dt+ChspyxVC3XDrW7xhW2l9LRdWC9vnynCYo5Dd/LW+phdq1oGfK98oI
zvi7MyCtApWc4zY+MrVYcOBRc1IdG5or+k/6pQ8g6aj7cqfvPOjekzpPqeFh
5Ps0Hi5rAfX7/Tdn9pER35olPETk6ozX28iqbxTUkXMWX35H5OAp/spbvdXw
lw+f+DJahyYvpcsyAxTMhuZE2m1ow6+9PwXDD1Khq3Vf7WMwGdO7Nz37PNqG
Dbuj268T867JZvU/2UpFweMSE5sD9fgmu+aSTF49Evulqe5vaPCn5/Htym6E
yeCUollEC6ZMPPPebCS4LnlQqZ1EhuXD+hV69xtQpLt/1+EKCvLeT3wTSW2G
aFzHsHwDBUrT9bmfMoh5m9fOnjnXh2i+q6UHjjLBJ/bb5sdYFUzHHlK15KvQ
VBV7pnWIDLPtp+cLTRI8pllmJXiIhLNnjtt5EVzWOt2zdY9oH1iSC5P3Dwzh
J3+CmdOnPtgf+DWPvKITrU/iV0dYs2Fnb3XvpCkTUx+Lpb5rU+Elm2Lt5sVA
x464ecITJGxbcOfmWlYNdjVfliErkVDWcrjQX4AD/wLle1ciWxGQKfTw56vO
/3QSld1nbnGrH76BYxabrTtQm7CV7/A9JrYPKpFc2AzwYKq39T0dTtU6IfUx
HMytjO1gS3BxqUslSWklB1P1MacjutsRJjebZv+LC1WLTyqSO7gI1aokT9/q
RMdqhdMP6hk4ydErPh/CRP78GI39igSfvBy5cyWSjcl37S91ZPswt6eOY/Gd
uBftn1ej0A5BOYFbxUTvVY6Mu3yhrx0uh/5pR5wl+kiJ5UoTvQbQ/m6TMt9A
g2lobNkpDSpG+x8fcK0hI0FNZKnm6k7wLStP0hCj4k/jHGNxWDOu8HmSx5fQ
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
hTorQd4hUnDHvhRf/QYXkbRJ0Dip5rBZsAp6vZofs5VLMOQzNi5lngfho+t1
GouzcSVG/2kLaqBicMMreaQKwnVe+ySXZqHpjdyChMJsjFs2NBhdzoMoRdwv
71kNLmRsKPi4rgTDYS9f963LQVGg//feW9kw/6X5zevbN+gqHw7p+pqF9QWX
Vpz9WIz5xSGuzB0F+LEvqeNgVA64VseK6/zykKVpWOzXV4JjPgzm+Fgd3uYv
EtDyaUKa6Vm5pLlaGObJrvX9U4nvsyWa85dVQoN2I4pUWQJG2RmV+WuKAceb
82vUasCYx7vnYlwGv4Xa25e9aMR58X+iW2rakZb34rTgGjo+eE4u9ljajKFl
Eq9PDVQiIGVY5/pcCzIi/HbvkG2CtKG08pOUckxmXFwhX1MO/ee2Dg3iZdA5
5x/1+2sTFHelBqC7Ajf79liffZgJ0WONfatrSxBhOLEzDg0wL5/davq4FMNs
vvruwGaE+MYE+xB9QlSpMT/iQRkkNA8bicgVI2VTNv2gfjkk+VWe9r0txW3B
gXmJEWVYfo4qb0NugIDaTHBZRCGyHJ/GhMkR+2MsqJu3Lw8f3ote3+eWhsDC
I3X5FzOReFJt/bpVBZDJXVHjTs5ESsrOcr8vabC7b73ve0cF0rxvjOs7ZWNX
CjvqFl8a3tVNbF0/kYlz/jWRwmU50JTck/SKkQtNkZoj39PLcdJM5yHVn+DJ
5106indL8eJQOm/fo0LkSHPV049X4MWKsR/JQzWozvhw8nVLBVZkpVivcP6G
aY8ox20ny+AWtWjTzclyPDeSuvDdJB/mo6+MMw4UY3NssOWfxmpQh13VfyTX
4czW1IRpeg2aZXcFmC8rwb5eu19qrGzwjzk0uIqlQ2KOOuNjUILW/h/zN53I
xv3JveLpf4oxnCmvskGpEOUZu0oE9xbCK7w34JMhGeN/FnS/X0D57/+3E3HV
DrN7v8PNoeltbHcnbvuVaQg/YmFV4IVbfNfIKON7FHkmtQKhEvy2l0tLUeQ0
TVtpWoZoJ5VzPYfLsED+Um1BQQV2z5+rcnzfhNJ/lha52i0QyJQqn35Vjha5
XbWDCVUwYzx8aqDLxD5jHefpTyRsOeL0vak0F/8HKhI1Ag==
         "], 
         ({
          Clip[Floor[Part[#, 1] - Part[#2, 2]] + 1, {1, 
            Part[#, 1]}], 
          Clip[Floor[
             Part[#2, 1]] + 1, {1, 
            Part[#, 2]}]}& )[{21, 91}, HeatmapPlot`Private`pt$]]}, Background -> 
       White, ImageSize -> {Automatic, 30}, 
       ImageMargins -> {{5, 5}, {10, 10}}, Alignment -> Center]], 
    "CopiedValueFunction" -> Function[HeatmapPlot`Private`pt$, {
       ({
        Clip[Floor[Part[#, 1] - Part[#2, 2]] + 1, {1, 
          Part[#, 1]}], 
        Clip[Floor[
           Part[#2, 1]] + 1, {1, 
          Part[#, 2]}]}& )[{21, 91}, HeatmapPlot`Private`pt$], 
       Extract[CompressedData["
1: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
r/LSdgiFdmOI8bH3rAET10/wnYwJ4kFEgvHOro6DVF/508JJXchq7zx+anUv
Tg6Fl739MAhWbsmn/Of9OP+sg2mk1QuhNrdwX8EuOO9zOnbi7QCu75TeFTg6
ANdD89QWF/bhWPlKH4/5/eAXzZdk2fZC0rs5K8qaA+t3+dfKr3dj98jE4sc2
QxBfdU9GrLIHWncSK4VMubimPKEyRuh7o+jLNi2C87f51qRW0zuQMxifUneM
jd4/NptyjnZAIu9Zp/95Ls7NGHScyu7Cz/rJzfN6eHhGy7u11paLI+qDy2/x
2iD0lq32cIYJx4X9818RfBqttWT9cvsuXDDY4P6Q4OPFCturg3SJORn6O6k0
9+DsXIxFY0MfyrJ0WtUu9sF6cNX7n78H8OtiWOb6ed8hsKbGf0VNL8yu+Os/
+MEBzS3SrkGmB67vWU0Ge4jPIa6pxiHm/9XlcWxuQTckk3nFD8QH/9OLddWN
5LP835HJZB3S9CF+zgrxfBf14FP1+VhZYu9FjdqWjk6DaN5cRpqQ7kbKGq0u
G/E+WPKHuh4t78e+Fts+naNd2L/g7vkji9owJSz88/5RLsKFEK+wsxuLBE7H
z1ZzsfYj5ZQsP5F/1wUmgoU46FC7kHpmG6GDppMF8SEcfGfMhS4iePbssLex
xfpBvL++rtLVoh+FjscXqU71Ys/yhZs5S7sgnnP+5vSfbmDF026raR4OHvGZ
Wz/ejp0hUs6mll24JFTibnWCCzm9c9G8O2w47Dh0hLGqHYKFD8b5s9hI1dHI
3LqkG5513RZDS7lYk+VkqznVhZgX4u/Pt3FBKkpZ83wLB89mfX+n7SFymz12
VTOpExq08dZMgh+OX0qINSzjwNbzyJu1HzhwqpluXpDQgam3p9XJFWxEn94Z
1baYhz1sqsDB1HZ8tXm/JvpnK6YfpJmdkSZ40+hvwJ7IFlw2t240u9KJ10Km
i9soHHAFz+4/It2HA0u2r+yM44HTPhfxQKsTlzdy99P92iHrc2Xz4YWEzm26
JDS/dkJN3s1PkNDRSyU6/0oGD1Mnda/pnOdh3d1fsjO9HMSZen9+dZbQzanC
f59V/rdvmuyDs6ZGPciU9S+5vY8Hmm4zLobxECNlqyRCcMKdZ7XGtvYc7AuL
MjkXTfQpzbixzcqd+BYvWB0/wsYiHUNOVlwHaH/890oPc+B8o/vmtX9MnFt3
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
9LjFD2aW1SHFrbk/gvCnqyW1dXfTmvHDRfzIxZ916FHYLSRL8AJ2bY/MIZOR
eDPKZ/IbDUvepPSWn6LCc4o5JPOLjHn+Rxlqg11YGHio56gKB34nTJYkWLVj
bLtP6NYgMiYHovfOfWlBroPqjPj7IdB4BVTlGDaGUsxLPwm1Y79222XHx2wU
3VkWEdLeDo672dnLMkz8tJ+6/GorDbWOGxUb3Mn4ePzwm5HIeghT3E4rO5DR
6Ep/QL1ERpBq4Y2XtylIMKz+bM4jfM31S/jfjc1ofsxW1f5HhdSfXY12+ylw
zb87dt+ChspyxVC3XDrW7xhW2l9LRdWC9vnynCYo5Dd/LW+phdq1oGfK98oI
zvi7MyCtApWc4zY+MrVYcOBRc1IdG5or+k/6pQ8g6aj7cqfvPOjekzpPqeFh
5Ps0Hi5rAfX7/Tdn9pER35olPETk6ozX28iqbxTUkXMWX35H5OAp/spbvdXw
lw+f+DJahyYvpcsyAxTMhuZE2m1ow6+9PwXDD1Khq3Vf7WMwGdO7Nz37PNqG
Dbuj268T867JZvU/2UpFweMSE5sD9fgmu+aSTF49Evulqe5vaPCn5/Htym6E
yeCUollEC6ZMPPPebCS4LnlQqZ1EhuXD+hV69xtQpLt/1+EKCvLeT3wTSW2G
aFzHsHwDBUrT9bmfMoh5m9fOnjnXh2i+q6UHjjLBJ/bb5sdYFUzHHlK15KvQ
VBV7pnWIDLPtp+cLTRI8pllmJXiIhLNnjtt5EVzWOt2zdY9oH1iSC5P3Dwzh
J3+CmdOnPtgf+DWPvKITrU/iV0dYs2Fnb3XvpCkTUx+Lpb5rU+Elm2Lt5sVA
x464ecITJGxbcOfmWlYNdjVfliErkVDWcrjQX4AD/wLle1ciWxGQKfTw56vO
/3QSld1nbnGrH76BYxabrTtQm7CV7/A9JrYPKpFc2AzwYKq39T0dTtU6IfUx
HMytjO1gS3BxqUslSWklB1P1MacjutsRJjebZv+LC1WLTyqSO7gI1aokT9/q
RMdqhdMP6hk4ydErPh/CRP78GI39igSfvBy5cyWSjcl37S91ZPswt6eOY/Gd
uBftn1ej0A5BOYFbxUTvVY6Mu3yhrx0uh/5pR5wl+kiJ5UoTvQbQ/m6TMt9A
g2lobNkpDSpG+x8fcK0hI0FNZKnm6k7wLStP0hCj4k/jHGNxWDOu8HmSx5fQ
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
hTorQd4hUnDHvhRf/QYXkbRJ0Dip5rBZsAp6vZofs5VLMOQzNi5lngfho+t1
GouzcSVG/2kLaqBicMMreaQKwnVe+ySXZqHpjdyChMJsjFs2NBhdzoMoRdwv
71kNLmRsKPi4rgTDYS9f963LQVGg//feW9kw/6X5zevbN+gqHw7p+pqF9QWX
Vpz9WIz5xSGuzB0F+LEvqeNgVA64VseK6/zykKVpWOzXV4JjPgzm+Fgd3uYv
EtDyaUKa6Vm5pLlaGObJrvX9U4nvsyWa85dVQoN2I4pUWQJG2RmV+WuKAceb
82vUasCYx7vnYlwGv4Xa25e9aMR58X+iW2rakZb34rTgGjo+eE4u9ljajKFl
Eq9PDVQiIGVY5/pcCzIi/HbvkG2CtKG08pOUckxmXFwhX1MO/ee2Dg3iZdA5
5x/1+2sTFHelBqC7Ajf79liffZgJ0WONfatrSxBhOLEzDg0wL5/davq4FMNs
vvruwGaE+MYE+xB9QlSpMT/iQRkkNA8bicgVI2VTNv2gfjkk+VWe9r0txW3B
gXmJEWVYfo4qb0NugIDaTHBZRCGyHJ/GhMkR+2MsqJu3Lw8f3ote3+eWhsDC
I3X5FzOReFJt/bpVBZDJXVHjTs5ESsrOcr8vabC7b73ve0cF0rxvjOs7ZWNX
CjvqFl8a3tVNbF0/kYlz/jWRwmU50JTck/SKkQtNkZoj39PLcdJM5yHVn+DJ
5106indL8eJQOm/fo0LkSHPV049X4MWKsR/JQzWozvhw8nVLBVZkpVivcP6G
aY8ox20ny+AWtWjTzclyPDeSuvDdJB/mo6+MMw4UY3NssOWfxmpQh13VfyTX
4czW1IRpeg2aZXcFmC8rwb5eu19qrGzwjzk0uIqlQ2KOOuNjUILW/h/zN53I
xv3JveLpf4oxnCmvskGpEOUZu0oE9xbCK7w34JMhGeN/FnS/X0D57/+3E3HV
DrN7v8PNoeltbHcnbvuVaQg/YmFV4IVbfNfIKON7FHkmtQKhEvy2l0tLUeQ0
TVtpWoZoJ5VzPYfLsED+Um1BQQV2z5+rcnzfhNJ/lha52i0QyJQqn35Vjha5
XbWDCVUwYzx8aqDLxD5jHefpTyRsOeL0vak0F/8HKhI1Ag==
        "], 
        ({
         Clip[Floor[Part[#, 1] - Part[#2, 2]] + 1, {1, 
           Part[#, 1]}], 
         Clip[Floor[
            Part[#2, 1]] + 1, {1, 
           Part[#, 2]}]}& )[{21, 91}, HeatmapPlot`Private`pt$]]}]},
  Frame->True,
  FrameLabel->{None, None},
  FrameStyle->AbsoluteThickness[0],
  FrameTicks->{{{{20.5, 
       FormBox["\"ADA\"", TraditionalForm], {0, 0}}, {19.5, 
       FormBox["\"ETH\"", TraditionalForm], {0, 0}}, {18.5, 
       FormBox["\"USDT\"", TraditionalForm], {0, 0}}, {17.5, 
       FormBox["\"BTC\"", TraditionalForm], {0, 0}}, {16.5, 
       FormBox["\"LTC\"", TraditionalForm], {0, 0}}, {15.5, 
       FormBox["\"XMR\"", TraditionalForm], {0, 0}}, {14.5, 
       FormBox["\"BCH\"", TraditionalForm], {0, 0}}, {13.5, 
       FormBox["\"BNB\"", TraditionalForm], {0, 0}}, {12.5, 
       FormBox["\"TRX\"", TraditionalForm], {0, 0}}, {11.5, 
       FormBox["\"MATIC\"", TraditionalForm], {0, 0}}, {10.5, 
       FormBox["\"VET\"", TraditionalForm], {0, 0}}, {9.5, 
       FormBox["\"LINK\"", TraditionalForm], {0, 0}}, {8.5, 
       FormBox["\"XLM\"", TraditionalForm], {0, 0}}, {7.5, 
       FormBox["\"XRP\"", TraditionalForm], {0, 0}}, {6.5, 
       FormBox["\"ETC\"", TraditionalForm], {0, 0}}, {5.5, 
       FormBox["\"EOS\"", TraditionalForm], {0, 0}}, {4.5, 
       FormBox["\"THETA\"", TraditionalForm], {0, 0}}, {3.5, 
       FormBox["\"USDC\"", TraditionalForm], {0, 0}}, {2.5, 
       FormBox["\"FIL\"", TraditionalForm], {0, 0}}, {1.5, 
       FormBox["\"HEX\"", TraditionalForm], {0, 0}}, {0.5, 
       FormBox["\"DOGE\"", TraditionalForm], {0, 0}}}, None}, {{{0.5, 
       FormBox[
        RotationBox["1", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {1.5, 
       FormBox[
        RotationBox["2", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {2.5, 
       FormBox[
        RotationBox["3", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {3.5, 
       FormBox[
        RotationBox["4", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {4.5, 
       FormBox[
        RotationBox["5", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {5.5, 
       FormBox[
        RotationBox["6", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {6.5, 
       FormBox[
        RotationBox["7", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {7.5, 
       FormBox[
        RotationBox["8", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {8.5, 
       FormBox[
        RotationBox["9", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {9.5, 
       FormBox[
        RotationBox["10", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {10.5, 
       FormBox[
        RotationBox["11", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {11.5, 
       FormBox[
        RotationBox["12", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {12.5, 
       FormBox[
        RotationBox["13", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {13.5, 
       FormBox[
        RotationBox["14", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {14.5, 
       FormBox[
        RotationBox["15", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {15.5, 
       FormBox[
        RotationBox["16", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {16.5, 
       FormBox[
        RotationBox["17", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {17.5, 
       FormBox[
        RotationBox["18", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {18.5, 
       FormBox[
        RotationBox["19", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {19.5, 
       FormBox[
        RotationBox["20", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {20.5, 
       FormBox[
        RotationBox["21", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {21.5, 
       FormBox[
        RotationBox["22", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {22.5, 
       FormBox[
        RotationBox["23", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {23.5, 
       FormBox[
        RotationBox["24", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {24.5, 
       FormBox[
        RotationBox["25", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {25.5, 
       FormBox[
        RotationBox["26", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {26.5, 
       FormBox[
        RotationBox["27", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {27.5, 
       FormBox[
        RotationBox["28", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {28.5, 
       FormBox[
        RotationBox["29", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {29.5, 
       FormBox[
        RotationBox["30", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {30.5, 
       FormBox[
        RotationBox["31", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {31.5, 
       FormBox[
        RotationBox["32", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {32.5, 
       FormBox[
        RotationBox["33", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {33.5, 
       FormBox[
        RotationBox["34", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {34.5, 
       FormBox[
        RotationBox["35", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {35.5, 
       FormBox[
        RotationBox["36", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {36.5, 
       FormBox[
        RotationBox["37", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {37.5, 
       FormBox[
        RotationBox["38", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {38.5, 
       FormBox[
        RotationBox["39", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {39.5, 
       FormBox[
        RotationBox["40", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {40.5, 
       FormBox[
        RotationBox["41", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {41.5, 
       FormBox[
        RotationBox["42", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {42.5, 
       FormBox[
        RotationBox["43", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {43.5, 
       FormBox[
        RotationBox["44", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {44.5, 
       FormBox[
        RotationBox["45", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {45.5, 
       FormBox[
        RotationBox["46", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {46.5, 
       FormBox[
        RotationBox["47", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {47.5, 
       FormBox[
        RotationBox["48", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {48.5, 
       FormBox[
        RotationBox["49", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {49.5, 
       FormBox[
        RotationBox["50", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {50.5, 
       FormBox[
        RotationBox["51", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {51.5, 
       FormBox[
        RotationBox["52", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {52.5, 
       FormBox[
        RotationBox["53", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {53.5, 
       FormBox[
        RotationBox["54", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {54.5, 
       FormBox[
        RotationBox["55", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {55.5, 
       FormBox[
        RotationBox["56", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {56.5, 
       FormBox[
        RotationBox["57", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {57.5, 
       FormBox[
        RotationBox["58", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {58.5, 
       FormBox[
        RotationBox["59", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {59.5, 
       FormBox[
        RotationBox["60", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {60.5, 
       FormBox[
        RotationBox["61", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {61.5, 
       FormBox[
        RotationBox["62", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {62.5, 
       FormBox[
        RotationBox["63", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {63.5, 
       FormBox[
        RotationBox["64", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {64.5, 
       FormBox[
        RotationBox["65", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {65.5, 
       FormBox[
        RotationBox["66", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {66.5, 
       FormBox[
        RotationBox["67", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {67.5, 
       FormBox[
        RotationBox["68", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {68.5, 
       FormBox[
        RotationBox["69", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {69.5, 
       FormBox[
        RotationBox["70", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {70.5, 
       FormBox[
        RotationBox["71", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {71.5, 
       FormBox[
        RotationBox["72", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {72.5, 
       FormBox[
        RotationBox["73", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {73.5, 
       FormBox[
        RotationBox["74", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {74.5, 
       FormBox[
        RotationBox["75", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {75.5, 
       FormBox[
        RotationBox["76", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {76.5, 
       FormBox[
        RotationBox["77", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {77.5, 
       FormBox[
        RotationBox["78", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {78.5, 
       FormBox[
        RotationBox["79", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {79.5, 
       FormBox[
        RotationBox["80", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {80.5, 
       FormBox[
        RotationBox["81", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {81.5, 
       FormBox[
        RotationBox["82", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {82.5, 
       FormBox[
        RotationBox["83", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {83.5, 
       FormBox[
        RotationBox["84", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {84.5, 
       FormBox[
        RotationBox["85", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {85.5, 
       FormBox[
        RotationBox["86", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {86.5, 
       FormBox[
        RotationBox["87", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {87.5, 
       FormBox[
        RotationBox["88", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {88.5, 
       FormBox[
        RotationBox["89", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {89.5, 
       FormBox[
        RotationBox["90", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {90.5, 
       FormBox[
        RotationBox["91", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}}, None}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->1200,
  Method->{
   "GridLinesInFront" -> True, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic, "DomainPadding" -> Scaled[0.02], "RangePadding" -> 
    Scaled[0.05]}]], "Output",
 CellChangeTimes->{3.890858740431336*^9, 3.890859595855712*^9},
 CellLabel->"Out[281]=",
 CellID->1489947284,ExpressionUUID->"bbc7138b-214a-4b1d-9aa3-56ce9401804b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Derive correlation triplets using ",
 StyleBox["SpearmanRho", "Program"],
 " :"
}], "Text",
 CellChangeTimes->{{3.833280500154409*^9, 3.8332805219209547`*^9}},
 CellID->2130125844,ExpressionUUID->"623f4c43-7441-4cb8-b00d-d28466f07c91"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"lsCorTriplets", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Outer", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"#1", ",", "#2", ",", 
          RowBox[{"SpearmanRho", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"aTSVolume2", "[", "#1", "]"}], "[", "\"\<Values\>\"", 
             "]"}], ",", 
            RowBox[{
             RowBox[{"aTSVolume2", "[", "#2", "]"}], "[", "\"\<Values\>\"", 
             "]"}]}], "]"}]}], "}"}], "&"}], ",", 
       RowBox[{"Keys", "@", "aTSVolume2"}], ",", 
       RowBox[{"Keys", "@", "aTSVolume2"}]}], "]"}], ",", "1"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"dsCorTriplets", "=", 
   RowBox[{
    RowBox[{"Dataset", "[", "lsCorTriplets", "]"}], "[", 
    RowBox[{"All", ",", 
     RowBox[{
      RowBox[{"AssociationThread", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "\"\<TS1\>\"", ",", "\"\<TS2\>\"", ",", "\"\<Correlation\>\""}], 
         "}"}], ",", "#"}], "]"}], "&"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dsCorTriplets", "=", 
   RowBox[{"dsCorTriplets", "[", 
    RowBox[{"Select", "[", 
     RowBox[{
      RowBox[{"#TS1", "\[NotEqual]", "#TS2"}], "&"}], "]"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.833014237379572*^9, 3.833014282130918*^9}, {
  3.833014561531404*^9, 3.833014855702478*^9}, {3.833280301302314*^9, 
  3.8332803084242697`*^9}, {3.833280922789289*^9, 3.833280959839538*^9}, {
  3.8332812498031178`*^9, 3.833281254820932*^9}},
 CellLabel->"In[282]:=",
 CellID->325180971,ExpressionUUID->"f01bf6de-16f3-4efe-bd8f-36c5a8ebddab"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Show summary of the correlation triplets:", "Text",
 CellChangeTimes->{{3.8332804746159143`*^9, 3.8332804906903753`*^9}},
 CellID->2118181629,ExpressionUUID->"386f85ac-3774-4c72-9ba2-a2a112924210"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<RecordsSummary\>\"", "]"}], "[", 
  "dsCorTriplets", "]"}]], "Input",
 CellChangeTimes->{{3.833014294024376*^9, 3.833014312000688*^9}, {
   3.833014703260983*^9, 3.833014707693556*^9}, 3.833280961888205*^9},
 CellLabel->"In[285]:=",
 CellID->1442222284,ExpressionUUID->"379d3cfe-86ad-4c7b-98c1-f7ee81b90980"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[GridBox[{
      {
       StyleBox["\<\"1 TS1\"\>",
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontFamily->"Times",
        FontColor->RGBColor[0, 0, 1]]},
      {
       TagBox[GridBox[{
          {"\<\"ADA\"\>", "20"},
          {"\<\"BCH\"\>", "20"},
          {"\<\"BNB\"\>", "20"},
          {"\<\"BTC\"\>", "20"},
          {"\<\"DOGE\"\>", "20"},
          {"\<\"EOS\"\>", "20"},
          {"\<\"(Other)\"\>", "300"}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"], ",", 
   TagBox[GridBox[{
      {
       StyleBox["\<\"2 TS2\"\>",
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontFamily->"Times",
        FontColor->RGBColor[0, 0, 1]]},
      {
       TagBox[GridBox[{
          {"\<\"ADA\"\>", "20"},
          {"\<\"BCH\"\>", "20"},
          {"\<\"BNB\"\>", "20"},
          {"\<\"BTC\"\>", "20"},
          {"\<\"DOGE\"\>", "20"},
          {"\<\"EOS\"\>", "20"},
          {"\<\"(Other)\"\>", "300"}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"], ",", 
   TagBox[GridBox[{
      {
       StyleBox["\<\"3 Correlation\"\>",
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontFamily->"Times",
        FontColor->RGBColor[0, 0, 1]]},
      {
       TagBox[GridBox[{
          {"\<\"Min\"\>", 
           RowBox[{"-", "0.25738174868609653`"}]},
          {"\<\"1st Qu\"\>", "0.26658703615225354`"},
          {"\<\"Mean\"\>", "0.40971932139634`"},
          {"\<\"Median\"\>", "0.4386606147475713`"},
          {"\<\"3rd Qu\"\>", "0.5824175824175825`"},
          {"\<\"Max\"\>", "0.9503583373148592`"}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"]}], "}"}]], "Output",
 CellChangeTimes->{3.8908587414122887`*^9, 3.8908595991083307`*^9},
 CellLabel->"Out[285]=",
 CellID->829883714,ExpressionUUID->"877c9aff-f302-4789-acba-65569e5823db"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Show correlations that too high or too low:", "Text",
 CellChangeTimes->{{3.833280335109672*^9, 3.833280379684595*^9}},
 CellID->782003499,ExpressionUUID->"11dd9d5a-874f-41e5-9b96-7da44f68a5ad"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Dataset", "[", 
   RowBox[{"Union", "[", 
    RowBox[{
     RowBox[{"Normal", "@", 
      RowBox[{"dsCorTriplets", "[", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Abs", "[", "#Correlation", "]"}], ">", "0.85"}], "&"}], 
        "]"}], "]"}]}], ",", 
     RowBox[{"\"\<SameTest\>\"", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Sort", "[", 
          RowBox[{"Values", "@", "#1"}], "]"}], "\[Equal]", 
         RowBox[{"Sort", "[", 
          RowBox[{"Values", "@", "#2"}], "]"}]}], "&"}], ")"}]}]}], "]"}], 
   "]"}], "[", 
  RowBox[{"ReverseSortBy", "[", 
   RowBox[{"#Correlation", "&"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.833015133772579*^9, 3.8330151577913322`*^9}, {
   3.8330151895173073`*^9, 3.833015220593174*^9}, {3.83301526273458*^9, 
   3.833015285255155*^9}, 3.8330153307266903`*^9, {3.8330154422130423`*^9, 
   3.8330155365652857`*^9}, {3.833015583220996*^9, 3.83301560449807*^9}, {
   3.8332803324462557`*^9, 3.833280368231761*^9}, 3.833280964442099*^9, {
   3.833281152003581*^9, 3.833281152429422*^9}},
 CellLabel->"In[286]:=",
 CellID->532888053,ExpressionUUID->"e95069d2-8e36-4a02-b131-a9c33ce0b724"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|
       "TS1" -> "BTC", "TS2" -> "USDT", "Correlation" -> 
        0.9503583373148592|>, <|
       "TS1" -> "ETH", "TS2" -> "USDC", "Correlation" -> 
        0.9219302436693741|>}, "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "TS1"} -> 1, {All, "TS2"} -> 
        1, {All, "Correlation"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "TS1" -> TypeSystem`PackageScope`AtomShape[33.6], "TS2" -> 
            TypeSystem`PackageScope`AtomShape[44.800000000000004`], 
            "Correlation" -> TypeSystem`PackageScope`AtomShape[60]|>], 
          DirectedInfinity[1], 3, {All}]], 2, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"TS1", "TS2", "Correlation"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Real]}], 2], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "TS1"} -> 1, {All, "TS2"} -> 
        1, {All, "Correlation"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "TS1" -> TypeSystem`PackageScope`AtomShape[33.6], "TS2" -> 
            TypeSystem`PackageScope`AtomShape[44.800000000000004`], 
            "Correlation" -> TypeSystem`PackageScope`AtomShape[60]|>], 
          DirectedInfinity[1], 3, {All}]], 2, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"TS1", "TS2", "Correlation"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Real]}], 2], "Path" -> {}, "DisplayedRowCount" -> 2, 
     "DisplayedColumnCount" -> 3, "DataRowCount" -> 2, "DataColumnCount" -> 3,
      "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["TS1", 
                  Style[
                  "TS1", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "TS1"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "TS1"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["TS2", 
                  Style[
                  "TS2", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "TS2"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "TS2"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Correlation", 
                  Style[
                  "Correlation", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Correlation"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Correlation"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation["BTC", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["TS1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["USDT", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["TS2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.950358"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Correlation"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["ETH", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["TS1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["USDC", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["TS2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.92193"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Correlation"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
    "28269e4c-a93a-4e8b-98d0-a765c2da94d0"][{
      Key["BTC"], 
      Key["BNB"]}, "Item", False]}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{171., {47.3544921875, 52.6455078125}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{171., {47.3544921875, 52.6455078125}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.890858741611998*^9, 3.8908596010430117`*^9},
 CellLabel->"Out[286]=",
 CellID->217713625,ExpressionUUID->"088b4fa5-115d-4efb-964b-248d606eecac"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Cross tabulate the correlation triplets and show the corresponding dataset:\
\>", "Text",
 CellChangeTimes->{{3.833280390112844*^9, 3.833280461091337*^9}},
 CellID->1242698781,ExpressionUUID->"ab682ca4-d1b8-49ac-8ec4-1e0ca4f73443"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dsMatCor", "=", 
  RowBox[{
   RowBox[{"ResourceFunction", "[", "\"\<CrossTabulate\>\"", "]"}], "[", 
   "dsCorTriplets", "]"}]}]], "Input",
 CellChangeTimes->{{3.833014869087783*^9, 3.833014923471737*^9}, {
  3.833280984174877*^9, 3.8332809957923117`*^9}},
 CellLabel->"In[287]:=",
 CellID->1759945192,ExpressionUUID->"77fc2db6-29f1-4c60-8ba5-dee4d5fe6394"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "ADA" -> <|
        "ADA" -> 0, "BCH" -> 0.38998248128682916`, "BNB" -> 
         0.6383341296384776, "BTC" -> 0.5312788660614748, "DOGE" -> 
         0.5423475075648989, "EOS" -> 0.2994585125019908, "ETC" -> 
         0.6091097308488613, "ETH" -> 0.6807612677177896, "FIL" -> 
         0.26658703615225354`, "HEX" -> -0.11750278706800447`, "LINK" -> 
         0.5200509635292244, "LTC" -> 0.6134894091415831, "MATIC" -> 
         0.39625736582258325`, "THETA" -> 0.35977066411849024`, "TRX" -> 
         0.5604077082337953, "USDC" -> 0.5824175824175825, "USDT" -> 
         0.6239369326325849, "VET" -> 0.3757286192068801, "XLM" -> 
         0.5936773371555981, "XMR" -> 0.45483357222487664`, "XRP" -> 
         0.3855390985825769|>, 
       "BCH" -> <|
        "ADA" -> 0.38998248128682916`, "BCH" -> 0, "BNB" -> 
         0.2211339385252429, "BTC" -> 0.7805223761745501, "DOGE" -> 
         0.0009077878643096036, "EOS" -> 0.43798375537505974`, "ETC" -> 
         0.5078993470297819, "ETH" -> 0.3167224080267559, "FIL" -> 
         0.6494664755534322, "HEX" -> 0.1554865424430642, "LINK" -> 
         0.7158464723682115, "LTC" -> 0.4586239847109413, "MATIC" -> 
         0.7964325529542922, "THETA" -> 0.638397834050008, "TRX" -> 
         0.5587991718426502, "USDC" -> 0.2794712533842969, "USDT" -> 
         0.7422678770504858, "VET" -> 0.6967510750119447, "XLM" -> 
         0.4623506927854754, "XMR" -> 0.4213091256569518, "XRP" -> 
         0.07529861442904921|>, 
       "BNB" -> <|
        "ADA" -> 0.6383341296384776, "BCH" -> 0.2211339385252429, "BNB" -> 0, 
         "BTC" -> 0.5150183150183151, "DOGE" -> 0.5139034878165314, "EOS" -> 
         0.1466316292403249, "ETC" -> 0.6016244624940278, "ETH" -> 
         0.6665074056378405, "FIL" -> 0.14290492116579073`, 
         "HEX" -> -0.18786430960344006`, "LINK" -> 0.39888517279821634`, 
         "LTC" -> 0.566061474757127, "MATIC" -> 0.27652492435101134`, "THETA" -> 
         0.30253225035833736`, "TRX" -> 0.4563146997929607, "USDC" -> 
         0.6277432712215322, "USDT" -> 0.5878802357063228, "VET" -> 
         0.406450071667463, "XLM" -> 0.3420130594043638, "XMR" -> 
         0.36817964644051604`, "XRP" -> 0.18315018315018317`|>, 
       "BTC" -> <|
        "ADA" -> 0.5312788660614748, "BCH" -> 0.7805223761745501, "BNB" -> 
         0.5150183150183151, "BTC" -> 0, "DOGE" -> 0.06561554387641345, "EOS" -> 
         0.48655836916706485`, "ETC" -> 0.567542602325211, "ETH" -> 
         0.6275043796782928, "FIL" -> 0.6185379837553752, "HEX" -> 
         0.13865265169612997`, "LINK" -> 0.6533046663481447, "LTC" -> 
         0.6190316929447365, "MATIC" -> 0.7453734671125977, "THETA" -> 
         0.5197005892658068, "TRX" -> 0.7047459786590222, "USDC" -> 
         0.5842172320433191, "USDT" -> 0.9503583373148592, "VET" -> 
         0.7253702818920211, "XLM" -> 0.48931358496575894`, "XMR" -> 
         0.5185061315496099, "XRP" -> 0.22129319955406915`|>, 
       "DOGE" -> <|
        "ADA" -> 0.5423475075648989, "BCH" -> 0.0009077878643096036, "BNB" -> 
         0.5139034878165314, "BTC" -> 0.06561554387641345, "DOGE" -> 0, 
         "EOS" -> -0.030164038859691038`, "ETC" -> 0.5118171683389076, "ETH" -> 
         0.34398789616180925`, "FIL" -> -0.1258639910813824, 
         "HEX" -> -0.25738174868609653`, "LINK" -> 0.16250995381430167`, 
         "LTC" -> 0.3585125019907629, "MATIC" -> 0.06278069756330626, "THETA" -> 
         0.2448160535117057, "TRX" -> 0.2771619684663163, "USDC" -> 
         0.18666985188724322`, "USDT" -> 0.17746456442108619`, "VET" -> 
         0.21197642936773373`, "XLM" -> 0.2615066093326963, "XMR" -> 
         0.050724637681159424`, "XRP" -> 0.18432871476349738`|>, 
       "EOS" -> <|
        "ADA" -> 0.2994585125019908, "BCH" -> 0.43798375537505974`, "BNB" -> 
         0.1466316292403249, "BTC" -> 0.48655836916706485`, 
         "DOGE" -> -0.030164038859691038`, "EOS" -> 0, "ETC" -> 
         0.2434623347666826, "ETH" -> 0.418330944417901, "FIL" -> 
         0.680315336837076, "HEX" -> 0.2584965758878803, "LINK" -> 
         0.4825609173435261, "LTC" -> 0.36004140786749483`, "MATIC" -> 
         0.4041248606465998, "THETA" -> 0.1765727026596592, "TRX" -> 
         0.4017518713170887, "USDC" -> 0.4541646759038064, "USDT" -> 
         0.5509953814301641, "VET" -> 0.5060519190953974, "XLM" -> 
         0.4561872909698997, "XMR" -> 0.18617614269788185`, "XRP" -> 
         0.30202261506609335`|>, 
       "ETC" -> <|
        "ADA" -> 0.6091097308488613, "BCH" -> 0.5078993470297819, "BNB" -> 
         0.6016244624940278, "BTC" -> 0.567542602325211, "DOGE" -> 
         0.5118171683389076, "EOS" -> 0.2434623347666826, "ETC" -> 0, "ETH" -> 
         0.44432234432234435`, "FIL" -> 0.24472049689440997`, 
         "HEX" -> -0.06265328874024527, "LINK" -> 0.46223921006529706`, "LTC" -> 
         0.4875935658544355, "MATIC" -> 0.5043956043956045, "THETA" -> 
         0.5326166587036153, "TRX" -> 0.5996018474279344, "USDC" -> 
         0.306322662844402, "USDT" -> 0.5912565695174391, "VET" -> 
         0.5000955566172958, "XLM" -> 0.43933747412008284`, "XMR" -> 
         0.3311673833412964, "XRP" -> 0.14921165790731009`|>, 
       "ETH" -> <|
        "ADA" -> 0.6807612677177896, "BCH" -> 0.3167224080267559, "BNB" -> 
         0.6665074056378405, "BTC" -> 0.6275043796782928, "DOGE" -> 
         0.34398789616180925`, "EOS" -> 0.418330944417901, "ETC" -> 
         0.44432234432234435`, "ETH" -> 0, "FIL" -> 0.3437967829272177, "HEX" -> 
         0.09984073897117376, "LINK" -> 0.4658544354196529, "LTC" -> 
         0.6244943462334768, "MATIC" -> 0.33029144768275204`, "THETA" -> 
         0.16133142220098742`, "TRX" -> 0.5753145405319319, "USDC" -> 
         0.9219302436693741, "USDT" -> 0.748494983277592, "VET" -> 
         0.40551043159738814`, "XLM" -> 0.5195094760312152, "XMR" -> 
         0.4720178372352286, "XRP" -> 0.47464564421086164`|>, 
       "FIL" -> <|
        "ADA" -> 0.26658703615225354`, "BCH" -> 0.6494664755534322, "BNB" -> 
         0.14290492116579073`, "BTC" -> 0.6185379837553752, 
         "DOGE" -> -0.1258639910813824, "EOS" -> 0.680315336837076, "ETC" -> 
         0.24472049689440997`, "ETH" -> 0.3437967829272177, "FIL" -> 0, "HEX" -> 
         0.20240484153527633`, "LINK" -> 0.5964644051600574, "LTC" -> 
         0.3237298932951107, "MATIC" -> 0.5126931039974518, "THETA" -> 
         0.36558369167064825`, "TRX" -> 0.3480012740882306, "USDC" -> 
         0.34819238732282215`, "USDT" -> 0.6388915432393694, "VET" -> 
         0.6543876413441632, "XLM" -> 0.30802675585284284`, "XMR" -> 
         0.12239210065297022`, "XRP" -> 0.017439082656473964`|>, 
       "HEX" -> <|
        "ADA" -> -0.11750278706800447`, "BCH" -> 0.1554865424430642, 
         "BNB" -> -0.18786430960344006`, "BTC" -> 0.13865265169612997`, 
         "DOGE" -> -0.25738174868609653`, "EOS" -> 0.2584965758878803, 
         "ETC" -> -0.06265328874024527, "ETH" -> 0.09984073897117376, "FIL" -> 
         0.20240484153527633`, "HEX" -> 0, "LINK" -> -0.04632903328555503, 
         "LTC" -> 0.07733715559802518, "MATIC" -> 0.12912884217232046`, 
         "THETA" -> -0.21168975951584648`, "TRX" -> 0.2821946169772257, 
         "USDC" -> 0.22403248924988056`, "USDT" -> 0.16872113393852525`, 
         "VET" -> 0.08087275043796784, "XLM" -> 0.2409937888198758, "XMR" -> 
         0.22704252269469663`, "XRP" -> 0.3237139671922281|>, 
       "LINK" -> <|
        "ADA" -> 0.5200509635292244, "BCH" -> 0.7158464723682115, "BNB" -> 
         0.39888517279821634`, "BTC" -> 0.6533046663481447, "DOGE" -> 
         0.16250995381430167`, "EOS" -> 0.4825609173435261, "ETC" -> 
         0.46223921006529706`, "ETH" -> 0.4658544354196529, "FIL" -> 
         0.5964644051600574, "HEX" -> -0.04632903328555503, "LINK" -> 0, 
         "LTC" -> 0.5461856983596115, "MATIC" -> 0.6638636725593248, "THETA" -> 
         0.7014811275680841, "TRX" -> 0.39240324892498807`, "USDC" -> 
         0.45140946010511235`, "USDT" -> 0.7191113234591496, "VET" -> 
         0.7212613473483039, "XLM" -> 0.4636088549132028, "XMR" -> 
         0.2846950151297978, "XRP" -> 0.1140946010511228|>, 
       "LTC" -> <|
        "ADA" -> 0.6134894091415831, "BCH" -> 0.4586239847109413, "BNB" -> 
         0.566061474757127, "BTC" -> 0.6190316929447365, "DOGE" -> 
         0.3585125019907629, "EOS" -> 0.36004140786749483`, "ETC" -> 
         0.4875935658544355, "ETH" -> 0.6244943462334768, "FIL" -> 
         0.3237298932951107, "HEX" -> 0.07733715559802518, "LINK" -> 
         0.5461856983596115, "LTC" -> 0, "MATIC" -> 0.4681318681318682, 
         "THETA" -> 0.3455964325529543, "TRX" -> 0.6550406115623507, "USDC" -> 
         0.630211817168339, "USDT" -> 0.7168179646440517, "VET" -> 
         0.42833253702818924`, "XLM" -> 0.516467590380634, "XMR" -> 
         0.4677814938684504, "XRP" -> 0.41917502787068006`|>, 
       "MATIC" -> <|
        "ADA" -> 0.39625736582258325`, "BCH" -> 0.7964325529542922, "BNB" -> 
         0.27652492435101134`, "BTC" -> 0.7453734671125977, "DOGE" -> 
         0.06278069756330626, "EOS" -> 0.4041248606465998, "ETC" -> 
         0.5043956043956045, "ETH" -> 0.33029144768275204`, "FIL" -> 
         0.5126931039974518, "HEX" -> 0.12912884217232046`, "LINK" -> 
         0.6638636725593248, "LTC" -> 0.4681318681318682, "MATIC" -> 0, 
         "THETA" -> 0.5961299569995223, "TRX" -> 0.6979296066252588, "USDC" -> 
         0.2878006051919096, "USDT" -> 0.7436693741041568, "VET" -> 
         0.6775441949354993, "XLM" -> 0.299362955884695, "XMR" -> 
         0.4365822583213888, "XRP" -> -0.046074215639433036`|>, 
       "THETA" -> <|
        "ADA" -> 0.35977066411849024`, "BCH" -> 0.638397834050008, "BNB" -> 
         0.30253225035833736`, "BTC" -> 0.5197005892658068, "DOGE" -> 
         0.2448160535117057, "EOS" -> 0.1765727026596592, "ETC" -> 
         0.5326166587036153, "ETH" -> 0.16133142220098742`, "FIL" -> 
         0.36558369167064825`, "HEX" -> -0.21168975951584648`, "LINK" -> 
         0.7014811275680841, "LTC" -> 0.3455964325529543, "MATIC" -> 
         0.5961299569995223, "THETA" -> 0, "TRX" -> 0.3741519350215003, 
         "USDC" -> 0.09390030259595478, "USDT" -> 0.5083930562191432, "VET" -> 
         0.7057811753463928, "XLM" -> 0.3193183627966237, "XMR" -> 
         0.10848861283643893`, "XRP" -> -0.07504379678292722|>, 
       "TRX" -> <|
        "ADA" -> 0.5604077082337953, "BCH" -> 0.5587991718426502, "BNB" -> 
         0.4563146997929607, "BTC" -> 0.7047459786590222, "DOGE" -> 
         0.2771619684663163, "EOS" -> 0.4017518713170887, "ETC" -> 
         0.5996018474279344, "ETH" -> 0.5753145405319319, "FIL" -> 
         0.3480012740882306, "HEX" -> 0.2821946169772257, "LINK" -> 
         0.39240324892498807`, "LTC" -> 0.6550406115623507, "MATIC" -> 
         0.6979296066252588, "THETA" -> 0.3741519350215003, "TRX" -> 0, 
         "USDC" -> 0.5347189042841217, "USDT" -> 0.7573021181716835, "VET" -> 
         0.5457716196846633, "XLM" -> 0.47612677177894575`, "XMR" -> 
         0.5991081382385731, "XRP" -> 0.2991559165472209|>, 
       "USDC" -> <|
        "ADA" -> 0.5824175824175825, "BCH" -> 0.2794712533842969, "BNB" -> 
         0.6277432712215322, "BTC" -> 0.5842172320433191, "DOGE" -> 
         0.18666985188724322`, "EOS" -> 0.4541646759038064, "ETC" -> 
         0.306322662844402, "ETH" -> 0.9219302436693741, "FIL" -> 
         0.34819238732282215`, "HEX" -> 0.22403248924988056`, "LINK" -> 
         0.45140946010511235`, "LTC" -> 0.630211817168339, "MATIC" -> 
         0.2878006051919096, "THETA" -> 0.09390030259595478, "TRX" -> 
         0.5347189042841217, "USDC" -> 0, "USDT" -> 0.7263417741678612, "VET" -> 
         0.36703296703296706`, "XLM" -> 0.524143971970059, "XMR" -> 
         0.49839146360885495`, "XRP" -> 0.5031692944736423|>, 
       "USDT" -> <|
        "ADA" -> 0.6239369326325849, "BCH" -> 0.7422678770504858, "BNB" -> 
         0.5878802357063228, "BTC" -> 0.9503583373148592, "DOGE" -> 
         0.17746456442108619`, "EOS" -> 0.5509953814301641, "ETC" -> 
         0.5912565695174391, "ETH" -> 0.748494983277592, "FIL" -> 
         0.6388915432393694, "HEX" -> 0.16872113393852525`, "LINK" -> 
         0.7191113234591496, "LTC" -> 0.7168179646440517, "MATIC" -> 
         0.7436693741041568, "THETA" -> 0.5083930562191432, "TRX" -> 
         0.7573021181716835, "USDC" -> 0.7263417741678612, "USDT" -> 0, "VET" -> 
         0.7391941391941392, "XLM" -> 0.5566650740563784, "XMR" -> 
         0.5407071189679886, "XRP" -> 0.2857939162286989|>, 
       "VET" -> <|
        "ADA" -> 0.3757286192068801, "BCH" -> 0.6967510750119447, "BNB" -> 
         0.406450071667463, "BTC" -> 0.7253702818920211, "DOGE" -> 
         0.21197642936773373`, "EOS" -> 0.5060519190953974, "ETC" -> 
         0.5000955566172958, "ETH" -> 0.40551043159738814`, "FIL" -> 
         0.6543876413441632, "HEX" -> 0.08087275043796784, "LINK" -> 
         0.7212613473483039, "LTC" -> 0.42833253702818924`, "MATIC" -> 
         0.6775441949354993, "THETA" -> 0.7057811753463928, "TRX" -> 
         0.5457716196846633, "USDC" -> 0.36703296703296706`, "USDT" -> 
         0.7391941391941392, "VET" -> 0, "XLM" -> 0.4207676381589425, "XMR" -> 
         0.16477146042363436`, "XRP" -> 0.05091575091575092|>, 
       "XLM" -> <|
        "ADA" -> 0.5936773371555981, "BCH" -> 0.4623506927854754, "BNB" -> 
         0.3420130594043638, "BTC" -> 0.48931358496575894`, "DOGE" -> 
         0.2615066093326963, "EOS" -> 0.4561872909698997, "ETC" -> 
         0.43933747412008284`, "ETH" -> 0.5195094760312152, "FIL" -> 
         0.30802675585284284`, "HEX" -> 0.2409937888198758, "LINK" -> 
         0.4636088549132028, "LTC" -> 0.516467590380634, "MATIC" -> 
         0.299362955884695, "THETA" -> 0.3193183627966237, "TRX" -> 
         0.47612677177894575`, "USDC" -> 0.524143971970059, "USDT" -> 
         0.5566650740563784, "VET" -> 0.4207676381589425, "XLM" -> 0, "XMR" -> 
         0.4030737378563466, "XRP" -> 0.7383819079471254|>, 
       "XMR" -> <|
        "ADA" -> 0.45483357222487664`, "BCH" -> 0.4213091256569518, "BNB" -> 
         0.36817964644051604`, "BTC" -> 0.5185061315496099, "DOGE" -> 
         0.050724637681159424`, "EOS" -> 0.18617614269788185`, "ETC" -> 
         0.3311673833412964, "ETH" -> 0.4720178372352286, "FIL" -> 
         0.12239210065297022`, "HEX" -> 0.22704252269469663`, "LINK" -> 
         0.2846950151297978, "LTC" -> 0.4677814938684504, "MATIC" -> 
         0.4365822583213888, "THETA" -> 0.10848861283643893`, "TRX" -> 
         0.5991081382385731, "USDC" -> 0.49839146360885495`, "USDT" -> 
         0.5407071189679886, "VET" -> 0.16477146042363436`, "XLM" -> 
         0.4030737378563466, "XMR" -> 0, "XRP" -> 0.39410734193342895`|>, 
       "XRP" -> <|
        "ADA" -> 0.3855390985825769, "BCH" -> 0.07529861442904921, "BNB" -> 
         0.18315018315018317`, "BTC" -> 0.22129319955406915`, "DOGE" -> 
         0.18432871476349738`, "EOS" -> 0.30202261506609335`, "ETC" -> 
         0.14921165790731009`, "ETH" -> 0.47464564421086164`, "FIL" -> 
         0.017439082656473964`, "HEX" -> 0.3237139671922281, "LINK" -> 
         0.1140946010511228, "LTC" -> 0.41917502787068006`, 
         "MATIC" -> -0.046074215639433036`, "THETA" -> -0.07504379678292722, 
         "TRX" -> 0.2991559165472209, "USDC" -> 0.5031692944736423, "USDT" -> 
         0.2857939162286989, "VET" -> 0.05091575091575092, "XLM" -> 
         0.7383819079471254, "XMR" -> 0.39410734193342895`, "XRP" -> 0|>|>, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[2]} -> 1, {All, "ADA"} -> 
        1, {All, "BCH"} -> 1, {All, "BNB"} -> 1, {All, "BTC"} -> 
        1, {All, "DOGE"} -> 1, {All, "EOS"} -> 1, {All, "ETC"} -> 
        1, {All, "ETH"} -> 1, {All, "FIL"} -> 1, {All, "HEX"} -> 
        1, {All, "LINK"} -> 1, {All, "LTC"} -> 1, {All, "MATIC"} -> 
        1, {All, "THETA"} -> 1, {All, "TRX"} -> 1, {All, "USDC"} -> 
        1, {All, "USDT"} -> 1, {All, "VET"} -> 1, {All, "XLM"} -> 
        1, {All, "XMR"} -> 1, {All, "XRP"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[44.800000000000004`], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "ADA" -> TypeSystem`PackageScope`AtomShape[60], "BCH" -> 
             TypeSystem`PackageScope`AtomShape[60], "BNB" -> 
             TypeSystem`PackageScope`AtomShape[60], "BTC" -> 
             TypeSystem`PackageScope`AtomShape[60], "DOGE" -> 
             TypeSystem`PackageScope`AtomShape[60], "EOS" -> 
             TypeSystem`PackageScope`AtomShape[60], "ETC" -> 
             TypeSystem`PackageScope`AtomShape[60], "ETH" -> 
             TypeSystem`PackageScope`AtomShape[60], "FIL" -> 
             TypeSystem`PackageScope`AtomShape[60], "HEX" -> 
             TypeSystem`PackageScope`AtomShape[60], "LINK" -> 
             TypeSystem`PackageScope`AtomShape[60], "LTC" -> 
             TypeSystem`PackageScope`AtomShape[60], "MATIC" -> 
             TypeSystem`PackageScope`AtomShape[60], "THETA" -> 
             TypeSystem`PackageScope`AtomShape[60], "TRX" -> 
             TypeSystem`PackageScope`AtomShape[60], "USDC" -> 
             TypeSystem`PackageScope`AtomShape[60], "USDT" -> 
             TypeSystem`PackageScope`AtomShape[60], "VET" -> 
             TypeSystem`PackageScope`AtomShape[60], "XLM" -> 
             TypeSystem`PackageScope`AtomShape[60], "XMR" -> 
             TypeSystem`PackageScope`AtomShape[60], "XRP" -> 
             TypeSystem`PackageScope`AtomShape[60]|>], 
           DirectedInfinity[1], 10, {All}]]], 20, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{
        "ADA", "BCH", "BNB", "BTC", "DOGE", "EOS", "ETC", "ETH", "FIL", "HEX",
          "LINK", "LTC", "MATIC", "THETA", "TRX", "USDC", "USDT", "VET", 
         "XLM", "XMR", "XRP"}, {
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real]}], 21], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[2]} -> 1, {All, "ADA"} -> 
        1, {All, "BCH"} -> 1, {All, "BNB"} -> 1, {All, "BTC"} -> 
        1, {All, "DOGE"} -> 1, {All, "EOS"} -> 1, {All, "ETC"} -> 
        1, {All, "ETH"} -> 1, {All, "FIL"} -> 1, {All, "HEX"} -> 
        1, {All, "LINK"} -> 1, {All, "LTC"} -> 1, {All, "MATIC"} -> 
        1, {All, "THETA"} -> 1, {All, "TRX"} -> 1, {All, "USDC"} -> 
        1, {All, "USDT"} -> 1, {All, "VET"} -> 1, {All, "XLM"} -> 
        1, {All, "XMR"} -> 1, {All, "XRP"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[44.800000000000004`], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "ADA" -> TypeSystem`PackageScope`AtomShape[60], "BCH" -> 
             TypeSystem`PackageScope`AtomShape[60], "BNB" -> 
             TypeSystem`PackageScope`AtomShape[60], "BTC" -> 
             TypeSystem`PackageScope`AtomShape[60], "DOGE" -> 
             TypeSystem`PackageScope`AtomShape[60], "EOS" -> 
             TypeSystem`PackageScope`AtomShape[60], "ETC" -> 
             TypeSystem`PackageScope`AtomShape[60], "ETH" -> 
             TypeSystem`PackageScope`AtomShape[60], "FIL" -> 
             TypeSystem`PackageScope`AtomShape[60], "HEX" -> 
             TypeSystem`PackageScope`AtomShape[60], "LINK" -> 
             TypeSystem`PackageScope`AtomShape[60], "LTC" -> 
             TypeSystem`PackageScope`AtomShape[60], "MATIC" -> 
             TypeSystem`PackageScope`AtomShape[60], "THETA" -> 
             TypeSystem`PackageScope`AtomShape[60], "TRX" -> 
             TypeSystem`PackageScope`AtomShape[60], "USDC" -> 
             TypeSystem`PackageScope`AtomShape[60], "USDT" -> 
             TypeSystem`PackageScope`AtomShape[60], "VET" -> 
             TypeSystem`PackageScope`AtomShape[60], "XLM" -> 
             TypeSystem`PackageScope`AtomShape[60], "XMR" -> 
             TypeSystem`PackageScope`AtomShape[60], "XRP" -> 
             TypeSystem`PackageScope`AtomShape[60]|>], 
           DirectedInfinity[1], 10, {All}]]], 20, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{
        "ADA", "BCH", "BNB", "BTC", "DOGE", "EOS", "ETC", "ETH", "FIL", "HEX",
          "LINK", "LTC", "MATIC", "THETA", "TRX", "USDC", "USDT", "VET", 
         "XLM", "XMR", "XRP"}, {
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real]}], 21], "Path" -> {}, "DisplayedRowCount" -> 
     20, "DisplayedColumnCount" -> 10, "DataRowCount" -> 21, 
     "DataColumnCount" -> 21, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["ADA", 
                  Style[
                  "ADA", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "ADA"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "ADA"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["BCH", 
                  Style[
                  "BCH", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "BCH"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "BCH"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["BNB", 
                  Style[
                  "BNB", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "BNB"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "BNB"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["BTC", 
                  Style[
                  "BTC", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "BTC"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "BTC"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["DOGE", 
                  Style[
                  "DOGE", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "DOGE"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "DOGE"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["EOS", 
                  Style[
                  "EOS", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "EOS"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "EOS"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["ETC", 
                  Style[
                  "ETC", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "ETC"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "ETC"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["ETH", 
                  Style[
                  "ETH", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "ETH"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "ETH"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["FIL", 
                  Style[
                  "FIL", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "FIL"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "FIL"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["HEX", 
                  Style[
                  "HEX", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "HEX"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "HEX"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["ADA", 
                  Style[
                  "ADA", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["ADA"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["ADA"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["ADA"], 
                 Key["ADA"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.389982"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["ADA"], 
                 Key["BCH"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.638334"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["ADA"], 
                 Key["BNB"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.531279"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["ADA"], 
                 Key["BTC"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.542348"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["ADA"], 
                 Key["DOGE"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.299459"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["ADA"], 
                 Key["EOS"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.60911"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["ADA"], 
                 Key["ETC"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.680761"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["ADA"], 
                 Key["ETH"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.266587"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["ADA"], 
                 Key["FIL"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-0.117503"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["ADA"], 
                 Key["HEX"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["BCH", 
                  Style[
                  "BCH", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["BCH"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["BCH"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.389982"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["BCH"], 
                 Key["ADA"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["BCH"], 
                 Key["BCH"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.221134"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["BCH"], 
                 Key["BNB"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.780522"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["BCH"], 
                 Key["BTC"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000907788"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["BCH"], 
                 Key["DOGE"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.437984"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["BCH"], 
                 Key["EOS"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.507899"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["BCH"], 
                 Key["ETC"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.316722"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["BCH"], 
                 Key["ETH"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.649466"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["BCH"], 
                 Key["FIL"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.155487"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["BCH"], 
                 Key["HEX"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["BNB", 
                  Style[
                  "BNB", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["BNB"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["BNB"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.638334"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["BNB"], 
                 Key["ADA"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.221134"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["BNB"], 
                 Key["BCH"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["BNB"], 
                 Key["BNB"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.515018"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["BNB"], 
                 Key["BTC"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.513903"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["BNB"], 
                 Key["DOGE"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.146632"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["BNB"], 
                 Key["EOS"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.601624"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["BNB"], 
                 Key["ETC"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.666507"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["BNB"], 
                 Key["ETH"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.142905"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["BNB"], 
                 Key["FIL"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-0.187864"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["BNB"], 
                 Key["HEX"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["BTC", 
                  Style[
                  "BTC", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["BTC"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["BTC"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.531279"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["BTC"], 
                 Key["ADA"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.780522"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["BTC"], 
                 Key["BCH"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.515018"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["BTC"], 
                 Key["BNB"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["BTC"], 
                 Key["BTC"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0656155"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["BTC"], 
                 Key["DOGE"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.486558"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["BTC"], 
                 Key["EOS"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.567543"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["BTC"], 
                 Key["ETC"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.627504"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["BTC"], 
                 Key["ETH"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.618538"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["BTC"], 
                 Key["FIL"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.138653"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["BTC"], 
                 Key["HEX"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["DOGE", 
                  Style[
                  "DOGE", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["DOGE"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["DOGE"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.542348"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["DOGE"], 
                 Key["ADA"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000907788"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["DOGE"], 
                 Key["BCH"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.513903"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["DOGE"], 
                 Key["BNB"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0656155"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["DOGE"], 
                 Key["BTC"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["DOGE"], 
                 Key["DOGE"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-0.030164"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["DOGE"], 
                 Key["EOS"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.511817"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["DOGE"], 
                 Key["ETC"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.343988"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["DOGE"], 
                 Key["ETH"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-0.125864"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["DOGE"], 
                 Key["FIL"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-0.257382"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["DOGE"], 
                 Key["HEX"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["EOS", 
                  Style[
                  "EOS", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["EOS"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["EOS"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.299459"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["EOS"], 
                 Key["ADA"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.437984"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["EOS"], 
                 Key["BCH"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.146632"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["EOS"], 
                 Key["BNB"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.486558"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["EOS"], 
                 Key["BTC"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-0.030164"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["EOS"], 
                 Key["DOGE"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["EOS"], 
                 Key["EOS"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.243462"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["EOS"], 
                 Key["ETC"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.418331"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["EOS"], 
                 Key["ETH"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.680315"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["EOS"], 
                 Key["FIL"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.258497"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["EOS"], 
                 Key["HEX"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["ETC", 
                  Style[
                  "ETC", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["ETC"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["ETC"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.60911"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["ETC"], 
                 Key["ADA"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.507899"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["ETC"], 
                 Key["BCH"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.601624"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["ETC"], 
                 Key["BNB"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.567543"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["ETC"], 
                 Key["BTC"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.511817"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["ETC"], 
                 Key["DOGE"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.243462"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["ETC"], 
                 Key["EOS"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["ETC"], 
                 Key["ETC"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.444322"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["ETC"], 
                 Key["ETH"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.24472"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["ETC"], 
                 Key["FIL"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-0.0626533"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["ETC"], 
                 Key["HEX"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["ETH", 
                  Style[
                  "ETH", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["ETH"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["ETH"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.680761"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["ETH"], 
                 Key["ADA"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.316722"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["ETH"], 
                 Key["BCH"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.666507"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["ETH"], 
                 Key["BNB"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.627504"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["ETH"], 
                 Key["BTC"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.343988"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["ETH"], 
                 Key["DOGE"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.418331"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["ETH"], 
                 Key["EOS"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.444322"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["ETH"], 
                 Key["ETC"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["ETH"], 
                 Key["ETH"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.343797"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["ETH"], 
                 Key["FIL"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0998407"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["ETH"], 
                 Key["HEX"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["FIL", 
                  Style[
                  "FIL", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["FIL"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["FIL"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.266587"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["FIL"], 
                 Key["ADA"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.649466"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["FIL"], 
                 Key["BCH"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.142905"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["FIL"], 
                 Key["BNB"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.618538"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["FIL"], 
                 Key["BTC"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-0.125864"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["FIL"], 
                 Key["DOGE"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.680315"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["FIL"], 
                 Key["EOS"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.24472"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["FIL"], 
                 Key["ETC"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.343797"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["FIL"], 
                 Key["ETH"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["FIL"], 
                 Key["FIL"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.202405"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["FIL"], 
                 Key["HEX"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["HEX", 
                  Style[
                  "HEX", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["HEX"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["HEX"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-0.117503"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["HEX"], 
                 Key["ADA"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.155487"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["HEX"], 
                 Key["BCH"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-0.187864"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["HEX"], 
                 Key["BNB"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.138653"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["HEX"], 
                 Key["BTC"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-0.257382"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["HEX"], 
                 Key["DOGE"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.258497"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["HEX"], 
                 Key["EOS"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-0.0626533"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["HEX"], 
                 Key["ETC"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0998407"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["HEX"], 
                 Key["ETH"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.202405"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["HEX"], 
                 Key["FIL"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["HEX"], 
                 Key["HEX"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["LINK", 
                  Style[
                  "LINK", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["LINK"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["LINK"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.520051"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["LINK"], 
                 Key["ADA"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.715846"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["LINK"], 
                 Key["BCH"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.398885"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["LINK"], 
                 Key["BNB"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.653305"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["LINK"], 
                 Key["BTC"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.16251"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["LINK"], 
                 Key["DOGE"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.482561"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["LINK"], 
                 Key["EOS"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.462239"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["LINK"], 
                 Key["ETC"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.465854"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["LINK"], 
                 Key["ETH"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.596464"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["LINK"], 
                 Key["FIL"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-0.046329"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["LINK"], 
                 Key["HEX"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["LTC", 
                  Style[
                  "LTC", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["LTC"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["LTC"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.613489"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["LTC"], 
                 Key["ADA"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.458624"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["LTC"], 
                 Key["BCH"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.566061"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["LTC"], 
                 Key["BNB"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.619032"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["LTC"], 
                 Key["BTC"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.358513"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["LTC"], 
                 Key["DOGE"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.360041"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["LTC"], 
                 Key["EOS"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.487594"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["LTC"], 
                 Key["ETC"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.624494"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["LTC"], 
                 Key["ETH"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.32373"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["LTC"], 
                 Key["FIL"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0773372"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["LTC"], 
                 Key["HEX"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["MATIC", 
                  Style[
                  "MATIC", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["MATIC"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["MATIC"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.396257"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["MATIC"], 
                 Key["ADA"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.796433"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["MATIC"], 
                 Key["BCH"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.276525"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["MATIC"], 
                 Key["BNB"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.745373"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["MATIC"], 
                 Key["BTC"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0627807"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["MATIC"], 
                 Key["DOGE"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.404125"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["MATIC"], 
                 Key["EOS"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.504396"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["MATIC"], 
                 Key["ETC"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.330291"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["MATIC"], 
                 Key["ETH"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.512693"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["MATIC"], 
                 Key["FIL"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.129129"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["MATIC"], 
                 Key["HEX"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["THETA", 
                  Style[
                  "THETA", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["THETA"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["THETA"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.359771"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["THETA"], 
                 Key["ADA"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.638398"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["THETA"], 
                 Key["BCH"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.302532"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["THETA"], 
                 Key["BNB"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.519701"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["THETA"], 
                 Key["BTC"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.244816"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["THETA"], 
                 Key["DOGE"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.176573"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["THETA"], 
                 Key["EOS"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.532617"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["THETA"], 
                 Key["ETC"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.161331"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["THETA"], 
                 Key["ETH"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.365584"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["THETA"], 
                 Key["FIL"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-0.21169"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["THETA"], 
                 Key["HEX"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["TRX", 
                  Style[
                  "TRX", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["TRX"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["TRX"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.560408"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["TRX"], 
                 Key["ADA"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.558799"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["TRX"], 
                 Key["BCH"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.456315"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["TRX"], 
                 Key["BNB"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.704746"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["TRX"], 
                 Key["BTC"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.277162"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["TRX"], 
                 Key["DOGE"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.401752"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["TRX"], 
                 Key["EOS"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.599602"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["TRX"], 
                 Key["ETC"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.575315"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["TRX"], 
                 Key["ETH"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.348001"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["TRX"], 
                 Key["FIL"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.282195"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["TRX"], 
                 Key["HEX"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["USDC", 
                  Style[
                  "USDC", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["USDC"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["USDC"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.582418"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["USDC"], 
                 Key["ADA"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.279471"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["USDC"], 
                 Key["BCH"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.627743"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["USDC"], 
                 Key["BNB"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.584217"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["USDC"], 
                 Key["BTC"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.18667"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["USDC"], 
                 Key["DOGE"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.454165"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["USDC"], 
                 Key["EOS"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.306323"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["USDC"], 
                 Key["ETC"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.92193"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["USDC"], 
                 Key["ETH"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.348192"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["USDC"], 
                 Key["FIL"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.224032"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["USDC"], 
                 Key["HEX"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["USDT", 
                  Style[
                  "USDT", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["USDT"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["USDT"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.623937"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["USDT"], 
                 Key["ADA"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.742268"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["USDT"], 
                 Key["BCH"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.58788"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["USDT"], 
                 Key["BNB"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.950358"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["USDT"], 
                 Key["BTC"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.177465"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["USDT"], 
                 Key["DOGE"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.550995"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["USDT"], 
                 Key["EOS"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.591257"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["USDT"], 
                 Key["ETC"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.748495"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["USDT"], 
                 Key["ETH"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.638892"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["USDT"], 
                 Key["FIL"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.168721"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["USDT"], 
                 Key["HEX"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["VET", 
                  Style[
                  "VET", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["VET"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["VET"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.375729"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["VET"], 
                 Key["ADA"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.696751"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["VET"], 
                 Key["BCH"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.40645"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["VET"], 
                 Key["BNB"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.72537"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["VET"], 
                 Key["BTC"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.211976"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["VET"], 
                 Key["DOGE"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.506052"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["VET"], 
                 Key["EOS"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.500096"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["VET"], 
                 Key["ETC"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.40551"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["VET"], 
                 Key["ETH"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.654388"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["VET"], 
                 Key["FIL"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0808728"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["VET"], 
                 Key["HEX"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["XLM", 
                  Style[
                  "XLM", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["XLM"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["XLM"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.593677"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["XLM"], 
                 Key["ADA"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.462351"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["XLM"], 
                 Key["BCH"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.342013"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["XLM"], 
                 Key["BNB"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.489314"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["XLM"], 
                 Key["BTC"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.261507"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["XLM"], 
                 Key["DOGE"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.456187"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["XLM"], 
                 Key["EOS"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.439337"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["XLM"], 
                 Key["ETC"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.519509"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["XLM"], 
                 Key["ETH"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.308027"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["XLM"], 
                 Key["FIL"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.240994"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["XLM"], 
                 Key["HEX"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["XMR", 
                  Style[
                  "XMR", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["XMR"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["XMR"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.454834"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["XMR"], 
                 Key["ADA"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.421309"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["XMR"], 
                 Key["BCH"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.36818"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["XMR"], 
                 Key["BNB"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.518506"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["XMR"], 
                 Key["BTC"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0507246"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["XMR"], 
                 Key["DOGE"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.186176"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["XMR"], 
                 Key["EOS"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.331167"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["XMR"], 
                 Key["ETC"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.472018"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["XMR"], 
                 Key["ETH"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.122392"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["XMR"], 
                 Key["FIL"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.227043"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["XMR"], 
                 Key["HEX"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[True, 21, 1], {1, 21 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[False, 21, 1], {1, 21 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[21, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[21, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 21, 1], {1, 21 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 21, 1], {1, 21 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}], 
                 Graphics[{
                   RGBColor[
                   0.8196078431372549, 0.8196078431372549, 
                    0.8196078431372549], 
                   Line[{{0, 0}, {0, 19}}]}, ImageSize -> (1 -> 1), 
                  ImagePadding -> {{0, 0}, {0, 0}}, BaselinePosition -> 
                  Scaled[0.35]], 
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 90 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 90 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + (-10) 
                    If[True, 21, 1], {1, 21 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 90 Degree, {9,
                     9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 90 Degree, {9,
                     9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + (-10) 
                    If[False, 21, 1], {1, 21 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"columns ", 1, "\[Dash]", 10, " of ", 
                    Style[21, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"columns ", 1, "\[Dash]", 10, " of ", 
                    Style[21, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 2 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 2, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 5 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 5, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 100000000, {}]], MenuEvaluator -> Automatic]}],
                     " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], (-90) 
                    Degree, {9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], (-90) 
                    Degree, {9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + 
                    10 If[False, 21, 1], {1, 21 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], (-90) Degree, {9, 
                    9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], (-90) Degree, {9, 
                    9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + 
                    10 If[True, 21, 1], {1, 21 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
               ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{799., {310.8544921875, 316.1455078125}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{799., {310.8544921875, 316.1455078125}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.890858741677326*^9, 3.890859602519496*^9},
 CellLabel->"Out[287]=",
 CellID->1641479894,ExpressionUUID->"d804a614-8445-47aa-b731-cd7dfbc3cec9"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Cross tabulate the correlation triplets and plot the corresponding matrix \
with heat-map plot:\
\>", "Text",
 CellChangeTimes->{{3.833280443371715*^9, 3.833280466674245*^9}, {
  3.8332807304441433`*^9, 3.833280745598424*^9}, {3.833281291999255*^9, 
  3.833281299390143*^9}},
 CellID->2106571813,ExpressionUUID->"2180968c-a329-43ff-b718-61aab4fc4c75"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"matCor2", "=", 
   RowBox[{
    RowBox[{"ResourceFunction", "[", "\"\<CrossTabulate\>\"", "]"}], "[", 
    RowBox[{"dsCorTriplets", ",", 
     RowBox[{"\"\<Sparse\>\"", "\[Rule]", "True"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"gr2", "=", 
  RowBox[{"HeatmapPlot", "[", 
   RowBox[{"matCor2", ",", 
    RowBox[{"Dendrogram", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"True", ",", "True"}], "}"}]}], ",", 
    RowBox[{"DistanceFunction", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"CosineDistance", ",", "CosineDistance"}], "}"}]}], ",", 
    RowBox[{"ImageSize", "->", "Medium"}], ",", 
    RowBox[{"PlotLabel", "->", "\"\<Trading volume\>\""}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.8330149276588287`*^9, 3.833014955602392*^9}, {
   3.833280709069497*^9, 3.833280719893345*^9}, {3.8332808323735857`*^9, 
   3.83328083951093*^9}, 3.833280987414939*^9, {3.833281032929421*^9, 
   3.833281034740595*^9}, {3.8332812828091497`*^9, 3.833281306992385*^9}, {
   3.833281753937437*^9, 3.833281768460964*^9}, {3.833281822174019*^9, 
   3.83328182258601*^9}, {3.833282123620708*^9, 3.833282126242333*^9}},
 CellLabel->"In[288]:=",
 CellID->1737056649,ExpressionUUID->"ddc593b2-68e1-407b-9a35-9a4024af165a"],

Cell[BoxData[
 GraphicsBox[{RasterBox[CompressedData["
1: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
HU1eaw==
    "], {{0, 0}, {21, 21}}, {0, 1}], 
   {GrayLevel[0.6], 
    {RGBColor[
     0, 1, 0]}, {{}, {
      LineBox[{{21., 1.5}, {21.851425072082105`, 1.5}, {21.851425072082105`, 
       2.5}, {21., 2.5}}], 
      LineBox[{{21.851425072082105`, 2.}, {21.87655612377959, 2.}, {
       21.87655612377959, 3.5}, {21., 3.5}}], 
      LineBox[{{21., 0.5}, {21.879469793954975`, 0.5}, {21.879469793954975`, 
       2.75}, {21.87655612377959, 2.75}}], 
      LineBox[{{21.879469793954975`, 1.625}, {21.909744480438967`, 1.625}, {
       21.909744480438967`, 4.5}, {21., 4.5}}], 
      LineBox[{{21.909744480438967`, 3.0625}, {21.911310917143897`, 3.0625}, {
       21.911310917143897`, 5.5}, {21., 5.5}}], 
      LineBox[{{21., 6.5}, {21.771254174354073`, 6.5}, {21.771254174354073`, 
       7.5}, {21., 7.5}}], 
      LineBox[{{21.771254174354073`, 7.}, {21.905269035932367`, 7.}, {
       21.905269035932367`, 8.5}, {21., 8.5}}], 
      LineBox[{{21.911310917143897`, 4.28125}, {21.964301173589366`, 
       4.28125}, {21.964301173589366`, 7.75}, {21.905269035932367`, 7.75}}], 
      LineBox[{{21.964301173589366`, 6.015625}, {22.007736187322376`, 
       6.015625}, {22.007736187322376`, 9.5}, {21., 9.5}}], 
      LineBox[{{22.007736187322376`, 7.7578125}, {22.03119224563461, 
       7.7578125}, {22.03119224563461, 10.5}, {21., 10.5}}], 
      LineBox[{{22.03119224563461, 9.12890625}, {22.068368428359786`, 
       9.12890625}, {22.068368428359786`, 11.5}, {21., 11.5}}], 
      LineBox[{{22.068368428359786`, 10.314453125}, {22.070331994691067`, 
       10.314453125}, {22.070331994691067`, 12.5}, {21., 12.5}}], 
      LineBox[{{22.070331994691067`, 11.4072265625}, {22.075789726719822`, 
       11.4072265625}, {22.075789726719822`, 13.5}, {21., 13.5}}], 
      LineBox[{{22.075789726719822`, 12.45361328125}, {22.082791240906573`, 
       12.45361328125}, {22.082791240906573`, 14.5}, {21., 14.5}}], 
      LineBox[{{22.082791240906573`, 13.476806640625}, {22.09935035800832, 
       13.476806640625}, {22.09935035800832, 15.5}, {21., 15.5}}], 
      LineBox[{{22.09935035800832, 14.4884033203125}, {22.112614948908295`, 
       14.4884033203125}, {22.112614948908295`, 16.5}, {21., 16.5}}], 
      LineBox[{{22.112614948908295`, 15.49420166015625}, {22.40642645454297, 
       15.49420166015625}, {22.40642645454297, 17.5}, {21., 17.5}}], 
      LineBox[{{22.40642645454297, 16.497100830078125`}, {23.110448044418696`,
        16.497100830078125`}, {23.110448044418696`, 18.5}, {21., 18.5}}], 
      LineBox[{{23.110448044418696`, 17.498550415039062`}, {
       23.303684837162283`, 17.498550415039062`}, {23.303684837162283`, 
       19.5}, {21., 19.5}}], 
      LineBox[{{23.303684837162283`, 18.49927520751953}, {25.2, 
       18.49927520751953}, {25.2, 20.5}, {21., 20.5}}]}}, {}}, 
   {GrayLevel[0.6], 
    {RGBColor[
     0, 1, 0]}, {{}, {
      LineBox[{{1.5, 21.}, {1.5, 21.851425072082105`}, {2.5, 
       21.851425072082105`}, {2.5, 21.}}], 
      LineBox[{{2., 21.851425072082105`}, {2., 21.87655612377959}, {3.5, 
       21.87655612377959}, {3.5, 21.}}], 
      LineBox[{{0.5, 21.}, {0.5, 21.879469793954975`}, {2.75, 
       21.879469793954975`}, {2.75, 21.87655612377959}}], 
      LineBox[{{1.625, 21.879469793954975`}, {1.625, 21.909744480438967`}, {
       4.5, 21.909744480438967`}, {4.5, 21.}}], 
      LineBox[{{3.0625, 21.909744480438967`}, {3.0625, 21.911310917143897`}, {
       5.5, 21.911310917143897`}, {5.5, 21.}}], 
      LineBox[{{6.5, 21.}, {6.5, 21.771254174354073`}, {7.5, 
       21.771254174354073`}, {7.5, 21.}}], 
      LineBox[{{7., 21.771254174354073`}, {7., 21.905269035932367`}, {8.5, 
       21.905269035932367`}, {8.5, 21.}}], 
      LineBox[{{4.28125, 21.911310917143897`}, {4.28125, 
       21.964301173589366`}, {7.75, 21.964301173589366`}, {7.75, 
       21.905269035932367`}}], 
      LineBox[{{6.015625, 21.964301173589366`}, {6.015625, 
       22.007736187322376`}, {9.5, 22.007736187322376`}, {9.5, 21.}}], 
      LineBox[{{7.7578125, 22.007736187322376`}, {7.7578125, 
       22.03119224563461}, {10.5, 22.03119224563461}, {10.5, 21.}}], 
      LineBox[{{9.12890625, 22.03119224563461}, {9.12890625, 
       22.068368428359786`}, {11.5, 22.068368428359786`}, {11.5, 21.}}], 
      LineBox[{{10.314453125, 22.068368428359786`}, {10.314453125, 
       22.070331994691067`}, {12.5, 22.070331994691067`}, {12.5, 21.}}], 
      LineBox[{{11.4072265625, 22.070331994691067`}, {11.4072265625, 
       22.075789726719822`}, {13.5, 22.075789726719822`}, {13.5, 21.}}], 
      LineBox[{{12.45361328125, 22.075789726719822`}, {12.45361328125, 
       22.082791240906573`}, {14.5, 22.082791240906573`}, {14.5, 21.}}], 
      LineBox[{{13.476806640625, 22.082791240906573`}, {13.476806640625, 
       22.09935035800832}, {15.5, 22.09935035800832}, {15.5, 21.}}], 
      LineBox[{{14.4884033203125, 22.09935035800832}, {14.4884033203125, 
       22.112614948908295`}, {16.5, 22.112614948908295`}, {16.5, 21.}}], 
      LineBox[{{15.49420166015625, 22.112614948908295`}, {15.49420166015625, 
       22.40642645454297}, {17.5, 22.40642645454297}, {17.5, 21.}}], 
      LineBox[{{16.497100830078125`, 22.40642645454297}, {16.497100830078125`,
        23.110448044418696`}, {18.5, 23.110448044418696`}, {18.5, 21.}}], 
      LineBox[{{17.498550415039062`, 23.110448044418696`}, {
       17.498550415039062`, 23.303684837162283`}, {19.5, 
       23.303684837162283`}, {19.5, 21.}}], 
      LineBox[{{18.49927520751953, 23.303684837162283`}, {18.49927520751953, 
       25.2}, {20.5, 25.2}, {20.5, 21.}}]}}, {}}},
  BaseStyle->{FontSize -> 10},
  CoordinatesToolOptions:>{
   "DisplayFunction" -> Function[HeatmapPlot`Private`pt$, 
      Column[{
        Part[{
         "ADA", "LTC", "ETC", "XLM", "XMR", "ETH", "TRX", "LINK", "BTC", 
          "EOS", "USDT", "VET", "BCH", "USDC", "MATIC", "BNB", "FIL", "THETA",
           "XRP", "DOGE", "HEX"}, 
         Part[
          ({
           Clip[Floor[Part[#, 1] - Part[#2, 2]] + 1, {1, 
             Part[#, 1]}], 
           Clip[Floor[
              Part[#2, 1]] + 1, {1, 
             Part[#, 2]}]}& )[{21, 21}, HeatmapPlot`Private`pt$], 1]], 
        Part[{
         "ADA", "LTC", "ETC", "XLM", "XMR", "ETH", "TRX", "LINK", "BTC", 
          "EOS", "USDT", "VET", "BCH", "USDC", "MATIC", "BNB", "FIL", "THETA",
           "XRP", "DOGE", "HEX"}, 
         Part[
          ({
           Clip[Floor[Part[#, 1] - Part[#2, 2]] + 1, {1, 
             Part[#, 1]}], 
           Clip[Floor[
              Part[#2, 1]] + 1, {1, 
             Part[#, 2]}]}& )[{21, 21}, HeatmapPlot`Private`pt$], 2]], 
        Extract[{{
          0, 0.6134894091415831, 0.6091097308488613, 0.5936773371555981, 
           0.45483357222487664`, 0.6807612677177896, 0.5604077082337953, 
           0.5200509635292244, 0.5312788660614748, 0.2994585125019908, 
           0.6239369326325849, 0.3757286192068801, 0.38998248128682916`, 
           0.5824175824175825, 0.39625736582258325`, 0.6383341296384776, 
           0.26658703615225354`, 0.35977066411849024`, 0.3855390985825769, 
           0.5423475075648989, -0.11750278706800447`}, {
          0.6134894091415831, 0, 0.4875935658544355, 0.516467590380634, 
           0.4677814938684504, 0.6244943462334768, 0.6550406115623507, 
           0.5461856983596115, 0.6190316929447365, 0.36004140786749483`, 
           0.7168179646440517, 0.42833253702818924`, 0.4586239847109413, 
           0.630211817168339, 0.4681318681318682, 0.566061474757127, 
           0.3237298932951107, 0.3455964325529543, 0.41917502787068006`, 
           0.3585125019907629, 0.07733715559802518}, {
          0.6091097308488613, 0.4875935658544355, 0, 0.43933747412008284`, 
           0.3311673833412964, 0.44432234432234435`, 0.5996018474279344, 
           0.46223921006529706`, 0.567542602325211, 0.2434623347666826, 
           0.5912565695174391, 0.5000955566172958, 0.5078993470297819, 
           0.306322662844402, 0.5043956043956045, 0.6016244624940278, 
           0.24472049689440997`, 0.5326166587036153, 0.14921165790731009`, 
           0.5118171683389076, -0.06265328874024527}, {
          0.5936773371555981, 0.516467590380634, 0.43933747412008284`, 0, 
           0.4030737378563466, 0.5195094760312152, 0.47612677177894575`, 
           0.4636088549132028, 0.48931358496575894`, 0.4561872909698997, 
           0.5566650740563784, 0.4207676381589425, 0.4623506927854754, 
           0.524143971970059, 0.299362955884695, 0.3420130594043638, 
           0.30802675585284284`, 0.3193183627966237, 0.7383819079471254, 
           0.2615066093326963, 0.2409937888198758}, {
          0.45483357222487664`, 0.4677814938684504, 0.3311673833412964, 
           0.4030737378563466, 0, 0.4720178372352286, 0.5991081382385731, 
           0.2846950151297978, 0.5185061315496099, 0.18617614269788185`, 
           0.5407071189679886, 0.16477146042363436`, 0.4213091256569518, 
           0.49839146360885495`, 0.4365822583213888, 0.36817964644051604`, 
           0.12239210065297022`, 0.10848861283643893`, 0.39410734193342895`, 
           0.050724637681159424`, 0.22704252269469663`}, {
          0.6807612677177896, 0.6244943462334768, 0.44432234432234435`, 
           0.5195094760312152, 0.4720178372352286, 0, 0.5753145405319319, 
           0.4658544354196529, 0.6275043796782928, 0.418330944417901, 
           0.748494983277592, 0.40551043159738814`, 0.3167224080267559, 
           0.9219302436693741, 0.33029144768275204`, 0.6665074056378405, 
           0.3437967829272177, 0.16133142220098742`, 0.47464564421086164`, 
           0.34398789616180925`, 0.09984073897117376}, {
          0.5604077082337953, 0.6550406115623507, 0.5996018474279344, 
           0.47612677177894575`, 0.5991081382385731, 0.5753145405319319, 0, 
           0.39240324892498807`, 0.7047459786590222, 0.4017518713170887, 
           0.7573021181716835, 0.5457716196846633, 0.5587991718426502, 
           0.5347189042841217, 0.6979296066252588, 0.4563146997929607, 
           0.3480012740882306, 0.3741519350215003, 0.2991559165472209, 
           0.2771619684663163, 0.2821946169772257}, {
          0.5200509635292244, 0.5461856983596115, 0.46223921006529706`, 
           0.4636088549132028, 0.2846950151297978, 0.4658544354196529, 
           0.39240324892498807`, 0, 0.6533046663481447, 0.4825609173435261, 
           0.7191113234591496, 0.7212613473483039, 0.7158464723682115, 
           0.45140946010511235`, 0.6638636725593248, 0.39888517279821634`, 
           0.5964644051600574, 0.7014811275680841, 0.1140946010511228, 
           0.16250995381430167`, -0.04632903328555503}, {
          0.5312788660614748, 0.6190316929447365, 0.567542602325211, 
           0.48931358496575894`, 0.5185061315496099, 0.6275043796782928, 
           0.7047459786590222, 0.6533046663481447, 0, 0.48655836916706485`, 
           0.9503583373148592, 0.7253702818920211, 0.7805223761745501, 
           0.5842172320433191, 0.7453734671125977, 0.5150183150183151, 
           0.6185379837553752, 0.5197005892658068, 0.22129319955406915`, 
           0.06561554387641345, 0.13865265169612997`}, {
          0.2994585125019908, 0.36004140786749483`, 0.2434623347666826, 
           0.4561872909698997, 0.18617614269788185`, 0.418330944417901, 
           0.4017518713170887, 0.4825609173435261, 0.48655836916706485`, 0, 
           0.5509953814301641, 0.5060519190953974, 0.43798375537505974`, 
           0.4541646759038064, 0.4041248606465998, 0.1466316292403249, 
           0.680315336837076, 0.1765727026596592, 
           0.30202261506609335`, -0.030164038859691038`, 
           0.2584965758878803}, {
          0.6239369326325849, 0.7168179646440517, 0.5912565695174391, 
           0.5566650740563784, 0.5407071189679886, 0.748494983277592, 
           0.7573021181716835, 0.7191113234591496, 0.9503583373148592, 
           0.5509953814301641, 0, 0.7391941391941392, 0.7422678770504858, 
           0.7263417741678612, 0.7436693741041568, 0.5878802357063228, 
           0.6388915432393694, 0.5083930562191432, 0.2857939162286989, 
           0.17746456442108619`, 0.16872113393852525`}, {
          0.3757286192068801, 0.42833253702818924`, 0.5000955566172958, 
           0.4207676381589425, 0.16477146042363436`, 0.40551043159738814`, 
           0.5457716196846633, 0.7212613473483039, 0.7253702818920211, 
           0.5060519190953974, 0.7391941391941392, 0, 0.6967510750119447, 
           0.36703296703296706`, 0.6775441949354993, 0.406450071667463, 
           0.6543876413441632, 0.7057811753463928, 0.05091575091575092, 
           0.21197642936773373`, 0.08087275043796784}, {
          0.38998248128682916`, 0.4586239847109413, 0.5078993470297819, 
           0.4623506927854754, 0.4213091256569518, 0.3167224080267559, 
           0.5587991718426502, 0.7158464723682115, 0.7805223761745501, 
           0.43798375537505974`, 0.7422678770504858, 0.6967510750119447, 0, 
           0.2794712533842969, 0.7964325529542922, 0.2211339385252429, 
           0.6494664755534322, 0.638397834050008, 0.07529861442904921, 
           0.0009077878643096036, 0.1554865424430642}, {
          0.5824175824175825, 0.630211817168339, 0.306322662844402, 
           0.524143971970059, 0.49839146360885495`, 0.9219302436693741, 
           0.5347189042841217, 0.45140946010511235`, 0.5842172320433191, 
           0.4541646759038064, 0.7263417741678612, 0.36703296703296706`, 
           0.2794712533842969, 0, 0.2878006051919096, 0.6277432712215322, 
           0.34819238732282215`, 0.09390030259595478, 0.5031692944736423, 
           0.18666985188724322`, 0.22403248924988056`}, {
          0.39625736582258325`, 0.4681318681318682, 0.5043956043956045, 
           0.299362955884695, 0.4365822583213888, 0.33029144768275204`, 
           0.6979296066252588, 0.6638636725593248, 0.7453734671125977, 
           0.4041248606465998, 0.7436693741041568, 0.6775441949354993, 
           0.7964325529542922, 0.2878006051919096, 0, 0.27652492435101134`, 
           0.5126931039974518, 0.5961299569995223, -0.046074215639433036`, 
           0.06278069756330626, 0.12912884217232046`}, {
          0.6383341296384776, 0.566061474757127, 0.6016244624940278, 
           0.3420130594043638, 0.36817964644051604`, 0.6665074056378405, 
           0.4563146997929607, 0.39888517279821634`, 0.5150183150183151, 
           0.1466316292403249, 0.5878802357063228, 0.406450071667463, 
           0.2211339385252429, 0.6277432712215322, 0.27652492435101134`, 0, 
           0.14290492116579073`, 0.30253225035833736`, 0.18315018315018317`, 
           0.5139034878165314, -0.18786430960344006`}, {
          0.26658703615225354`, 0.3237298932951107, 0.24472049689440997`, 
           0.30802675585284284`, 0.12239210065297022`, 0.3437967829272177, 
           0.3480012740882306, 0.5964644051600574, 0.6185379837553752, 
           0.680315336837076, 0.6388915432393694, 0.6543876413441632, 
           0.6494664755534322, 0.34819238732282215`, 0.5126931039974518, 
           0.14290492116579073`, 0, 0.36558369167064825`, 
           0.017439082656473964`, -0.1258639910813824, 
           0.20240484153527633`}, {
          0.35977066411849024`, 0.3455964325529543, 0.5326166587036153, 
           0.3193183627966237, 0.10848861283643893`, 0.16133142220098742`, 
           0.3741519350215003, 0.7014811275680841, 0.5197005892658068, 
           0.1765727026596592, 0.5083930562191432, 0.7057811753463928, 
           0.638397834050008, 0.09390030259595478, 0.5961299569995223, 
           0.30253225035833736`, 0.36558369167064825`, 
           0, -0.07504379678292722, 
           0.2448160535117057, -0.21168975951584648`}, {
          0.3855390985825769, 0.41917502787068006`, 0.14921165790731009`, 
           0.7383819079471254, 0.39410734193342895`, 0.47464564421086164`, 
           0.2991559165472209, 0.1140946010511228, 0.22129319955406915`, 
           0.30202261506609335`, 0.2857939162286989, 0.05091575091575092, 
           0.07529861442904921, 0.5031692944736423, -0.046074215639433036`, 
           0.18315018315018317`, 0.017439082656473964`, -0.07504379678292722, 
           0, 0.18432871476349738`, 0.3237139671922281}, {
          0.5423475075648989, 0.3585125019907629, 0.5118171683389076, 
           0.2615066093326963, 0.050724637681159424`, 0.34398789616180925`, 
           0.2771619684663163, 0.16250995381430167`, 
           0.06561554387641345, -0.030164038859691038`, 0.17746456442108619`, 
           0.21197642936773373`, 0.0009077878643096036, 0.18666985188724322`, 
           0.06278069756330626, 0.5139034878165314, -0.1258639910813824, 
           0.2448160535117057, 0.18432871476349738`, 
           0, -0.25738174868609653`}, {-0.11750278706800447`, 
           0.07733715559802518, -0.06265328874024527, 0.2409937888198758, 
           0.22704252269469663`, 0.09984073897117376, 
           0.2821946169772257, -0.04632903328555503, 0.13865265169612997`, 
           0.2584965758878803, 0.16872113393852525`, 0.08087275043796784, 
           0.1554865424430642, 0.22403248924988056`, 
           0.12912884217232046`, -0.18786430960344006`, 
           0.20240484153527633`, -0.21168975951584648`, 
           0.3237139671922281, -0.25738174868609653`, 0}}, 
         ({
          Clip[Floor[Part[#, 1] - Part[#2, 2]] + 1, {1, 
            Part[#, 1]}], 
          Clip[Floor[
             Part[#2, 1]] + 1, {1, 
            Part[#, 2]}]}& )[{21, 21}, HeatmapPlot`Private`pt$]]}, Background -> 
       White, ImageSize -> {Automatic, 30}, 
       ImageMargins -> {{5, 5}, {10, 10}}, Alignment -> Center]], 
    "CopiedValueFunction" -> Function[HeatmapPlot`Private`pt$, {
       ({
        Clip[Floor[Part[#, 1] - Part[#2, 2]] + 1, {1, 
          Part[#, 1]}], 
        Clip[Floor[
           Part[#2, 1]] + 1, {1, 
          Part[#, 2]}]}& )[{21, 21}, HeatmapPlot`Private`pt$], 
       Extract[{{
         0, 0.6134894091415831, 0.6091097308488613, 0.5936773371555981, 
          0.45483357222487664`, 0.6807612677177896, 0.5604077082337953, 
          0.5200509635292244, 0.5312788660614748, 0.2994585125019908, 
          0.6239369326325849, 0.3757286192068801, 0.38998248128682916`, 
          0.5824175824175825, 0.39625736582258325`, 0.6383341296384776, 
          0.26658703615225354`, 0.35977066411849024`, 0.3855390985825769, 
          0.5423475075648989, -0.11750278706800447`}, {
         0.6134894091415831, 0, 0.4875935658544355, 0.516467590380634, 
          0.4677814938684504, 0.6244943462334768, 0.6550406115623507, 
          0.5461856983596115, 0.6190316929447365, 0.36004140786749483`, 
          0.7168179646440517, 0.42833253702818924`, 0.4586239847109413, 
          0.630211817168339, 0.4681318681318682, 0.566061474757127, 
          0.3237298932951107, 0.3455964325529543, 0.41917502787068006`, 
          0.3585125019907629, 0.07733715559802518}, {
         0.6091097308488613, 0.4875935658544355, 0, 0.43933747412008284`, 
          0.3311673833412964, 0.44432234432234435`, 0.5996018474279344, 
          0.46223921006529706`, 0.567542602325211, 0.2434623347666826, 
          0.5912565695174391, 0.5000955566172958, 0.5078993470297819, 
          0.306322662844402, 0.5043956043956045, 0.6016244624940278, 
          0.24472049689440997`, 0.5326166587036153, 0.14921165790731009`, 
          0.5118171683389076, -0.06265328874024527}, {
         0.5936773371555981, 0.516467590380634, 0.43933747412008284`, 0, 
          0.4030737378563466, 0.5195094760312152, 0.47612677177894575`, 
          0.4636088549132028, 0.48931358496575894`, 0.4561872909698997, 
          0.5566650740563784, 0.4207676381589425, 0.4623506927854754, 
          0.524143971970059, 0.299362955884695, 0.3420130594043638, 
          0.30802675585284284`, 0.3193183627966237, 0.7383819079471254, 
          0.2615066093326963, 0.2409937888198758}, {
         0.45483357222487664`, 0.4677814938684504, 0.3311673833412964, 
          0.4030737378563466, 0, 0.4720178372352286, 0.5991081382385731, 
          0.2846950151297978, 0.5185061315496099, 0.18617614269788185`, 
          0.5407071189679886, 0.16477146042363436`, 0.4213091256569518, 
          0.49839146360885495`, 0.4365822583213888, 0.36817964644051604`, 
          0.12239210065297022`, 0.10848861283643893`, 0.39410734193342895`, 
          0.050724637681159424`, 0.22704252269469663`}, {
         0.6807612677177896, 0.6244943462334768, 0.44432234432234435`, 
          0.5195094760312152, 0.4720178372352286, 0, 0.5753145405319319, 
          0.4658544354196529, 0.6275043796782928, 0.418330944417901, 
          0.748494983277592, 0.40551043159738814`, 0.3167224080267559, 
          0.9219302436693741, 0.33029144768275204`, 0.6665074056378405, 
          0.3437967829272177, 0.16133142220098742`, 0.47464564421086164`, 
          0.34398789616180925`, 0.09984073897117376}, {
         0.5604077082337953, 0.6550406115623507, 0.5996018474279344, 
          0.47612677177894575`, 0.5991081382385731, 0.5753145405319319, 0, 
          0.39240324892498807`, 0.7047459786590222, 0.4017518713170887, 
          0.7573021181716835, 0.5457716196846633, 0.5587991718426502, 
          0.5347189042841217, 0.6979296066252588, 0.4563146997929607, 
          0.3480012740882306, 0.3741519350215003, 0.2991559165472209, 
          0.2771619684663163, 0.2821946169772257}, {
         0.5200509635292244, 0.5461856983596115, 0.46223921006529706`, 
          0.4636088549132028, 0.2846950151297978, 0.4658544354196529, 
          0.39240324892498807`, 0, 0.6533046663481447, 0.4825609173435261, 
          0.7191113234591496, 0.7212613473483039, 0.7158464723682115, 
          0.45140946010511235`, 0.6638636725593248, 0.39888517279821634`, 
          0.5964644051600574, 0.7014811275680841, 0.1140946010511228, 
          0.16250995381430167`, -0.04632903328555503}, {
         0.5312788660614748, 0.6190316929447365, 0.567542602325211, 
          0.48931358496575894`, 0.5185061315496099, 0.6275043796782928, 
          0.7047459786590222, 0.6533046663481447, 0, 0.48655836916706485`, 
          0.9503583373148592, 0.7253702818920211, 0.7805223761745501, 
          0.5842172320433191, 0.7453734671125977, 0.5150183150183151, 
          0.6185379837553752, 0.5197005892658068, 0.22129319955406915`, 
          0.06561554387641345, 0.13865265169612997`}, {
         0.2994585125019908, 0.36004140786749483`, 0.2434623347666826, 
          0.4561872909698997, 0.18617614269788185`, 0.418330944417901, 
          0.4017518713170887, 0.4825609173435261, 0.48655836916706485`, 0, 
          0.5509953814301641, 0.5060519190953974, 0.43798375537505974`, 
          0.4541646759038064, 0.4041248606465998, 0.1466316292403249, 
          0.680315336837076, 0.1765727026596592, 
          0.30202261506609335`, -0.030164038859691038`, 0.2584965758878803}, {
         0.6239369326325849, 0.7168179646440517, 0.5912565695174391, 
          0.5566650740563784, 0.5407071189679886, 0.748494983277592, 
          0.7573021181716835, 0.7191113234591496, 0.9503583373148592, 
          0.5509953814301641, 0, 0.7391941391941392, 0.7422678770504858, 
          0.7263417741678612, 0.7436693741041568, 0.5878802357063228, 
          0.6388915432393694, 0.5083930562191432, 0.2857939162286989, 
          0.17746456442108619`, 0.16872113393852525`}, {
         0.3757286192068801, 0.42833253702818924`, 0.5000955566172958, 
          0.4207676381589425, 0.16477146042363436`, 0.40551043159738814`, 
          0.5457716196846633, 0.7212613473483039, 0.7253702818920211, 
          0.5060519190953974, 0.7391941391941392, 0, 0.6967510750119447, 
          0.36703296703296706`, 0.6775441949354993, 0.406450071667463, 
          0.6543876413441632, 0.7057811753463928, 0.05091575091575092, 
          0.21197642936773373`, 0.08087275043796784}, {
         0.38998248128682916`, 0.4586239847109413, 0.5078993470297819, 
          0.4623506927854754, 0.4213091256569518, 0.3167224080267559, 
          0.5587991718426502, 0.7158464723682115, 0.7805223761745501, 
          0.43798375537505974`, 0.7422678770504858, 0.6967510750119447, 0, 
          0.2794712533842969, 0.7964325529542922, 0.2211339385252429, 
          0.6494664755534322, 0.638397834050008, 0.07529861442904921, 
          0.0009077878643096036, 0.1554865424430642}, {
         0.5824175824175825, 0.630211817168339, 0.306322662844402, 
          0.524143971970059, 0.49839146360885495`, 0.9219302436693741, 
          0.5347189042841217, 0.45140946010511235`, 0.5842172320433191, 
          0.4541646759038064, 0.7263417741678612, 0.36703296703296706`, 
          0.2794712533842969, 0, 0.2878006051919096, 0.6277432712215322, 
          0.34819238732282215`, 0.09390030259595478, 0.5031692944736423, 
          0.18666985188724322`, 0.22403248924988056`}, {
         0.39625736582258325`, 0.4681318681318682, 0.5043956043956045, 
          0.299362955884695, 0.4365822583213888, 0.33029144768275204`, 
          0.6979296066252588, 0.6638636725593248, 0.7453734671125977, 
          0.4041248606465998, 0.7436693741041568, 0.6775441949354993, 
          0.7964325529542922, 0.2878006051919096, 0, 0.27652492435101134`, 
          0.5126931039974518, 0.5961299569995223, -0.046074215639433036`, 
          0.06278069756330626, 0.12912884217232046`}, {
         0.6383341296384776, 0.566061474757127, 0.6016244624940278, 
          0.3420130594043638, 0.36817964644051604`, 0.6665074056378405, 
          0.4563146997929607, 0.39888517279821634`, 0.5150183150183151, 
          0.1466316292403249, 0.5878802357063228, 0.406450071667463, 
          0.2211339385252429, 0.6277432712215322, 0.27652492435101134`, 0, 
          0.14290492116579073`, 0.30253225035833736`, 0.18315018315018317`, 
          0.5139034878165314, -0.18786430960344006`}, {
         0.26658703615225354`, 0.3237298932951107, 0.24472049689440997`, 
          0.30802675585284284`, 0.12239210065297022`, 0.3437967829272177, 
          0.3480012740882306, 0.5964644051600574, 0.6185379837553752, 
          0.680315336837076, 0.6388915432393694, 0.6543876413441632, 
          0.6494664755534322, 0.34819238732282215`, 0.5126931039974518, 
          0.14290492116579073`, 0, 0.36558369167064825`, 
          0.017439082656473964`, -0.1258639910813824, 0.20240484153527633`}, {
         0.35977066411849024`, 0.3455964325529543, 0.5326166587036153, 
          0.3193183627966237, 0.10848861283643893`, 0.16133142220098742`, 
          0.3741519350215003, 0.7014811275680841, 0.5197005892658068, 
          0.1765727026596592, 0.5083930562191432, 0.7057811753463928, 
          0.638397834050008, 0.09390030259595478, 0.5961299569995223, 
          0.30253225035833736`, 0.36558369167064825`, 0, -0.07504379678292722,
           0.2448160535117057, -0.21168975951584648`}, {
         0.3855390985825769, 0.41917502787068006`, 0.14921165790731009`, 
          0.7383819079471254, 0.39410734193342895`, 0.47464564421086164`, 
          0.2991559165472209, 0.1140946010511228, 0.22129319955406915`, 
          0.30202261506609335`, 0.2857939162286989, 0.05091575091575092, 
          0.07529861442904921, 0.5031692944736423, -0.046074215639433036`, 
          0.18315018315018317`, 0.017439082656473964`, -0.07504379678292722, 
          0, 0.18432871476349738`, 0.3237139671922281}, {
         0.5423475075648989, 0.3585125019907629, 0.5118171683389076, 
          0.2615066093326963, 0.050724637681159424`, 0.34398789616180925`, 
          0.2771619684663163, 0.16250995381430167`, 
          0.06561554387641345, -0.030164038859691038`, 0.17746456442108619`, 
          0.21197642936773373`, 0.0009077878643096036, 0.18666985188724322`, 
          0.06278069756330626, 0.5139034878165314, -0.1258639910813824, 
          0.2448160535117057, 0.18432871476349738`, 
          0, -0.25738174868609653`}, {-0.11750278706800447`, 
          0.07733715559802518, -0.06265328874024527, 0.2409937888198758, 
          0.22704252269469663`, 0.09984073897117376, 
          0.2821946169772257, -0.04632903328555503, 0.13865265169612997`, 
          0.2584965758878803, 0.16872113393852525`, 0.08087275043796784, 
          0.1554865424430642, 0.22403248924988056`, 
          0.12912884217232046`, -0.18786430960344006`, 
          0.20240484153527633`, -0.21168975951584648`, 
          0.3237139671922281, -0.25738174868609653`, 0}}, 
        ({
         Clip[Floor[Part[#, 1] - Part[#2, 2]] + 1, {1, 
           Part[#, 1]}], 
         Clip[Floor[
            Part[#2, 1]] + 1, {1, 
           Part[#, 2]}]}& )[{21, 21}, HeatmapPlot`Private`pt$]]}]},
  Frame->True,
  FrameLabel->{None, None},
  FrameStyle->AbsoluteThickness[0],
  FrameTicks->{{{{20.5, 
       FormBox["\"ADA\"", TraditionalForm], {0, 0}}, {19.5, 
       FormBox["\"LTC\"", TraditionalForm], {0, 0}}, {18.5, 
       FormBox["\"ETC\"", TraditionalForm], {0, 0}}, {17.5, 
       FormBox["\"XLM\"", TraditionalForm], {0, 0}}, {16.5, 
       FormBox["\"XMR\"", TraditionalForm], {0, 0}}, {15.5, 
       FormBox["\"ETH\"", TraditionalForm], {0, 0}}, {14.5, 
       FormBox["\"TRX\"", TraditionalForm], {0, 0}}, {13.5, 
       FormBox["\"LINK\"", TraditionalForm], {0, 0}}, {12.5, 
       FormBox["\"BTC\"", TraditionalForm], {0, 0}}, {11.5, 
       FormBox["\"EOS\"", TraditionalForm], {0, 0}}, {10.5, 
       FormBox["\"USDT\"", TraditionalForm], {0, 0}}, {9.5, 
       FormBox["\"VET\"", TraditionalForm], {0, 0}}, {8.5, 
       FormBox["\"BCH\"", TraditionalForm], {0, 0}}, {7.5, 
       FormBox["\"USDC\"", TraditionalForm], {0, 0}}, {6.5, 
       FormBox["\"MATIC\"", TraditionalForm], {0, 0}}, {5.5, 
       FormBox["\"BNB\"", TraditionalForm], {0, 0}}, {4.5, 
       FormBox["\"FIL\"", TraditionalForm], {0, 0}}, {3.5, 
       FormBox["\"THETA\"", TraditionalForm], {0, 0}}, {2.5, 
       FormBox["\"XRP\"", TraditionalForm], {0, 0}}, {1.5, 
       FormBox["\"DOGE\"", TraditionalForm], {0, 0}}, {0.5, 
       FormBox["\"HEX\"", TraditionalForm], {0, 0}}}, None}, {{{0.5, 
       FormBox[
        RotationBox["\"ADA\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {1.5, 
       FormBox[
        RotationBox["\"LTC\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {2.5, 
       FormBox[
        RotationBox["\"ETC\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {3.5, 
       FormBox[
        RotationBox["\"XLM\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {4.5, 
       FormBox[
        RotationBox["\"XMR\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {5.5, 
       FormBox[
        RotationBox["\"ETH\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {6.5, 
       FormBox[
        RotationBox["\"TRX\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {7.5, 
       FormBox[
        RotationBox["\"LINK\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {8.5, 
       FormBox[
        RotationBox["\"BTC\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {9.5, 
       FormBox[
        RotationBox["\"EOS\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {10.5, 
       FormBox[
        RotationBox["\"USDT\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {11.5, 
       FormBox[
        RotationBox["\"VET\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {12.5, 
       FormBox[
        RotationBox["\"BCH\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {13.5, 
       FormBox[
        RotationBox["\"USDC\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {14.5, 
       FormBox[
        RotationBox["\"MATIC\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {15.5, 
       FormBox[
        RotationBox["\"BNB\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {16.5, 
       FormBox[
        RotationBox["\"FIL\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {17.5, 
       FormBox[
        RotationBox["\"THETA\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {18.5, 
       FormBox[
        RotationBox["\"XRP\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {19.5, 
       FormBox[
        RotationBox["\"DOGE\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}, {20.5, 
       FormBox[
        RotationBox["\"HEX\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm], {0, 0}}}, None}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Medium,
  Method->{
   "GridLinesInFront" -> True, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic, "DomainPadding" -> Scaled[0.02], "RangePadding" -> 
    Scaled[0.05]},
  PlotLabel->FormBox["\"Trading volume\"", TraditionalForm]]], "Output",
 CellChangeTimes->{3.890858741709394*^9, 3.890859604878826*^9},
 CellLabel->"Out[289]=",
 CellID->391999494,ExpressionUUID->"6f89ee88-577b-4e9f-a9bc-07712317cc01"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Observations", "Subsection",
 CellChangeTimes->{{3.833281774760618*^9, 3.833281777213388*^9}, {
  3.833294551089286*^9, 3.8332945548119183`*^9}, {3.8332945939074078`*^9, 
  3.833294598834793*^9}},
 CellID->1818402425,ExpressionUUID->"628cad28-b2d2-4c4f-86f3-be5c2f003a37"],

Cell[CellGroupData[{

Cell["\<\
 Here are the correlation matrix plots above placed next to each other:\
\>", "Text",
 CellChangeTimes->{{3.833281971031659*^9, 3.833281974677218*^9}, {
  3.833282019678186*^9, 3.833282065567978*^9}, {3.8332832533685417`*^9, 
  3.833283256810649*^9}, {3.833283398067265*^9, 3.833283424077526*^9}, {
  3.833293622680777*^9, 3.833293633384201*^9}, {3.8332947006712437`*^9, 
  3.833294742015834*^9}},
 CellID->1049776518,ExpressionUUID->"fc6e5239-b0b2-4073-917c-a42b628872da"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Row", "[", 
  RowBox[{"{", 
   RowBox[{"gr1", ",", "gr2"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.833281778357854*^9, 3.833281816460737*^9}, {
  3.833281847439086*^9, 3.833281848259037*^9}},
 CellLabel->"In[290]:=",
 CellID->2015777921,ExpressionUUID->"7ea2522c-5570-4422-91a4-c3962497ae80"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     RasterBox[CompressedData["
1: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
JOXdpP0H0j4MaT+KtC9H2p/8L+ylgu0=
      "], {{0, 0}, {21, 21}}, {0, 1}], {
      GrayLevel[0.6], {{
        RGBColor[0, 1, 0], {}}, {{}, {{
          
          LineBox[{{21., 1.5}, {21.80480093899165, 1.5}, {21.80480093899165, 
           2.5}, {21., 2.5}}], 
          
          LineBox[{{21.80480093899165, 2.}, {22.247846032903464`, 2.}, {
           22.247846032903464`, 3.5}, {21., 3.5}}], 
          
          LineBox[{{22.247846032903464`, 2.75}, {22.353820938845853`, 2.75}, {
           22.353820938845853`, 4.5}, {21., 4.5}}], 
          
          LineBox[{{22.353820938845853`, 3.625}, {22.36525644956839, 3.625}, {
           22.36525644956839, 5.5}, {21., 5.5}}], 
          
          LineBox[{{22.36525644956839, 4.5625}, {22.41492019788413, 4.5625}, {
           22.41492019788413, 6.5}, {21., 6.5}}], 
          
          LineBox[{{21., 0.5}, {22.494111966459325`, 0.5}, {
           22.494111966459325`, 5.53125}, {22.41492019788413, 5.53125}}], 
          
          LineBox[{{21., 8.5}, {22.172335868511635`, 8.5}, {
           22.172335868511635`, 9.5}, {21., 9.5}}], 
          
          LineBox[{{21., 7.5}, {22.434196291143415`, 7.5}, {
           22.434196291143415`, 9.}, {22.172335868511635`, 9.}}], 
          
          LineBox[{{22.494111966459325`, 3.015625}, {22.50143341733398, 
           3.015625}, {22.50143341733398, 8.25}, {22.434196291143415`, 
           8.25}}], 
          
          LineBox[{{22.50143341733398, 5.6328125}, {22.648446080742307`, 
           5.6328125}, {22.648446080742307`, 10.5}, {21., 10.5}}], 
          
          LineBox[{{21., 11.5}, {22.638991689727995`, 11.5}, {
           22.638991689727995`, 12.5}, {21., 12.5}}], 
          
          LineBox[{{22.648446080742307`, 8.06640625}, {22.68504052172337, 
           8.06640625}, {22.68504052172337, 12.}, {22.638991689727995`, 
           12.}}], 
          
          LineBox[{{22.68504052172337, 10.033203125}, {22.753751033636874`, 
           10.033203125}, {22.753751033636874`, 13.5}, {21., 13.5}}], 
          
          LineBox[{{22.753751033636874`, 11.7666015625}, {22.823936019328546`,
            11.7666015625}, {22.823936019328546`, 14.5}, {21., 14.5}}], 
          
          LineBox[{{21., 15.5}, {22.878265205025766`, 15.5}, {
           22.878265205025766`, 16.5}, {21., 16.5}}], 
          
          LineBox[{{22.823936019328546`, 13.13330078125}, {23.18482151406368, 
           13.13330078125}, {23.18482151406368, 16.}, {22.878265205025766`, 
           16.}}], 
          
          LineBox[{{23.18482151406368, 14.566650390625}, {23.31548500574697, 
           14.566650390625}, {23.31548500574697, 17.5}, {21., 17.5}}], 
          
          LineBox[{{23.31548500574697, 16.0333251953125}, {
           24.462417843836153`, 16.0333251953125}, {24.462417843836153`, 
           18.5}, {21., 18.5}}], 
          
          LineBox[{{21., 19.5}, {23.344870176623537`, 19.5}, {
           23.344870176623537`, 20.5}, {21., 20.5}}], 
          
          LineBox[{{24.462417843836153`, 17.26666259765625}, {25.2, 
           17.26666259765625}, {25.2, 20.}, {23.344870176623537`, 
           20.}}]}}}, {}}}, {
      GrayLevel[0.6], {{
        RGBColor[0, 1, 0], {}}, {{}, {{
          
          LineBox[{{1.5, 21.}, {1.5, 21.80480093899165}, {2.5, 
           21.80480093899165}, {2.5, 21.}}], 
          
          LineBox[{{2., 21.80480093899165}, {2., 22.247846032903464`}, {3.5, 
           22.247846032903464`}, {3.5, 21.}}], 
          
          LineBox[{{2.75, 22.247846032903464`}, {2.75, 22.353820938845853`}, {
           4.5, 22.353820938845853`}, {4.5, 21.}}], 
          
          LineBox[{{3.625, 22.353820938845853`}, {3.625, 22.36525644956839}, {
           5.5, 22.36525644956839}, {5.5, 21.}}], 
          
          LineBox[{{4.5625, 22.36525644956839}, {4.5625, 22.41492019788413}, {
           6.5, 22.41492019788413}, {6.5, 21.}}], 
          
          LineBox[{{0.5, 21.}, {0.5, 22.494111966459325`}, {5.53125, 
           22.494111966459325`}, {5.53125, 22.41492019788413}}], 
          
          LineBox[{{8.5, 21.}, {8.5, 22.172335868511635`}, {9.5, 
           22.172335868511635`}, {9.5, 21.}}], 
          
          LineBox[{{7.5, 21.}, {7.5, 22.434196291143415`}, {9., 
           22.434196291143415`}, {9., 22.172335868511635`}}], 
          
          LineBox[{{3.015625, 22.494111966459325`}, {3.015625, 
           22.50143341733398}, {8.25, 22.50143341733398}, {8.25, 
           22.434196291143415`}}], 
          
          LineBox[{{5.6328125, 22.50143341733398}, {5.6328125, 
           22.648446080742307`}, {10.5, 22.648446080742307`}, {10.5, 21.}}], 
          
          LineBox[{{11.5, 21.}, {11.5, 22.638991689727995`}, {12.5, 
           22.638991689727995`}, {12.5, 21.}}], 
          
          LineBox[{{8.06640625, 22.648446080742307`}, {8.06640625, 
           22.68504052172337}, {12., 22.68504052172337}, {12., 
           22.638991689727995`}}], 
          
          LineBox[{{10.033203125, 22.68504052172337}, {10.033203125, 
           22.753751033636874`}, {13.5, 22.753751033636874`}, {13.5, 21.}}], 
          LineBox[{{11.7666015625, 22.753751033636874`}, {11.7666015625, 
           22.823936019328546`}, {14.5, 22.823936019328546`}, {14.5, 21.}}], 
          
          LineBox[{{15.5, 21.}, {15.5, 22.878265205025766`}, {16.5, 
           22.878265205025766`}, {16.5, 21.}}], 
          
          LineBox[{{13.13330078125, 22.823936019328546`}, {13.13330078125, 
           23.18482151406368}, {16., 23.18482151406368}, {16., 
           22.878265205025766`}}], 
          
          LineBox[{{14.566650390625, 23.18482151406368}, {14.566650390625, 
           23.31548500574697}, {17.5, 23.31548500574697}, {17.5, 21.}}], 
          
          LineBox[{{16.0333251953125, 23.31548500574697}, {16.0333251953125, 
           24.462417843836153`}, {18.5, 24.462417843836153`}, {18.5, 21.}}], 
          
          LineBox[{{19.5, 21.}, {19.5, 23.344870176623537`}, {20.5, 
           23.344870176623537`}, {20.5, 21.}}], 
          
          LineBox[{{17.26666259765625, 24.462417843836153`}, {
           17.26666259765625, 25.2}, {20., 25.2}, {20., 
           23.344870176623537`}}]}}}, {}}}}, {
    BaseStyle -> {FontSize -> 10}, 
     CoordinatesToolOptions -> {
      "DisplayFunction" -> Function[HeatmapPlot`Private`pt$, 
         Column[{
           
           Part[{"ADA", "BCH", "LTC", "THETA", "ETC", "VET", "DOGE", "LINK", 
             "BNB", "XLM", "EOS", "ETH", "BTC", "XRP", "MATIC", "FIL", "TRX", 
             "XMR", "USDC", "HEX", "USDT"}, 
            Part[
             ({
              Clip[Floor[Part[#, 1] - Part[#2, 2]] + 1, {1, 
                Part[#, 1]}], 
              Clip[Floor[
                 Part[#2, 1]] + 1, {1, 
                Part[#, 2]}]}& )[{21, 21}, HeatmapPlot`Private`pt$], 1]], 
           
           Part[{"ADA", "BCH", "LTC", "THETA", "ETC", "VET", "DOGE", "LINK", 
             "BNB", "XLM", "EOS", "ETH", "BTC", "XRP", "MATIC", "FIL", "TRX", 
             "XMR", "USDC", "HEX", "USDT"}, 
            Part[
             ({
              Clip[Floor[Part[#, 1] - Part[#2, 2]] + 1, {1, 
                Part[#, 1]}], 
              Clip[Floor[
                 Part[#2, 1]] + 1, {1, 
                Part[#, 2]}]}& )[{21, 21}, HeatmapPlot`Private`pt$], 2]], 
           
           Extract[{{
             0, 0.5502309284917981, 0.7596432552954293, 0.659022137283007, 
              0.7722089504698201, 0.5717789456919892, 0.8197005892658067, 
              0.7130753304666348, 0.5581302755215799, 0.7738015607580826, 
              0.39503105590062115`, 0.5447682752030578, 0.528428093645485, 
              0.668052237617455, 0.33602484472049693`, 0.1565217391304348, 
              0.21403089663959232`, 0.6182194616977226, 
              0.06685777990125817, -0.1379678292721771, \
-0.021484312788660618`}, {
             0.5502309284917981, 0, 0.5827201783723523, 0.7824335085204651, 
              0.783627966236662, 0.7047141264532569, 0.6172957477305304, 
              0.5837394489568403, 0.4124860646599777, 0.2893295110686415, 
              0.21930243669374105`, 0.1756171364867017, 0.1933906673037108, 
              0.06923076923076923, 0.6144927536231884, 0.40127408823061, 
              0.368944099378882, 0.391431756649148, 
              0.30402930402930406`, -0.23315814620162448`, \
-0.06058289536550407}, {
             0.7596432552954293, 0.5827201783723523, 0, 0.7627488453575411, 
              0.7153049848702023, 0.7107501194457717, 0.7125019907628604, 
              0.6132982959069916, 0.40743749004618574`, 0.3849020544672719, 
              0.2955088389870999, 0.257445453097627, 0.24632903328555505`, 
              0.3009396400700749, 0.6209587513935341, 0.2103360407708234, 
              0.36868928173276005`, 0.40926899187768756`, 
              0.31555980251632426`, -0.19616180920528747`, \
-0.18254499124064344`}, {
             0.659022137283007, 0.7824335085204651, 0.7627488453575411, 0, 
              0.7087115782767958, 0.8946169772256729, 0.6129160694378086, 
              0.7318999840738972, 0.31533683707596755`, 0.36545628284758724`, 
              0.4106386367255933, 0.26529702181876097`, 0.2735945214206084, 
              0.11041567128523651`, 0.7836598184424272, 0.5027233635929289, 
              0.6311355311355312, 0.20818601688166907`, 
              0.37939162286988376`, -0.12474916387959867`, \
-0.08450390189520625}, {
             0.7722089504698201, 0.783627966236662, 0.7153049848702023, 
              0.7087115782767958, 0, 0.561522535435579, 0.8496257365822584, 
              0.5045230132186654, 0.3373626373626374, 0.432075171205606, 
              0.09429845516802039, 0.12035355948399427`, 0.08752986144290494, 
              0.3058608058608059, 0.4506450071667463, 0.03720337633381112, 
              0.10371078197165155`, 0.7251313903487817, 
              0.3388596910336041, -0.5211339385252429, \
-0.17776716037585605`}, {
             0.5717789456919892, 0.7047141264532569, 0.7107501194457717, 
              0.8946169772256729, 0.561522535435579, 0, 0.4687848383500558, 
              0.7186176142697882, 0.25693581780538305`, 0.2930721452460583, 
              0.6164357381748686, 0.2668100015926103, 0.2885969103360408, 
              0.06321070234113713, 0.7627488453575411, 0.6740882306099698, 
              0.7505175983436854, 0.063768115942029, 
              0.4134575569358178, -0.010622710622710623`, \
-0.1481286829112916}, {
             0.8197005892658067, 0.6172957477305304, 0.7125019907628604, 
              0.6129160694378086, 0.8496257365822584, 0.4687848383500558, 0, 
              0.4462653288740246, 0.3175824175824176, 0.5338907469342252, 
              0.09952221691352127, 0.19496735148909064`, 0.14083452779104955`,
               0.42325211020863196`, 0.2937569676700112, -0.09633699633699634,
               0.01505016722408027, 0.7455964325529544, 
              0.2516483516483517, -0.49761108456760633`, \
-0.22110208631947764`}, {
             0.7130753304666348, 0.5837394489568403, 0.6132982959069916, 
              0.7318999840738972, 0.5045230132186654, 0.7186176142697882, 
              0.4462653288740246, 0, 0.5245899028507724, 0.7075171205605989, 
              0.7031692944736424, 0.6517598343685301, 0.6937728937728939, 
              0.542936773371556, 0.4152572065615544, 0.6049848702022615, 
              0.5110049370918937, 0.1840101927058449, 0.07947125338429686, 
              0.275139353400223, 0.0074215639433030745`}, {
             0.5581302755215799, 0.4124860646599777, 0.40743749004618574`, 
              0.31533683707596755`, 0.3373626373626374, 0.25693581780538305`, 
              0.3175824175824176, 0.5245899028507724, 0, 0.5712533842968626, 
              0.3286351329829591, 0.7387004300047779, 0.7214365344800128, 
              0.5371555980251633, 0.21274088230609972`, 0.20761267717789458`, 
              0.10549450549450551`, 0.2916547220895047, -0.25440356744704573`,
               0.406577480490524, 0.3453734671125976}, {
             0.7738015607580826, 0.2893295110686415, 0.3849020544672719, 
              0.36545628284758724`, 0.432075171205606, 0.2930721452460583, 
              0.5338907469342252, 0.7075171205605989, 0.5712533842968626, 0, 
              0.5330625895843287, 0.7681477942347509, 0.76644370122631, 
              0.9122153209109731, -0.07856346551998726, 0.15972288580984234`, 
              0.08321388756171366, 0.459993629558847, -0.21070234113712377`, 
              0.21985985029463292`, 0.03322185061315496}, {
             0.39503105590062115`, 0.21930243669374105`, 0.2955088389870999, 
              0.4106386367255933, 0.09429845516802039, 0.6164357381748686, 
              0.09952221691352127, 0.7031692944736424, 0.3286351329829591, 
              0.5330625895843287, 0, 0.640691192865106, 0.6612995699952222, 
              0.40791527313266446`, 0.17477305303392263`, 0.7541965281095716, 
              0.6420767638158943, -0.12040133779264216`, -0.0455327281414238, 
              0.5222009874183787, 0.026134734830387005`}, {
             0.5447682752030578, 0.1756171364867017, 0.257445453097627, 
              0.26529702181876097`, 0.12035355948399427`, 0.2668100015926103, 
              0.19496735148909064`, 0.6517598343685301, 0.7387004300047779, 
              0.7681477942347509, 0.640691192865106, 0, 0.9693581780538303, 
              0.7144768275203058, -0.02142060837713012, 0.4370281892021023, 
              0.3190476190476191, 0.08931358496575889, -0.4021022455805065, 
              0.6517439082656474, 0.38117534639273776`}, {
             0.528428093645485, 0.1933906673037108, 0.24632903328555505`, 
              0.2735945214206084, 0.08752986144290494, 0.2885969103360408, 
              0.14083452779104955`, 0.6937728937728939, 0.7214365344800128, 
              0.76644370122631, 0.6612995699952222, 0.9693581780538303, 0, 
              0.7003503742634178, -0.007899347029781813, 0.48165312947921646`,
               0.3372670807453416, 
              0.056537665233317415`, -0.36249402771141903`, 
              0.6835642618251314, 0.3684981684981685}, {
             0.668052237617455, 0.06923076923076923, 0.3009396400700749, 
              0.11041567128523651`, 0.3058608058608059, 0.06321070234113713, 
              0.42325211020863196`, 0.542936773371556, 0.5371555980251633, 
              0.9122153209109731, 0.40791527313266446`, 0.7144768275203058, 
              0.7003503742634178, 
              0, -0.2999840738971174, -0.04218824653607263, \
-0.13643892339544514`, 0.5076286032807772, -0.2949992036948559, 
              0.2025163242554547, 0.026644370122630996`}, {
             0.33602484472049693`, 0.6144927536231884, 0.6209587513935341, 
              0.7836598184424272, 0.4506450071667463, 0.7627488453575411, 
              0.2937569676700112, 0.4152572065615544, 
              0.21274088230609972`, -0.07856346551998726, 
              0.17477305303392263`, -0.02142060837713012, \
-0.007899347029781813, -0.2999840738971174, 0, 0.4544513457556936, 
              0.6567128523650263, -0.0758719541328237, 
              0.4116738334129639, -0.05306577480490524, \
-0.044242713807931204`}, {
             0.1565217391304348, 0.40127408823061, 0.2103360407708234, 
              0.5027233635929289, 0.03720337633381112, 
              0.6740882306099698, -0.09633699633699634, 0.6049848702022615, 
              0.20761267717789458`, 0.15972288580984234`, 0.7541965281095716, 
              0.4370281892021023, 0.48165312947921646`, -0.04218824653607263, 
              0.4544513457556936, 0, 0.811116419812072, -0.39612995699952225`,
               0.06301958910654563, 0.4988533205924511, 0.0986303551520943}, {
             0.21403089663959232`, 0.368944099378882, 0.36868928173276005`, 
              0.6311355311355312, 0.10371078197165155`, 0.7505175983436854, 
              0.01505016722408027, 0.5110049370918937, 0.10549450549450551`, 
              0.08321388756171366, 0.6420767638158943, 0.3190476190476191, 
              0.3372670807453416, -0.13643892339544514`, 0.6567128523650263, 
              0.811116419812072, 0, -0.3492753623188406, 0.2084567606306737, 
              0.36192068800764454`, 0.030259595476986784`}, {
             0.6182194616977226, 0.391431756649148, 0.40926899187768756`, 
              0.20818601688166907`, 0.7251313903487817, 0.063768115942029, 
              0.7455964325529544, 0.1840101927058449, 0.2916547220895047, 
              0.459993629558847, -0.12040133779264216`, 0.08931358496575889, 
              0.056537665233317415`, 
              0.5076286032807772, -0.0758719541328237, -0.39612995699952225`, \
-0.3492753623188406, 0, 
              0.08509316770186336, -0.53737856346552, -0.1393215480172002}, {
             0.06685777990125817, 0.30402930402930406`, 0.31555980251632426`, 
              0.37939162286988376`, 0.3388596910336041, 0.4134575569358178, 
              0.2516483516483517, 
              0.07947125338429686, -0.25440356744704573`, \
-0.21070234113712377`, -0.0455327281414238, -0.4021022455805065, \
-0.36249402771141903`, -0.2949992036948559, 0.4116738334129639, 
              0.06301958910654563, 0.2084567606306737, 0.08509316770186336, 
              0, -0.491559165472209, -0.4127090301003345}, \
{-0.1379678292721771, -0.23315814620162448`, -0.19616180920528747`, \
-0.12474916387959867`, -0.5211339385252429, -0.010622710622710623`, \
-0.49761108456760633`, 0.275139353400223, 0.406577480490524, 
              0.21985985029463292`, 0.5222009874183787, 0.6517439082656474, 
              0.6835642618251314, 0.2025163242554547, -0.05306577480490524, 
              0.4988533205924511, 
              0.36192068800764454`, -0.53737856346552, -0.491559165472209, 0, 
              0.42976588628762546`}, {-0.021484312788660618`, \
-0.06058289536550407, -0.18254499124064344`, -0.08450390189520625, \
-0.17776716037585605`, -0.1481286829112916, -0.22110208631947764`, 
              0.0074215639433030745`, 0.3453734671125976, 0.03322185061315496,
               0.026134734830387005`, 0.38117534639273776`, 
              0.3684981684981685, 
              0.026644370122630996`, -0.044242713807931204`, 
              0.0986303551520943, 
              0.030259595476986784`, -0.1393215480172002, -0.4127090301003345,
               0.42976588628762546`, 0}}, 
            ({
             Clip[Floor[Part[#, 1] - Part[#2, 2]] + 1, {1, 
               Part[#, 1]}], 
             Clip[Floor[
                Part[#2, 1]] + 1, {1, 
               Part[#, 2]}]}& )[{21, 21}, HeatmapPlot`Private`pt$]]}, 
          Background -> White, ImageSize -> {Automatic, 30}, 
          ImageMargins -> {{5, 5}, {10, 10}}, Alignment -> Center]], 
       "CopiedValueFunction" -> Function[HeatmapPlot`Private`pt$, {
          ({
           Clip[Floor[Part[#, 1] - Part[#2, 2]] + 1, {1, 
             Part[#, 1]}], 
           Clip[Floor[
              Part[#2, 1]] + 1, {1, 
             Part[#, 2]}]}& )[{21, 21}, HeatmapPlot`Private`pt$], 
          
          Extract[{{
            0, 0.5502309284917981, 0.7596432552954293, 0.659022137283007, 
             0.7722089504698201, 0.5717789456919892, 0.8197005892658067, 
             0.7130753304666348, 0.5581302755215799, 0.7738015607580826, 
             0.39503105590062115`, 0.5447682752030578, 0.528428093645485, 
             0.668052237617455, 0.33602484472049693`, 0.1565217391304348, 
             0.21403089663959232`, 0.6182194616977226, 
             0.06685777990125817, -0.1379678292721771, \
-0.021484312788660618`}, {
            0.5502309284917981, 0, 0.5827201783723523, 0.7824335085204651, 
             0.783627966236662, 0.7047141264532569, 0.6172957477305304, 
             0.5837394489568403, 0.4124860646599777, 0.2893295110686415, 
             0.21930243669374105`, 0.1756171364867017, 0.1933906673037108, 
             0.06923076923076923, 0.6144927536231884, 0.40127408823061, 
             0.368944099378882, 0.391431756649148, 
             0.30402930402930406`, -0.23315814620162448`, \
-0.06058289536550407}, {
            0.7596432552954293, 0.5827201783723523, 0, 0.7627488453575411, 
             0.7153049848702023, 0.7107501194457717, 0.7125019907628604, 
             0.6132982959069916, 0.40743749004618574`, 0.3849020544672719, 
             0.2955088389870999, 0.257445453097627, 0.24632903328555505`, 
             0.3009396400700749, 0.6209587513935341, 0.2103360407708234, 
             0.36868928173276005`, 0.40926899187768756`, 
             0.31555980251632426`, -0.19616180920528747`, \
-0.18254499124064344`}, {
            0.659022137283007, 0.7824335085204651, 0.7627488453575411, 0, 
             0.7087115782767958, 0.8946169772256729, 0.6129160694378086, 
             0.7318999840738972, 0.31533683707596755`, 0.36545628284758724`, 
             0.4106386367255933, 0.26529702181876097`, 0.2735945214206084, 
             0.11041567128523651`, 0.7836598184424272, 0.5027233635929289, 
             0.6311355311355312, 0.20818601688166907`, 
             0.37939162286988376`, -0.12474916387959867`, \
-0.08450390189520625}, {
            0.7722089504698201, 0.783627966236662, 0.7153049848702023, 
             0.7087115782767958, 0, 0.561522535435579, 0.8496257365822584, 
             0.5045230132186654, 0.3373626373626374, 0.432075171205606, 
             0.09429845516802039, 0.12035355948399427`, 0.08752986144290494, 
             0.3058608058608059, 0.4506450071667463, 0.03720337633381112, 
             0.10371078197165155`, 0.7251313903487817, 
             0.3388596910336041, -0.5211339385252429, -0.17776716037585605`}, \
{0.5717789456919892, 0.7047141264532569, 0.7107501194457717, 
             0.8946169772256729, 0.561522535435579, 0, 0.4687848383500558, 
             0.7186176142697882, 0.25693581780538305`, 0.2930721452460583, 
             0.6164357381748686, 0.2668100015926103, 0.2885969103360408, 
             0.06321070234113713, 0.7627488453575411, 0.6740882306099698, 
             0.7505175983436854, 0.063768115942029, 
             0.4134575569358178, -0.010622710622710623`, \
-0.1481286829112916}, {
            0.8197005892658067, 0.6172957477305304, 0.7125019907628604, 
             0.6129160694378086, 0.8496257365822584, 0.4687848383500558, 0, 
             0.4462653288740246, 0.3175824175824176, 0.5338907469342252, 
             0.09952221691352127, 0.19496735148909064`, 0.14083452779104955`, 
             0.42325211020863196`, 0.2937569676700112, -0.09633699633699634, 
             0.01505016722408027, 0.7455964325529544, 
             0.2516483516483517, -0.49761108456760633`, \
-0.22110208631947764`}, {
            0.7130753304666348, 0.5837394489568403, 0.6132982959069916, 
             0.7318999840738972, 0.5045230132186654, 0.7186176142697882, 
             0.4462653288740246, 0, 0.5245899028507724, 0.7075171205605989, 
             0.7031692944736424, 0.6517598343685301, 0.6937728937728939, 
             0.542936773371556, 0.4152572065615544, 0.6049848702022615, 
             0.5110049370918937, 0.1840101927058449, 0.07947125338429686, 
             0.275139353400223, 0.0074215639433030745`}, {
            0.5581302755215799, 0.4124860646599777, 0.40743749004618574`, 
             0.31533683707596755`, 0.3373626373626374, 0.25693581780538305`, 
             0.3175824175824176, 0.5245899028507724, 0, 0.5712533842968626, 
             0.3286351329829591, 0.7387004300047779, 0.7214365344800128, 
             0.5371555980251633, 0.21274088230609972`, 0.20761267717789458`, 
             0.10549450549450551`, 0.2916547220895047, -0.25440356744704573`, 
             0.406577480490524, 0.3453734671125976}, {
            0.7738015607580826, 0.2893295110686415, 0.3849020544672719, 
             0.36545628284758724`, 0.432075171205606, 0.2930721452460583, 
             0.5338907469342252, 0.7075171205605989, 0.5712533842968626, 0, 
             0.5330625895843287, 0.7681477942347509, 0.76644370122631, 
             0.9122153209109731, -0.07856346551998726, 0.15972288580984234`, 
             0.08321388756171366, 0.459993629558847, -0.21070234113712377`, 
             0.21985985029463292`, 0.03322185061315496}, {
            0.39503105590062115`, 0.21930243669374105`, 0.2955088389870999, 
             0.4106386367255933, 0.09429845516802039, 0.6164357381748686, 
             0.09952221691352127, 0.7031692944736424, 0.3286351329829591, 
             0.5330625895843287, 0, 0.640691192865106, 0.6612995699952222, 
             0.40791527313266446`, 0.17477305303392263`, 0.7541965281095716, 
             0.6420767638158943, -0.12040133779264216`, -0.0455327281414238, 
             0.5222009874183787, 0.026134734830387005`}, {
            0.5447682752030578, 0.1756171364867017, 0.257445453097627, 
             0.26529702181876097`, 0.12035355948399427`, 0.2668100015926103, 
             0.19496735148909064`, 0.6517598343685301, 0.7387004300047779, 
             0.7681477942347509, 0.640691192865106, 0, 0.9693581780538303, 
             0.7144768275203058, -0.02142060837713012, 0.4370281892021023, 
             0.3190476190476191, 0.08931358496575889, -0.4021022455805065, 
             0.6517439082656474, 0.38117534639273776`}, {
            0.528428093645485, 0.1933906673037108, 0.24632903328555505`, 
             0.2735945214206084, 0.08752986144290494, 0.2885969103360408, 
             0.14083452779104955`, 0.6937728937728939, 0.7214365344800128, 
             0.76644370122631, 0.6612995699952222, 0.9693581780538303, 0, 
             0.7003503742634178, -0.007899347029781813, 0.48165312947921646`, 
             0.3372670807453416, 0.056537665233317415`, -0.36249402771141903`,
              0.6835642618251314, 0.3684981684981685}, {
            0.668052237617455, 0.06923076923076923, 0.3009396400700749, 
             0.11041567128523651`, 0.3058608058608059, 0.06321070234113713, 
             0.42325211020863196`, 0.542936773371556, 0.5371555980251633, 
             0.9122153209109731, 0.40791527313266446`, 0.7144768275203058, 
             0.7003503742634178, 
             0, -0.2999840738971174, -0.04218824653607263, \
-0.13643892339544514`, 0.5076286032807772, -0.2949992036948559, 
             0.2025163242554547, 0.026644370122630996`}, {
            0.33602484472049693`, 0.6144927536231884, 0.6209587513935341, 
             0.7836598184424272, 0.4506450071667463, 0.7627488453575411, 
             0.2937569676700112, 0.4152572065615544, 
             0.21274088230609972`, -0.07856346551998726, 
             0.17477305303392263`, -0.02142060837713012, \
-0.007899347029781813, -0.2999840738971174, 0, 0.4544513457556936, 
             0.6567128523650263, -0.0758719541328237, 
             0.4116738334129639, -0.05306577480490524, \
-0.044242713807931204`}, {
            0.1565217391304348, 0.40127408823061, 0.2103360407708234, 
             0.5027233635929289, 0.03720337633381112, 
             0.6740882306099698, -0.09633699633699634, 0.6049848702022615, 
             0.20761267717789458`, 0.15972288580984234`, 0.7541965281095716, 
             0.4370281892021023, 0.48165312947921646`, -0.04218824653607263, 
             0.4544513457556936, 0, 0.811116419812072, -0.39612995699952225`, 
             0.06301958910654563, 0.4988533205924511, 0.0986303551520943}, {
            0.21403089663959232`, 0.368944099378882, 0.36868928173276005`, 
             0.6311355311355312, 0.10371078197165155`, 0.7505175983436854, 
             0.01505016722408027, 0.5110049370918937, 0.10549450549450551`, 
             0.08321388756171366, 0.6420767638158943, 0.3190476190476191, 
             0.3372670807453416, -0.13643892339544514`, 0.6567128523650263, 
             0.811116419812072, 0, -0.3492753623188406, 0.2084567606306737, 
             0.36192068800764454`, 0.030259595476986784`}, {
            0.6182194616977226, 0.391431756649148, 0.40926899187768756`, 
             0.20818601688166907`, 0.7251313903487817, 0.063768115942029, 
             0.7455964325529544, 0.1840101927058449, 0.2916547220895047, 
             0.459993629558847, -0.12040133779264216`, 0.08931358496575889, 
             0.056537665233317415`, 
             0.5076286032807772, -0.0758719541328237, -0.39612995699952225`, \
-0.3492753623188406, 0, 
             0.08509316770186336, -0.53737856346552, -0.1393215480172002}, {
            0.06685777990125817, 0.30402930402930406`, 0.31555980251632426`, 
             0.37939162286988376`, 0.3388596910336041, 0.4134575569358178, 
             0.2516483516483517, 
             0.07947125338429686, -0.25440356744704573`, \
-0.21070234113712377`, -0.0455327281414238, -0.4021022455805065, \
-0.36249402771141903`, -0.2949992036948559, 0.4116738334129639, 
             0.06301958910654563, 0.2084567606306737, 0.08509316770186336, 
             
             0, -0.491559165472209, -0.4127090301003345}, \
{-0.1379678292721771, -0.23315814620162448`, -0.19616180920528747`, \
-0.12474916387959867`, -0.5211339385252429, -0.010622710622710623`, \
-0.49761108456760633`, 0.275139353400223, 0.406577480490524, 
             0.21985985029463292`, 0.5222009874183787, 0.6517439082656474, 
             0.6835642618251314, 0.2025163242554547, -0.05306577480490524, 
             0.4988533205924511, 
             0.36192068800764454`, -0.53737856346552, -0.491559165472209, 0, 
             0.42976588628762546`}, {-0.021484312788660618`, \
-0.06058289536550407, -0.18254499124064344`, -0.08450390189520625, \
-0.17776716037585605`, -0.1481286829112916, -0.22110208631947764`, 
             0.0074215639433030745`, 0.3453734671125976, 0.03322185061315496, 
             0.026134734830387005`, 0.38117534639273776`, 0.3684981684981685, 
             0.026644370122630996`, -0.044242713807931204`, 
             0.0986303551520943, 
             0.030259595476986784`, -0.1393215480172002, -0.4127090301003345, 
             0.42976588628762546`, 0}}, 
           ({
            Clip[Floor[Part[#, 1] - Part[#2, 2]] + 1, {1, 
              Part[#, 1]}], 
            Clip[Floor[
               Part[#2, 1]] + 1, {1, 
              Part[#, 2]}]}& )[{21, 21}, HeatmapPlot`Private`pt$]]}]}, Frame -> 
     True, FrameLabel -> {None, None}, FrameStyle -> AbsoluteThickness[0], 
     FrameTicks -> {{{{20.5, 
          FormBox["\"ADA\"", TraditionalForm], {0, 0}}, {19.5, 
          FormBox["\"BCH\"", TraditionalForm], {0, 0}}, {18.5, 
          FormBox["\"LTC\"", TraditionalForm], {0, 0}}, {17.5, 
          FormBox["\"THETA\"", TraditionalForm], {0, 0}}, {16.5, 
          FormBox["\"ETC\"", TraditionalForm], {0, 0}}, {15.5, 
          FormBox["\"VET\"", TraditionalForm], {0, 0}}, {14.5, 
          FormBox["\"DOGE\"", TraditionalForm], {0, 0}}, {13.5, 
          FormBox["\"LINK\"", TraditionalForm], {0, 0}}, {12.5, 
          FormBox["\"BNB\"", TraditionalForm], {0, 0}}, {11.5, 
          FormBox["\"XLM\"", TraditionalForm], {0, 0}}, {10.5, 
          FormBox["\"EOS\"", TraditionalForm], {0, 0}}, {9.5, 
          FormBox["\"ETH\"", TraditionalForm], {0, 0}}, {8.5, 
          FormBox["\"BTC\"", TraditionalForm], {0, 0}}, {7.5, 
          FormBox["\"XRP\"", TraditionalForm], {0, 0}}, {6.5, 
          FormBox["\"MATIC\"", TraditionalForm], {0, 0}}, {5.5, 
          FormBox["\"FIL\"", TraditionalForm], {0, 0}}, {4.5, 
          FormBox["\"TRX\"", TraditionalForm], {0, 0}}, {3.5, 
          FormBox["\"XMR\"", TraditionalForm], {0, 0}}, {2.5, 
          FormBox["\"USDC\"", TraditionalForm], {0, 0}}, {1.5, 
          FormBox["\"HEX\"", TraditionalForm], {0, 0}}, {0.5, 
          FormBox["\"USDT\"", TraditionalForm], {0, 0}}}, None}, {{{0.5, 
          FormBox[
           RotationBox["\"ADA\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm], {0, 0}}, {1.5, 
          FormBox[
           RotationBox["\"BCH\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm], {0, 0}}, {2.5, 
          FormBox[
           RotationBox["\"LTC\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm], {0, 0}}, {3.5, 
          FormBox[
           RotationBox["\"THETA\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm], {0, 0}}, {4.5, 
          FormBox[
           RotationBox["\"ETC\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm], {0, 0}}, {5.5, 
          FormBox[
           RotationBox["\"VET\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm], {0, 0}}, {6.5, 
          FormBox[
           RotationBox["\"DOGE\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm], {0, 0}}, {7.5, 
          FormBox[
           RotationBox["\"LINK\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm], {0, 0}}, {8.5, 
          FormBox[
           RotationBox["\"BNB\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm], {0, 0}}, {9.5, 
          FormBox[
           RotationBox["\"XLM\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm], {0, 0}}, {10.5, 
          FormBox[
           RotationBox["\"EOS\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm], {0, 0}}, {11.5, 
          FormBox[
           RotationBox["\"ETH\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm], {0, 0}}, {12.5, 
          FormBox[
           RotationBox["\"BTC\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm], {0, 0}}, {13.5, 
          FormBox[
           RotationBox["\"XRP\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm], {0, 0}}, {14.5, 
          FormBox[
           RotationBox["\"MATIC\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm], {0, 0}}, {15.5, 
          FormBox[
           RotationBox["\"FIL\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm], {0, 0}}, {16.5, 
          FormBox[
           RotationBox["\"TRX\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm], {0, 0}}, {17.5, 
          FormBox[
           RotationBox["\"XMR\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm], {0, 0}}, {18.5, 
          FormBox[
           RotationBox["\"USDC\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm], {0, 0}}, {19.5, 
          FormBox[
           RotationBox["\"HEX\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm], {0, 0}}, {20.5, 
          FormBox[
           RotationBox["\"USDT\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm], {0, 0}}}, None}}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
     Method -> {
      "GridLinesInFront" -> True, "AxisPadding" -> Scaled[0.02], 
       "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
       "RangePadding" -> Scaled[0.05]}, PlotLabel -> 
     FormBox["\"Opening price\"", TraditionalForm]}], 
   GraphicsBox[{
     RasterBox[CompressedData["
1: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
HU1eaw==
      "], {{0, 0}, {21, 21}}, {0, 1}], {
      GrayLevel[0.6], {{
        RGBColor[0, 1, 0], {}}, {{}, {{
          
          LineBox[{{21., 1.5}, {21.851425072082105`, 1.5}, {
           21.851425072082105`, 2.5}, {21., 2.5}}], 
          
          LineBox[{{21.851425072082105`, 2.}, {21.87655612377959, 2.}, {
           21.87655612377959, 3.5}, {21., 3.5}}], 
          
          LineBox[{{21., 0.5}, {21.879469793954975`, 0.5}, {
           21.879469793954975`, 2.75}, {21.87655612377959, 2.75}}], 
          
          LineBox[{{21.879469793954975`, 1.625}, {21.909744480438967`, 
           1.625}, {21.909744480438967`, 4.5}, {21., 4.5}}], 
          
          LineBox[{{21.909744480438967`, 3.0625}, {21.911310917143897`, 
           3.0625}, {21.911310917143897`, 5.5}, {21., 5.5}}], 
          
          LineBox[{{21., 6.5}, {21.771254174354073`, 6.5}, {
           21.771254174354073`, 7.5}, {21., 7.5}}], 
          
          LineBox[{{21.771254174354073`, 7.}, {21.905269035932367`, 7.}, {
           21.905269035932367`, 8.5}, {21., 8.5}}], 
          
          LineBox[{{21.911310917143897`, 4.28125}, {21.964301173589366`, 
           4.28125}, {21.964301173589366`, 7.75}, {21.905269035932367`, 
           7.75}}], 
          
          LineBox[{{21.964301173589366`, 6.015625}, {22.007736187322376`, 
           6.015625}, {22.007736187322376`, 9.5}, {21., 9.5}}], 
          
          LineBox[{{22.007736187322376`, 7.7578125}, {22.03119224563461, 
           7.7578125}, {22.03119224563461, 10.5}, {21., 10.5}}], 
          
          LineBox[{{22.03119224563461, 9.12890625}, {22.068368428359786`, 
           9.12890625}, {22.068368428359786`, 11.5}, {21., 11.5}}], 
          
          LineBox[{{22.068368428359786`, 10.314453125}, {22.070331994691067`, 
           10.314453125}, {22.070331994691067`, 12.5}, {21., 12.5}}], 
          
          LineBox[{{22.070331994691067`, 11.4072265625}, {22.075789726719822`,
            11.4072265625}, {22.075789726719822`, 13.5}, {21., 13.5}}], 
          
          LineBox[{{22.075789726719822`, 12.45361328125}, {
           22.082791240906573`, 12.45361328125}, {22.082791240906573`, 
           14.5}, {21., 14.5}}], 
          
          LineBox[{{22.082791240906573`, 13.476806640625}, {22.09935035800832,
            13.476806640625}, {22.09935035800832, 15.5}, {21., 15.5}}], 
          
          LineBox[{{22.09935035800832, 14.4884033203125}, {
           22.112614948908295`, 14.4884033203125}, {22.112614948908295`, 
           16.5}, {21., 16.5}}], 
          
          LineBox[{{22.112614948908295`, 15.49420166015625}, {
           22.40642645454297, 15.49420166015625}, {22.40642645454297, 17.5}, {
           21., 17.5}}], 
          
          LineBox[{{22.40642645454297, 16.497100830078125`}, {
           23.110448044418696`, 16.497100830078125`}, {23.110448044418696`, 
           18.5}, {21., 18.5}}], 
          
          LineBox[{{23.110448044418696`, 17.498550415039062`}, {
           23.303684837162283`, 17.498550415039062`}, {23.303684837162283`, 
           19.5}, {21., 19.5}}], 
          
          LineBox[{{23.303684837162283`, 18.49927520751953}, {25.2, 
           18.49927520751953}, {25.2, 20.5}, {21., 20.5}}]}}}, {}}}, {
      GrayLevel[0.6], {{
        RGBColor[0, 1, 0], {}}, {{}, {{
          
          LineBox[{{1.5, 21.}, {1.5, 21.851425072082105`}, {2.5, 
           21.851425072082105`}, {2.5, 21.}}], 
          
          LineBox[{{2., 21.851425072082105`}, {2., 21.87655612377959}, {3.5, 
           21.87655612377959}, {3.5, 21.}}], 
          
          LineBox[{{0.5, 21.}, {0.5, 21.879469793954975`}, {2.75, 
           21.879469793954975`}, {2.75, 21.87655612377959}}], 
          
          LineBox[{{1.625, 21.879469793954975`}, {1.625, 
           21.909744480438967`}, {4.5, 21.909744480438967`}, {4.5, 21.}}], 
          
          LineBox[{{3.0625, 21.909744480438967`}, {3.0625, 
           21.911310917143897`}, {5.5, 21.911310917143897`}, {5.5, 21.}}], 
          
          LineBox[{{6.5, 21.}, {6.5, 21.771254174354073`}, {7.5, 
           21.771254174354073`}, {7.5, 21.}}], 
          
          LineBox[{{7., 21.771254174354073`}, {7., 21.905269035932367`}, {8.5,
            21.905269035932367`}, {8.5, 21.}}], 
          
          LineBox[{{4.28125, 21.911310917143897`}, {4.28125, 
           21.964301173589366`}, {7.75, 21.964301173589366`}, {7.75, 
           21.905269035932367`}}], 
          
          LineBox[{{6.015625, 21.964301173589366`}, {6.015625, 
           22.007736187322376`}, {9.5, 22.007736187322376`}, {9.5, 21.}}], 
          
          LineBox[{{7.7578125, 22.007736187322376`}, {7.7578125, 
           22.03119224563461}, {10.5, 22.03119224563461}, {10.5, 21.}}], 
          
          LineBox[{{9.12890625, 22.03119224563461}, {9.12890625, 
           22.068368428359786`}, {11.5, 22.068368428359786`}, {11.5, 21.}}], 
          
          LineBox[{{10.314453125, 22.068368428359786`}, {10.314453125, 
           22.070331994691067`}, {12.5, 22.070331994691067`}, {12.5, 21.}}], 
          
          LineBox[{{11.4072265625, 22.070331994691067`}, {11.4072265625, 
           22.075789726719822`}, {13.5, 22.075789726719822`}, {13.5, 21.}}], 
          
          LineBox[{{12.45361328125, 22.075789726719822`}, {12.45361328125, 
           22.082791240906573`}, {14.5, 22.082791240906573`}, {14.5, 21.}}], 
          
          LineBox[{{13.476806640625, 22.082791240906573`}, {13.476806640625, 
           22.09935035800832}, {15.5, 22.09935035800832}, {15.5, 21.}}], 
          
          LineBox[{{14.4884033203125, 22.09935035800832}, {14.4884033203125, 
           22.112614948908295`}, {16.5, 22.112614948908295`}, {16.5, 21.}}], 
          
          LineBox[{{15.49420166015625, 22.112614948908295`}, {
           15.49420166015625, 22.40642645454297}, {17.5, 22.40642645454297}, {
           17.5, 21.}}], 
          
          LineBox[{{16.497100830078125`, 22.40642645454297}, {
           16.497100830078125`, 23.110448044418696`}, {18.5, 
           23.110448044418696`}, {18.5, 21.}}], 
          
          LineBox[{{17.498550415039062`, 23.110448044418696`}, {
           17.498550415039062`, 23.303684837162283`}, {19.5, 
           23.303684837162283`}, {19.5, 21.}}], 
          
          LineBox[{{18.49927520751953, 23.303684837162283`}, {
           18.49927520751953, 25.2}, {20.5, 25.2}, {20.5, 21.}}]}}}, {}}}}, {
    BaseStyle -> {FontSize -> 10}, 
     CoordinatesToolOptions -> {
      "DisplayFunction" -> Function[HeatmapPlot`Private`pt$, 
         Column[{
           
           Part[{"ADA", "LTC", "ETC", "XLM", "XMR", "ETH", "TRX", "LINK", 
             "BTC", "EOS", "USDT", "VET", "BCH", "USDC", "MATIC", "BNB", 
             "FIL", "THETA", "XRP", "DOGE", "HEX"}, 
            Part[
             ({
              Clip[Floor[Part[#, 1] - Part[#2, 2]] + 1, {1, 
                Part[#, 1]}], 
              Clip[Floor[
                 Part[#2, 1]] + 1, {1, 
                Part[#, 2]}]}& )[{21, 21}, HeatmapPlot`Private`pt$], 1]], 
           
           Part[{"ADA", "LTC", "ETC", "XLM", "XMR", "ETH", "TRX", "LINK", 
             "BTC", "EOS", "USDT", "VET", "BCH", "USDC", "MATIC", "BNB", 
             "FIL", "THETA", "XRP", "DOGE", "HEX"}, 
            Part[
             ({
              Clip[Floor[Part[#, 1] - Part[#2, 2]] + 1, {1, 
                Part[#, 1]}], 
              Clip[Floor[
                 Part[#2, 1]] + 1, {1, 
                Part[#, 2]}]}& )[{21, 21}, HeatmapPlot`Private`pt$], 2]], 
           
           Extract[{{
             0, 0.6134894091415831, 0.6091097308488613, 0.5936773371555981, 
              0.45483357222487664`, 0.6807612677177896, 0.5604077082337953, 
              0.5200509635292244, 0.5312788660614748, 0.2994585125019908, 
              0.6239369326325849, 0.3757286192068801, 0.38998248128682916`, 
              0.5824175824175825, 0.39625736582258325`, 0.6383341296384776, 
              0.26658703615225354`, 0.35977066411849024`, 0.3855390985825769, 
              0.5423475075648989, -0.11750278706800447`}, {
             0.6134894091415831, 0, 0.4875935658544355, 0.516467590380634, 
              0.4677814938684504, 0.6244943462334768, 0.6550406115623507, 
              0.5461856983596115, 0.6190316929447365, 0.36004140786749483`, 
              0.7168179646440517, 0.42833253702818924`, 0.4586239847109413, 
              0.630211817168339, 0.4681318681318682, 0.566061474757127, 
              0.3237298932951107, 0.3455964325529543, 0.41917502787068006`, 
              0.3585125019907629, 0.07733715559802518}, {
             0.6091097308488613, 0.4875935658544355, 0, 0.43933747412008284`, 
              0.3311673833412964, 0.44432234432234435`, 0.5996018474279344, 
              0.46223921006529706`, 0.567542602325211, 0.2434623347666826, 
              0.5912565695174391, 0.5000955566172958, 0.5078993470297819, 
              0.306322662844402, 0.5043956043956045, 0.6016244624940278, 
              0.24472049689440997`, 0.5326166587036153, 0.14921165790731009`, 
              0.5118171683389076, -0.06265328874024527}, {
             0.5936773371555981, 0.516467590380634, 0.43933747412008284`, 0, 
              0.4030737378563466, 0.5195094760312152, 0.47612677177894575`, 
              0.4636088549132028, 0.48931358496575894`, 0.4561872909698997, 
              0.5566650740563784, 0.4207676381589425, 0.4623506927854754, 
              0.524143971970059, 0.299362955884695, 0.3420130594043638, 
              0.30802675585284284`, 0.3193183627966237, 0.7383819079471254, 
              0.2615066093326963, 0.2409937888198758}, {
             0.45483357222487664`, 0.4677814938684504, 0.3311673833412964, 
              0.4030737378563466, 0, 0.4720178372352286, 0.5991081382385731, 
              0.2846950151297978, 0.5185061315496099, 0.18617614269788185`, 
              0.5407071189679886, 0.16477146042363436`, 0.4213091256569518, 
              0.49839146360885495`, 0.4365822583213888, 0.36817964644051604`, 
              0.12239210065297022`, 0.10848861283643893`, 
              0.39410734193342895`, 0.050724637681159424`, 
              0.22704252269469663`}, {
             0.6807612677177896, 0.6244943462334768, 0.44432234432234435`, 
              0.5195094760312152, 0.4720178372352286, 0, 0.5753145405319319, 
              0.4658544354196529, 0.6275043796782928, 0.418330944417901, 
              0.748494983277592, 0.40551043159738814`, 0.3167224080267559, 
              0.9219302436693741, 0.33029144768275204`, 0.6665074056378405, 
              0.3437967829272177, 0.16133142220098742`, 0.47464564421086164`, 
              0.34398789616180925`, 0.09984073897117376}, {
             0.5604077082337953, 0.6550406115623507, 0.5996018474279344, 
              0.47612677177894575`, 0.5991081382385731, 0.5753145405319319, 0,
               0.39240324892498807`, 0.7047459786590222, 0.4017518713170887, 
              0.7573021181716835, 0.5457716196846633, 0.5587991718426502, 
              0.5347189042841217, 0.6979296066252588, 0.4563146997929607, 
              0.3480012740882306, 0.3741519350215003, 0.2991559165472209, 
              0.2771619684663163, 0.2821946169772257}, {
             0.5200509635292244, 0.5461856983596115, 0.46223921006529706`, 
              0.4636088549132028, 0.2846950151297978, 0.4658544354196529, 
              0.39240324892498807`, 0, 0.6533046663481447, 0.4825609173435261,
               0.7191113234591496, 0.7212613473483039, 0.7158464723682115, 
              0.45140946010511235`, 0.6638636725593248, 0.39888517279821634`, 
              0.5964644051600574, 0.7014811275680841, 0.1140946010511228, 
              0.16250995381430167`, -0.04632903328555503}, {
             0.5312788660614748, 0.6190316929447365, 0.567542602325211, 
              0.48931358496575894`, 0.5185061315496099, 0.6275043796782928, 
              0.7047459786590222, 0.6533046663481447, 0, 0.48655836916706485`,
               0.9503583373148592, 0.7253702818920211, 0.7805223761745501, 
              0.5842172320433191, 0.7453734671125977, 0.5150183150183151, 
              0.6185379837553752, 0.5197005892658068, 0.22129319955406915`, 
              0.06561554387641345, 0.13865265169612997`}, {
             0.2994585125019908, 0.36004140786749483`, 0.2434623347666826, 
              0.4561872909698997, 0.18617614269788185`, 0.418330944417901, 
              0.4017518713170887, 0.4825609173435261, 0.48655836916706485`, 0,
               0.5509953814301641, 0.5060519190953974, 0.43798375537505974`, 
              0.4541646759038064, 0.4041248606465998, 0.1466316292403249, 
              0.680315336837076, 0.1765727026596592, 
              0.30202261506609335`, -0.030164038859691038`, 
              0.2584965758878803}, {
             0.6239369326325849, 0.7168179646440517, 0.5912565695174391, 
              0.5566650740563784, 0.5407071189679886, 0.748494983277592, 
              0.7573021181716835, 0.7191113234591496, 0.9503583373148592, 
              0.5509953814301641, 0, 0.7391941391941392, 0.7422678770504858, 
              0.7263417741678612, 0.7436693741041568, 0.5878802357063228, 
              0.6388915432393694, 0.5083930562191432, 0.2857939162286989, 
              0.17746456442108619`, 0.16872113393852525`}, {
             0.3757286192068801, 0.42833253702818924`, 0.5000955566172958, 
              0.4207676381589425, 0.16477146042363436`, 0.40551043159738814`, 
              0.5457716196846633, 0.7212613473483039, 0.7253702818920211, 
              0.5060519190953974, 0.7391941391941392, 0, 0.6967510750119447, 
              0.36703296703296706`, 0.6775441949354993, 0.406450071667463, 
              0.6543876413441632, 0.7057811753463928, 0.05091575091575092, 
              0.21197642936773373`, 0.08087275043796784}, {
             0.38998248128682916`, 0.4586239847109413, 0.5078993470297819, 
              0.4623506927854754, 0.4213091256569518, 0.3167224080267559, 
              0.5587991718426502, 0.7158464723682115, 0.7805223761745501, 
              0.43798375537505974`, 0.7422678770504858, 0.6967510750119447, 0,
               0.2794712533842969, 0.7964325529542922, 0.2211339385252429, 
              0.6494664755534322, 0.638397834050008, 0.07529861442904921, 
              0.0009077878643096036, 0.1554865424430642}, {
             0.5824175824175825, 0.630211817168339, 0.306322662844402, 
              0.524143971970059, 0.49839146360885495`, 0.9219302436693741, 
              0.5347189042841217, 0.45140946010511235`, 0.5842172320433191, 
              0.4541646759038064, 0.7263417741678612, 0.36703296703296706`, 
              0.2794712533842969, 0, 0.2878006051919096, 0.6277432712215322, 
              0.34819238732282215`, 0.09390030259595478, 0.5031692944736423, 
              0.18666985188724322`, 0.22403248924988056`}, {
             0.39625736582258325`, 0.4681318681318682, 0.5043956043956045, 
              0.299362955884695, 0.4365822583213888, 0.33029144768275204`, 
              0.6979296066252588, 0.6638636725593248, 0.7453734671125977, 
              0.4041248606465998, 0.7436693741041568, 0.6775441949354993, 
              0.7964325529542922, 0.2878006051919096, 0, 0.27652492435101134`,
               0.5126931039974518, 0.5961299569995223, -0.046074215639433036`,
               0.06278069756330626, 0.12912884217232046`}, {
             0.6383341296384776, 0.566061474757127, 0.6016244624940278, 
              0.3420130594043638, 0.36817964644051604`, 0.6665074056378405, 
              0.4563146997929607, 0.39888517279821634`, 0.5150183150183151, 
              0.1466316292403249, 0.5878802357063228, 0.406450071667463, 
              0.2211339385252429, 0.6277432712215322, 0.27652492435101134`, 0,
               0.14290492116579073`, 0.30253225035833736`, 
              0.18315018315018317`, 
              0.5139034878165314, -0.18786430960344006`}, {
             0.26658703615225354`, 0.3237298932951107, 0.24472049689440997`, 
              0.30802675585284284`, 0.12239210065297022`, 0.3437967829272177, 
              0.3480012740882306, 0.5964644051600574, 0.6185379837553752, 
              0.680315336837076, 0.6388915432393694, 0.6543876413441632, 
              0.6494664755534322, 0.34819238732282215`, 0.5126931039974518, 
              0.14290492116579073`, 0, 0.36558369167064825`, 
              0.017439082656473964`, -0.1258639910813824, 
              0.20240484153527633`}, {
             0.35977066411849024`, 0.3455964325529543, 0.5326166587036153, 
              0.3193183627966237, 0.10848861283643893`, 0.16133142220098742`, 
              0.3741519350215003, 0.7014811275680841, 0.5197005892658068, 
              0.1765727026596592, 0.5083930562191432, 0.7057811753463928, 
              0.638397834050008, 0.09390030259595478, 0.5961299569995223, 
              0.30253225035833736`, 0.36558369167064825`, 
              0, -0.07504379678292722, 
              0.2448160535117057, -0.21168975951584648`}, {
             0.3855390985825769, 0.41917502787068006`, 0.14921165790731009`, 
              0.7383819079471254, 0.39410734193342895`, 0.47464564421086164`, 
              0.2991559165472209, 0.1140946010511228, 0.22129319955406915`, 
              0.30202261506609335`, 0.2857939162286989, 0.05091575091575092, 
              0.07529861442904921, 0.5031692944736423, -0.046074215639433036`,
               0.18315018315018317`, 
              0.017439082656473964`, -0.07504379678292722, 0, 
              0.18432871476349738`, 0.3237139671922281}, {
             0.5423475075648989, 0.3585125019907629, 0.5118171683389076, 
              0.2615066093326963, 0.050724637681159424`, 0.34398789616180925`,
               0.2771619684663163, 0.16250995381430167`, 
              0.06561554387641345, -0.030164038859691038`, 
              0.17746456442108619`, 0.21197642936773373`, 
              0.0009077878643096036, 0.18666985188724322`, 
              0.06278069756330626, 0.5139034878165314, -0.1258639910813824, 
              0.2448160535117057, 0.18432871476349738`, 
              0, -0.25738174868609653`}, {-0.11750278706800447`, 
              0.07733715559802518, -0.06265328874024527, 0.2409937888198758, 
              0.22704252269469663`, 0.09984073897117376, 
              0.2821946169772257, -0.04632903328555503, 0.13865265169612997`, 
              0.2584965758878803, 0.16872113393852525`, 0.08087275043796784, 
              0.1554865424430642, 0.22403248924988056`, 
              0.12912884217232046`, -0.18786430960344006`, 
              0.20240484153527633`, -0.21168975951584648`, 
              0.3237139671922281, -0.25738174868609653`, 0}}, 
            ({
             Clip[Floor[Part[#, 1] - Part[#2, 2]] + 1, {1, 
               Part[#, 1]}], 
             Clip[Floor[
                Part[#2, 1]] + 1, {1, 
               Part[#, 2]}]}& )[{21, 21}, HeatmapPlot`Private`pt$]]}, 
          Background -> White, ImageSize -> {Automatic, 30}, 
          ImageMargins -> {{5, 5}, {10, 10}}, Alignment -> Center]], 
       "CopiedValueFunction" -> Function[HeatmapPlot`Private`pt$, {
          ({
           Clip[Floor[Part[#, 1] - Part[#2, 2]] + 1, {1, 
             Part[#, 1]}], 
           Clip[Floor[
              Part[#2, 1]] + 1, {1, 
             Part[#, 2]}]}& )[{21, 21}, HeatmapPlot`Private`pt$], 
          
          Extract[{{
            0, 0.6134894091415831, 0.6091097308488613, 0.5936773371555981, 
             0.45483357222487664`, 0.6807612677177896, 0.5604077082337953, 
             0.5200509635292244, 0.5312788660614748, 0.2994585125019908, 
             0.6239369326325849, 0.3757286192068801, 0.38998248128682916`, 
             0.5824175824175825, 0.39625736582258325`, 0.6383341296384776, 
             0.26658703615225354`, 0.35977066411849024`, 0.3855390985825769, 
             0.5423475075648989, -0.11750278706800447`}, {
            0.6134894091415831, 0, 0.4875935658544355, 0.516467590380634, 
             0.4677814938684504, 0.6244943462334768, 0.6550406115623507, 
             0.5461856983596115, 0.6190316929447365, 0.36004140786749483`, 
             0.7168179646440517, 0.42833253702818924`, 0.4586239847109413, 
             0.630211817168339, 0.4681318681318682, 0.566061474757127, 
             0.3237298932951107, 0.3455964325529543, 0.41917502787068006`, 
             0.3585125019907629, 0.07733715559802518}, {
            0.6091097308488613, 0.4875935658544355, 0, 0.43933747412008284`, 
             0.3311673833412964, 0.44432234432234435`, 0.5996018474279344, 
             0.46223921006529706`, 0.567542602325211, 0.2434623347666826, 
             0.5912565695174391, 0.5000955566172958, 0.5078993470297819, 
             0.306322662844402, 0.5043956043956045, 0.6016244624940278, 
             0.24472049689440997`, 0.5326166587036153, 0.14921165790731009`, 
             0.5118171683389076, -0.06265328874024527}, {
            0.5936773371555981, 0.516467590380634, 0.43933747412008284`, 0, 
             0.4030737378563466, 0.5195094760312152, 0.47612677177894575`, 
             0.4636088549132028, 0.48931358496575894`, 0.4561872909698997, 
             0.5566650740563784, 0.4207676381589425, 0.4623506927854754, 
             0.524143971970059, 0.299362955884695, 0.3420130594043638, 
             0.30802675585284284`, 0.3193183627966237, 0.7383819079471254, 
             0.2615066093326963, 0.2409937888198758}, {
            0.45483357222487664`, 0.4677814938684504, 0.3311673833412964, 
             0.4030737378563466, 0, 0.4720178372352286, 0.5991081382385731, 
             0.2846950151297978, 0.5185061315496099, 0.18617614269788185`, 
             0.5407071189679886, 0.16477146042363436`, 0.4213091256569518, 
             0.49839146360885495`, 0.4365822583213888, 0.36817964644051604`, 
             0.12239210065297022`, 0.10848861283643893`, 0.39410734193342895`,
              0.050724637681159424`, 0.22704252269469663`}, {
            0.6807612677177896, 0.6244943462334768, 0.44432234432234435`, 
             0.5195094760312152, 0.4720178372352286, 0, 0.5753145405319319, 
             0.4658544354196529, 0.6275043796782928, 0.418330944417901, 
             0.748494983277592, 0.40551043159738814`, 0.3167224080267559, 
             0.9219302436693741, 0.33029144768275204`, 0.6665074056378405, 
             0.3437967829272177, 0.16133142220098742`, 0.47464564421086164`, 
             0.34398789616180925`, 0.09984073897117376}, {
            0.5604077082337953, 0.6550406115623507, 0.5996018474279344, 
             0.47612677177894575`, 0.5991081382385731, 0.5753145405319319, 0, 
             0.39240324892498807`, 0.7047459786590222, 0.4017518713170887, 
             0.7573021181716835, 0.5457716196846633, 0.5587991718426502, 
             0.5347189042841217, 0.6979296066252588, 0.4563146997929607, 
             0.3480012740882306, 0.3741519350215003, 0.2991559165472209, 
             0.2771619684663163, 0.2821946169772257}, {
            0.5200509635292244, 0.5461856983596115, 0.46223921006529706`, 
             0.4636088549132028, 0.2846950151297978, 0.4658544354196529, 
             0.39240324892498807`, 0, 0.6533046663481447, 0.4825609173435261, 
             0.7191113234591496, 0.7212613473483039, 0.7158464723682115, 
             0.45140946010511235`, 0.6638636725593248, 0.39888517279821634`, 
             0.5964644051600574, 0.7014811275680841, 0.1140946010511228, 
             0.16250995381430167`, -0.04632903328555503}, {
            0.5312788660614748, 0.6190316929447365, 0.567542602325211, 
             0.48931358496575894`, 0.5185061315496099, 0.6275043796782928, 
             0.7047459786590222, 0.6533046663481447, 0, 0.48655836916706485`, 
             0.9503583373148592, 0.7253702818920211, 0.7805223761745501, 
             0.5842172320433191, 0.7453734671125977, 0.5150183150183151, 
             0.6185379837553752, 0.5197005892658068, 0.22129319955406915`, 
             0.06561554387641345, 0.13865265169612997`}, {
            0.2994585125019908, 0.36004140786749483`, 0.2434623347666826, 
             0.4561872909698997, 0.18617614269788185`, 0.418330944417901, 
             0.4017518713170887, 0.4825609173435261, 0.48655836916706485`, 0, 
             0.5509953814301641, 0.5060519190953974, 0.43798375537505974`, 
             0.4541646759038064, 0.4041248606465998, 0.1466316292403249, 
             0.680315336837076, 0.1765727026596592, 
             0.30202261506609335`, -0.030164038859691038`, 
             0.2584965758878803}, {
            0.6239369326325849, 0.7168179646440517, 0.5912565695174391, 
             0.5566650740563784, 0.5407071189679886, 0.748494983277592, 
             0.7573021181716835, 0.7191113234591496, 0.9503583373148592, 
             0.5509953814301641, 0, 0.7391941391941392, 0.7422678770504858, 
             0.7263417741678612, 0.7436693741041568, 0.5878802357063228, 
             0.6388915432393694, 0.5083930562191432, 0.2857939162286989, 
             0.17746456442108619`, 0.16872113393852525`}, {
            0.3757286192068801, 0.42833253702818924`, 0.5000955566172958, 
             0.4207676381589425, 0.16477146042363436`, 0.40551043159738814`, 
             0.5457716196846633, 0.7212613473483039, 0.7253702818920211, 
             0.5060519190953974, 0.7391941391941392, 0, 0.6967510750119447, 
             0.36703296703296706`, 0.6775441949354993, 0.406450071667463, 
             0.6543876413441632, 0.7057811753463928, 0.05091575091575092, 
             0.21197642936773373`, 0.08087275043796784}, {
            0.38998248128682916`, 0.4586239847109413, 0.5078993470297819, 
             0.4623506927854754, 0.4213091256569518, 0.3167224080267559, 
             0.5587991718426502, 0.7158464723682115, 0.7805223761745501, 
             0.43798375537505974`, 0.7422678770504858, 0.6967510750119447, 0, 
             0.2794712533842969, 0.7964325529542922, 0.2211339385252429, 
             0.6494664755534322, 0.638397834050008, 0.07529861442904921, 
             0.0009077878643096036, 0.1554865424430642}, {
            0.5824175824175825, 0.630211817168339, 0.306322662844402, 
             0.524143971970059, 0.49839146360885495`, 0.9219302436693741, 
             0.5347189042841217, 0.45140946010511235`, 0.5842172320433191, 
             0.4541646759038064, 0.7263417741678612, 0.36703296703296706`, 
             0.2794712533842969, 0, 0.2878006051919096, 0.6277432712215322, 
             0.34819238732282215`, 0.09390030259595478, 0.5031692944736423, 
             0.18666985188724322`, 0.22403248924988056`}, {
            0.39625736582258325`, 0.4681318681318682, 0.5043956043956045, 
             0.299362955884695, 0.4365822583213888, 0.33029144768275204`, 
             0.6979296066252588, 0.6638636725593248, 0.7453734671125977, 
             0.4041248606465998, 0.7436693741041568, 0.6775441949354993, 
             0.7964325529542922, 0.2878006051919096, 0, 0.27652492435101134`, 
             0.5126931039974518, 0.5961299569995223, -0.046074215639433036`, 
             0.06278069756330626, 0.12912884217232046`}, {
            0.6383341296384776, 0.566061474757127, 0.6016244624940278, 
             0.3420130594043638, 0.36817964644051604`, 0.6665074056378405, 
             0.4563146997929607, 0.39888517279821634`, 0.5150183150183151, 
             0.1466316292403249, 0.5878802357063228, 0.406450071667463, 
             0.2211339385252429, 0.6277432712215322, 0.27652492435101134`, 0, 
             0.14290492116579073`, 0.30253225035833736`, 0.18315018315018317`,
              0.5139034878165314, -0.18786430960344006`}, {
            0.26658703615225354`, 0.3237298932951107, 0.24472049689440997`, 
             0.30802675585284284`, 0.12239210065297022`, 0.3437967829272177, 
             0.3480012740882306, 0.5964644051600574, 0.6185379837553752, 
             0.680315336837076, 0.6388915432393694, 0.6543876413441632, 
             0.6494664755534322, 0.34819238732282215`, 0.5126931039974518, 
             0.14290492116579073`, 0, 0.36558369167064825`, 
             0.017439082656473964`, -0.1258639910813824, 
             0.20240484153527633`}, {
            0.35977066411849024`, 0.3455964325529543, 0.5326166587036153, 
             0.3193183627966237, 0.10848861283643893`, 0.16133142220098742`, 
             0.3741519350215003, 0.7014811275680841, 0.5197005892658068, 
             0.1765727026596592, 0.5083930562191432, 0.7057811753463928, 
             0.638397834050008, 0.09390030259595478, 0.5961299569995223, 
             0.30253225035833736`, 0.36558369167064825`, 
             0, -0.07504379678292722, 
             0.2448160535117057, -0.21168975951584648`}, {
            0.3855390985825769, 0.41917502787068006`, 0.14921165790731009`, 
             0.7383819079471254, 0.39410734193342895`, 0.47464564421086164`, 
             0.2991559165472209, 0.1140946010511228, 0.22129319955406915`, 
             0.30202261506609335`, 0.2857939162286989, 0.05091575091575092, 
             0.07529861442904921, 0.5031692944736423, -0.046074215639433036`, 
             0.18315018315018317`, 
             0.017439082656473964`, -0.07504379678292722, 0, 
             0.18432871476349738`, 0.3237139671922281}, {
            0.5423475075648989, 0.3585125019907629, 0.5118171683389076, 
             0.2615066093326963, 0.050724637681159424`, 0.34398789616180925`, 
             0.2771619684663163, 0.16250995381430167`, 
             0.06561554387641345, -0.030164038859691038`, 
             0.17746456442108619`, 0.21197642936773373`, 
             0.0009077878643096036, 0.18666985188724322`, 0.06278069756330626,
              0.5139034878165314, -0.1258639910813824, 0.2448160535117057, 
             0.18432871476349738`, 
             0, -0.25738174868609653`}, {-0.11750278706800447`, 
             0.07733715559802518, -0.06265328874024527, 0.2409937888198758, 
             0.22704252269469663`, 0.09984073897117376, 
             0.2821946169772257, -0.04632903328555503, 0.13865265169612997`, 
             0.2584965758878803, 0.16872113393852525`, 0.08087275043796784, 
             0.1554865424430642, 0.22403248924988056`, 
             0.12912884217232046`, -0.18786430960344006`, 
             0.20240484153527633`, -0.21168975951584648`, 
             0.3237139671922281, -0.25738174868609653`, 0}}, 
           ({
            Clip[Floor[Part[#, 1] - Part[#2, 2]] + 1, {1, 
              Part[#, 1]}], 
            Clip[Floor[
               Part[#2, 1]] + 1, {1, 
              Part[#, 2]}]}& )[{21, 21}, HeatmapPlot`Private`pt$]]}]}, Frame -> 
     True, FrameLabel -> {None, None}, FrameStyle -> AbsoluteThickness[0], 
     FrameTicks -> {{{{20.5, 
          FormBox["\"ADA\"", TraditionalForm], {0, 0}}, {19.5, 
          FormBox["\"LTC\"", TraditionalForm], {0, 0}}, {18.5, 
          FormBox["\"ETC\"", TraditionalForm], {0, 0}}, {17.5, 
          FormBox["\"XLM\"", TraditionalForm], {0, 0}}, {16.5, 
          FormBox["\"XMR\"", TraditionalForm], {0, 0}}, {15.5, 
          FormBox["\"ETH\"", TraditionalForm], {0, 0}}, {14.5, 
          FormBox["\"TRX\"", TraditionalForm], {0, 0}}, {13.5, 
          FormBox["\"LINK\"", TraditionalForm], {0, 0}}, {12.5, 
          FormBox["\"BTC\"", TraditionalForm], {0, 0}}, {11.5, 
          FormBox["\"EOS\"", TraditionalForm], {0, 0}}, {10.5, 
          FormBox["\"USDT\"", TraditionalForm], {0, 0}}, {9.5, 
          FormBox["\"VET\"", TraditionalForm], {0, 0}}, {8.5, 
          FormBox["\"BCH\"", TraditionalForm], {0, 0}}, {7.5, 
          FormBox["\"USDC\"", TraditionalForm], {0, 0}}, {6.5, 
          FormBox["\"MATIC\"", TraditionalForm], {0, 0}}, {5.5, 
          FormBox["\"BNB\"", TraditionalForm], {0, 0}}, {4.5, 
          FormBox["\"FIL\"", TraditionalForm], {0, 0}}, {3.5, 
          FormBox["\"THETA\"", TraditionalForm], {0, 0}}, {2.5, 
          FormBox["\"XRP\"", TraditionalForm], {0, 0}}, {1.5, 
          FormBox["\"DOGE\"", TraditionalForm], {0, 0}}, {0.5, 
          FormBox["\"HEX\"", TraditionalForm], {0, 0}}}, None}, {{{0.5, 
          FormBox[
           RotationBox["\"ADA\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm], {0, 0}}, {1.5, 
          FormBox[
           RotationBox["\"LTC\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm], {0, 0}}, {2.5, 
          FormBox[
           RotationBox["\"ETC\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm], {0, 0}}, {3.5, 
          FormBox[
           RotationBox["\"XLM\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm], {0, 0}}, {4.5, 
          FormBox[
           RotationBox["\"XMR\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm], {0, 0}}, {5.5, 
          FormBox[
           RotationBox["\"ETH\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm], {0, 0}}, {6.5, 
          FormBox[
           RotationBox["\"TRX\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm], {0, 0}}, {7.5, 
          FormBox[
           RotationBox["\"LINK\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm], {0, 0}}, {8.5, 
          FormBox[
           RotationBox["\"BTC\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm], {0, 0}}, {9.5, 
          FormBox[
           RotationBox["\"EOS\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm], {0, 0}}, {10.5, 
          FormBox[
           RotationBox["\"USDT\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm], {0, 0}}, {11.5, 
          FormBox[
           RotationBox["\"VET\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm], {0, 0}}, {12.5, 
          FormBox[
           RotationBox["\"BCH\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm], {0, 0}}, {13.5, 
          FormBox[
           RotationBox["\"USDC\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm], {0, 0}}, {14.5, 
          FormBox[
           RotationBox["\"MATIC\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm], {0, 0}}, {15.5, 
          FormBox[
           RotationBox["\"BNB\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm], {0, 0}}, {16.5, 
          FormBox[
           RotationBox["\"FIL\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm], {0, 0}}, {17.5, 
          FormBox[
           RotationBox["\"THETA\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm], {0, 0}}, {18.5, 
          FormBox[
           RotationBox["\"XRP\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm], {0, 0}}, {19.5, 
          FormBox[
           RotationBox["\"DOGE\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm], {0, 0}}, {20.5, 
          FormBox[
           RotationBox["\"HEX\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm], {0, 0}}}, None}}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
     Method -> {
      "GridLinesInFront" -> True, "AxisPadding" -> Scaled[0.02], 
       "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
       "RangePadding" -> Scaled[0.05]}, PlotLabel -> 
     FormBox["\"Trading volume\"", TraditionalForm]}]},
  "RowDefault"]], "Output",
 CellChangeTimes->{3.890858741730503*^9, 3.89085960745087*^9},
 CellLabel->"Out[290]=",
 CellID->2070517821,ExpressionUUID->"8c6aff19-48f4-46e6-80de-b71d14718f2d"]
}, Open  ]]
}, Open  ]],

Cell["\<\
Generally speaking, the two clustering patterns are different. This is one of \
the reasons to do the nearest neighbor graph clusterings below.\
\>", "Text",
 CellChangeTimes->{
  3.833294749548855*^9, {3.8333708552668657`*^9, 3.833370879341357*^9}, {
   3.833386930267829*^9, 3.833386934555354*^9}},
 CellID->477503175,ExpressionUUID->"313f4767-e688-4b67-a2bf-f7c64a03a39c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Nearest neighbors graphs", "Section",
 CellChangeTimes->{{3.8333065539685793`*^9, 3.833306573629924*^9}},
 CellID->249473386,ExpressionUUID->"8241f5dc-26ad-4e8b-b4b3-5e755e426472"],

Cell["\<\
In this section we create nearest neighbor graphs of the correlation matrices \
computed above and plot clusterings of the nodes.\
\>", "Text",
 CellChangeTimes->{{3.796119526137355*^9, 3.796119568054771*^9}, {
  3.796120373487712*^9, 3.7961204102108707`*^9}, {3.833306986009219*^9, 
  3.833307007732924*^9}, {3.833307144939928*^9, 3.8333071520835667`*^9}},
 CellID->1011119558,ExpressionUUID->"92b74bc1-5218-4470-96b1-15944da64409"],

Cell[CellGroupData[{

Cell["Graphs overview", "Subsection",
 CellChangeTimes->{{3.796119583119062*^9, 3.796119603331664*^9}},
 CellID->848312595,ExpressionUUID->"14d7b165-3946-4a33-9ae6-b39913414e99"],

Cell[CellGroupData[{

Cell["Here we create the nearest neighbor graphs:", "Text",
 CellChangeTimes->{{3.83330715500825*^9, 3.833307171388028*^9}},
 CellID->445851732,ExpressionUUID->"3573329e-7a0f-4762-98d4-8769aad080c9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"aNNGraphsVertexRules", "=", 
   RowBox[{"Association", "@", 
    RowBox[{"MapThread", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"#2", "->", 
        RowBox[{"Association", "[", 
         RowBox[{"Thread", "[", 
          RowBox[{"Rule", "[", 
           RowBox[{
            RowBox[{"Normal", "[", 
             RowBox[{"Transpose", "[", "#SparseMatrix", "]"}], "]"}], ",", 
            "#ColumnNames"}], "]"}], "]"}], "]"}]}], "&"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"matCor1", ",", "matCor2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\"\<Open\>\"", ",", "\"\<Volume\>\""}], "}"}]}], "}"}]}], 
     "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8333058932750797`*^9, 3.8333059400753613`*^9}, {
  3.833305972542388*^9, 3.833306018938957*^9}, {3.8333060669877977`*^9, 
  3.8333060697096024`*^9}},
 CellLabel->"In[291]:=",
 CellID->859615341,ExpressionUUID->"fd166abc-d029-450b-bc02-3fdec8e09fa6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"aNNGraphs", "=", 
   RowBox[{"Association", "@", 
    RowBox[{"MapThread", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"gr", "=", 
          RowBox[{"NearestNeighborGraph", "[", 
           RowBox[{
            RowBox[{"Normal", "[", 
             RowBox[{"Transpose", "[", "#SparseMatrix", "]"}], "]"}], ",", 
            "4", ",", 
            RowBox[{"GraphLayout", "\[Rule]", "\"\<SpringEmbedding\>\""}], 
            ",", 
            RowBox[{"VertexLabels", "\[Rule]", 
             RowBox[{"Normal", "[", 
              RowBox[{"aNNGraphsVertexRules", "[", "#2", "]"}], "]"}]}]}], 
           "]"}]}], ";", 
         RowBox[{"#2", "->", 
          RowBox[{"Graph", "[", 
           RowBox[{
            RowBox[{"EdgeList", "[", "gr", "]"}], ",", 
            RowBox[{"VertexLabels", "\[Rule]", 
             RowBox[{"Normal", "[", 
              RowBox[{"aNNGraphsVertexRules", "[", "#2", "]"}], "]"}]}], ",", 
            
            RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]}]}], ")"}], 
       "&"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"matCor1", ",", "matCor2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\"\<Open\>\"", ",", "\"\<Volume\>\""}], "}"}]}], "}"}]}], 
     "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7961198879657173`*^9, 3.796119916078084*^9}, {
   3.7961200224008837`*^9, 3.796120073166396*^9}, {3.796120242281187*^9, 
   3.796120318683865*^9}, {3.79612042768318*^9, 3.796120452866446*^9}, {
   3.796120548966283*^9, 3.796120549301601*^9}, {3.7961206660592623`*^9, 
   3.796120666541667*^9}, {3.7961207419102*^9, 3.7961207424682407`*^9}, {
   3.7963239782291*^9, 3.796324105964301*^9}, {3.799646776158202*^9, 
   3.79964678173193*^9}, {3.7996468319367237`*^9, 3.799646834022099*^9}, {
   3.799646934050128*^9, 3.799646951721352*^9}, {3.799647592487381*^9, 
   3.7996475926672897`*^9}, {3.799663521198926*^9, 3.799663579456065*^9}, {
   3.799663703712159*^9, 3.799663704070581*^9}, {3.833305448211422*^9, 
   3.8333054672140217`*^9}, 3.833305497475493*^9, {3.833305944620492*^9, 
   3.833305963353931*^9}, {3.83330603048104*^9, 3.833306054314999*^9}, {
   3.833306086563609*^9, 3.833306099045849*^9}, {3.833306137807575*^9, 
   3.833306163861959*^9}, 3.83330658176941*^9, {3.833307032508095*^9, 
   3.8333070514745073`*^9}, {3.833307111774703*^9, 3.833307112675521*^9}},
 CellLabel->"In[292]:=",
 CellID->1432542818,ExpressionUUID->"e13f321f-9fae-4f4a-9d55-e620cab942e6"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Here we plot the graphs with clusters:", "Text",
 CellChangeTimes->{{3.79612071024518*^9, 3.796120731794976*^9}},
 CellID->1307975609,ExpressionUUID->"35fc31d9-beba-4847-ae92-571d8b489dbc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<GridTableForm\>\"", "]"}], "[", 
  RowBox[{
   RowBox[{"List", "@@@", 
    RowBox[{"Normal", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"CommunityGraphPlot", "[", 
        RowBox[{"#", ",", 
         RowBox[{"ImageSize", "\[Rule]", "800"}]}], "]"}], "&"}], "/@", 
      "aNNGraphs"}], "]"}]}], ",", 
   RowBox[{"TableHeadings", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Property\>\"", ",", 
      "\"\<Communities of nearest neighbors graph\>\""}], "}"}]}], ",", 
   RowBox[{"Background", "\[Rule]", "White"}], ",", 
   RowBox[{"Dividers", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.833306258048826*^9, 3.833306278499666*^9}},
 CellLabel->"In[293]:=",
 CellID->1503449771,ExpressionUUID->"6d0bd1e2-ed97-4767-b154-ca9fdede85e0"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"#\"\>",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["\<\"Property\"\>",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["\<\"Communities of nearest neighbors graph\"\>",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]]},
    {"1", "\<\"Open\"\>", 
     GraphicsBox[{{
        {EdgeForm[GrayLevel[0.5]], FaceForm[None], 
         FilledCurveBox[
          BSplineCurve[{{3.238929867192005, -0.10210097724859775`}, {
           3.4431318216892004`, -0.10210097724859775`}, {3.6484845759959077`, 
           1.0579013711913972`}, {3.6484845759959077`, 1.2621033256885925`}, {
           3.2697504981821592`, 1.4101980793902753`}, {2.6200975065324794`, 
           1.506240993110885}, {2.415895552035284, 1.506240993110885}, {
           2.415895552035284, 1.3020390386136897`}, {
           2.518768482607467, -0.07846050699147873}}, SplineClosed -> True]]}, 
        {EdgeForm[GrayLevel[0.5]], FaceForm[None], 
         FilledCurveBox[
          BSplineCurve[{{0.8835750401083297, 1.0075862737236032`}, {
           0.5149804627227615, 1.347834922475368}, {0.310778508225566, 
           1.347834922475368}, {0.062112749277926246`, 
           0.9602329046501884}, {-0.10210097724859775`, 
           0.6068745042223292}, {-0.10210097724859775`, 0.4026725497251337}, {
           0.47630458372280654`, -0.058696449779148965`}, {
           0.6805065382200021, -0.058696449779148965`}, {1.245074952862948, 
           0.32348778706571646`}, {1.245074952862948, 0.5276897415629119}}, 
           SplineClosed -> True]]}, 
        {EdgeForm[GrayLevel[0.5]], FaceForm[None], 
         FilledCurveBox[
          BSplineCurve[{{1.8643874655502202`, 2.0568926699589047`}, {
           2.0685894200474158`, 2.0568926699589047`}, {2.0685894200474158`, 
           2.2610946244561}, {1.633476480226493, 2.3538423868941245`}, {
           1.4292745257292976`, 2.3538423868941245`}, {1.4292745257292976`, 
           2.149640432396929}}, SplineClosed -> True]]}}, {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
         BezierCurveBox[{{1.9664884427988178`, 2.1589936472075024`}, {
          2.201212793956814, 1.779844134984906}, {2.5447153800700413`, 
          1.3775076821528032`}, {2.888217966183268, 0.9751712293207002}, {
          3.447053739682431, 0.7079774897804147}},
          SplineDegree->2], 
         BezierCurveBox[{{1.9664884427988178`, 2.1589936472075024`}, {
          1.4189557446959251`, 1.9034279444944473`}, {1.1614983398069807`, 
          1.5860304001560424`}, {0.9040409349180365, 1.2686328558176374`}, {
          0.5791382636137725, 0.9741103189813457}},
          SplineDegree->2], 
         BezierCurveBox[{{1.9664884427988178`, 2.1589936472075024`}, {
          2.201212793956814, 1.779844134984906}, {2.5447153800700413`, 
          1.3775076821528032`}, {2.888217966183268, 0.9751712293207002}, {
          3.17458664798706, 0.18183846720809893`}},
          SplineDegree->2], 
         LineBox[{{1.9664884427988178`, 2.1589936472075024`}, {
          1.5313755029778953`, 2.251741409645527}}], 
         BezierCurveBox[{{1.9664884427988178`, 2.1589936472075024`}, {
          2.201212793956814, 1.779844134984906}, {2.5447153800700413`, 
          1.3775076821528032`}, {2.888217966183268, 0.9751712293207002}, {
          3.1526209107582455`, 0.7007615744829381}},
          SplineDegree->2], 
         LineBox[{{3.447053739682431, 0.7079774897804147}, {3.17458664798706, 
          0.18183846720809893`}}], 
         LineBox[{{3.447053739682431, 0.7079774897804147}, {
          3.1526209107582455`, 0.7007615744829381}}], 
         LineBox[{{3.447053739682431, 0.7079774897804147}, {
          3.3410308444406027`, 0.}}], 
         LineBox[{{3.447053739682431, 0.7079774897804147}, {2.856806612395821,
           1.0059802856644176`}}], 
         LineBox[{{3.447053739682431, 0.7079774897804147}, {3.54638359874731, 
          1.1600023484399948`}}], 
         LineBox[{{3.447053739682431, 0.7079774897804147}, {2.852609712782522,
           0.3048870694539163}}], 
         LineBox[{{3.447053739682431, 0.7079774897804147}, {
          3.1676495209335616`, 1.3080971021416776`}}], 
         BezierCurveBox[{{0.5791382636137725, 0.9741103189813457}, {
          0.9040409349180365, 1.2686328558176374`}, {1.1614983398069807`, 
          1.5860304001560424`}, {1.4189557446959251`, 1.9034279444944473`}, {
          1.5313755029778953`, 2.251741409645527}},
          SplineDegree->2], 
         LineBox[{{0.5791382636137725, 0.9741103189813457}, {
          0.3136205670626513, 0.33513138654854024`}}], 
         LineBox[{{0.5791382636137725, 0.9741103189813457}, {
          0.7814740628597319, 0.9054852964750055}}], 
         LineBox[{{0.5791382636137725, 0.9741103189813457}, {
          0.164213726526524, 0.8581319274015906}}], 
         LineBox[{{0.5791382636137725, 0.9741103189813457}, {
          1.1429739756143502`, 0.4255887643143142}}], 
         LineBox[{{0.5791382636137725, 0.9741103189813457}, {
          0.41287948547416375`, 1.2457339452267704`}}], 
         LineBox[{{0.5791382636137725, 0.9741103189813457}, {0., 
          0.5047735269737315}}], 
         LineBox[{{0.5791382636137725, 0.9741103189813457}, {
          0.6693169352846606, 0.4773459868488456}}], 
         LineBox[{{3.17458664798706, 0.18183846720809893`}, {
          3.1526209107582455`, 0.7007615744829381}}], 
         LineBox[{{3.17458664798706, 0.18183846720809893`}, {
          3.3410308444406027`, 0.}}], 
         LineBox[{{3.17458664798706, 0.18183846720809893`}, {
          2.852609712782522, 0.3048870694539163}}], 
         LineBox[{{3.17458664798706, 0.18183846720809893`}, {
          2.6208694598560647`, 0.023640470257119017`}}], 
         BezierCurveBox[{{1.5313755029778953`, 2.251741409645527}, {
          2.201212793956814, 1.779844134984906}, {2.5447153800700413`, 
          1.3775076821528032`}, {2.888217966183268, 0.9751712293207002}, {
          3.1526209107582455`, 0.7007615744829381}},
          SplineDegree->2], 
         BezierCurveBox[{{1.5313755029778953`, 2.251741409645527}, {
          1.4189557446959251`, 1.9034279444944473`}, {1.1614983398069807`, 
          1.5860304001560424`}, {0.9040409349180365, 1.2686328558176374`}, {
          0.7814740628597319, 0.9054852964750055}},
          SplineDegree->2], 
         LineBox[{{3.1526209107582455`, 0.7007615744829381}, {
          3.3410308444406027`, 0.}}], 
         LineBox[{{3.1526209107582455`, 0.7007615744829381}, {
          3.54638359874731, 1.1600023484399948`}}], 
         LineBox[{{3.1526209107582455`, 0.7007615744829381}, {
          3.1676495209335616`, 1.3080971021416776`}}], 
         LineBox[{{3.1526209107582455`, 0.7007615744829381}, {
          2.6208694598560647`, 0.023640470257119017`}}], 
         LineBox[{{3.3410308444406027`, 0.}, {2.6208694598560647`, 
          0.023640470257119017`}}], 
         LineBox[{{2.856806612395821, 1.0059802856644176`}, {3.54638359874731,
           1.1600023484399948`}}], 
         LineBox[{{2.856806612395821, 1.0059802856644176`}, {
          2.852609712782522, 0.3048870694539163}}], 
         LineBox[{{2.856806612395821, 1.0059802856644176`}, {
          3.1676495209335616`, 1.3080971021416776`}}], 
         BezierCurveBox[{{2.856806612395821, 1.0059802856644176`}, {
          2.204859146364502, 0.8592319484306759}, {1.7813010100240927`, 
          0.7589886999498239}, {1.357742873683683, 0.6587454514689718}, {
          1.1429739756143502`, 0.4255887643143142}},
          SplineDegree->2], 
         LineBox[{{2.856806612395821, 1.0059802856644176`}, {
          2.5179965292838817`, 1.4041400158622874`}}], 
         LineBox[{{3.54638359874731, 1.1600023484399948`}, {
          3.1676495209335616`, 1.3080971021416776`}}], 
         LineBox[{{2.852609712782522, 0.3048870694539163}, {
          2.6208694598560647`, 0.023640470257119017`}}], 
         LineBox[{{3.1676495209335616`, 1.3080971021416776`}, {
          2.5179965292838817`, 1.4041400158622874`}}], 
         LineBox[{{0.3136205670626513, 0.33513138654854024`}, {
          0.7814740628597319, 0.9054852964750055}}], 
         LineBox[{{0.3136205670626513, 0.33513138654854024`}, {
          0.164213726526524, 0.8581319274015906}}], 
         LineBox[{{0.3136205670626513, 0.33513138654854024`}, {0., 
          0.5047735269737315}}], 
         LineBox[{{0.3136205670626513, 0.33513138654854024`}, {
          0.6693169352846606, 0.4773459868488456}}], 
         LineBox[{{0.3136205670626513, 0.33513138654854024`}, {
          0.5784055609714043, 0.043404527469448784`}}], 
         LineBox[{{0.7814740628597319, 0.9054852964750055}, {
          0.164213726526524, 0.8581319274015906}}], 
         LineBox[{{0.7814740628597319, 0.9054852964750055}, {
          1.1429739756143502`, 0.4255887643143142}}], 
         LineBox[{{0.7814740628597319, 0.9054852964750055}, {
          0.41287948547416375`, 1.2457339452267704`}}], 
         LineBox[{{0.7814740628597319, 0.9054852964750055}, {
          0.5784055609714043, 0.043404527469448784`}}], 
         BezierCurveBox[{{0.7814740628597319, 0.9054852964750055}, {
          1.357742873683683, 0.6587454514689718}, {1.7813010100240927`, 
          0.7589886999498239}, {2.204859146364502, 0.8592319484306759}, {
          2.5179965292838817`, 1.4041400158622874`}},
          SplineDegree->2], 
         LineBox[{{0.164213726526524, 0.8581319274015906}, {0., 
          0.5047735269737315}}], 
         LineBox[{{0.164213726526524, 0.8581319274015906}, {
          0.6693169352846606, 0.4773459868488456}}], 
         LineBox[{{1.1429739756143502`, 0.4255887643143142}, {
          0.5784055609714043, 0.043404527469448784`}}], 
         BezierCurveBox[{{1.1429739756143502`, 0.4255887643143142}, {
          1.357742873683683, 0.6587454514689718}, {1.7813010100240927`, 
          0.7589886999498239}, {2.204859146364502, 0.8592319484306759}, {
          2.5179965292838817`, 1.4041400158622874`}},
          SplineDegree->2], 
         LineBox[{{0.41287948547416375`, 1.2457339452267704`}, {
          0.6693169352846606, 0.4773459868488456}}], 
         LineBox[{{0.41287948547416375`, 1.2457339452267704`}, {
          0.5784055609714043, 0.043404527469448784`}}], 
         LineBox[{{0., 0.5047735269737315}, {0.6693169352846606, 
          0.4773459868488456}}], 
         BezierCurveBox[{{0.6693169352846606, 0.4773459868488456}, {
          1.357742873683683, 0.6587454514689718}, {1.7813010100240927`, 
          0.7589886999498239}, {2.204859146364502, 0.8592319484306759}, {
          2.6208694598560647`, 0.023640470257119017`}},
          SplineDegree->2]}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], {
          {Hue[0.8, 0.6, 0.8], EdgeForm[{Hue[0.8, 0.6, 0.8], Opacity[1]}], 
           DiskBox[{1.9664884427988178, 2.1589936472075024}, 
            0.034033659082865916]}, 
          InsetBox["\<\"ADA\"\>", 
           Offset[{2, 2}, {2.0005221018816837, 2.1930273062903685}], 
           ImageScaled[{0, 0}],
           BaseStyle->"Graphics"]}, {
          {Hue[0, 1, 0.8], EdgeForm[{Hue[0, 1, 0.8], Opacity[1]}], 
           DiskBox[{3.447053739682431, 0.7079774897804147}, 
            0.034033659082865916]}, 
          InsetBox["\<\"BCH\"\>", 
           Offset[{2, 2}, {3.481087398765297, 0.7420111488632807}], 
           ImageScaled[{0, 0}],
           BaseStyle->"Graphics"]}, {
          {Hue[0.14, 1, 0.9], EdgeForm[{Hue[0.14, 1, 0.9], Opacity[1]}], 
           DiskBox[{0.5791382636137725, 0.9741103189813457}, 
            0.034033659082865916]}, 
          InsetBox["\<\"BNB\"\>", 
           Offset[{2, 2}, {0.6131719226966384, 1.0081439780642116}], 
           ImageScaled[{0, 0}],
           BaseStyle->"Graphics"]}, {
          {Hue[0, 1, 0.8], EdgeForm[{Hue[0, 1, 0.8], Opacity[1]}], 
           DiskBox[{3.17458664798706, 0.18183846720809893}, 
            0.034033659082865916]}, 
          InsetBox["\<\"ETC\"\>", 
           Offset[{2, 2}, {3.208620307069926, 0.21587212629096486}], 
           ImageScaled[{0, 0}],
           BaseStyle->"Graphics"]}, {
          {Hue[0.8, 0.6, 0.8], EdgeForm[{Hue[0.8, 0.6, 0.8], Opacity[1]}], 
           DiskBox[{1.5313755029778953, 2.251741409645527}, 
            0.034033659082865916]}, 
          InsetBox["\<\"LINK\"\>", 
           Offset[{2, 2}, {1.565409162060761, 2.285775068728393}], 
           ImageScaled[{0, 0}],
           BaseStyle->"Graphics"]}, {
          {Hue[0, 1, 0.8], EdgeForm[{Hue[0, 1, 0.8], Opacity[1]}], 
           DiskBox[{3.1526209107582455, 0.7007615744829381}, 
            0.034033659082865916]}, 
          InsetBox["\<\"LTC\"\>", 
           Offset[{2, 2}, {3.1866545698411115, 0.734795233565804}], 
           ImageScaled[{0, 0}],
           BaseStyle->"Graphics"]}, {
          {Hue[0, 1, 0.8], EdgeForm[{Hue[0, 1, 0.8], Opacity[1]}], 
           DiskBox[{3.3410308444406027, 0.}, 0.034033659082865916]}, 
          InsetBox["\<\"DOGE\"\>", 
           Offset[{2, 2}, {3.3750645035234688, 0.034033659082865916}], 
           ImageScaled[{0, 0}],
           BaseStyle->"Graphics"]}, {
          {Hue[0, 1, 0.8], EdgeForm[{Hue[0, 1, 0.8], Opacity[1]}], 
           DiskBox[{2.856806612395821, 1.0059802856644176}, 
            0.034033659082865916]}, 
          InsetBox["\<\"MATIC\"\>", 
           Offset[{2, 2}, {2.890840271478687, 1.0400139447472834}], 
           ImageScaled[{0, 0}],
           BaseStyle->"Graphics"]}, {
          {Hue[0, 1, 0.8], EdgeForm[{Hue[0, 1, 0.8], Opacity[1]}], 
           DiskBox[{3.54638359874731, 1.1600023484399948}, 
            0.034033659082865916]}, 
          InsetBox["\<\"THETA\"\>", 
           Offset[{2, 2}, {3.580417257830176, 1.1940360075228607}], 
           ImageScaled[{0, 0}],
           BaseStyle->"Graphics"]}, {
          {Hue[0, 1, 0.8], EdgeForm[{Hue[0, 1, 0.8], Opacity[1]}], 
           DiskBox[{2.852609712782522, 0.3048870694539163}, 
            0.034033659082865916]}, 
          InsetBox["\<\"USDC\"\>", 
           Offset[{2, 2}, {2.886643371865388, 0.33892072853678223}], 
           ImageScaled[{0, 0}],
           BaseStyle->"Graphics"]}, {
          {Hue[0, 1, 0.8], EdgeForm[{Hue[0, 1, 0.8], Opacity[1]}], 
           DiskBox[{3.1676495209335616, 1.3080971021416776}, 
            0.034033659082865916]}, 
          InsetBox["\<\"VET\"\>", 
           Offset[{2, 2}, {3.2016831800164276, 1.3421307612245434}], 
           ImageScaled[{0, 0}],
           BaseStyle->"Graphics"]}, {
          {Hue[0.14, 1, 0.9], EdgeForm[{Hue[0.14, 1, 0.9], Opacity[1]}], 
           DiskBox[{0.3136205670626513, 0.33513138654854024}, 
            0.034033659082865916]}, 
          InsetBox["\<\"BTC\"\>", 
           Offset[{2, 2}, {0.3476542261455172, 0.3691650456314062}], 
           ImageScaled[{0, 0}],
           BaseStyle->"Graphics"]}, {
          {Hue[0.14, 1, 0.9], EdgeForm[{Hue[0.14, 1, 0.9], Opacity[1]}], 
           DiskBox[{0.7814740628597319, 0.9054852964750055}, 
            0.034033659082865916]}, 
          InsetBox["\<\"EOS\"\>", 
           Offset[{2, 2}, {0.8155077219425978, 0.9395189555578715}], 
           ImageScaled[{0, 0}],
           BaseStyle->"Graphics"]}, {
          {Hue[0.14, 1, 0.9], EdgeForm[{Hue[0.14, 1, 0.9], Opacity[1]}], 
           DiskBox[{0.164213726526524, 0.8581319274015906}, 
            0.034033659082865916]}, 
          InsetBox["\<\"ETH\"\>", 
           Offset[{2, 2}, {0.19824738560938993, 0.8921655864844565}], 
           ImageScaled[{0, 0}],
           BaseStyle->"Graphics"]}, {
          {Hue[0.14, 1, 0.9], EdgeForm[{Hue[0.14, 1, 0.9], Opacity[1]}], 
           DiskBox[{1.1429739756143502, 0.4255887643143142}, 
            0.034033659082865916]}, 
          InsetBox["\<\"FIL\"\>", 
           Offset[{2, 2}, {1.177007634697216, 0.4596224233971801}], 
           ImageScaled[{0, 0}],
           BaseStyle->"Graphics"]}, {
          {Hue[0.14, 1, 0.9], EdgeForm[{Hue[0.14, 1, 0.9], Opacity[1]}], 
           DiskBox[{0.41287948547416375, 1.2457339452267704}, 
            0.034033659082865916]}, 
          InsetBox["\<\"USDT\"\>", 
           Offset[{2, 2}, {0.4469131445570297, 1.2797676043096362}], 
           ImageScaled[{0, 0}],
           BaseStyle->"Graphics"]}, {
          {Hue[0.14, 1, 0.9], EdgeForm[{Hue[0.14, 1, 0.9], Opacity[1]}], 
           DiskBox[{0., 0.5047735269737315}, 0.034033659082865916]}, 
          InsetBox["\<\"XLM\"\>", 
           Offset[{2, 2}, {0.034033659082865916, 0.5388071860565974}], 
           ImageScaled[{0, 0}],
           BaseStyle->"Graphics"]}, {
          {Hue[0.14, 1, 0.9], EdgeForm[{Hue[0.14, 1, 0.9], Opacity[1]}], 
           DiskBox[{0.6693169352846606, 0.4773459868488456}, 
            0.034033659082865916]}, 
          InsetBox["\<\"XRP\"\>", 
           Offset[{2, 2}, {0.7033505943675266, 0.5113796459317115}], 
           ImageScaled[{0, 0}],
           BaseStyle->"Graphics"]}, {
          {Hue[0.14, 1, 0.9], EdgeForm[{Hue[0.14, 1, 0.9], Opacity[1]}], 
           DiskBox[{0.5784055609714043, 0.043404527469448784}, 
            0.034033659082865916]}, 
          InsetBox["\<\"HEX\"\>", 
           Offset[{2, 2}, {0.6124392200542702, 0.0774381865523147}], 
           ImageScaled[{0, 0}],
           BaseStyle->"Graphics"]}, {
          {Hue[0, 1, 0.8], EdgeForm[{Hue[0, 1, 0.8], Opacity[1]}], 
           DiskBox[{2.6208694598560647, 0.023640470257119017}, 
            0.034033659082865916]}, 
          InsetBox["\<\"XMR\"\>", 
           Offset[{2, 2}, {2.6549031189389307, 0.057674129339984934}], 
           ImageScaled[{0, 0}],
           BaseStyle->"Graphics"]}, {
          {Hue[0, 1, 0.8], EdgeForm[{Hue[0, 1, 0.8], Opacity[1]}], 
           DiskBox[{2.5179965292838817, 1.4041400158622874}, 
            0.034033659082865916]}, 
          InsetBox["\<\"TRX\"\>", 
           Offset[{2, 2}, {2.5520301883667478, 1.4381736749451532}], 
           ImageScaled[{0, 0}],
           BaseStyle->"Graphics"]}}}},
      FormatType->TraditionalForm,
      FrameTicks->None,
      ImageSize->800]},
    {"2", "\<\"Volume\"\>", 
     GraphicsBox[{{
        {EdgeForm[GrayLevel[0.5]], FaceForm[None], 
         FilledCurveBox[
          BSplineCurve[{{1.2246570489586075`, -0.0959596700273592}, {
           1.416576389013326, -0.0959596700273592}, {
           2.003701416879487, -0.05790323785787446}, {2.003701416879487, 
           0.13401610219684393`}, {1.9175036723265866`, 0.6018086042349777}, {
           1.4851408610263923`, 0.6067575518582031}, {1.2932215209716738`, 
           0.6067575518582031}, {1.2246570489586075`, 0.0959596700273592}}, 
           SplineClosed -> True]]}, 
        {EdgeForm[GrayLevel[0.5]], FaceForm[None], 
         FilledCurveBox[
          BSplineCurve[{{2.814634260357614, 1.2766732928498299`}, {
           2.6242725131373414`, 1.1065226656293687`}, {2.6242725131373414`, 
           0.9146033255746503}, {2.9637847845285488`, 0.7577835902739629}, {
           3.155704124583267, 0.7577835902739629}, {3.3431814751354456`, 
           0.8299268586628056}, {3.3431814751354456`, 1.021846198717524}, {
           3.2964293154748625`, 1.3135617541912454`}, {3.1045099754201444`, 
           1.3135617541912454`}}, SplineClosed -> True]]}, 
        {EdgeForm[GrayLevel[0.5]], FaceForm[None], 
         FilledCurveBox[
          BSplineCurve[{{0.20349695760350692`, 0.6099347044433039}, {
           0.3954162976582253, 0.6099347044433039}, {0.3954162976582253, 
           0.8018540444980222}, {0.3196184818906155, 1.404411721448543}, {
           0.12769914183589712`, 1.404411721448543}, {-0.0959596700273592, 
           1.138700498418582}, {-0.0959596700273592, 
           0.9467811583638636}, {-0.023704017794507287`, 0.6283372036657942}},
            SplineClosed -> True]]}, 
        {EdgeForm[GrayLevel[0.5]], FaceForm[None], 
         FilledCurveBox[
          BSplineCurve[{{1.0642651127010505`, 2.144413143458267}, {
           1.7027707834417818`, 1.8444674473529135`}, {1.8946901234965003`, 
           1.8444674473529135`}, {1.9698770770029714`, 2.164644227605661}, {
           1.9698770770029714`, 2.356563567660379}, {1.7779577369482529`, 
           2.356563567660379}, {1.0642651127010505`, 2.3363324835129853`}}, 
           SplineClosed -> True]]}}, {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
         BezierCurveBox[{{1.3206167189859668`, 0.}, {1.915575374354723, 
          0.4838956172973235}, {2.2075895290272496`, 0.6807202384681099}, {
          2.499603683699776, 0.8775448596388963}, {2.910593930384973, 
          1.1807136228224706`}},
          SplineDegree->2], 
         LineBox[{{1.3206167189859668`, 0.}, {1.389181190999033, 
          0.510797881830844}}], 
         LineBox[{{1.3206167189859668`, 0.}, {1.5206125063848803`, 
          0.29132645609627783`}}], 
         BezierCurveBox[{{1.3206167189859668`, 0.}, {1.2155713973901439`, 
          0.4506800417821434}, {0.8823799986190342, 0.5964250212733337}, {
          0.5491885998479245, 0.7421700007645241}, {0.2994566276308661, 
          0.705894374470663}},
          SplineDegree->2], 
         BezierCurveBox[{{2.910593930384973, 1.1807136228224706`}, {
          2.499603683699776, 0.8775448596388963}, {2.2075895290272496`, 
          0.6807202384681099}, {1.915575374354723, 0.4838956172973235}, {
          1.5206125063848803`, 0.29132645609627783`}},
          SplineDegree->2], 
         LineBox[{{2.910593930384973, 1.1807136228224706`}, {
          3.2472218051080866`, 0.9258865286901647}}], 
         BezierCurveBox[{{2.910593930384973, 1.1807136228224706`}, {
          2.499603683699776, 0.8775448596388963}, {2.2075895290272496`, 
          0.6807202384681099}, {1.915575374354723, 0.4838956172973235}, {
          1.8215440022992273`, 0.5058489342076186}},
          SplineDegree->2], 
         LineBox[{{2.910593930384973, 1.1807136228224706`}, {
          2.7202321831647005`, 1.0105629956020095`}}], 
         LineBox[{{2.910593930384973, 1.1807136228224706`}, {
          3.2004696454475035`, 1.2176020841638862`}}], 
         LineBox[{{1.389181190999033, 0.510797881830844}, {
          1.5206125063848803`, 0.29132645609627783`}}], 
         BezierCurveBox[{{1.389181190999033, 0.510797881830844}, {
          1.2155713973901439`, 0.4506800417821434}, {0.8823799986190342, 
          0.5964250212733337}, {0.5491885998479245, 0.7421700007645241}, {
          0.2236588118632563, 1.3084520514211837`}},
          SplineDegree->2], 
         BezierCurveBox[{{1.389181190999033, 0.510797881830844}, {
          1.2155713973901439`, 0.4506800417821434}, {0.8823799986190342, 
          0.5964250212733337}, {0.5491885998479245, 0.7421700007645241}, {
          0.23423663399494488`, 1.2042525906575028`}},
          SplineDegree->2], 
         BezierCurveBox[{{1.389181190999033, 0.510797881830844}, {
          1.915575374354723, 0.4838956172973235}, {2.2075895290272496`, 
          0.6807202384681099}, {2.499603683699776, 0.8775448596388963}, {
          2.7202321831647005`, 1.0105629956020095`}},
          SplineDegree->2], 
         BezierCurveBox[{{1.389181190999033, 0.510797881830844}, {
          1.6299323662044256`, 0.8800595043003789}, {1.6545021357597207`, 
          1.2517956005815267`}, {1.6790719053150158`, 1.6235316968626745`}, {
          1.6085528962714817`, 2.0501084689073714`}},
          SplineDegree->2], 
         LineBox[{{1.389181190999033, 0.510797881830844}, {
          1.6866370832522288`, 0.1533628744041755}}], 
         BezierCurveBox[{{1.5206125063848803`, 0.29132645609627783`}, {
          1.2155713973901439`, 0.4506800417821434}, {0.8823799986190342, 
          0.5964250212733337}, {0.5491885998479245, 0.7421700007645241}, {
          0.2994566276308661, 0.705894374470663}},
          SplineDegree->2], 
         LineBox[{{1.5206125063848803`, 0.29132645609627783`}, {
          1.8215440022992273`, 0.5058489342076186}}], 
         BezierCurveBox[{{1.5206125063848803`, 0.29132645609627783`}, {
          1.915575374354723, 0.4838956172973235}, {2.2075895290272496`, 
          0.6807202384681099}, {2.499603683699776, 0.8775448596388963}, {
          2.7202321831647005`, 1.0105629956020095`}},
          SplineDegree->2], 
         BezierCurveBox[{{1.5206125063848803`, 0.29132645609627783`}, {
          1.2155713973901439`, 0.4506800417821434}, {0.8823799986190342, 
          0.5964250212733337}, {0.5491885998479245, 0.7421700007645241}, {
          0.07225565223285191, 0.7242968736931533}},
          SplineDegree->2], 
         LineBox[{{1.5206125063848803`, 0.29132645609627783`}, {
          1.6866370832522288`, 0.1533628744041755}}], 
         LineBox[{{1.5206125063848803`, 0.29132645609627783`}, {
          1.9077417468521276`, 0.03805643216948473}}], 
         BezierCurveBox[{{1.5206125063848803`, 0.29132645609627783`}, {
          1.2155713973901439`, 0.4506800417821434}, {0.8823799986190342, 
          0.5964250212733337}, {0.5491885998479245, 0.7421700007645241}, {0., 
          1.0427408283912227`}},
          SplineDegree->2], 
         LineBox[{{0.2994566276308661, 0.705894374470663}, {
          0.2236588118632563, 1.3084520514211837`}}], 
         BezierCurveBox[{{0.2994566276308661, 0.705894374470663}, {
          0.5491885998479245, 0.7421700007645241}, {0.8823799986190342, 
          0.5964250212733337}, {1.2155713973901439`, 0.4506800417821434}, {
          1.8215440022992273`, 0.5058489342076186}},
          SplineDegree->2], 
         LineBox[{{0.2994566276308661, 0.705894374470663}, {
          0.07225565223285191, 0.7242968736931533}}], 
         BezierCurveBox[{{0.2994566276308661, 0.705894374470663}, {
          0.5491885998479245, 0.7421700007645241}, {0.8823799986190342, 
          0.5964250212733337}, {1.2155713973901439`, 0.4506800417821434}, {
          1.9077417468521276`, 0.03805643216948473}},
          SplineDegree->2], 
         LineBox[{{0.2994566276308661, 0.705894374470663}, {0., 
          1.0427408283912227`}}], 
         LineBox[{{1.1602247827284098`, 2.2403728134856262`}, {
          1.798730453469141, 1.9404271173802727`}}], 
         BezierCurveBox[{{1.1602247827284098`, 2.2403728134856262`}, {
          1.007377371036586, 1.9587556732856009`}, {0.7479008216674243, 
          1.7246212225368482`}, {0.48842427229826246`, 1.4904867717880959`}, {
          0.2236588118632563, 1.3084520514211837`}},
          SplineDegree->2], 
         LineBox[{{1.1602247827284098`, 2.2403728134856262`}, {
          1.3734830580830864`, 2.1454074345830803`}}], 
         BezierCurveBox[{{1.1602247827284098`, 2.2403728134856262`}, {
          1.007377371036586, 1.9587556732856009`}, {0.7479008216674243, 
          1.7246212225368482`}, {0.48842427229826246`, 1.4904867717880959`}, {
          0.23423663399494488`, 1.2042525906575028`}},
          SplineDegree->2], 
         LineBox[{{1.798730453469141, 1.9404271173802727`}, {
          1.3734830580830864`, 2.1454074345830803`}}], 
         BezierCurveBox[{{1.798730453469141, 1.9404271173802727`}, {
          1.6790719053150158`, 1.6235316968626745`}, {1.6545021357597207`, 
          1.2517956005815267`}, {1.6299323662044256`, 0.8800595043003789}, {
          1.8215440022992273`, 0.5058489342076186}},
          SplineDegree->2], 
         BezierCurveBox[{{1.798730453469141, 1.9404271173802727`}, {
          2.0761953135522493`, 1.7749369707238367`}, {2.3285978557998672`, 
          1.5027212306498179`}, {2.581000398047485, 1.230505490575799}, {
          2.7202321831647005`, 1.0105629956020095`}},
          SplineDegree->2], 
         BezierCurveBox[{{1.798730453469141, 1.9404271173802727`}, {
          2.0761953135522493`, 1.7749369707238367`}, {2.3285978557998672`, 
          1.5027212306498179`}, {2.581000398047485, 1.230505490575799}, {
          3.059744454555908, 0.8537432603013221}},
          SplineDegree->2], 
         LineBox[{{1.798730453469141, 1.9404271173802727`}, {
          1.8739174069756122`, 2.26060389763302}}], 
         LineBox[{{1.798730453469141, 1.9404271173802727`}, {
          1.6085528962714817`, 2.0501084689073714`}}], 
         BezierCurveBox[{{0.2236588118632563, 1.3084520514211837`}, {
          0.48842427229826246`, 1.4904867717880959`}, {0.7479008216674243, 
          1.7246212225368482`}, {1.007377371036586, 1.9587556732856009`}, {
          1.3734830580830864`, 2.1454074345830803`}},
          SplineDegree->2], 
         LineBox[{{0.2236588118632563, 1.3084520514211837`}, {
          0.23423663399494488`, 1.2042525906575028`}}], 
         LineBox[{{0.2236588118632563, 1.3084520514211837`}, {
          0.07225565223285191, 0.7242968736931533}}], 
         LineBox[{{0.2236588118632563, 1.3084520514211837`}, {0., 
          1.0427408283912227`}}], 
         BezierCurveBox[{{1.3734830580830864`, 2.1454074345830803`}, {
          1.007377371036586, 1.9587556732856009`}, {0.7479008216674243, 
          1.7246212225368482`}, {0.48842427229826246`, 1.4904867717880959`}, {
          0.23423663399494488`, 1.2042525906575028`}},
          SplineDegree->2], 
         LineBox[{{1.3734830580830864`, 2.1454074345830803`}, {
          1.8739174069756122`, 2.26060389763302}}], 
         LineBox[{{1.3734830580830864`, 2.1454074345830803`}, {
          1.6085528962714817`, 2.0501084689073714`}}], 
         LineBox[{{0.23423663399494488`, 1.2042525906575028`}, {
          0.07225565223285191, 0.7242968736931533}}], 
         LineBox[{{0.23423663399494488`, 1.2042525906575028`}, {0., 
          1.0427408283912227`}}], 
         LineBox[{{3.2472218051080866`, 0.9258865286901647}, {
          2.7202321831647005`, 1.0105629956020095`}}], 
         LineBox[{{3.2472218051080866`, 0.9258865286901647}, {
          3.2004696454475035`, 1.2176020841638862`}}], 
         LineBox[{{3.2472218051080866`, 0.9258865286901647}, {
          3.059744454555908, 0.8537432603013221}}], 
         BezierCurveBox[{{1.8215440022992273`, 0.5058489342076186}, {
          1.915575374354723, 0.4838956172973235}, {2.2075895290272496`, 
          0.6807202384681099}, {2.499603683699776, 0.8775448596388963}, {
          2.7202321831647005`, 1.0105629956020095`}},
          SplineDegree->2], 
         LineBox[{{1.8215440022992273`, 0.5058489342076186}, {
          1.6866370832522288`, 0.1533628744041755}}], 
         LineBox[{{1.8215440022992273`, 0.5058489342076186}, {
          1.9077417468521276`, 0.03805643216948473}}], 
         LineBox[{{2.7202321831647005`, 1.0105629956020095`}, {
          3.2004696454475035`, 1.2176020841638862`}}], 
         LineBox[{{2.7202321831647005`, 1.0105629956020095`}, {
          3.059744454555908, 0.8537432603013221}}], 
         BezierCurveBox[{{2.7202321831647005`, 1.0105629956020095`}, {
          2.581000398047485, 1.230505490575799}, {2.3285978557998672`, 
          1.5027212306498179`}, {2.0761953135522493`, 1.7749369707238367`}, {
          1.8739174069756122`, 2.26060389763302}},
          SplineDegree->2], 
         BezierCurveBox[{{2.7202321831647005`, 1.0105629956020095`}, {
          2.499603683699776, 0.8775448596388963}, {2.2075895290272496`, 
          0.6807202384681099}, {1.915575374354723, 0.4838956172973235}, {
          1.6866370832522288`, 0.1533628744041755}},
          SplineDegree->2], 
         BezierCurveBox[{{2.7202321831647005`, 1.0105629956020095`}, {
          2.499603683699776, 0.8775448596388963}, {2.2075895290272496`, 
          0.6807202384681099}, {1.915575374354723, 0.4838956172973235}, {
          1.9077417468521276`, 0.03805643216948473}},
          SplineDegree->2], 
         LineBox[{{3.2004696454475035`, 1.2176020841638862`}, {
          3.059744454555908, 0.8537432603013221}}], 
         LineBox[{{1.8739174069756122`, 2.26060389763302}, {
          1.6085528962714817`, 2.0501084689073714`}}]}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], {
          {Hue[0, 1, 0.8], EdgeForm[{Hue[0, 1, 0.8], Opacity[1]}], 
           DiskBox[{1.3206167189859668, 0.}, 0.0319865566757864]}, 
          InsetBox["\<\"ADA\"\>", 
           Offset[{2, 2}, {1.3526032756617532, 0.0319865566757864}], 
           ImageScaled[{0, 0}],
           BaseStyle->"Graphics"]}, {
          {Hue[0.14, 1, 0.9], EdgeForm[{Hue[0.14, 1, 0.9], Opacity[1]}], 
           DiskBox[{2.910593930384973, 1.1807136228224706}, 
            0.0319865566757864]}, 
          InsetBox["\<\"BNB\"\>", 
           Offset[{2, 2}, {2.9425804870607593, 1.212700179498257}], 
           ImageScaled[{0, 0}],
           BaseStyle->"Graphics"]}, {
          {Hue[0, 1, 0.8], EdgeForm[{Hue[0, 1, 0.8], Opacity[1]}], 
           DiskBox[{1.389181190999033, 0.510797881830844}, 
            0.0319865566757864]}, 
          InsetBox["\<\"ETC\"\>", 
           Offset[{2, 2}, {1.4211677476748195, 0.5427844385066304}], 
           ImageScaled[{0, 0}],
           BaseStyle->"Graphics"]}, {
          {Hue[0, 1, 0.8], EdgeForm[{Hue[0, 1, 0.8], Opacity[1]}], 
           DiskBox[{1.5206125063848803, 0.29132645609627783}, 
            0.0319865566757864]}, 
          InsetBox["\<\"LTC\"\>", 
           Offset[{2, 2}, {1.5525990630606668, 0.32331301277206426}], 
           ImageScaled[{0, 0}],
           BaseStyle->"Graphics"]}, {
          {Hue[0.8, 0.6, 0.8], EdgeForm[{Hue[0.8, 0.6, 0.8], Opacity[1]}], 
           DiskBox[{0.2994566276308661, 0.705894374470663}, 
            0.0319865566757864]}, 
          InsetBox["\<\"TRX\"\>", 
           Offset[{2, 2}, {0.33144318430665254, 0.7378809311464495}], 
           ImageScaled[{0, 0}],
           BaseStyle->"Graphics"]}, {
          {Hue[0.07, 1, 1], EdgeForm[{Hue[0.07, 1, 1], Opacity[1]}], 
           DiskBox[{1.1602247827284098, 2.2403728134856262}, 
            0.0319865566757864]}, 
          InsetBox["\<\"BCH\"\>", 
           Offset[{2, 2}, {1.1922113394041962, 2.2723593701614124}], 
           ImageScaled[{0, 0}],
           BaseStyle->"Graphics"]}, {
          {Hue[0.07, 1, 1], EdgeForm[{Hue[0.07, 1, 1], Opacity[1]}], 
           DiskBox[{1.798730453469141, 1.9404271173802727}, 
            0.0319865566757864]}, 
          InsetBox["\<\"EOS\"\>", 
           Offset[{2, 2}, {1.8307170101449275, 1.9724136740560592}], 
           ImageScaled[{0, 0}],
           BaseStyle->"Graphics"]}, {
          {Hue[0.8, 0.6, 0.8], EdgeForm[{Hue[0.8, 0.6, 0.8], Opacity[1]}], 
           DiskBox[{0.2236588118632563, 1.3084520514211837}, 
            0.0319865566757864]}, 
          InsetBox["\<\"LINK\"\>", 
           Offset[{2, 2}, {0.25564536853904274, 1.3404386080969701}], 
           ImageScaled[{0, 0}],
           BaseStyle->"Graphics"]}, {
          {Hue[0.07, 1, 1], EdgeForm[{Hue[0.07, 1, 1], Opacity[1]}], 
           DiskBox[{1.3734830580830864, 2.1454074345830803}, 
            0.0319865566757864]}, 
          InsetBox["\<\"MATIC\"\>", 
           Offset[{2, 2}, {1.4054696147588728, 2.1773939912588665}], 
           ImageScaled[{0, 0}],
           BaseStyle->"Graphics"]}, {
          {Hue[0.8, 0.6, 0.8], EdgeForm[{Hue[0.8, 0.6, 0.8], Opacity[1]}], 
           DiskBox[{0.23423663399494488, 1.2042525906575028}, 
            0.0319865566757864]}, 
          InsetBox["\<\"VET\"\>", 
           Offset[{2, 2}, {0.2662231906707313, 1.2362391473332892}], 
           ImageScaled[{0, 0}],
           BaseStyle->"Graphics"]}, {
          {Hue[0.14, 1, 0.9], EdgeForm[{Hue[0.14, 1, 0.9], Opacity[1]}], 
           DiskBox[{3.2472218051080866, 0.9258865286901647}, 
            0.0319865566757864]}, 
          InsetBox["\<\"DOGE\"\>", 
           Offset[{2, 2}, {3.2792083617838728, 0.9578730853659512}], 
           ImageScaled[{0, 0}],
           BaseStyle->"Graphics"]}, {
          {Hue[0, 1, 0.8], EdgeForm[{Hue[0, 1, 0.8], Opacity[1]}], 
           DiskBox[{1.8215440022992273, 0.5058489342076186}, 
            0.0319865566757864]}, 
          InsetBox["\<\"XLM\"\>", 
           Offset[{2, 2}, {1.8535305589750137, 0.537835490883405}], 
           ImageScaled[{0, 0}],
           BaseStyle->"Graphics"]}, {
          {Hue[0.14, 1, 0.9], EdgeForm[{Hue[0.14, 1, 0.9], Opacity[1]}], 
           DiskBox[{2.7202321831647005, 1.0105629956020095}, 
            0.0319865566757864]}, 
          InsetBox["\<\"XMR\"\>", 
           Offset[{2, 2}, {2.7522187398404867, 1.0425495522777959}], 
           ImageScaled[{0, 0}],
           BaseStyle->"Graphics"]}, {
          {Hue[0.14, 1, 0.9], EdgeForm[{Hue[0.14, 1, 0.9], Opacity[1]}], 
           DiskBox[{3.2004696454475035, 1.2176020841638862}, 
            0.0319865566757864]}, 
          InsetBox["\<\"XRP\"\>", 
           Offset[{2, 2}, {3.2324562021232897, 1.2495886408396726}], 
           ImageScaled[{0, 0}],
           BaseStyle->"Graphics"]}, {
          {Hue[0.8, 0.6, 0.8], EdgeForm[{Hue[0.8, 0.6, 0.8], Opacity[1]}], 
           DiskBox[{0.07225565223285191, 0.7242968736931533}, 
            0.0319865566757864]}, 
          InsetBox["\<\"BTC\"\>", 
           Offset[{2, 2}, {0.1042422089086383, 0.7562834303689397}], 
           ImageScaled[{0, 0}],
           BaseStyle->"Graphics"]}, {
          {Hue[0.14, 1, 0.9], EdgeForm[{Hue[0.14, 1, 0.9], Opacity[1]}], 
           DiskBox[{3.059744454555908, 0.8537432603013221}, 
            0.0319865566757864]}, 
          InsetBox["\<\"HEX\"\>", 
           Offset[{2, 2}, {3.091731011231694, 0.8857298169771085}], 
           ImageScaled[{0, 0}],
           BaseStyle->"Graphics"]}, {
          {Hue[0.07, 1, 1], EdgeForm[{Hue[0.07, 1, 1], Opacity[1]}], 
           DiskBox[{1.8739174069756122, 2.26060389763302}, 
            0.0319865566757864]}, 
          InsetBox["\<\"FIL\"\>", 
           Offset[{2, 2}, {1.9059039636513986, 2.2925904543088063}], 
           ImageScaled[{0, 0}],
           BaseStyle->"Graphics"]}, {
          {Hue[0.07, 1, 1], EdgeForm[{Hue[0.07, 1, 1], Opacity[1]}], 
           DiskBox[{1.6085528962714817, 2.0501084689073714}, 
            0.0319865566757864]}, 
          InsetBox["\<\"THETA\"\>", 
           Offset[{2, 2}, {1.640539452947268, 2.0820950255831576}], 
           ImageScaled[{0, 0}],
           BaseStyle->"Graphics"]}, {
          {Hue[0, 1, 0.8], EdgeForm[{Hue[0, 1, 0.8], Opacity[1]}], 
           DiskBox[{1.6866370832522288, 0.1533628744041755}, 
            0.0319865566757864]}, 
          InsetBox["\<\"USDC\"\>", 
           Offset[{2, 2}, {1.7186236399280153, 0.1853494310799619}], 
           ImageScaled[{0, 0}],
           BaseStyle->"Graphics"]}, {
          {Hue[0, 1, 0.8], EdgeForm[{Hue[0, 1, 0.8], Opacity[1]}], 
           DiskBox[{1.9077417468521276, 0.03805643216948473}, 
            0.0319865566757864]}, 
          InsetBox["\<\"ETH\"\>", 
           Offset[{2, 2}, {1.939728303527914, 0.07004298884527113}], 
           ImageScaled[{0, 0}],
           BaseStyle->"Graphics"]}, {
          {Hue[0.8, 0.6, 0.8], EdgeForm[{Hue[0.8, 0.6, 0.8], Opacity[1]}], 
           DiskBox[{0., 1.0427408283912227}, 0.0319865566757864]}, 
          InsetBox["\<\"USDT\"\>", 
           Offset[{2, 2}, {0.0319865566757864, 1.0747273850670092}], 
           ImageScaled[{0, 0}],
           BaseStyle->"Graphics"]}}}},
      FormatType->TraditionalForm,
      FrameTicks->None,
      ImageSize->800]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxBackground->{"Columns" -> {{
        GrayLevel[1]}}},
   GridBoxDividers->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.8908587419191427`*^9, 3.89085961620751*^9},
 CellLabel->"Out[293]=",
 CellID->530993538,ExpressionUUID->"1f537c0c-b447-427e-93c3-9e359d9c0c15"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Here are the corresponding time series plots for each cluster:\
\>", "Text",
 CellChangeTimes->{{3.833306375621166*^9, 3.833306397300049*^9}},
 CellID->1187710595,ExpressionUUID->"eb0dd866-2ae3-4e29-ab35-b2e6a1923b19"],

Cell[BoxData[
 RowBox[{
  RowBox[{"aClusterPlots", "=", "\[IndentingNewLine]", 
   RowBox[{"Association", "@", 
    RowBox[{"Map", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", "prop", "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"prop", "->", 
         RowBox[{"Map", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"DateListPlot", "[", 
             RowBox[{"Log10", "/@", 
              RowBox[{"CryptocurrencyData", "[", 
               RowBox[{"#", ",", "prop", ",", "dateRange"}], "]"}]}], "]"}], 
            "&"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"FindGraphCommunities", "[", 
             RowBox[{"aNNGraphs", "[", "prop", "]"}], "]"}], "/.", 
            RowBox[{"aNNGraphsVertexRules", "[", "prop", "]"}]}]}], "]"}]}]}],
        "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Keys", "[", "aNNGraphs", "]"}]}], "\[IndentingNewLine]", 
     "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.833305677959524*^9, 3.833305731970826*^9}, 
   3.8333061819430313`*^9, {3.83330629987523*^9, 3.833306354224077*^9}, {
   3.833306432007678*^9, 3.8333064985176983`*^9}, {3.8333065333714523`*^9, 
   3.833306533594942*^9}, 3.890858685360985*^9},
 CellLabel->"In[294]:=",
 CellID->991471300,ExpressionUUID->"47f7ef85-fd48-45fb-8a26-4f49ebd24f55"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<GridTableForm\>\"", "]"}], "[", 
  RowBox[{
   RowBox[{"List", "@@@", 
    RowBox[{"Normal", "[", "aClusterPlots", "]"}]}], ",", 
   RowBox[{"TableHeadings", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Property\>\"", ",", "\"\<Cluster plots\>\""}], "}"}]}], ",", 
   RowBox[{"Background", "\[Rule]", "White"}], ",", 
   RowBox[{"Dividers", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.833306258048826*^9, 3.833306278499666*^9}, 
   3.833306398832136*^9, {3.833306507180101*^9, 3.8333065171925287`*^9}},
 CellLabel->"In[295]:=",
 CellID->1332522027,ExpressionUUID->"10426e35-83b7-49c8-bf7d-7927415ab630"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"#\"\>",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["\<\"Property\"\>",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["\<\"Cluster plots\"\>",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]]},
    {"1", "\<\"Open\"\>", 
     RowBox[{"{", 
      RowBox[{
       TemplateBox[{
         GraphicsBox[{{}, {{{}, {}, {
              Hue[0.67, 0.6, 0.6], 
              Directive[
               PointSize[0.007333333333333334], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwt1A9Qk3Ucx/EpigbIH/+MvMOAAVFMYGSSCBlPEA6ktkRWBh1/Lu4gUqlb
XBjUzuiaRTg4CA2CmUbHjhoBHhx4MFCSptAU0EMgnLI887EB8h+CPvy+csdx
L37P7tl73+8ez9RjB9PWCgSCd/C7+hc/puR/eW7FTzx2qFwQvvqPb2DRSY+/
3vuVWXIBVh77u8xpiDl5FD6zfOPh0yPMmqesPBf442su/4wyG3bBg7O7P/AU
rFn1+LuwQ0lt2SW63kMND+zvnVo3wyyvh6c1Eanp69j1qmG4tbTyYaYdc53t
OM8Vn75wX7zIrr8jgVXblOLnhezcOQGeLXHQF1rZefiXsNSSpPGg+2fp4fTv
1Y2KLczaQfieXWDVb9uYTTYTPJei8f3q4g5mQQCsl3d5hXowS96GAzT6mTc3
MCefgHeuTTqxZ4r6a2HJG3GWF13YueEm/OlC3t6fH7PzccEkz9UHxERVmKhf
DHc4KYqll6k/HvZSFh6/TlZ9Dhdafm+Mb2Kuq4Gf+ToiK7GN+vtgWV/1/h9u
MDsvwy83xOxw2sjuH/7cY54LHjsw30nzyjoI+1m9jxjp89DmwndD+g8Xbab+
ari0Q51yht6/4Dqc49Mo4qTUvwhXXjWHjh6gfp8p3M8hJND/JWaNDO6Pi9S9
6k39ObC4e9Qvd4n6z8F9c8uvuK9Qfy+cvSjv8aN5yOfg8kpd+YA9zV80zXMR
eWmOBbQfdbHwyVPBI7fXs/M72TCnFBl9p6n/LBxW1RByqJfmfxW2zHeWBHVS
/zT8QulbR7XtzFr3GZ671db2vt7AbIqGk7b6O6+vp/1Xwn+IzPYFatr/Stif
F3YLFbT/3bDaN8M2PpXmPwk3u8lcLNm0/26zuH+Gwy9VNdQfBV8Jy99wrZ/6
P4St52MOmydp/uWw7UZJzVgrzb8LlkYFpRdRT50Vbo6WakYcqX/7HM/5Vhur
n6XXO0fC6oqPE3bRPMOPwpcNgqBvH1H/abhiJXOzgvZX2wm3iKw5u/+kfh6O
/CynYaeZ+l3nee7are26n2jfJBxctqXR7Ysr1J8JryR3+Zztov5S+EG+TVjw
eepvhyNrE0PnnvQ/gFO4IX1sC/VvXeC5jwoH51U66t8HpwtjW1+n+ajS4SyV
clMevb+6Ynhi73BGYjPt/0XYzlvRp7hN/ffhaV2eTDNA83dZxL64nhvOvkn9
oXDEJ7aaRz00/zR4X1NNlSN930yn4KXvRD3u1CtogW2CZGsURuofg42mTR35
T55/jkvY52ChLPce9e+B28VJ9Ufo8zOkwuFxxsxLE9RfABclut6VLlB/E6zt
0nVE0/dDboaPp3m5JdB8VPb/4XmmGRJ64vnyPzCYO0Y=
               "]]}, {
              Hue[0.9060679774997897, 0.6, 0.6], 
              Directive[
               PointSize[0.007333333333333334], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl0wtMU2cUwPEbEJl1Y9CMdEzH6hKsDHVlTOQh0ovoCjN4142wMQmFUYtj
SDXDRYXBUNiIyqoLSmC4KqIoDcVHJQMfDcZJ6GxLMGVMShkpKu4KbWl5FFh3
+M5Nmptf097kf8/51uQWSWQ+FEVlwmfpDpdJOsHS+TcfKPjTrsSlL46DN3eH
3VcFuZcs1IKNB3faey8QS61gb+Qpb30BsXLFJEsX58QNGJqJdVHgdQdcbeIO
YnsWOKyl5ml1LDH/J7BQSVVtKyJmroP1jKql5xBx+RA4hvF3XTpM3L7cztKi
71IuxOURjwjB+hVFe734/MAvwYUcR6h1O7GoEvymH/31+VxihQb8vcAS5T5L
rBoEr/5MZn6INvk6WPrHBp7VM0BMbQTzlLskO/ynSf/n4OGpBlGKDvsrwBpX
1DJnJfarwTVvr+naMIj9ZnCwvK/DrxX7KSdL71Xs8xaEYn8EOLV01eOBcOxP
Bx/V+vvqGOwvA0t5gXfPRmD/FXCJI6/IthL7+8Fl3dyJ7Djs/w987+VoQvw5
7F83xdJzv/3i5H6E/RJw8G5LhKAR+0vAd49dlRxpw/5L4LaI2bJunC/VB35S
aBFy8H0I58HJmzMjN3Vif5iLpesqq8cuqrB/Fzg1WhuQdAz7D4FbjfxwuxD7
m8BPb43ecazFfgO4WD5vbkvF/llwfdxCbFoS9r/rZulM65wpF/evfSf4Ipsj
fS8R+w+CvxjMruK9j/3nwcWdHM3HDrK/Ij34lcvjZo+eWOEGt/hRd3i3iVXv
TLN0QmzGiYzrxKYUcPMyzchcNe7/t+DDOf1BNzYQC8+BH90Y2hN5a4r094AN
k10H1BZipRMcYpN6ZgzEutUzLB37r/Z1Th75v30HmDk+uN5fQ8zfDxa7BM2e
Z8RMA7jLJpAPi4jLH4B1TT0BFilx+yRYtv6Uoeol8UjILEvTAu3DXi72J4O3
yip6rkXh/PeB0z61Pnneiv11YL/7jj5KgPPvBncEZ2SVD2A/C1584bvbxsP5
8+ZYmm+0+qhHsZ8GG01b1OJ+YmkBOPotceHCJLGyFlwT/auz9iax7h5YtL1u
un4E+8fBexjumUUOzv8ND5z/tC0x8nHs3wr+Pbn69N847/J88KvRXUeGEnD+
p8FMum5RPoP9t8E1wlrX2GvY/wz82GP7YeMH2B80z9JqcXzIC7QiHnytUd+Y
hL9XycBjTXnZV+ax/2dwesPzwF47zr8TbIwZKy32wf23gYcS5d+E4/5KAxZY
+g/B8KYSCe5/DNj1KMQ2UYr7nwteNftn1nI8j/YT4ID93KM8NL8D/FfJ1dAP
8bww/4DzT5o/2abE/pWLLG2t8DKXv3In/g9p+pkm
               "]]}, {
              Hue[0.1421359549995791, 0.6, 0.6], 
              Directive[
               PointSize[0.007333333333333334], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1A1Q03Ucx/EJhRCTZgeXEg6cgbsKbmgMggX88yHhVBYK55mMCXGBCAxh
gdkxHqKckRugoo4QH9YycQwOND1ocwelxrNT86FzCDmZ/wEboBgCffl9d7fb
vfZ47/v8f1uZkhOf5sRgMHbCfeERbn3iUZqyVmobKhrnohae+AFceot75koP
Ma8VPJBzIHfP1vkFix+BozvV2yY4xEq3MZp6FuxVyvYiNqwFL5KKsrrXE48n
gat+faFoYxL7HQTnFHmGu4YRC5vBHw89nNnmSVz8EJzN/PZyayCxzmWcpjxa
DF1aAbGZB/b8x014Wk3M+hzsbi48kpxEHF0Ojn1j2lFRQyxpBC/PCyqzODOi
wfX3wLkdn0YlPCWv9znbaWqp17+DsfPEjCCwKCs/LNBCzNsB7vv7w+2vGbC/
FOwddi+G/xv2N4AnyieVH7iS7zfcAX93fzjLbsd+hoOmrgXNLSnLwv73wWt0
imMucuxPADvV2HwGT2C/DGy8IX2cmIf958HVnZrUizux/xbYXyxvUjVh/xxY
PqrYIl1Gfj+aO0FTo1bvyAgb9seDHc13tmudsP8b8LBGaRW+wv6fwaZLFtOA
Cfv7wd/fv2bPvIT9M+BPTvVaNBXY7z9JUzY++0LvL9gfB1beXh36pA733w9e
d2GzIDQV+8+CV92oK6ktw/4e8JXBH5dUnsf+abBiT0u6vBr7OVML1wd3mcdh
7N8MTm7rKAy9i/1fgZ+OSBY14edZp8EC7t64rXG4/1/gDKHpna/52D8F5pw0
rqhaR1zv+5ym0jWra6ws7I8B5yW7KGwv8frPB9fMqXRjeB54deAvd988NcQl
Fl8HZ8gahF80zZJ+B/gPfrvfu0XEBp8XNDV7vP+t677k/eMbwV0FDZypE8R+
ueDe4NQton5ioQrszdzVeo5DXNwJvn0xnv0siVg3Bp6qLSp/NEJsXj5NU1J2
QZeyhZi1HlzWfDSmfYA4OhssuZmaYokjlhwHB+ap9QVa4nojOJEfkr/7Teyn
weGqvg0f4b6Mt1/C+ddXNCajeRS4/ZD/UDXuKc4E/5Sh8+s4iPsfBdvuCt47
HIL768Hdi9voA2tx/xGwuy+tMotwf8//4LzXmvYHrMH9I8GaEnauKBL3TwdH
SB2v7yvE/avAiW7MZmcZ7t8Gtpsyz5WgWRaw+ki4NqQA9186Q1MBu5jlarQk
Asze+KCoOxH3TwPzJ2OfuH+G/QpwsEzeswL/rxhXwVdjfIyT+DpvGJwZcHLv
GbwexR6v4LybH8j0+P+iDAOnbTBaN2VjfwrY5axg+vkx7K8Aj0bJcwx67L8M
Xvn7Yzn1J/YPghNm1Ytj8XwWu8/SVKXrjn3J1vmo/wE8UZWj
               "]]}, {
              Hue[0.37820393249936934`, 0.6, 0.6], 
              Directive[
               PointSize[0.007333333333333334], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJxV1H1MU1cYwOHONkxRR5uUAZMFCiXIGFixI2xk2msoQoNQVBRFZlFKUBzW
MD7qYBYQHDBHRZ0wEwGHjkWcxQQKiIJUhl/TThY7tiI0G9aFu3Fb7IrYwd6e
9681uWme257T/O45p4K9h7Yol7BYrF1wud/hZVT8TVMPt14MDamxDbhv1IFv
b0sXX8olFnW57VnLmmQTKybAPMYz9FkIsXbZDE0FGNfdEI4zbg+uA0s14rlh
EzGTCY696Z04EU2+H/g5WPiLJkHLIpZfAzsfG64McYg1ZnDc/AavKAcZr/Ng
aMrfwTlyz0o8KQLrclzbvfTE3AxwZ/3J4SEzsaQK3K1WGbukxKqrYMGeKu3W
POKWMfD2y9OJ/HZiI9tGU33ZSwobyolZkeCRUxG6lM3EonTw9VtZenkDsaIC
7OSkuxpvE2s7wKs+qFooqMH+J2Dxhv0icQ/2s+wwXtW1K+Mg9oeDm+6+X64s
xP40sDKFKUnbif1HwaaPivVTmcS678A5A7qN0+jJUXD2FMfkISHmLrjnq7Zb
dHexf/UsTd3yf3vlbAD5XLUFLCg+vhj/HPtLwbMffh8zYsT+S2AqMYH3qxP7
fwL3ppU1Tj3F/ldg/uO89j2+uP4hL2gq6pQjlfHG9U8Bt+1YSnFFxINq8MjX
i7XdJcTMN+DgmeKK4U+x/yH4zGW2rG039s+BDxh8a+bzsT/IQVMvTl8/zC/F
/iSwS5Kp7s7C/iIwta/gh+Ry7G8FR5xIsPGeEEvug2vtKr2vp530O8DlA1fb
+jnELQH/wPMN+zI1C21MBK/QvVyjfpOY9QmYHT/Os2USi86DraHNR6nfiRV3
wM8tTRe+tRJr7WBV0jt3jo8SD/o7aerKhIten0XMxIOF19hjs5HEgYed//t9
+Tnw4lrL2OkyYs0wuCQu/oQymlg3A451HNksM2O/3xxNvest6/gZ5+PGgcfD
OoVpOJ8kHxxZqap0bcP+RvD9c71nmVEyvmUI/OC1G769PthPg+ULSR4tI3j+
fV7SlCF1vif5deynwGUdPwYn4/NR5IHHVmQfPLAS+8+ApaU947Io7B8A9z27
YDavwv4/weG2SvFXDK4/f56mPs4XK/fzsH892BCeL80w4vrnguv3RRTws3H9
G8DcnUV1u1uxvx/cV7g0l78Jz78VvMm73eKXjvuf94qmgqpPFmuO4fmPBbc9
kix3+GC/Ehx2sSjw0A5iYz04R15Q4YX7j9UH/qz5achbUvz/+wN8zyBojBHi
/n/DRVN1GVJL8Frc/zHgFL+g6uSNuP/3gvMWzy4z/YXn/wtw/wPZb02jxIF6
cPSxJhHziFhuAatvWk3TncSa5f/SVIfgvdY1zczAfw2RuE4=
               "]]}, {
              Hue[0.6142719099991583, 0.6, 0.6], 
              Directive[
               PointSize[0.007333333333333334], 
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1A1Qk3UcwPEdg4kJMaxIUo/hDQQRWBgQRwFPRyp3KgsPwYKYCB2+xFjx
rsVEYySWm7zE28EAAVEm42XiGB4DxfGShAEpJ7GldEI9B+NtaED1+//c3W73
2bPn//y//z3/xzFWGBZvxmAwPoU3+YTXsGCWpjpLvK2Y4rIu8kUeeBfzkHxS
VEjMU4E3MqNmAywkgWCBHpypyyrxaROR49KNczT11sOxfV6seGLtHjC7pmpw
UhRLbIwGf32yzVJqWUDMyQXz2ubXElUJxPwWsKb/nID1SwMZXzwB9j2y6/sD
4UpiJctIU3M/Z1ly1hTEBh5Y9bQ0JGBPCzH7M/BgHHvepqKaOOg7MFM34MQ7
XU+c1AQ+nHn8k4zeVmL5ONiYs4/Zm4jnDzPnaWpe7Gg8y79NzPAAv+dg42k+
jeZFguPsqivLG9uwPxs8ztd+UBiD40kbwe7aDadV5zqItb+BH/l5/xqSe4fY
yFigqallTfeI4RYxxw3ckF2uHrVuJ+aHg00+ssyiv/F64iywPl9z3/ceHlc2
gJvnLdO3muH1DCPg1apvK7wL1Nj/L/jkwS0vU5Rd2O+ySFNmkwnOkbJu7A8D
m9KGhvozddh/FjzSmd7BtrqP/XXgmC/qPQW6Xux/COa61LJSCtG8VXAr00R7
buvBfqclmjq+6UPP/Hy0NBRcu6ho363XYn8G+CO9d3q0H66HsQbcM+nhJlNi
H2cIfEzOc6/7UYP9L8D9/QvjT85jr3jHMk1xPq9y4I9ir/IAeOL2dnqsHs83
pIL/bA9ed5fierKrwL5JgxKXgGbsHwSPHU5ekuZcx/5lcOcl+1v2JY3Y72Ci
qWKbC0ny8zewPwTM5Nbd9GA0YX8y+OMHJyYyLhRhfwU49Z2AzbL8M9jfB55x
Eh71yi7B/gXwQNyKflpRhv3bVmhKcjfiaa0r3r/GveDIyrtefQrs4YjAFtFR
eUei8H7il4FVebJn/3lcw/5esC1PQ1n54XyUc+BYZ4PPtAR7DfYvYD99+U3q
D6XYyw4GPzGpLRQxr/oTwbsnGGsR1nXYXwz2P2W+X8LF+ch7wIfCEqzt3sX9
MUyDdV4z1/fn4fow3n5JU0dlpXf6lFexnwJ/dfGE7ZRRjv2nwI2BEY6V4Ti+
tBCcnJvMCowtwP4u8KPQsNacBtyPxhnwsObiT459uL85b/5DU1uzzghDm2qw
PwDMfT4zl7nh1f5PAFfcm3qsv4rzU14By1K71IJ0nI+hE1xZHGTeW4BmPwc3
bn+88w0Tzj/IdpWmZm1Cb4r88XmR5A8WOr5muXMVx5PHk+Ou1tyYFpz/8GVw
yhamRKiqxf4O8I78y0VLMjRvChx58Eq4WxrOT/D6Gk2Vq12qR1dwPOn74Gcl
Ncf0i/h7bSw4h/tAccMe52O8BE7rSnEdaMb157SDxXbrNjo1/l/8P8A659zf
ed34PBJvWqcp571lfwWrmwL/B1jbd84=
               "]]}, {
              Hue[0.8503398874989481, 0.6, 0.6], 
              Directive[
               PointSize[0.007333333333333334], 
               RGBColor[0.772079, 0.431554, 0.102387], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1AtUU3UcwPEl4GmBgfESD+QwEXxgIPIwQrhCeECOQ5CcOYIGKhxQwXA9
YAnhjEeyCWwwARsNlDcLeUMxKUKo2JROigmsDuHhdOOxgaAg9vv/2Dk7O5/d
/3187/3/rz3vfNipdQwG4wP4kl/4aKKnaWrRo3+1y6uxh/yRC2a5b4gN9K4m
dmkBNzS9HdB94KwvOHoc7G7Q8WeGCZ9YzJyhqf6wIfaguoxY5QZWGLW/uyBG
z0aCx178w/UsiiTHY2WBeWXepcZKCdke2gQ2GbXgMAUy4vTH4Irwk7z64Spi
5fpZmip0O27nevYbYq0LuLbVUL3ulVvEZifB3/s70oqqVGI/IbgpIm3h7p0r
xEmN4EQL/chHy+XE8hGww6j3hdqgUmKNwRxN+Wqm21hDeD7GHjC/SJpib4p2
4YCTUrPnU/gV2P8l+IdUKkHaegP768CKhh0hr83dxv4/wF+oO42sOPXYz9DR
VIfK0stDUEDM2gX2+S8mwHVurT8CvG1FPjctkWP/JXDD+6xPO5Lx+pTVYKtJ
ynZ/NO6vHQbv/b2HuYmN481WwXf4T35Kr1div5OeplaN3PWhPrXYHwbmTH1u
7uHcgv1p4GODJaoYy2bsv0lc4nRklxavn3EP3GF3WCZd6sL+ZTDTWhL1sWM7
9jvM01TmCLfJ0QfHi9lg2aGMvPCetf7PwNklY3J/kybsV4Dt2LfZVY/wfKwh
8Pb4g95Pf2vF/iXwc9GI3D0Sx6dvXaCpo8YMQUtODfaHgNcX8AoTe/H4Wj64
T21jO8D5DvvLwVFtftq3jhRh/y/gc6LRlQldBvYvgO1nNgRlXeSR+Sff8pSm
gpkNiUbjAuwPAos3b/WsVR/H/hRwXPWZuJmHBTj/b4C5H5aXTzrVEkffBQe4
yu736SuIxTpw4zuN/X6bK4lVtos0tZOpb16KSieeDQSPW/7M3lGG85GVDJZk
1zzqdcL5E1oCNj36xqBPy0Xs7wM/2DfaL92Uif0z4NN28Uljrgrst1miqbpJ
6/5DptewPwAc1GlxPeFvXG9+58DsLOPk2AufYH8xeIrbce/6dik+/15wRFqr
dvq8M7k+DQ12Oi0N1yThfGRYP6Opw9+uphm8xOtxocB7HGLNg5VcfP4JYEGE
cED0EO+vWAJ2Fr7M1CxmY38POOZE7lfdeULsnwLn7MwTXiouxH6L5/C8Trx6
80wz7h96AKy4ppN18/OxPw4cUbicr76K61WZD7a7X72lcgS3a7vBVv5XnS/P
YY/ZE3BcseqWaBjvj9/GZXg++x8EPxtFJ3mDdb9KrbPGcL3IT4G1VLBgdzO+
bzQi8JL5vyGVB9GMTvA+zo9Sz1m8Hy4TYFnp3vhja++P6NdXaOq9nIYuagLX
p9gLnP7m40CZIY5X8cBcG65kQIPjZ78GJ5jnptXsxvnMagO76ecldSG4PkP/
Ape3zxdwDOuw3/gFTQ1cFukGyqp8/wcuJHej
               "]]}, {
              Hue[0.08640786499873876, 0.6, 0.6], 
              Directive[
               PointSize[0.007333333333333334], 
               RGBColor[0.363898, 0.618501, 0.782349], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJxV1HtMU1ccB/BSTLE8i1WYjEepqRGIWDATmCn28lhAKC0EGZvMVORZocAy
JBhlpY4NQ41kMG101hISMpeOdQ8DOAYMpsIQQcvMCEwqsodypbTQIVJxv9/x
rzZpmk/Pued3v+d37g3Nr8gqZDIYjPfhi7/wmZAv0lS0e6RI+LZ/P/7RBL73
7g5RAm85Hii8Dh7wuHnVbucdAMtnwaI9VVHmDh+c38y20FSzrZvLOr8FPbAX
fLJyP2UY56KXPgCfc5sZCTmz0QfmNYKvRavSmkqf4vqy78EftnMaDsTM4bhq
Btx3ISBtocCMNrKWaGry5zxb5wob65uFYNParoILXBc05zBYsZhZJOU9xvXE
DeDY+27u8tWH6Mpvwc/Kkk3McVecr58Cf1qjsMSz3sD7m3C10pSuo0q+LeMR
1mNEgpc88+5sVrjjuDAX7JWVWJ0WY8NxuRqsngpQ9GSTvM0GsKcmO7OOPYn1
Bh6AFV4zGbem/0IvMWw0deRwuIu41B3r8yLAqT4WrTBmkOQ/BL7lEDha2PMk
/8fghLesD3LU3jjfeA1sEKVMBqle5zeB5bVDUjfvDbyes2Fzqi/etUxT4ixl
PC0i+1+ZBWYdPPtlpOBPXF9/atlpvyc6wG/GfrWTl2El+e+BU5Jyjn2t8cB6
wnWwt6OnaXobi/RfsAKWDRX/ofBFN0vBVFC5elZC+jFQC84NGdSlq9ZI/vYV
p/7x7oJfnLnBulPtiZY9BxeFp//uGsNEq/h22C/rPr/6Rhe8f2M6eH5hi05q
dOB65hPgUKZtNnM7n/S/ze6URzwK9v+1cqTHg9SvtON6yXHedokVrQ/5D/p/
+8ntn+JWSf5UsDbIr25n9yZcj/ER+KKgLfubRl/Sfx244G+hPFhwBa+XD4N7
z0W21O6OJP23gQ/1JYeZOjTk/Aeuwv5Xj41ZtRXk/L8DDh5rfc9/LBbNqwJH
mUra93URyy6DtdJMY2siqa+6uerUT6MF/OqxxnVKxcb55u3PaapGxDhyqpCH
5iSBu/J8144V20l+Jbht+LT14CUJ6b8WXDreM6zcmoTWD4JFC9crpEFx5PzT
4HCWIEiSGEOef/81mqoPDDP8UhRM8lNgycqP5t86yftBfhysOisY1d0NJPm/
ANf6Ryh6ueEkf7/z/KUn4IiRBsMz2yaSf+sLmlLmK+dO8JbxfmXx4PqyoZDR
AD6Oq0rAwfV7A757uIP0/3NwQfknWf1scr25F3y02THNTxOQ/P+AI6ovM/nl
IWix7zpNLRrmTl91fX3+94OjDT6cz46TfuoLwRcXzDU5dWS9ifPglPWyyd49
5Hln3ACrq9rpqEteJP88+AffwFyNmLwv5N4OmvJJzQk72elG8seCj3Yxy6KS
dpP8+Q7n518Dfpn5ylbsxyL5u8AlrJZ/Q5V+pP+PwAnd942sVpJH5fGSpiyS
qOynXJf+/wGzWWHK
               "]]}, {
              Hue[0.3224758424985268, 0.6, 0.6], 
              Directive[
               PointSize[0.007333333333333334], 
               RGBColor[1, 0.75, 0], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJxV1H9Qk3UcB/DnWoA7AlF32owOAlEuT26JIzgv2AO4TlyAQDMBYUGLcqF4
7aCZujWyUyKZ7FbPBVmKP7AlA4zTioPJ6blQYRNuUXG4+QMPfAaDhmyMoA/f
j/+0u93u9Xx2z3Pv5/P5fF8p2Z8jf46iqHz4Lv3CxyqbYGmV6PqDddv93UsX
vgRHudw2WxixoAM8fNnn9747t2TZPXBDcJ5QbCDWcSdZmrtYFiz9mNgcDz5d
/WPjnTeI3XvAKRKvgVNPHHkMnLlzkBFvIc5uB3uM6mvzHt+SNcPgKLEsZaOR
uDXQzdK1x70nP7pH7BCAk4YTetZ3EYcVgM9avu0w4P1ER8GPTLn6268SV5jA
dtt3u8Nbyf9/+BOctTbR7RgltnKmWPrnkC2plS3EVBzYeWLorS+aiQXvgCVZ
nDzPELFMC7akD/p2uIl1P4HbL7T1MUXEZjvYePO9R6L9xG5qmqXjuJkME4X5
N4KbvxFe5C/D/G+Dd/XmWTqmML8azBl9kPFaMKm3XgQfY921BUJixwBY2xXq
uvwU8y+ADwZYpbeUxKLYf1j63LmqtOp+4oocsFbC1o27vCT/IfAN1TWNPQTz
nwfXcLX5OZdInbKBI9af4pdPz5L8fnD6ZluEPZfUZTEelt5w92zLThWxLgsc
niFxLiqIzSrwnKfT1zhG7G4CPz/aT7WHk+dF9oFTv25hlL2knu0Fv7jSMltq
JdZEzcD7aivUm17G/kvA5cn3RwNspO6oBG9r5zIWLuY/DS7jUBt+O4r5b4Fj
C858+qQX88+Al33ewj9kw/5HPGXpSvGAiIfzY90OHtyRMO7CflBK8Cb9970T
h4kFp8Bj9jZpD4/sg8wCLk7zjETP4PxPg++GtTEhAaRuDp9l6SH530FBGpx/
MfiIUVi2ezn2/wB4b/wvwiAXeX52A1i3+q+X2BOkrrkB5r15deGmHPs/CZ49
MmG6NIDzz/fCPoamefrjST0sHXymbOvaxt8x/z6wsUuXYkrE+WfAmxNT00e8
mL8HnJyUcWC+kNStLHhVqfN47rP8a3wsfXtS+X5sKuanwRc+q1muzcD9V4DV
zoPFzcmY3wAurRrO91fj/neD6yvkNXo8L9xj4L3S/hfyYzA/b46lWx+aSxNE
OP/J4Gx9Ma9hJeb/AFz41a5timfzXw+uWl00VRKB898Jdor5BdI4zP8YHKSk
ytV4PohW+GGfmfE1gVbs/1Zw5AqJxdWD+eX+/50n1jrwYdXVkk+e4P7/Cu6s
uzOXhvMieAh29CniNzXh/ofOw3nT8LhceR73PxEceMV/32nB/S8BR4+sWny9
Bve/Frzuw+iUKTnO/xXw9aKmzph92H8neIExsCczcf+D/2XpPX8kKRbVvu7/
ADiKx34=
               "]]}, {
              Hue[0.5585438199983166, 0.6, 0.6], 
              Directive[
               PointSize[0.007333333333333334], 
               RGBColor[0.647624, 0.37816, 0.614037], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl0wtQVFUcx/GVdsxVNiBzKNsEwkdm6A5kSpvBDaNSjPWBg1iBCzu8Aonw
QSQQDuEOygKDK+zC8pQEJYEGccLJ9YHixKuwNQzHpUUJuSwLu6wir37c/525
c+dzz5w553vmXjfZwV1yOx6PF4J7/omrO8zEMj32Wx4mNizwnX+RDdduqDF/
quMsboIT1MKX1z3hHPYQ9jD8sCj0MedcwSjLqNR3a9gpzjovWNSw91veQrt5
m7+Ex8K6FDlGbtz1BLyk8cy+7CHO0kZ4pusrXbiBc3offKPvTlj+Ym5+/UIz
y5xyEOybdudsEMOWyjHrsrWcHffD9Y9LPYdt3HzfTPjzTULPy7OcEy7CibdU
0R1znMt64ZtZpkcztP/uF8ZYxt34UZNfP/Wvhx+9z7q8R/sVB8PfNVdMVdym
/gzYcNn5zlAL9V+A/7o+0D/YQf16+KzTrWNBdH5m3jj6d8qUK45Q/zp4m4ve
detx6g+C5346vDqwlvrTYAd/z98OaDnX18Ca5WUjm7M5G3rgY7m6QlshZ8dZ
WC34Wl9E6/m+ZWGZ54t3+1YpqH8XvKLZIXmkjPq/h98OD12pOE/91bBwg0TV
Ukf9f8D/FdnlR9G4eAqOaZXU1pVS/yory8j9tfJzKuoPhAVSZ0aZRP3J8P2U
e+PiWOqvhLWWZVf1MurvhB/Itxs6E6j/Gdyu6rpfF0n9b06wzNOcjJuBMdQf
AN9tOOCz5yj1H4arQrZnjMRTfzlcE7r+mnAb9f8Oa0o26ox7qH8C3vSP0Oue
nPpdbJjfNrxSlE79n8EFAp+qNFqPlwRLImcrTQz1a+GDtnZRqoT62+DMoIlV
g/bUPw5rUgL83vGiftFTlumI8a6YjKN+f7jFyc1veTL1fwMP+5dHxEVTvwbu
nVB4pNJ+01th5Yne9OMR1D8KD70rOnk+jfpfe8YyL74ebHajHsetcLO6uDE4
lfrj4cT9cbsjEqm/EI7P+uXIvynUfx2OXPDkY3449bOwUTbywEdJ/c6TLJNj
bVNsoe9BzMDSK4P5URXUHwsXR/9dfYm+19zTcF5skH7pIeq/CuujLTsGaL/m
ITgtadJeVEz9rzxnGX6RtFqeRf0fwuEFqz954zT1R8H9a0IOLc2j/nw4os/B
xaeS+q/A3TPebiU51D8I/xi4l9+jpn6nKZb5s2AgyvUM9UvgC6/eOGc5Rf1y
OLg0b66feruV8Adr7d2P0v/E+xU27DR6t9N64gG4d4fqi/oS6n9pmmWCTKJy
K51P7mZYGpA66vEz9ctg/hp+61kaN5+EtTbT7R6yazN8aVGms/4i9ffD1qaN
1dNN1L9khmWudTbINPj//wecGExA
               "]]}, {
              Hue[0.7946117974981064, 0.6, 0.6], 
              Directive[
               PointSize[0.007333333333333334], 
               RGBColor[0.571589, 0.586483, 0.], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl0w9Qk3Ucx/Ed/wn/gCOBkxxgXFIzR9RhQd2ezihPULaOo0mzqSwNQzD/
LA+mxIg/smOz6dHg8pB1KJwJjCQd1aaWmXQ2jsW0plBQiT0gDnAGSH38fXe3
27222/M87/t+f/Fbi+RqP4FAsAnvR594OVXjPBe02Jp+pm3S/uiLWrj4ae7t
jdXMkrNwqqq3beglZtUg7NwSZPxTwWwMvctzucM+Z3kesyMFtvndW5mRxjyh
hAv+CZXVVDLHVcNFjkrJhlzmbCu8XlgS4b+JucwDX/9SdmRfInNH0ASe5yP9
G8kpzEMSOCn/vKxFxByeB58U3656fj2z9GP4cIFfx/JM5uJ2ePZocOpPEuam
G3ChWx1tjmN2+t/juWURdy4dWkr9z8ImV6/wx+XU/xZc9Y5hJi+K+svh1/Kb
67vpesbT8IU37TczRr2sfwAOuBy5q7+XeULg5bkYw/GRy1LqfwauiH681C6m
/hx4Z4NaW0I9ZYdgZU+gwEj372iFb8k6RQHj7HpD/bAtXOOK+Zk5fB5euHdB
WLeaWbpykueC3/dIztH9i+Xw1FN9OZFFzE2lcPVcsz5Ow+xsgTMjzllH6XdB
H9wQktTpXccsmYVLTKl1/1UxqxKneC6s3pHkrWY2boT12m8bxyqo/wBc2lKt
c3ZSvwVWPtEt/9DKHHcN1r07c8tbyZz9AJ636XzdNcxlCdM8J2yLfNhuYu7I
hHfcMP9xQkv9++HXC642bNZR/wl4Thw/lvYd9ffCOZbxZJuT+qfhz547P2i5
QP2i+zy3ueNJ5ZVvqH8drCzOci/xUP9e2F618NQqH/UfhxOzXtDcsdH8r8DW
g4EDjl9p/l5Y6xpxa5pp/2N9+H9JeVR7IO1/Brw9drvCcZH6d8P6M8VLj9Lz
ZjfCmoMZ3P5p6v8evu7LrZNNUf9d+IhQH2Puov6YBzzna1ylf+8v6l8L71mk
8/1wjfp3wds+l7Z6Zqj/U9iifln/xSXqvwgXLvFzao20/zxcs0zVJaJeQdS/
PBdrMOVuSaL95+D61a2Jpnjq3wkXhEZrB4TUfwweVk2ozHReHXY4Qb47PiSS
+kdhwy/bflOE0/5HzuB8VMnXLPCn/X8FdnFqUd0Y9e+Au2KH08YGqP8TuFn2
WMvi+9T/Ndy61njqLJ238L9hy3RnXQhZGjHLc/uKVswLh6g/DR5PT543kJvU
cLS4qXY12WmAlVm2OsEg9dvg/Js95sY+mv8IvOL0VOoHdtr/RXM478deDKhw
0/6vgWuD+kpPztL+b4X3aKc9bprnhB6eVBROvkr7FfcVnGDqsaYM0/x/h00H
gsUbXNQf9pDnFOn93NXbXvv/q1C+Bw==
               "]]}}}, {{}, {{}, {}}}}, {
          DisplayFunction -> Identity, DisplayFunction -> Identity, 
           DisplayFunction -> Identity, AspectRatio -> 
           NCache[GoldenRatio^(-1), 0.6180339887498948], 
           Axes -> {False, False}, AxesLabel -> {None, None}, 
           AxesOrigin -> {3.8830752*^9, 0}, DisplayFunction :> Identity, 
           Frame -> {{True, True}, {True, True}}, 
           FrameLabel -> {{None, None}, {None, None}}, 
           FrameTicks -> {{Automatic, Automatic}, {
              Charting`DateTicksFunction[
              Automatic, DateTicksFormat -> {Automatic}], 
              Charting`DateTicksFunction[
              Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> 
               None]}}, GridLines -> {None, None}, GridLinesStyle -> Directive[
             GrayLevel[0.5, 0.4]], 
           Method -> {
            "NoShowPlotTheme" -> Automatic, "AxisPadding" -> Scaled[0.02], 
             "DefaultBoundaryStyle" -> Automatic, 
             "DefaultGraphicsInteraction" -> {
              "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
               "Effects" -> {
                "Highlight" -> {"ratio" -> 2}, 
                 "HighlightPoint" -> {"ratio" -> 2}, 
                 "Droplines" -> {
                  "freeformCursorMode" -> True, 
                   "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
             "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
               Directive[
                RGBColor[0.368417, 0.506779, 0.709798], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.880722, 0.611041, 0.142051], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.560181, 0.691569, 0.194885], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.922526, 0.385626, 0.209179], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.528488, 0.470624, 0.701351], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.772079, 0.431554, 0.102387], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.363898, 0.618501, 0.782349], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[1, 0.75, 0], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.647624, 0.37816, 0.614037], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.571589, 0.586483, 0.], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.915, 0.3325, 0.2125], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[
                0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
             "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
             Scaled[0.05], "AllowMicroRanges" -> {True, False}, 
             "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
             "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& )}}, 
           PlotRange -> {{3.8830752*^9, 3.8907648*^9}, {-1.7053574463971286`, 
            2.2700614105456167`}}, PlotRangeClipping -> True, 
           PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {
              Scaled[0.05], 
              Scaled[0.08090169943749476]}}, Ticks -> {{}, Automatic}}], 
         FormBox[
          FormBox[
           
           TemplateBox[{
            "\"BCH\"", "\"ETC\"", "\"LTC\"", "\"DOGE\"", "\"MATIC\"", 
             "\"THETA\"", "\"USDC\"", "\"VET\"", "\"XMR\"", "\"TRX\""}, 
            "LineLegend", DisplayFunction -> (FormBox[
              StyleBox[
               StyleBox[
                PaneBox[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #10}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                  "Grid"], Alignment -> Left, AppearanceElements -> None, 
                 ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                 "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
               FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
               False], TraditionalForm]& ), 
            InterpretationFunction :> (RowBox[{"LineLegend", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.772079, 0.431554, 0.102387]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.363898, 0.618501, 0.782349]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|"color" -> RGBColor[1, 0.75, 0]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.647624, 0.37816, 0.614037]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.571589, 0.586483, 0.]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    TagBox[#, HoldForm], ",", 
                    TagBox[#2, HoldForm], ",", 
                    TagBox[#3, HoldForm], ",", 
                    TagBox[#4, HoldForm], ",", 
                    TagBox[#5, HoldForm], ",", 
                    TagBox[#6, HoldForm], ",", 
                    TagBox[#7, HoldForm], ",", 
                    TagBox[#8, HoldForm], ",", 
                    TagBox[#9, HoldForm], ",", 
                    TagBox[#10, HoldForm]}], "}"}], ",", 
                 RowBox[{"LegendMarkers", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
                 ",", 
                 RowBox[{"Joined", "\[Rule]", 
                   RowBox[{"{", 
                    
                    RowBox[{
                    "True", ",", "True", ",", "True", ",", "True", ",", 
                    "True", ",", "True", ",", "True", ",", "True", ",", 
                    "True", ",", "True"}], "}"}]}], ",", 
                 RowBox[{"LabelStyle", "\[Rule]", 
                   RowBox[{"{", "}"}]}], ",", 
                 RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
               "]"}]& ), Editable -> True], TraditionalForm], 
          TraditionalForm]},
        "Legended",
        DisplayFunction->(GridBox[{{
            TagBox[
             ItemBox[
              PaneBox[
               TagBox[#, "SkipImageSizeLevel"], 
               Alignment -> {Center, Baseline}, BaselinePosition -> Baseline],
               DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"], 
            ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}},
           AutoDelete -> False, GridBoxItemSize -> Automatic, 
          BaselinePosition -> {1, 1}]& ),
        Editable->True,
        InterpretationFunction->(RowBox[{"Legended", "[", 
           RowBox[{#, ",", 
             RowBox[{"Placed", "[", 
               RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
       TemplateBox[{
         GraphicsBox[{{}, {{{}, {}, {
              Hue[0.67, 0.6, 0.6], 
              Directive[
               PointSize[0.0055000000000000005`], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwt1A9Qk2UcB/B3G/HH3RBYhIAXYzuuLkR3aIS39PaeIggpNAealHAz/iRe
DDU61E4qxxmocdwBuzULo0CQOYRQwzqWFzmroxGKg0QHIkt4lAEbDhjUj+fn
7na7z+7Z++z7fn/PG6kqVORwGYbZC+/lT3hZsp8S1qumK2J/E0++/EUFmHHu
vtn5C7W0A3yLLRy2P6DOfgDeZPPrGOmhrvSbJKxOaRgSDFKb1oMNh/1lHhu1
4z3wz54tZt8+atEp8DfkRIrjEXVaG/jc2Kj1KF6/9B44o378A85j6lZvB2GN
8bmGoofUNinYv+y//nie17IDMsHR+eX5z68n14Bj9yQc63VSq41gjr1tRILr
6wbAu4rUAQ1CagtvirDuwbo6VzQ1sxbcMLSrtOAVaukecFPtgXKxiDr7M7Bt
SzJXFEJd2QL+8/a1WxVrqU394E9uFCzM4XoHM03YoR29b98cwfzR4FTVlLsN
nZYOlgbmFfIdmP8EuJ4TptHOYv4msLXkB7vWhPn7wBF6E/+7buqAJXBHsziz
lkv3k786Q1iNp+bIKryfagVYac046n5GXXcc/PqCjgnjYP4GsHVW3x6O94vp
BS99+29n8yL2vwCWZUyoz0xj/1FOwm64yE9W4P+rTAXvzEkctmFfphLw7r2X
Dr9zF/uvB9sv5E1KrJi/BzyaZy56fwLzu8GKAf7Og8/7F7sI2yg25OrvYP63
wC1hpeVdA5i/GHz91xIi7MX858F50itxw+3Y/x/gh6ZqH81lzO8Crwh+N4Fr
xPwRs4SdPxt86O8Wast2cHLQE8GTVsx/BBz60QVnFZ4H6dfg/ZxU/ZsVmN8M
jvl4xlqLrpwGKyXBn288g/lXPyPs6q28yNg2zL8NfNBiamAxr6gIHH7n8r2r
BPN/Bf5H3i5IHMP83eAfF/9ap4+i/bROgj2/d7U7N1HbQt2EFc6HMr6v4fxv
BYdXRTXXxGP/H4K3yYUCLs6jWgvefv/pyaANOP83wJcs9XFXVmL/BLzULVmT
i/sxIXOE/VQh63EH4PyzYG3gbyprIM5/AThLueO4S4zzXw1O+v6c7IUpzN8F
HtIqDmhw3hyPwSpliE4xh/lfnCfsIYM4RoLzl7YZzIvsS8nA+S3NB5/3FmRl
e7D/KrB5LNHvC/y97SdwPzdzXD6O/dvBBStP+8Tg/vLABcLeH9wYMYPr1TJw
dcWaLIUL+88B+5xqlL6B583yJfilR7d1sWimE5yy7yRTivMtHQVvvsv1vOyN
+f098Dy8LotbH4T548F+LcJu/Qo8/yrwhK8xKWEVnv/T4MaL8yFGCbXoKrgs
PXmUsw7zD4OvFZcV69IxP3+RsK1J5n3H5F7y/wEyiUGh
               "]]}, {
              Hue[0.9060679774997897, 0.6, 0.6], 
              Directive[
               PointSize[0.0055000000000000005`], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwt0Q9Qk3Ucx/GJfwJ2DhZe6FUySY4Z1yKoRPkTDzDyD+WESDSSMRys+H+S
oEKspQ5lHMLIQy1ccrWj/LOE8k+FgkZMFAbzKgrOpWCST2wMJghKfXy+PXfP
Pfd6fs/9fr/381umyE9UuvF4vC24Hz9xWeSjLCO78WtPXKww+vGLSrjwfuyl
tvWcg7+FdXFZP4tyOMtvwv7SveWL8zgf9LCzTE7R9rYZGr8UCmd6VNzlF3J2
vAsnBZ3xTM/mLKqA25dGWjVFnGVn4HDlufO87ZzVA3CEW8/IONm0wMEyja7a
lHlkWzAsaVgtWP4RZ+93YMW2w7zEfM7Re+GB6SfmCz/gXHAazikWzvdXczb0
w/ueKxvdtpuzZe4YyxwNSxiY2EX9EvjpdapPzSXUnwI3beZP7qEeuQY+27lu
2JRL/Sfg7hEJs7OY+n+B58qbZ9L+7+c5WWZQ8ELV5BbqD4KL/Byuyk3UnwzH
JEXNW5BK/eWwdc3BXBl9b2qCs0T23z8j26zwKfVym08G9c/CfY7j12YPUL94
nGUSTt6Ni/2Q+hPh7NuBelM19ZfCMe4LMzxrqP9LWOk71aetpP5eWLhR2aap
o/4ZeEVLadrWKuoPmGCZ73a9vuqPCurfAM9UD55O3kP9O+Eco3px7A7qb4Rd
AnP1ZToPUTcs/KZT619G/VNwpvqKS1FK/f4unE/dodyN9L0pAV7oK426SD22
HXB6/Oy4ls7P+3O4xCuq728l9XfBRkXQ0lZygQu2PPVjuiKL+v3us4x+1T3p
SrJlLfz2x/rGWQX1F8HnqlJDnSnU3wB7uHwyNkVQfyecHHjz1Hth1O+EKyJP
vjInhvqfmWQZlaa/9mo69cfDRqs21Gs/9RfCeRGL6pV66j8K89Uhc17WUf9P
8OZbXySX1FO/HV67tTnfo436l0yxzBXDhfZXz1N/HLxaK+7TXaX+PDiwKen5
kA7qr4dVNbK3sq5Rfzt8/cZ0XVMr9bNwbGWgl1sP9fs+YJmW3Wn/fk3rBTPw
kFo6fJ0sz4YLJcYTXWbq/wS2WGSKO99T/0U4T3es35fmd4zA7vsPHH+f5hct
msb/XPHicCbtVxYFd5fUSFN6qV8Fi38bSpaQTbVwfC+vw0z7t/0Ae4WJEw3U
5/0X7Bws6NXTeLRwhmXKH7zB/4pcEA7fajjkp6H1DErYGu4TYOik/mp4jfjY
xDLq4V2A0550jr1E+w0eggOG3WtVt6lf8JBlut4ssz+6R/1hcKSgo3n6DvUr
YPPDsZVHRqlfB7MhxstmO/WfhYuHMjaE/0P9f8LP9ixpeY2s5j9imVTPVst6
mzD6P+B5Qkk=
               "]]}, {
              Hue[0.1421359549995791, 0.6, 0.6], 
              Directive[
               PointSize[0.0055000000000000005`], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1A0wm3ccwPGgM7pZWXUoWyI9jZ47Yi3zcjeejUo3q9Ara3d6UY31dCMU
O9OpradeQqWyGulRUZGIt6iia1mitpPSG2JrZ00nU1uRR6iJar3t9/zkLpf7
JP88z+/7/J/E/WRqDN+SRqMdhyf1Co8Rnokk/DrSElPry9XUG0Jwv/+kx4NL
31Jmd4Ilu3Is9gd/HwLmTYA3RNISobCIssh2niTu5wtnKqqllDX7wV1iXeeB
2HrKC/HgP6b9hoY2yygzCsGFnH1X5DnXKXNvgOsk/PUIYx3lPD3Y1pF+RJkp
p6yyXiCJytm9U7u1uN7ABnt+XdCT5amgbP8Z+MPM0xc2JThfaD74BFnlvsa5
SlnQBpZywmMENbWUa8fBvBC9btqhmvKI1TOSEEs3ueFsnJfmDS5dz08IUDdQ
Zn8KTmf7COtk2Mf7DqyYYzmXd1ZhfzNYJT87qe3DeTUPwDtdGBF2Rly/QFsk
iY8m9rDm48XY7wU+GLmvuau3AvuPgjecB4xrv1Vi/3lw8vY305L6LmN/I3h7
P7/HJqkY+8fApkSzePQO9tpvgB8eKzV6Wciw3/M/knjvrcbjLBOeTxADtrZM
1893dWD/OfAoR68e7+3G/gbwUdu86mPzXdg/CvabvhY2UHMb+1fBw8vyAhkD
P+d5LJHEK5xLLH9WJ/ZHgWUNOlE35wb2Z4ObGO5C7wncn4Xr4JgmV8leA15P
xq/gCu7UZo6LEvtXwJfVde/YhKDzmGaSGAwqGqYrWrE/EuyvIIPfdsXzGbLA
P4l1cf06nN9eCj6UEE9nl6qxfwgsiF7se5KB8wrMYKvctN/ZX6Jr6cvQ49bs
LI3G440cAr8bOabZeQ7np2WAfYkILfvjRuyvAX8yrFnPYuP+8LTgZMfDbhNJ
eH1Fi+Cx4t5KZV8U9rs9JwmLuEmPV00/YP9BcPsmKz20A+8HRhqYqRV77XLH
+4V7FezkdWTW/Ww59v8C3mbhbX+xCder5sGPmcMtGzN4PQwuKyTRxgsssR3E
+9U+DCy16e22TFdhfwr4Z1V2xwltG/ZXgqOVqcnPia39vwtmxlXd6fwcvz9C
gv8M3ZZ8UY7fpzm9IIk4ET3z4TM0mwAPePzz71+JuJ+8M+Dw+7Lzyxkt2H8F
7GtWjgdF4u9XowaPBBSdCiKxb2EGbJrm3pOv4PwMx5fw/yJZ/cAnFufhvg+e
ixqVPBpE550G33rkqptVoFXlYBbfIHUy4/4ZesDmC9rkutl27H8K9o36oiy3
GdeHOqySROhLH3pgAFoQDC4IS2kRWG/tPx/csWSM/qp6a//LwPwCwW5ZKa6n
3QbvsWsdDVi6if1TYLtUh6f3WvF+472xRhJhyvrHxSloUQDYxerAXKwdHk9z
Epy2Q/96pvRH7C8Bt4e0M795cgv7u8GFlrnFjEA092+w8e4Za+MAHi/vtXWS
OLX4IiFbfzPkf57je/w=
               "]]}, {
              Hue[0.37820393249936934`, 0.6, 0.6], 
              Directive[
               PointSize[0.0055000000000000005`], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1AtME3ccwPGmJLx8jD3EONgAWRnW0XTFoXMIvdXIdAoVJzMwsVJ1c5BS
mHTZRArbqDaatWu0wUJsuwaUybBQTJHH6JASHsrK2Mp0j+Jg0brjVXkUtd1+
/H+XXC6f++WS//d/l4vJK8w8ymQwGNlwLl/hcIimaKqiRd9kLArhL984C454
vn7lhtPE3OvgSfvdFn03scgFVr/tZ0c1EatDpmlqnrd4rwdtSwT7U7tNeeiZ
g2D6QG5Js5I4+gx4NCCRlXCFWNgMXnxXo+oyEZf/AQ7J8LX6DcTmwBmaSqxs
c5k1xGNc8MA73/r3tROH5YD7S8fe71QR8yvBfV06Q5mOWHoNXFy2Tt/ZSmy4
A35pzZElzQ1iR8AsrEd8vO41O/ZzwMkJv7hrerH/ADi9Kze6xIL9X4AX3mPV
T3yH/Q1gSY+LF9uP/U5w/N8bFb5O7Gd4aOrSqUcRv32J/RvBvO7g4k9wv4X7
wXLm4063HPvl4L/CRy2FODfXg1mvxxTZC7B/BDzYJhI04H6G+cENVRnbOQPY
H/+IprJkxtk47JVmgiW6im2bfsX+UvDoz1GKqhHsrwMPbzj0+dUh7B8Gs6q3
hhTcwf4n4A9Sb030/Yj9rDmaOnljSdWP+6fOADuHt1rHsdf2GTilSSd31mG/
CTyXYx1/WY/9Q2BF8e1VH+P6hF6wiflnWcB17F8/T1O2h8pacS327wavsCZn
NvZgvwy8marwhHdgvxFcMDAdOajG/kHwK5erxDr8HqTz4ON8UW/A19gftUBT
q0VTwT/g3LET3HBwU37tOew/AX4qmGzWlmL/JfDpNEm+SoD9feC0oT26b7Zh
v2f5+a/imPG52B+5CO8/6ebayRrs3wE2t0m82tvYXwT+L1b5/dW72F8NvjzH
y3bYsN8OPqbZk8a4hf3TYHcWO9MQFEr613lpakdToDjdi/3bwb1hP/lUAWTO
l4CzVdfoYw+xvwp8okxQnrKKzA3d4BH3mJHzL/bTYEa+sOP8c2TOWLtEU1tC
lStPebCfAsvnE4TVU9ifD062aYsu+rH/Arjdy9w/68L+LjB7nywu3Yf9brBV
cD+oAtcf/cJj+F/80+I0oYUp4KSbnMKSNcTlH4HZUsWHb6DNGrBr5kjkzmDs
7wCbGPorg88Qh90HMz6dsnMTsP/ZJzTFzXqwOz6VWPoWeNJSuRDEwf6j4CQZ
9ySPTexQgX/fJdYyY7G/DVzjy2l1vkrMnQDLDlsO8/jEotVP4ft/0XIocjOx
egs4Zm/43vUCYlseOK/AM94oIZ45B65UXHigPY/9VnB7o+FNoxr774F3LYkj
smqwf4WPpgLjii+eUYby/wd6zUdf
               "]]}, {
              Hue[0.6142719099991583, 0.6, 0.6], 
              Directive[
               PointSize[0.0055000000000000005`], 
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl0wtMU1cYB/D6GLOgs90EZopSEBSBQpUobjDaq+jqg1EI2DKnNGwIBsJK
phJ8ZBVlUnlYJNXplLGVoEymVJhspIaWjMrKlIvABFwUog5xt5RXx9Oyr99p
0jS/ft855/7POdcn5cv41IUsFutT+Dp/4UMrhhlqI5ufctz/hcj5RyF4Puno
gmUVaOEv4CWtpVsTb7x0WvHM6YXDjws3/+O0hm1jKEcpzxp7ZtBpYxh4zqM6
wXwSPbIf/PKWH789Hvv5BeD9D28VyLRYl94B65YwxrdK0Kq/wZaAAmlDKrrW
ZYSh/O3ZIrk3ul/odH5yMecnNGcf+ItL7nu3VeH84nzw+GOviJl5tPI2eFXg
E97P6145XdELbpsMOW8j69OLRhlK38Ax632xzgoB13gO0qtNWBfKwW9uyMoi
gtCKPPBuwdhX4jqSvwY8pa259n47yf8XWFAZ7U2rSX7WGENJZSXcBybcP34Q
2P17h3ZuAi1NBAf8/nSafR3nU30NVvWevRPsh66tBj9qnd1umcf+/k5wiH1G
kHYZ6xwH2BHlUN/T4XrigHGGOmySVw5noZXx4MWf9WRUxDKY/wRYGrj97Ddv
o+kqsE8q+4+SKivm7wCzRUmjK/vRwllw7K+DfWs3oxX+EwyVOjXgmj2J4zWx
4K3Ha4/cu4425oLrc2iJtek15teBJ+s5B17novkPwfry2+VX+9DSKbD5Usxp
fgta5WtnqLunUnzWTgxh/j3grrvPlBvO/Yv5j4L71hhmqh9hP+cHsC8d43Pw
GPaL28CZ3OClQXV4nko7uLixe8fBD7Be4f0fQ61x+5Mr8EXTO8GHeL8V7eom
538YLPFMXP88GS0sB4tX+M2H1pLzbwVnXdbtyw1Ha8bAan2w9qIMz8PoNclQ
zenmY2nROH5kB3jLqk0/2ttwPT7sG+X1yRGhqIzk/w68y/WEi85B7n8LONKa
uVyuwvG1NrBLV69ATcb3r5xiqOdnxs8Jy7HOiQa/5wjj8opJ/iywq8mj3fIR
yf8t+HRd50W+mdz/ZvC2jKcbXTzQNOOshy67/6CJ5PechudvWa8u6yb3nwI3
zZw62fY5yZ8BTlvuTkcEY79GCy4NN9RL4sj9bwJbs0K9NvWR+z8EtiyNKrLs
xn7+ihmGeuWWf22QzC+NAldG5kVuCMC6Kh1savZIkiSQ/BfA6eHrMjq7yPtv
ANtuxu0MGyDv/yCYnsi7kjxH7j93lqEam6dtxatJ/gjwk4EEEXcU6xWp4Hc/
zssRHyL5z4M7DIvUOQdI/kawfoFWnh1Lzv8FWKmNo0ZjcH8V78wxVM9eSWZk
IFqzBcyrvjne1479xhTw/as9HdmeWB8pAkfJ0t2SM8n5N4DZHFNZ4RW0dABs
WFw08GENWuX2hqEu7FG22IOGRP8DkZCKMw==
               "]]}, {
              Hue[0.8503398874989481, 0.6, 0.6], 
              Directive[
               PointSize[0.0055000000000000005`], 
               RGBColor[0.772079, 0.431554, 0.102387], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJxV039Qk3UcwPEHB8gAx7DJDyVaBskvczkNxmrbgz/uOJcMDc4G2Y508Stk
pnBgHotccEpiWkhQc7qzX8ODHB1IoJN0LbnzBlNIgZw3guieYj9koDOuz/Pp
r+1ut3vtu+fZ834+3+f5ogO79i8jCEIOb/oTXlbFPxT5R+dSkyB95Cr9xQlw
wWo53zZ+UwTk/QhmKTtqw+9yxGDFAzDnFiPLVBdL+xRzjiLLRg/s2xiGNvHB
Z4Xm6ZMPo2g73wLPWBjv/b13BW1uI7jk/o1LqsVVtGWXwY7C7p93MANpqyfA
RzTTS5FM/L+uYCdFvv90p+byEp7PzgO35uR2fbYFf88uAFftqbZLVctoSzTg
8o8HjNVlEbQrO51+59fdA1df6EmWprBpWxkuirTcmR12m8NoEy+B39SfebU3
LYg2bw/4CaflouFWNPbXg79PMAycHsf1Ux0uv/ObRl1+vU7CTZEuZei24geR
2J8K7nt746A7MAb788DMkeYioh+vR10HJttSxwRiXO/6Drzqm9a5NVmZ2G8D
HzlsLjGEr8P+JXDZ5IVux5d4/yVJHorc/EnHmPjkSuzfBT5j/nBKXYPn030A
jlcmeG604f21fg3WeAk3WxiH/cP+6zwfeJjNKJjQ4vUpEh/59+eAz9WO1jfq
Q7G/BjzTpHL37SOwXw9ePq7LNa9gYf9tsDJFepeRjvOSLYIf9QvCQuw4L/Xa
eYr0NH2aGP3aM9gvnfc73l4FblG5pyvlDOw/D85euZCXIAvG/iGwaehKbWwM
zrNy3n9d95yXIjNGlocqFn6n97c1G2ys84WzEydpE4e8/vtfCxY0L/SWcB30
86GwgBmCkA2zR/Ow3w2Oav8qOJ4sw/64BYoMLE5uz4wrxf7t4EZi894IcyH2
q8AZ8c9+y2zIx/52cK/WILsahOvqm/T6xEFjrHcn9s+B70dk8lKFOdgfuwjz
KHR414/KsH8ruJa4njZ5Ea9HUgFuFfGTbN3Z2N8Krh/b/Wvu69uwfxAsfsPi
3UDuwPlTYGNL1KDcIsH5Rz+myFJL28Kfu9E8EiyeTvAM9Qhw/mXgF8gXNflf
bML+z8H5xxxha9+dp++X6RrYlvVR2vmjuH+cs4/9ng8u5wncD70pP+UXH/17
mQicJlAbVYMB2F8MHhot5TRewuet6zQ4+1g592xFAvb3g6euWI8fv+ek58Ge
Af9Vxw8QynG/SCJ9FKk47NI3WP7f/0JwQBBjJkiBx+v2g7WR624XnUjF/mZw
YIBd6ptKxv4+cHhfwQCzfD32T4FXp1dU1bDSsJ/1lCJrtv+gPJgjxP4MsEHq
+60zeg3OvwhczmrwsLgi7G8Cb0kSzW3VvoL9PeCf3qk3XrvDx/k/BLtsIefU
efg8q8P+pUjZxKGYTddfFv8HaiBIwg==
               "]]}, {
              Hue[0.08640786499873876, 0.6, 0.6], 
              Directive[
               PointSize[0.0055000000000000005`], 
               RGBColor[0.363898, 0.618501, 0.782349], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwt0w9Qk2UcB/AXuNBCvOExjINiRI1/QSsU9Iix9zI6DXAtRIJGO9lQsggC
/2CicwmMP8UOwpssBLQ/IKONvBA5kmFJGUmbqCXsjNWIA97BgGCTP9mP3+N7
9957n/d9732f7/N9nsB9H4hkrhRFpcO5doXDKJlmaHbc2583p8z2rt2oBIul
ypLBCDTvO3B74aHMQyb7miV/gktbPWscl9Cqx2cY+p/+SR/3r9GGKLCL0E0t
lqHtYnBDT7IlpQPNUYI3XLnyhK4SLfwWbGy+f1r9GVpuBps6FqIkFWi9u52h
BwJSps0l6FEeeDwxtPhX8n1WBrj4yEdbpT1oQQn4dujR+EktOk8HvpXd+MPm
anTTPfDRF85nF2nQRrdZhl6nfnJ91mk0FQnOujS/IpajeWng1Lapnd4tJL8C
3OYujZ4i86HSgmP8OefCyfgNd8Glgv54hsyHnZpj6GeVYXEcH5xPTjg4aNba
/fsmtHAP2Nyq2aJ2R8tPgpc//lvaEIDWt4LH76kOHn8aPToE7ncWhV/1RLP+
A9t++3QloIvkD5ln6LDA9QmuFD7PE4Fpl/If074h+Y+DI+fqh501JP9XYLN9
S/QpHclvAk8pv6icl5L8y2DHrSzfjZkk/3P/MvTJMr90ThXJvxtccZH/kv5R
/0Xg8wU2m+9Nkv8C2NEeWWP4i/Q/CC517VvqMZL+neCL7F+0d0ZI/88swP91
SXsmFkn/iWDt1eHrGRbS/2Ew3d73h2Ka9N8MLsuJFb3ojXkFA+Bj9X6ycj7J
vwDuPsE98ZMQ3RSwCOPrHjvVKEAbd4JzrUHM2G6y/gvBe2W5yXoZWf/nwHH7
C969MYiW/AzWlCQHvd+JVs2BHwTvdxTXow3+Dob2sMl1d3ah7Qngzrp1jVwu
6T8fXPtebWTYMMmvATfwJr2iY0j/18Fv6jTxgeR9/Qy44qGl96lH+X2dsD+c
xQuxJC9rBziTZbMMW0n/ueDbCrdFkQvJrwYfmctLusEn/V8Dv/Xa1qW7raR/
Blz1er62rJz0v/kB9LMrIvYsWd88Grxa62HMJ/tJchAcTWUkedeR/uvAQ12O
NpOS9N8LTt3O7w4OJf1PgK9dVvQVfj+D+b2XGPpCZ3rL3mC0kA8WszXisznT
mP8A2MCaMIusaH0N2KuWs6PTD98f7QFndRymK33QrHFwBvf5TzjhaIHXMkNT
SVpu9WPovFjwgGnkgOc2dJMMbAlJGzkTiDZWgzlvfMlOyUZT3eAcyzt0Sxqa
ZwW/7DMkdG5HSzauMPR9/WoELxGt2gZOFRxLohRowz7waEEj+9VX0PYqsKy4
y29xA8l/GTwTczPB4k/yW8CuUQ8nRRRa7rEK8zMWMpv84Uzv/zuTvQ0=
               "]]}, {
              Hue[0.3224758424985268, 0.6, 0.6], 
              Directive[
               PointSize[0.0055000000000000005`], 
               RGBColor[1, 0.75, 0], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl0w9Qk3UYwPEpGTgVplCchDLriFWXjcQiIdwrm4QiLLotxTx2ywGCyvij
EKcxmsNhRGsnxc0IEIZ6cUB4DJkUw2wC47gx5c9AbnBZhL2xuTlBQOnZ8+5u
t/vs+f3e7bt3v23i7GTJahqNlgJPzys8zKI5khhseKFcZx/v9rzxNbhOoD87
PGP1mN0O/iTh0vnAijGPRTbwncO6YnUkzlVr7SRRZOFM9KehDTvASQsRwzsH
Rj12HAHTj1gLjtpxP1MJjnLn7Zzhoflt4GP9EluuES27D85fcYh7fkC3vugg
CdN+C0vxD3qKDRb8teHUcimacRh8uzDKi2vFz+cowANFpsEr3mhpC3gu4GXh
YwWur7WCS6/+vVc7gDZ7PSKJey2+TXn1aNp2sDMgdp7VhmYfBJ8WmB6FX8Dr
ib4CD3gblzQLVH8T+LlOmy/cQfWPgCOVvTk5GrSD5iQJ77q+8ZgO/H2Zb4Fb
RxML8q6j+QKw0FhV1ahBy4rBu8tC5s7FTGD/NbC1vYn7sxw9dRdc+r42ve0G
rmc8BzM0D9bMplL9LBdJGN64VTaswLk0GZxbTux5aMJ57RnwwyLLUPUY2twI
ns+UV35+krr/Q+CFffs/iFFT938JvKJUZ/PW4lwU+hgsSl8/aKT6k8CpN8+s
XInGueEL8GvRJ2JHaPh9HfXgEr6da/RBMwfB+k8/+jWOjuYvgLsC/fsOuKn+
V93wf/xNfU0XRPUngFlBkn7FjzifOg2WH18MDduEc0Yd+M3MQvd3DDTHBCau
q7aeO4SWusHFa/IVm63o2pAnJKEyLAuZGrQ5Hhy87hXf4+NUfz64etTitz4K
zf4JvHvbZ9EninC9qBc89oszbdf3aJUTTN9Q1jVpQxuC50mi7xtpeqqY6t8L
3lL+LHtjCtWfA6azju2xJVH9lzzr9XrH4sH72P8HOD76rOiyneq3g2v4d7zD
Jqn+zQsk0XPVX99ygOrngquWYrs743HOOQlefrtpVeI+qr8KrLFyRJdXDWP/
LbCL1PTGufB8mknw7M3OCrV8BPsDn8L55f2Z9mEnztkEWNWjGC8oxbkoCyzN
NOq3cNGqSrDPlO5QruQe9neDU2zhGc05FuyfBWcWJvDiHGbsD1gkiWZHyTs9
WUPYHwMu83n9Yk0EWpYBTnRpp3UduL9VDc5gzk1UR6GnusB+oSGWQuld7J8B
V9xITmjehOZsXCKJC33pnZX/4nppFLhiV0nv9pdwXisB+3sJGz+W49z8LTjw
v8mLMheapgfXPaWvDnai2Q/ANV4mv3AuWuS7DOfxvVitOBGtigTrv3zX1L6I
NojB08pTv/crqf5ycP3RrNujT7CP2eHZH8Fr2BqGc/40WDxmd6YFoWXrnpFE
+3INXdBg6f4f67e/Eg==
               "]]}, {
              Hue[0.5585438199983166, 0.6, 0.6], 
              Directive[
               PointSize[0.0055000000000000005`], 
               RGBColor[0.647624, 0.37816, 0.614037], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl0g1Qk3UcB/BRDkE4NxyJnQsmssA4a7xIkKV7Tg/YScckglCsHS+dvASj
6RQCmyjggY1FIYgs0EkegjYmyWEkxA6P9HgbRSxAxyni6AkeNoagOfvt9zx3
zz33eb7/5+X7/J4tKblx6a8wGIwDsDuOsA1L5kmi54G8tFy72u04UQGOHFmN
yrWhBT+DXfVpcRl30JIH4GsRxppeFVrlukASb3jd3mza/szhnhCw5lxY1qMJ
zKlD4JZ197/1HkHzzoADRpt8T0vQYh14f7KuxRSIVkyCtczUpif2FYe1zhRJ
lL7HHQqLx9wkAJtfyy5LpjBnHwSr1+anm+SYC0vAISzZpQ83oqU/gYdcb8b4
rcP1jUZwcme83eqGHn51kSSoxvOxicHL2P9tsGagIeFuDFrwCbgk06MoV4WW
FIPNMq1GtQetagWHLkrP9NfYsP8Y+Kv5kM+OiZawP8NCEnm26oCnRsx5geCX
k63VmhS0+GPww4Kl0eAZXK/4GtzE7+iIj8Rc2wyWbmCH8UVo0yh47+L3cymP
cT3bDi7KP1IwFYMWBlhJ4tY2qmJciZbGgaPdx+JuBKMbC8GGDP1WZRR6+Eew
537yzYM5Vuw/Ak4K3xSY2G3B/s/BoZMu8uWTmEv4SySRVpvkGxSEVsWCIw6E
qx++j+7JB/+Vq7X6V6EpDVhlvcxouYLmDYJbWvOcEq6hxSvgIeUvbTM70Qpf
G0m437X/U96Fz9fGgGVbNVEFfy9ifzlY7eIt2+WEOfsieBMvbYfXCbTwHrjQ
L7rAbw4ttYE/dU4o6j+HbvRZJok5rm6f8Ch6WAS+xPYzJFjRjCPgsvabEbLL
+D6CH8CDma6/xa7B7yXpBydVWbOPvaT7W8CdrRHRcgNe38N9ShKi5MopZie+
LxUJdivrUzR/hOblgT39s5T976LFF8CH76RuTqtEK/rAn4tlxawctHYB7K4f
m/Zpp7D/6yskcY/Dve3sjTl7Lzg76PiK1IK5MAccp9ugbeNgLq0FT2yrajP7
YN7YC5YyZyu26/7F/iS49UWHKECwgP29VkmCy5pw4qtxvYAAm+r/ZJ7ejfeT
ZIE5UwseR09irqoGs85njHY2Y97TDbZRXw6unaH7m8Hx7uY+tQvd3/MZSfwx
JuKwdHi9eBc4oMGwvs6IVhwGPxkfuHGqju5fBS5PL7jOkdPz7wJHeS6EyHvp
/rNgu75B79KFFno8J4mLpyp2+GfS/XeCl1I/qBv/hp5/OrjWMFCaJ6XnXwlW
H6qZNl6g538LnFgfff3sW/T//8hxv8gr9yv1dP/1/5FE/tUSzuw+zFXhYH5h
SejGPfT8U8BX279wmmaiqbPgX1XzvHoumtcBVr4jOLGmjZ7/NDjk8XHhbiM9
f7cX8L0Svvt9sNjS/T9B0bua
               "]]}}}, {{}, {{}, {}}}}, {
          DisplayFunction -> Identity, DisplayFunction -> Identity, 
           DisplayFunction -> Identity, AspectRatio -> 
           NCache[GoldenRatio^(-1), 0.6180339887498948], 
           Axes -> {False, False}, AxesLabel -> {None, None}, 
           AxesOrigin -> {3.8830752*^9, 0}, DisplayFunction :> Identity, 
           Frame -> {{True, True}, {True, True}}, 
           FrameLabel -> {{None, None}, {None, None}}, 
           FrameTicks -> {{Automatic, Automatic}, {
              Charting`DateTicksFunction[
              Automatic, DateTicksFormat -> {Automatic}], 
              Charting`DateTicksFunction[
              Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> 
               None]}}, GridLines -> {None, None}, GridLinesStyle -> Directive[
             GrayLevel[0.5, 0.4]], 
           Method -> {
            "NoShowPlotTheme" -> Automatic, "AxisPadding" -> Scaled[0.02], 
             "DefaultBoundaryStyle" -> Automatic, 
             "DefaultGraphicsInteraction" -> {
              "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
               "Effects" -> {
                "Highlight" -> {"ratio" -> 2}, 
                 "HighlightPoint" -> {"ratio" -> 2}, 
                 "Droplines" -> {
                  "freeformCursorMode" -> True, 
                   "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
             "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
               Directive[
                RGBColor[0.368417, 0.506779, 0.709798], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.880722, 0.611041, 0.142051], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.560181, 0.691569, 0.194885], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.922526, 0.385626, 0.209179], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.528488, 0.470624, 0.701351], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.772079, 0.431554, 0.102387], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.363898, 0.618501, 0.782349], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[1, 0.75, 0], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.647624, 0.37816, 0.614037], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.571589, 0.586483, 0.], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.915, 0.3325, 0.2125], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[
                0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
             "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
             Scaled[0.05], "AllowMicroRanges" -> {True, False}, 
             "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
             "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& )}}, 
           PlotRange -> {{3.8830752*^9, 3.8907648*^9}, {-1.6362000545208908`, 
            4.484168107109081}}, PlotRangeClipping -> True, 
           PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {
              Scaled[0.05], 
              Scaled[0.08090169943749476]}}, Ticks -> {{}, Automatic}}], 
         FormBox[
          FormBox[
           
           TemplateBox[{
            "\"BNB\"", "\"BTC\"", "\"EOS\"", "\"ETH\"", "\"FIL\"", "\"USDT\"",
              "\"XLM\"", "\"XRP\"", "\"HEX\""}, "LineLegend", 
            DisplayFunction -> (FormBox[
              StyleBox[
               StyleBox[
                PaneBox[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                  "Grid"], Alignment -> Left, AppearanceElements -> None, 
                 ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                 "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
               FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
               False], TraditionalForm]& ), 
            InterpretationFunction :> (RowBox[{"LineLegend", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.772079, 0.431554, 0.102387]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.363898, 0.618501, 0.782349]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    
                    TemplateBox[<|"color" -> RGBColor[1, 0.75, 0]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.647624, 0.37816, 0.614037]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    TagBox[#, HoldForm], ",", 
                    TagBox[#2, HoldForm], ",", 
                    TagBox[#3, HoldForm], ",", 
                    TagBox[#4, HoldForm], ",", 
                    TagBox[#5, HoldForm], ",", 
                    TagBox[#6, HoldForm], ",", 
                    TagBox[#7, HoldForm], ",", 
                    TagBox[#8, HoldForm], ",", 
                    TagBox[#9, HoldForm]}], "}"}], ",", 
                 RowBox[{"LegendMarkers", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
                 ",", 
                 RowBox[{"Joined", "\[Rule]", 
                   RowBox[{"{", 
                    
                    RowBox[{
                    "True", ",", "True", ",", "True", ",", "True", ",", 
                    "True", ",", "True", ",", "True", ",", "True", ",", 
                    "True"}], "}"}]}], ",", 
                 RowBox[{"LabelStyle", "\[Rule]", 
                   RowBox[{"{", "}"}]}], ",", 
                 RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
               "]"}]& ), Editable -> True], TraditionalForm], 
          TraditionalForm]},
        "Legended",
        DisplayFunction->(GridBox[{{
            TagBox[
             ItemBox[
              PaneBox[
               TagBox[#, "SkipImageSizeLevel"], 
               Alignment -> {Center, Baseline}, BaselinePosition -> Baseline],
               DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"], 
            ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}},
           AutoDelete -> False, GridBoxItemSize -> Automatic, 
          BaselinePosition -> {1, 1}]& ),
        Editable->True,
        InterpretationFunction->(RowBox[{"Legended", "[", 
           RowBox[{#, ",", 
             RowBox[{"Placed", "[", 
               RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
       TemplateBox[{
         GraphicsBox[{{}, {{{}, {}, {
              Hue[0.67, 0.6, 0.6], 
              Directive[
               PointSize[0.009166666666666668], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl0w1MU1cUB/A6QsuXpAVkmvFRRBggjAqCbI3IU8HBSGSdLFgGIkKwoQPK
GEpko5k0diKxMZBAxrQMZpSV2YHgNEor8iGZkhIjTOSjIMiYN0Jrwa4K7vTc
Jk3z67nvvPd/99yA3GJR/nssFksMX/svfAw5LwnjO/2d0GfTtM7+Rw1YfDLv
bhx3ym5BF5hrjfWUuE7YnTMNLn45GLSz66ndKuclwsSHXy80b0Pro8GrlqZ/
NUL0chZ4fr+itKoUr+crwZ2bAkSXj2E9rQMsOtH6YuDZuN3yCbDnK9lwXjxa
y14mTMqiLMTpJtooALsdOBqe2vnEbm4mOOBk3NiQDPslKMALolWHRB9cX3IN
bPG/1MBpw/XqJ+Bw3w2W7Fa0wcFEmHK9bNUUjmZ9BHbvvjn/WyVakAE2Putu
N6+jc34Ap7TeeDzejf1VGvB27fFHEwqs60fBM6ERhz1m0cssM2Gm7i94bYih
+beDYzcqpR/K0Wnp4CzzL/0tHfj88irwBa/R2hge1rVXwZJ+TSS7CG18BBZn
1C2qpHh/7jqYH9HKadr9N+YPeUWYo0XJTpu/oPlFYO9EizEtiuavBEuGwkrO
OdH8l8GGHt+J0G9p/hGwcfZsRoqA5n8DTixZT9e8o/mDLIT5wyO07uIemv8g
+EzpIUt6O1pfAbaeyWxcMdP9bwHn9b2wFcfS/MPgXbWEeddN998KLhO7Gxoc
sS7fukKYiEiPlREbzZ8Knm/qmxVk0/zlYOfBiuyhkEnM3wwW5LFNk73ohL/A
PxZIa72TcH5LVsDSrL67cR+j1f6rhGl5rrYF9aANyWBe/3rB2QE0qwx8ZYrj
uGbE8yC4COb7va6+kmzE/PfBm12HR3guaJUZvLXCba4tH633eU0YVrPRHPk7
9ltOApuOPPR3+Rmfjy8Dl/9T9+uMGp32E/h06sxKwV68n7wfPPy9Uli5E61d
Am+zJqz6BeJ64xYrYb4J7vhKEI79ufvBY/zs841ymr8I3MTrzC1soPkbwNfd
Hhxpr8H3re4FuyQFscPE+D4NBKwbidJ6nsI66/3/CDPI/jO9/hjWBQw4z3u8
R+qI/XMKwdpdmWtvr2FdVQ/25AxX31JiXa8DV08KOZ/do/u/CK4dEFrvDOB8
8L1shPGanlu7E0z3Px7sQFTPH9TgfMmPg12/tnYRE1p7AdxeqM6X9NHzfxss
2fNJfHAOnf8FcKZOcVqzA53Ae0OY3Z9WPe1l0fkXghVzMfV+V9HqfDD3hEt0
QjPacB78+VLYFuUpNOsW2Ga2FZbRfoI5cO2+S35NGjr/7m8Jc3gy42F5FloV
B3ZW7djbG0DPfy44amP0IOf2GOY/Bw70sBQ1klHMfwN86EBb7sH1x5h/Bpzt
ZLzn6I11uesaYRprAr/8IHZM9z8QPK80
               "]]}, {
              Hue[0.9060679774997897, 0.6, 0.6], 
              Directive[
               PointSize[0.009166666666666668], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1A9Qk3UYB/AJAYk2xsRghcegMxGDmNJw4uFe9WjpnAOOi3/KxNtloDiZ
zvPKHGgZoG4hEScGgzBKUMkTSOyCyAWoFGqSFsrfExkvYwxBGEQ9PM/udrvP
fu+fffd9fq9/6v4YtROHw0mE9/wnvDpUVpbp5f5gXl4ztGH+izywrDksv9Pd
Mu/QWjCv10MrsqNV3eCw9X5/vtmGNi4cZZkt7YL6JOfheTetAZeGKg3J3mjb
DvCS2b2Jkwl4vPBzsMX1gOu+SbTyKnifenTpnlQ8Xt8FPtde6OLyK7rG1cYy
uxdf3r1Ai+4JBcd/En+39RaalwRWCE9G5/2D15N+ClZ7ySPi6fdqroC3HiwZ
6dbh8aZH4ABu7tIzkegO5zGWeSh2XldXjOaEgOXsL9LXstGh8eCI8NysBsqn
ygbLjtbmV12j/NVgd9+ox1UZlL8TPBhVUGmWUX6OnWXmCrwG0p3QwlXgVD6n
MfgR5Y8D97x4eCeQS/mPgVve2tnXXYnrNd+DPZNa/C0p6J77YJM4oCSM1nlz
YH1Xvcr2BZ4vDRxnmZ+vFFx46oPWxIB7tek5SQoW838MdgysjDk8hO74FvxS
kaRUOIjm3AVzZhv936f10Bmwh88iyVMpWrX8OctU8O9phnehjdvBCerqd8Rt
6KYj4Ot5orH+Ycr/DTjTN21caab8v4PXv6sMV8yilVPgnG0GU2oh5Q+YgPub
IzKm0ql/ObhibsdCIRev36MD656kPcsxUv9l4PJ6N4vzGPV/G/yshX/1RCP1
PwHubC4b/tqKNvlNwv/l8BBsv4nueA/s5Z8fMtyK5hwE3/NO8YgW0fyXgEXn
L4o0m3B/qFrBOz8ImtJ+iDbawRPbAh/kpqCbfF+wzIO8NDf7GjzfFgVuNxXm
lH9F838AHJsoubTsP+q/GPzZy/2aciFabwZb+ZPGW7uo/1GwsC7ozuBHNP+C
KZbZvGwkWD9E/W8Gy7V9ng00z9IMcPvfq+WuK6n/IvDNFVlnn9yn+W8Gtzm+
u7xVTfPPgtfJnAQSCfXvPc0yVbfrNsVl0vwz4OQ/EmQyMc1/Orhs7+rn/DNo
45fgS2JDfx89D5oawW6Gihs/jlP+IfDa2OTXY1upfy8HyxTdUGQpjlH/keBV
F6wLTMF4f/0ecHF/y/hRH3RNPthypNY76hTl/wlszTzrYqT9yRsE97hdaz78
G+X3nIH9yjPLi6opfwTY3nXxhHg/5VeD4zTXBdMFlN8ALpWH/RWjpP3fABaf
1oiCDlH+AfDMyY0NkXWUnzvLMoe2nF68opLyrwXr3nisCtHT/k8FT/e722ZG
af5PgV9RO/qidZhHWA+uW8Ik+LFoZS84vNuRnRAwgvkX/csykcdfPZ729siG
/wG+U4gS
               "]]}}}, {{}, {{}, {}}}}, {
          DisplayFunction -> Identity, DisplayFunction -> Identity, 
           DisplayFunction -> Identity, AspectRatio -> 
           NCache[GoldenRatio^(-1), 0.6180339887498948], 
           Axes -> {False, False}, AxesLabel -> {None, None}, 
           AxesOrigin -> {3.8830752*^9, 0}, DisplayFunction :> Identity, 
           Frame -> {{True, True}, {True, True}}, 
           FrameLabel -> {{None, None}, {None, None}}, 
           FrameTicks -> {{Automatic, Automatic}, {
              Charting`DateTicksFunction[
              Automatic, DateTicksFormat -> {Automatic}], 
              Charting`DateTicksFunction[
              Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> 
               None]}}, GridLines -> {None, None}, GridLinesStyle -> Directive[
             GrayLevel[0.5, 0.4]], 
           Method -> {
            "NoShowPlotTheme" -> Automatic, "AxisPadding" -> Scaled[0.02], 
             "DefaultBoundaryStyle" -> Automatic, 
             "DefaultGraphicsInteraction" -> {
              "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
               "Effects" -> {
                "Highlight" -> {"ratio" -> 2}, 
                 "HighlightPoint" -> {"ratio" -> 2}, 
                 "Droplines" -> {
                  "freeformCursorMode" -> True, 
                   "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
             "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
               Directive[
                RGBColor[0.368417, 0.506779, 0.709798], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.880722, 0.611041, 0.142051], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.560181, 0.691569, 0.194885], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.922526, 0.385626, 0.209179], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.528488, 0.470624, 0.701351], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.772079, 0.431554, 0.102387], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.363898, 0.618501, 0.782349], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[1, 0.75, 0], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.647624, 0.37816, 0.614037], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.571589, 0.586483, 0.], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.915, 0.3325, 0.2125], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[
                0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
             "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
             Scaled[0.05], "AllowMicroRanges" -> {True, False}, 
             "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
             "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& )}}, 
           PlotRange -> {{3.8830752*^9, 3.8907648*^9}, {-0.5124105886532428, 
            0.9120380935965853}}, PlotRangeClipping -> True, 
           PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {
              Scaled[0.05], 
              Scaled[0.08090169943749476]}}, Ticks -> {{}, Automatic}}], 
         FormBox[
          FormBox[
           
           TemplateBox[{"\"ADA\"", "\"LINK\""}, "LineLegend", 
            DisplayFunction -> (FormBox[
              StyleBox[
               StyleBox[
                PaneBox[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                  "Grid"], Alignment -> Left, AppearanceElements -> None, 
                 ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                 "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
               FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
               False], TraditionalForm]& ), 
            InterpretationFunction :> (RowBox[{"LineLegend", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    TagBox[#, HoldForm], ",", 
                    TagBox[#2, HoldForm]}], "}"}], ",", 
                 RowBox[{"LegendMarkers", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
                 ",", 
                 RowBox[{"Joined", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"True", ",", "True"}], "}"}]}], ",", 
                 RowBox[{"LabelStyle", "\[Rule]", 
                   RowBox[{"{", "}"}]}], ",", 
                 RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
               "]"}]& ), Editable -> True], TraditionalForm], 
          TraditionalForm]},
        "Legended",
        DisplayFunction->(GridBox[{{
            TagBox[
             ItemBox[
              PaneBox[
               TagBox[#, "SkipImageSizeLevel"], 
               Alignment -> {Center, Baseline}, BaselinePosition -> Baseline],
               DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"], 
            ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}},
           AutoDelete -> False, GridBoxItemSize -> Automatic, 
          BaselinePosition -> {1, 1}]& ),
        Editable->True,
        InterpretationFunction->(RowBox[{"Legended", "[", 
           RowBox[{#, ",", 
             RowBox[{"Placed", "[", 
               RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}], "}"}]},
    {"2", "\<\"Volume\"\>", 
     RowBox[{"{", 
      RowBox[{
       TemplateBox[{
         GraphicsBox[{{}, {{{}, {}, {
              Hue[0.67, 0.6, 0.6], 
              Directive[
               PointSize[0.0055000000000000005`], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1A1Q03Ucx/EJCHHoGgvkeFAeDBOMh4MEiZD9Eal0xoOBIIwNiA7jYXCH
CGnBURbhLlfKg9l4NDKlkwMJmxYIaVxhQZjiHQZTITz+xNwYARLXh993d7vd
a/+7/3/vff6be7oyLtNMIBAcxHP1FY9BxT88N5l3U3n6lptk9Y0T8Mh+Za+L
m/uq/Tthmdey+e+fMSvG4KFM6ZJYzay2nuU52wb1hLyAuScQHvYL+y7em1kv
g6teC/+eC2B2q4AzttdbxciYY9rh3KBNMcqNzGWjcORhv+sRjsxtlnqec9w/
Iz70DPO4P3wo4v3HFwOZRclwb0PsS68kMEuOw8XmNQENCub8S3Dh1A/fDhxl
brgHh3wRnRO3lXnQ/AnPpSb1XNeMUL8vXFlgii8TUX8i7NjiPRgupv5yWLY0
PzWzmfpbYd2wMX/SifrvwKXdrVF9cuoXGHhO+qCkJsuZ+rfBk0cjLsg72PVi
4uHFdUrV/T7mslL4zqY2ZbAH9X8D/zSmGfVIpv5hOC172dwihfpX4LUfO+Ts
Okb9W408N2ol7AwOov44uGvHcMv9FXb+hmOw9J32DUo76m+BRSmeQ2FbmAVD
8PE1uzP2+VD/U1hRtUduuY36Ped4zkuVu3tkhp1PHQ1/9chwMIv27SmBfZwW
+5ST7Li+GY5dKLpW3sTs9husufyk5vZV6l+AD+uzu+71Ur+HieeKQh9uGL/C
3CaFjR2xCdzPzONFsO6IcFpI1xM1wlJt4BljCTsu+RX+Ma15Y3oxc74JXnKy
9nbtpH7XeZ57WH9ZVvsX8+DrcHWSSFE0S/sXwuZbcvpP7aX+OjguL2RSmEj9
/bDHB1/f6qDjagPcVGHvkEbfX4/LvzznrdA5BzTS/lGwzZfrK99V0f4FMP+W
/fm8Srr/z8LatUday23p/r8BWzqFumaE0v6zsO5PlW+4O+3vuIC+4PVXrUfZ
5xVFwvK9fjbOFrR/Hqxsf67Ot5X2r4UrXEIVyQN0//fCZ+5qqqejaH8eNuUX
G9MWqN9hkecsfIZVH7Yw+3Pw2xfuWoRdYlZkwzYHHsxMmWj/KrjY+Oxcghn1
d8MTuiuJnknU/xjedT5k4WU/6rdbQs/OaXvDWerfCQ+kOpum6PdelgWL+y9m
R8/R/p/D8Xu8xd2nqf8abBfsFX3iRdr/b/gXgza2bZ72t33Kc85vpL1XSPvm
h8KvJumbqtW0fyYc9OZHVpyG9j8JW9bZnWuvpX4tbL3PbE3kbep/BAcUntS4
SWl/4TLPrTSf+iPledp/B1zQqPo0N5f602F96s2xc13Ur4I3a6fXrXxC/V1w
fcYN09QL1K+DS8VyieAA9dv8x3PbCyckZvi/+R/0jDhh
               "]]}, {
              Hue[0.9060679774997897, 0.6, 0.6], 
              Directive[
               PointSize[0.0055000000000000005`], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1AtMU2cUwPHCzAxssKq4yrsiaJGsXtiLRyZc5zSQ8pCHVUFTqsRFUWGU
Dp0PtENWNbOCZQhTq25YHdIOZ2SVQscgEqmkyEBIFYoQEL1AgaKMDtjhO02a
5tf7aP/33O+uFB9KzHBksVg74L3wCS+TaJShOZllLbpcbtTCF2fBSletvL+U
mLoH1vaYL4d0E4t6wZrKOn6m38oFK5zGGHq8iJ/7ZjOx4WPwyw3DXTIj2d+6
E/xs15ceaj0x9wdwXU9OnHiAOKEaXOnGSZz4hjj/GbhX2qVt2kWsfdfK0Ny4
cY9L7cQWCjzYtejAjBv5PXYquNBJebfjCNkeVQD2W6qvFl4mztKAedboZV7+
ZH9VN9int6TZN47Y9M44Q+sCq/9ejmbxweUVrvNrZrB/G7jZx278thL7T4GL
4lSnJ7XEikpwFeuQoOYOsaETrOecl7jj8VbWBEMP5Drqwi5gfxBYovp0Vr4e
+1PAfG7e+51fYP8JcHrB1tw2OfbfAjvt0/12OhP728HFS11kVb8Qs+fAYYqB
Pwa7sJ83ydCpVRc7TCrsTwT3iYo55+4Tq46ChZ4X7dFDxKYKsKWhtmG1Heff
BnY4yRrbe5xcD8oO/lF0QRncgP0BNoae36Q2PTmI/fHgqadK7eGj2H8YPBj4
2e1Q7LHeAPuYZN4lPtjfCna2Ze1/G4P90+BV8eIlaZ9gv98UQweaNxx5sQ77
BeA7Z7fb2LjdIgV/eCKl78kx7L8Gnmusu9TrhP0tYHW46jXlgP1T4FdUhbln
I/b7vmHo6Ywh3l8rsD8a3E+9+icpEvslYOfHBnl5Gs7/Clh9rHhvPc5D1Aw+
40n1K6XYPwHWa0bi+7Zjv9dbhvaWhNxazSHXz7oJnJDvPybH9cPNBq9KDr1r
rsf+cnD18zJpngD7m8AT61LzP8/B/jHwGZn4ZkQ6OZ/FfZqh5dOSFZo/sX8j
uNTxNfUCzxd1EPzcZXdbYQv2l4Itxp80gibsbwAvXv7ViDPePyYGvPb71tpF
x7Gf8y/M84HFtTER+2lwx7XwgDxv7N8PfpjM4cZir0IJHm00355Lxv56sKct
LSBrN85/GDwfqXhYtQP73WbgeaIu2ccLx/71YKY98sCvMuz/GvygLMbguxP7
i8AjspTs2AKcfy1YGOGhkOJ6Yg+BBa2P2Iu/w/4ldoa+GTTUdArvl6wI8GRk
bc7sB9ifAVYm/V6zTOZL+s+DY0K2BPOaiVk68KMrtrAi3J8aAOvX7Ckc7sR+
1/8YOvge3+gSi8+/UPBH6Y8pI653gxgs9PJ06Gbh/M+Bn07SVzcLsf8+OOH6
aM22JOzvAwclvfSvy8b+92bh/7ufzP55Dzfqf8ReTTw=
               "]]}, {
              Hue[0.1421359549995791, 0.6, 0.6], 
              Directive[
               PointSize[0.0055000000000000005`], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1H9Q03Ucx/HByiBLwWOGNRzjjtsAkyUcZIrHN8OOG8WSyFVnDghcweW4
liKoGCTEOWUBax5kjcPQFeFOMCYOAVFBSJii3tppTuXqwK9s/BanXi++793t
do99Pn98n58fX3Hmjs3Zvjwe7xN8F37xsavGWWYsr+9VwxZx4sIfB+Hu9TNx
/gbOstPwoX6tvc7MWXUHbn0+oleYz1nv72aZGcGJY5knOHfFwHFhHp3tC86e
rfDuD8569tH80O9h44QgsjeLs+IU3OquMdxM4rz/Fhyhad+QFMfZssjDMiPX
pZ2fLQ5bsEsGv9sY7ZVc5MYDPoWtBcqlHf2cEw/AhpwvfYJ53HzNSdj0occc
9Bs3bvobHi2uMBWVc7bzJ1gmfLXCHrSO+lfDzshixwu0HjIlfN4a7xpQUH8J
7K4dm37YRv1NcHzte/zYI9R/E44S3rge6KB+3iTLzPmUbqmvo/4ouMf3UoL0
LepPh/c+Dl2mFlN/Mfz2PsvYX/S8FjNsK95ZUqHj7BqGjeLB0jYr9T+Dr9Rs
9WbYqF86xTKzlVE9NTSu2QzfO+f38aCR+vfAsWvKl2iLqL8RLpTbErxD1H8V
7vjn39O6Zur3wi1dd+Q5jdQfPs0yuX05L6dnUH8qbPbdfql6O/Xvhlt1x21P
aD09DbCmSXnvcCT1D8LDJfaUTNpvxSM4oCGLX7CW+sNmWCbl1EB/hpb6U+A8
XfoBgZL6d8LBNcs33jdRfz08dVne0RVM/QPwM5vq64qXqH8GPtoqMJ75nPpF
sywjODr/bfR+6k+Gpeyq+LQc6tfCfFnaDd4f1P8zHOWX8L7cjztPqj44pPrH
y5YAzvpJuNXmONt5gfqFcyxzLm8ypJvPjXs2wavqfvcRjVB/Pnym/rVrs7Te
ijrYUD+0aGgX9V+EHx5u+SWiivrdcEDaJkZaSf0rHrHMbafhzzY59b8D86XG
2fAy6v8KXua8Uh1dQv1H4JDuXd2Seeo/D7dHapY66T7ZWbg/OXUs0UX9r8yz
zDf3178uofspY2DRWq1EQfutyoWV4gvqcTo/egM8p12ZXbWX+jthtfTY1K/U
4xmFHdaCwKGD1B/0mGW2iVrGdanUvwG+++Jklb6Q+tWwj/naCgfZUgWXCWKU
zXQeXTb4jaz0Ijfdx4D/YH+nWe36jvoDvSxT6ogQTsRS/zpYnqvk5dP5MmXD
w8oHe9x82v9KuDzu+GjP01Cuvx1WW5M/GtdQ/wgcVCgKvPoT9S95gp6k6eUW
Oi/6N2EZTyJU0np1ZcK9t7ZVNNymfh38XKOfLY/eZ6FtsH7Ng1odvb8Udxfm
l+1o/qGJ+hc/ZZmNMSvbVCfFif8DL/ZGlA==
               "]]}, {
              Hue[0.37820393249936934`, 0.6, 0.6], 
              Directive[
               PointSize[0.0055000000000000005`], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwt1A1Qk3UcwPEJYuIOZGYpHMJEOeOytSzuxhWwx0MF5HBOOBEJ5hgvwQGb
wxggOiBOBZTBSixIEQF5S7Ed17ET3LzqGAiBbEDlyXtIPSfbFJhB1m//X7vb
7T57Xr/7/ffsFGcJkxwYDEYsvO2f8BoSPaepC/K1PVlGL779izJwyuOrY5xk
b7u5neBlrXFGu0gsmgB3tDr7lKmJVc6LNHXzkZQV+pRY9yFYwtUEpF8nNn8K
1qZyWvvTidkXwfPTjLsNfsSC78F9LAs7bo1cX/kE7LT9nIPXPeKODWaa+qVl
k/62lXiSC1ZV+3Y/SyDHu50ER+YbIu68QcwvAavDf4ti4P1L74KTNouNLdnE
db+C505x2jKfk/MNOVpoipauLs1WYT8HfC44qiHUBftjwPPS/qsbtWS7qAi8
TpMz/2UQ9reDBz5ba5eIsX8ULHz83Y87jNjPsNJUPYvj6DlCjme/C87YofdT
s4kF0WDNX9VdR/Ox/zy4QKXLE8WT4ztawI1Gl4hlC/aPgMvOtss5edj/Ghw2
nLZrQYf977ygKZMpLeRSCPYLwbzp1i5mJfafBUft+XO8No14qAkc4/Bzc/wD
YsYw+N+5zYcKAtikfxUst16qFtzD+fu+pKnLuw9fCXbH/iNg//tnHvZkYH8u
eGX/rUnxLLlf8y0wV2H76HYS9g+CD7yX0VP3CvttYPl2T1bhNPb7LNGUW1Tl
8RN6nH8E+IB1H3P2DvZ/Dn49cNikwHm63QSXFVauZ0ST7fx+cN8Ny7CcSyxd
Art6eCwdkRHXeS/TVEVjt8scrrehMLDH1Eu9cw32Z4MPGfJ5hkic/3VwitlW
tCUW+3vBpd6aN7OysN8KnggbKwlKwX7PFbjf/XH+8aM4/4NgJ+2ga407+T3Z
MnDpLl/9Whuu/xqwKre3NO//9f8T2LC+WFb5Bc5/ESwUmQQnJcST7jaa8pP4
7D6Yg/0h4Hxt7Xgh7s/PBCsEAZrcBnI96TWw99jAyngocd1D+/4nJLzARzh/
GhxXfKM+UoH9217R1GnZBrUyF/spsLP/xohhXL+idHBAs+MzkxM5n+orsKdP
6uDEPmLdA3Bmky1RpSY2L4ATRpXRb2Vj/9a/aer3tDOM9G+JBUHgTxxHOEIr
uZ4yFcw71veBsRX7q8ALvTNdFxlk/8n74OjEom02KfbPg8vDw7UyfB7wWas0
9UfYjIW5Cdf/x+CvnVqEBQacf5LdW4up94Nx/hXg5iuK1dpT+P/XgptKLkzl
1BNzZ8Fbkif2vv0C+13XaKpTJPLY2Ums4oF7ghK+KR8j1onBzNPruqv6cf7l
4IHjPY3J13D9/wBO9A/kKNtw/U+BY88H7pU/xfkz/4HnS0zFYPMTL/5/mc5G
Mg==
               "]]}, {
              Hue[0.6142719099991583, 0.6, 0.6], 
              Directive[
               PointSize[0.0055000000000000005`], 
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1AtMU1cYwPEb3szBKDh5OKEtQycMg6FVW8X0KjogvIZxVHRrKTNhpWFu
yqaGrJRHMGPzgdOAiMMpTRkau5FCIMR1IFqsM2U6EdyABTdkOaMtA9q1Zezr
+Zo0za/35t7zv99peYoPCw77MAxTBG/vJ7ws8jnCZv9itKrdfIn3iwZw9Ys1
G5iIeK9TDGCFKimjMoFaPgnuVSp9Gv2ozwZbCVtuXt5TyqE2poKDKiZ50rXU
tnfBzQv5p7t2UHNPgd8x1N37LoA6/3twteDVHeZ11FW/gncFBh87Z6Hr0QfY
CHs7fPZug516KgVc3n18W30MPT/sILjREzYpxeOSOrDLlOnqxPUfuQWuOd53
b1xC3TYGdoRU20Xh1BZfO2HnxbKeK8PYvwm8PGH6hrFSp0jBt4KClUfx+cir
wRfNMyVn+Nh/Axz2oizSB9dvfAK+nf7mnawc7GfmCRspqNFl8LA/Cay/rpur
vUOvl78ffNURs3nkJ+oqNThW+XJRj4Ker+8An3zseR6L6596BDaWSTO/3IX9
/4EjWptK/lBTS974h7DnIja1OguxvwAsGAthpyfo9dsqwdvbT/qO+mK/Ftzw
1OQZxOfFjID/Suw4KsR5pbjB2vDRP6cycP4JC4RVmV7hHtqK/Xng5ukZUoDr
MZ4ADyaHrh16Ru9nu+Y9P9qdo3xAzX0IzmsbebIzEOfvBLe0DYzu9WA/f5Gw
6w12lQaflz4bfNmSmbeA8576BHzzreGEIjH2XwXL+jRkQo/zN4Pr4v1+kw1Q
H1kEu0JD+c9s2B+3RNgk22z7MF7PkglOj+Jc78f9yBwDf/ZB3P2O9dh/BVwk
5MdnDWK/CawVXuoXjb9O++fBOlOryG8F+19zEPauP+fT1X/j/PeC0/m6+sRh
nP9H4LAl27K9F/tbwJ4bnVHF9bj/h8BZKp+O97/FfitYfbD5404Z9kc7Yf/O
ciKXhNifDn7bMN19Dc+XlIMXmsTCr0px/k3g7FVxB5wXcP8PgOd4upCa89hP
wLLUZE1DJfZH/gvHY0497Y3Fftbr7sc8bTD2l4EP1D8oXMzF+V8Any+uc7+X
hv0/gPeNORbX4X61zYId2lFtdDH2r3bB/no4J7eJsH8n+H5tV+HkI5x/KXjN
jwL7S/j70zeCVZoK/8Fs7O8HV0TktPhvwf4Z8KWstAA13l/CcRO2OGfJ3bUR
+7eDrS5n6grB+R/2en9X1Oc91JYz4PHEtNy4n6mZPvDuQysC8wbsfw42tJ8e
0mCPPNRDWKLgbtyK6zm7DbwvJr9Wis/DqAA7A30Fuq+x/wvwlpslogD8P+T2
gHeHezrFm7H/d3AQ131iAn9fVauWCStOJtbcPfGS/wHGe0Uk
               "]]}, {
              Hue[0.8503398874989481, 0.6, 0.6], 
              Directive[
               PointSize[0.0055000000000000005`], 
               RGBColor[0.772079, 0.431554, 0.102387], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwt1AFQk3UcxvEJDaMhN84xMSqHyJ1aAio0iq54TYkEBSm4gaFrwQ6Q0yEc
JhMDQocH2Y4gUUSnKCPPC0IIjiOYHd6Bmg5JQDOBA1TyHUMQHILYw/8ndxz3
Ybt37/d93r0eqj2RCXYCgSAWv/N/8WNWjvKcdCTFZ7jcM2j+HwXwXUHVdPk9
Zt96uMVus9xlmFnZB5/1Gk3Qm5j1jlaeOxidnVF+m9m0HrZus4uI7mIei4MH
tceVVqcV85blw8ajU0r3O+z1iFrYz6g9be5kzr4HJ52+32+vY65xGOM5iXzv
sbJB5n5f+GX4i62zPLN4O5y5YyLevYI56BDcGxwoOUnH01TDPnXCqMX0+YY7
8OUv96SI6PzM9k94zt9z9V5dPvV7w8uyR1JjfqV+BeywcGGUB1mZC/9ws74n
4Cb1X4Sv1gY4Wdqpvxt+HKzQKUXs88YE4zynm35/9yrqlb0Lq4RrtZcSqT8K
7hbs2GdMo/7v4LCqNbmqJ9T/C2zpL/7eOEr9XbC6NP9QlIAdXzwHu4q2FQb6
MwetnOC5Y+Hp7+lnqD8SPtG3WdaYyWw4AH/wtiTzm2rqr4SzFGGm2SvU3wnf
/r2lr2SA+mfgpnVtQ+st1O/1lOdEDXKPB4+oPxwO8xi5EfGA+vfDcbfUAzE5
tH8FnBT+03m3POq/Aa/k44K9G6nfBneF6WrdTlD/8kme2+W4qc1K51MTBsfm
bvT75BL1Z8BLtIYzn87R/mfgtNS/m4ZCaP9rsHaFsfq6mvonYev2D73yNNS/
bIrneubyYhZcpP7P4YNf2bVdraP+dFi2qD2mbIL6T8GqU1sKjvix66tshyuX
viG1KJj14/C5GHFW/TvMpree8RzfPHc4I572D4bP+7o7NybT/Z8KV4b+tz+Z
9ooogyvKrIok2jv7Crxhn6bFcS17vcYK/zNls5t0YO5fasNekQ4+ra/u/41w
R4jF67KE9t8NWyLf1GwQM2tK4YffFpmi6HiGP+FUofhAuiuzmYeFtoRHmsXM
giXTPDfcXVsoPUf9HPyHv+zfr2to/11w1oVaH7f7tH8JvNPb4Hqrh/Zvhc9O
rP5i5DHtPwKri543dkzT/pLnPJe4YPBwIJ1/xMfwKq8twugs6k+Ex2VNf/1W
QvsXwT1jDkesz2j/ZtheJU2qfp3u/4fwz066jlm6PkEuMzzn/NoFdTE9jzSB
sPTpRy4uvbR/AizO6VQep/vD/CPcn5OyPKWM9m+Ck697xtbR+32H4Oa6+OK8
V88/51nc31UvuxPp+ukD4KQ0c2naOtpfBd/1C5GXp9D+hXDfmsr6eHpeyBrg
UFPBZ/nXqH8APtor37nIRv2iFzzXoNrUGorv1/93nEj8
               "]]}}}, {{}, {{}, {}}}}, {
          DisplayFunction -> Identity, DisplayFunction -> Identity, 
           DisplayFunction -> Identity, AspectRatio -> 
           NCache[GoldenRatio^(-1), 0.6180339887498948], 
           Axes -> {False, False}, AxesLabel -> {None, None}, 
           AxesOrigin -> {3.8830752*^9, 7.3710108069313955`}, DisplayFunction :> 
           Identity, Frame -> {{True, True}, {True, True}}, 
           FrameLabel -> {{None, None}, {None, None}}, 
           FrameTicks -> {{Automatic, Automatic}, {
              Charting`DateTicksFunction[
              Automatic, DateTicksFormat -> {Automatic}], 
              Charting`DateTicksFunction[
              Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> 
               None]}}, GridLines -> {None, None}, GridLinesStyle -> Directive[
             GrayLevel[0.5, 0.4]], 
           Method -> {
            "NoShowPlotTheme" -> Automatic, "AxisPadding" -> Scaled[0.02], 
             "DefaultBoundaryStyle" -> Automatic, 
             "DefaultGraphicsInteraction" -> {
              "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
               "Effects" -> {
                "Highlight" -> {"ratio" -> 2}, 
                 "HighlightPoint" -> {"ratio" -> 2}, 
                 "Droplines" -> {
                  "freeformCursorMode" -> True, 
                   "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
             "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
               Directive[
                RGBColor[0.368417, 0.506779, 0.709798], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.880722, 0.611041, 0.142051], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.560181, 0.691569, 0.194885], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.922526, 0.385626, 0.209179], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.528488, 0.470624, 0.701351], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.772079, 0.431554, 0.102387], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.363898, 0.618501, 0.782349], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[1, 0.75, 0], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.647624, 0.37816, 0.614037], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.571589, 0.586483, 0.], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.915, 0.3325, 0.2125], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[
                0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
             "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
             Scaled[0.05], "AllowMicroRanges" -> {True, False}, 
             "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
             "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& )}}, 
           PlotRange -> {{3.8830752*^9, 3.8907648*^9}, {7.3710108069313955`, 
            10.426221746277246`}}, PlotRangeClipping -> True, 
           PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {
              Scaled[0.05], 
              Scaled[0.08090169943749476]}}, Ticks -> {{}, Automatic}}], 
         FormBox[
          FormBox[
           
           TemplateBox[{
            "\"ADA\"", "\"ETC\"", "\"LTC\"", "\"XLM\"", "\"USDC\"", 
             "\"ETH\""}, "LineLegend", DisplayFunction -> (FormBox[
              StyleBox[
               StyleBox[
                PaneBox[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                  "Grid"], Alignment -> Left, AppearanceElements -> None, 
                 ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                 "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
               FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
               False], TraditionalForm]& ), 
            InterpretationFunction :> (RowBox[{"LineLegend", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.772079, 0.431554, 0.102387]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    TagBox[#, HoldForm], ",", 
                    TagBox[#2, HoldForm], ",", 
                    TagBox[#3, HoldForm], ",", 
                    TagBox[#4, HoldForm], ",", 
                    TagBox[#5, HoldForm], ",", 
                    TagBox[#6, HoldForm]}], "}"}], ",", 
                 RowBox[{"LegendMarkers", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
                 ",", 
                 RowBox[{"Joined", "\[Rule]", 
                   RowBox[{"{", 
                    
                    RowBox[{
                    "True", ",", "True", ",", "True", ",", "True", ",", 
                    "True", ",", "True"}], "}"}]}], ",", 
                 RowBox[{"LabelStyle", "\[Rule]", 
                   RowBox[{"{", "}"}]}], ",", 
                 RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
               "]"}]& ), Editable -> True], TraditionalForm], 
          TraditionalForm]},
        "Legended",
        DisplayFunction->(GridBox[{{
            TagBox[
             ItemBox[
              PaneBox[
               TagBox[#, "SkipImageSizeLevel"], 
               Alignment -> {Center, Baseline}, BaselinePosition -> Baseline],
               DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"], 
            ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}},
           AutoDelete -> False, GridBoxItemSize -> Automatic, 
          BaselinePosition -> {1, 1}]& ),
        Editable->True,
        InterpretationFunction->(RowBox[{"Legended", "[", 
           RowBox[{#, ",", 
             RowBox[{"Placed", "[", 
               RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
       TemplateBox[{
         GraphicsBox[{{}, {{{}, {}, {
              Hue[0.67, 0.6, 0.6], 
              Directive[
               PointSize[0.007333333333333334], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwt0g9Qk2UcwPGdILlLiXFI7gayTb15cOI6EgbU2Ksgf0RBIqGhMFYElTIC
wyjEIcKhSOxSQQQKsI1WuHBl3M2MgafNo8m4CMsSp9dC8DkZU/6Fo34+v3b3
3u7z3nvP+36f3yNQqtLylrFYLDlcz/7hZ1M8IszWnj90K+MEsmc36sA1YfoM
h45afAlc/lJa8bF+asVd8Ok3t2mNVdQa9hRhzvpui75fSG0OAx8YNgV/6KB2
7gMnjVTxxLgevxY8sp/3q+IQdaoRHHi1sWFVDrX6T3CQJP7OwHbqHi8nYe4f
HzkYrKW2i8G+87UPmpqpfbLA1x1rZqMU1LJqcC+v4VHFaeqib8CdluJL1knq
9t/BLZILSfYxapvHNGHsQZ83PkzE/lBwMifWcu4L7M8Ev+p12CNfhf1HwfLx
VNE+tKYbrFjjEqj3Y/8ouGF336E0C/azXITpk3ctGpTYHwJWi7pcutXY/zqY
r2q74YnrqY+AD3TPDImkQtqvB0tLF5SZ+D32X8DmoTOBfNxPnyWwV4VGO/Uc
fV628TFh2MI4g/gi9qeB+XU35QEZ2F8OFoQsSTrxfTYd+JOftgb56LF/GKx5
W7i5owb7F8G533GHLn+E/RueEOb2eHbnB29gfwp4x6YTDwb2Yn8ZWBn+cbBz
kU/7z4PDOJzIV9zU/Jtgd+S7golw7J8H706xBTZ5Y79whjBXM0PD9SKcfzJ4
0NpljVqH/aVg9xbO2lO7sL8DbOlOPC8gdH3ZINhfOiz7e5K6aAY8G/nbvfwN
2B80S5hvb694Mrwe+xPBHh2Xa/vjsf8gWGXZGZxbgP2fgQv3tns2VmC/BXzt
mC5hXRH2u8AFRn1ARDb2B8wR5uhSUY6JS+fh3A6WOy5cX2XH+b8PjlhIYWLq
sb8FPLjEbmqV0efV18CqlfMPHzuxfwo8MxdQtnEU+7nzhGlsMlTXG7E/FiyS
tI09/QrPfyH4XPP0ZHwrzv8s+LDo5eJ/w+n67QNgv3Tl+mU4TxsB72rJM5Th
+WC9uECYL42aqIUE7GfAOe84Zq1rsf89cOjdDF5tJ/afAWfZ9T7L/59/H5jE
V1WKcD+cE+DWG7m+MSex3+8fwhxx3Yq0SrFfCj6hfav3VjrOvwDcvNyb252E
/Z+C2wyDYQl4nu0/gNnfR5i3VGP/OLg9pMffXIf9nEXC1HkK/fkl2B8NTiwp
109k4fzzwPXqF/ZsxvfZGsD5E35c9h7sN4ErY0tVmZXY/xeYp3nNfGUc+72f
Ema0xB19BfdXIwGni/sTLn6N/UqwRispN7iw/yR4jvzMTjVhfy/4lGosJnsa
+++B46ZVx2vuYP/zbsJwtMmmFT8KZP8BAUlC6g==
               "]]}, {
              Hue[0.9060679774997897, 0.6, 0.6], 
              Directive[
               PointSize[0.007333333333333334], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1A1Q03Ucx/EBwR0gOIQT6nhGHpLEhXaXeun+RSCKuTh2RxqwphiK4HgQ
hpFMDYrYATpLYcXg9BSOGi708sjOkTpNAQckPcyIgoLqfzIeGxtUH37f3e12
r/0ftvf/+/v/w+RHUrOdBQLBHryXP/Eyy57wnPRd5ZZvvcPEy1/UwHpVeK5+
J7PoGtzTZe386hqz7BfYJzrSMNHDXO8+yXOiYpGL+0Vm4wZYqxo/4lbBbM2A
/Q5rCl2VzKEfwKuMxWUSjlnyBdypqRAnb2RWPYbrA2QDZz5lvuJm5bnTjWtO
KVKZR0RwsO87vab7zMK9sHNt+sE8WfiyxZWwVl0iT/BnVnTA5UOvd9++y/Zv
/hEejg8arTrGbHaZ4jn1fOXa/JVsf0EcPOU+0+vWTf3p8EvuhY8+kVH/Sbhd
p+ncn0v9n8EveCT9/XUa9Q/BiUflJxoHqV8wzXO2deWtG/OoPxa2qnsnlKZQ
1i+F37/nFGLeRf0VcEF1+8lLRupvg+8n68ZDXqH+Qdi8vlcssFD/v3BhyrHT
PWRxzAzP5ZeO61fT+RSp8M0Vb20O2ED95bCmRbY3Nof6L8EZ2aN+B16j+ffD
XZtkhp2Z1O+AO+rDLOW3qT9yluf6EhZnFP7Uvxtu2+/64Ck63lgGX55bOysU
UP8FWG5t0FV9znpD++CLdUbxgZ+o3waLtfZD6RHUHz7Hc9+32uxj37HtV1Lg
6pI+z76rzCMl8OXpocBuFfW3wBGHXYMNdD7xA7jIVXjcqZ1ZMQe/F1209GSE
uTlknucc9tZJbwezORm2BO774ZYL9RfDaUrDf88rqL8JHhv2bh7YQ/334Dhf
+6iNrm/9NOzlVtcrjKL+wH947jm5X4flKPUnwqZnzrpONNP8C+Bto7x0fSGt
fy3sG7suYtiN+u/AXqvafs7MovlPwqrO4aB2Wj8jT9t47s2JvAb5SupPgJva
Ej2lm2j++bBPS2XW1Qaa/3nYtuDQNulp/t/AGR9mhN3S0vx5uLxCX6WIp37/
BZ5b1AzYd/3Fro+Ig51Mfg3R15llufDg3e1bvZKo/yN4xjfgUcxvbLvxJiwJ
z6yKovvb+if8R6Umb8ca6vez4/nCe+9+HE39W+GahSHteSv158A37KcOPZyk
/jOwR+SduH2rI1j/DbjrevWONAe7X4XjsLnM5H48k1ns48B6DDJcqE1hVmyB
o4vePus0TP3ZcNTvzwZlHaT+Oni2RinRSai/Cy59WVI79QbNfwzOSXM+l06W
eS/i/y6ZguNLqf9FOF36sWdSP81fDs8vNp3QObHft6phy9T2mG1S6v8SLljx
sLFETf2/wuGvevBFCWx/lecSz53TOjb34/nxP8KYRGs=
               "]]}, {
              Hue[0.1421359549995791, 0.6, 0.6], 
              Directive[
               PointSize[0.007333333333333334], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwt1A9Qk2UcwPGlFRNpbh5KcCMGyrXcnMyuzsDb7fUUQ9Ttlgoq6cL4E5KR
t4Q1FZRTQDQGqFuJQnDhqag7Er1jAUMgILa1DUHNiBFELl5yjT+uYNSP59fu
drvP3t32fJ/f8y48+RNFygIGg7EHnvOv8LAp/6QpVtUWT3MoTzr/RjF4642p
QUdb2LyjGsC53rHozwXkunIQLB21RA7sIte1i57R1Jd3VrVE64lNb4IdnJJT
TCux+32w+UTDaF0pMa8QfC7g4fmILmJ5PZj9VLPfyiXfn/czeIjJ0FFLiQ0v
u2kqXvbS7rTD5PPOKPCHGy88ct8iZu8Fi89vn6ixEUtPgRP9eNp8FXHWbfDa
TYnKgWbiqsfg12WcAp+B2LbwL5pKM7tid7W+RvpF4DLj1U6rFvsTwcqmEmGk
glh5EhwbIRxaXYP9dWBDaZlW1Yf9/eCKitB6VyBZv5vhoam3MquD+bPYLwBn
5BRMrMT1yneC4/Xrd2wpIs7LBbesV/zoeQX7r4HbW5e+wQsgdvaC21q+6X8w
jv1z4KPqyxmWaeznT8B+Pgz9TP4A+xXgvnsyfrME+4+CGbVDP227i/21YDHz
SeYZ3H+GHfyOMLA02YT9M2DBx5d6XkzC/shJmjIGaYZrb2C/DKzqEDp+iMJ+
NfjfuFVquRjnXwNOX9H4ZO5V7LeCZxNyJ/0F2O8FS3ZeU8QcxP6IKZoS3nl7
e3o1sWErOM4ied6G++M8Al5c2qg+cQD7vwb3K8rpYReZn7QH3EoJ3PYR4qwp
MOOwvfj0FewPm6Ypvjg1SH8R++PA8cfV5dklxAwVWDKWxpH9f/6vgOUR6/Rc
M/Z3gXM0j77fMIX9HjBP29E57MJ+7nOaKjLoNMksnH8smA7hKv8QEfM+BV8P
n93X48D+S2DLknGvTYb9HWC/wLFFhe3Y/2ze9liWGdfnDPbCeer2unvrsH8j
eIbH7/i2Aed/CDxwURzC5pDfy9KDp5PuilgS4qr74GMhJt97eD/baPBl5WAa
V4zzD/qbpkKbUoZV17GfAotU/k1zGdh/EPz4ZKYxZzn5vPYC+GpFZ7foK+xv
Ae9NEh2fw/1wu8BWqtDoW4D9gf/Q1Iqc1MSFxdgvAa/99aPsd/vIvPLSwdvy
z3aaDmF/GXiH8VhRAt7vzu/A7ZUT9RvwvLB/B9v9zuUz8XxKOTM0VTm6pNkn
xfMfAw6+Lxz/ZTPOPwW8THfLchPvZ1sJeGQyvPuLlTj/RrD5TEy+aRlZb9QI
+PYLjjY/L/azZmnqwG5db7UT578O/HRNl44uwP5kMK/2dBwb/2/cZ8E3o1f/
tgfPL+8e+AOmx5Hgj/1D4E2pZtaRSpz/Yh9NaQLKJ7OVYdL/AHZFSdY=
               "]]}, {
              Hue[0.37820393249936934`, 0.6, 0.6], 
              Directive[
               PointSize[0.007333333333333334], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1A1Q02UcB/AdA7JRMA8S5OXaUCQq1w7txELkf3OYgoCkxIvgbgXMuLNh
iaKBS4EDBNxxeIgkx4sYoemMxDAvGEXNlwgYQhxcbEam8A+QF+XFpC/Pb3e7
3WfPnt/u+/x+z1+q/iQqyUYgEMThvfSJV6dqjOcikjv8F1Z4By99cRLutw/K
veLALL8GF+UsOkqXMauG4L7NqSmzJumS9S+O85zSKlJOlbH11nVwUqz7x7vX
M08kwF3imNsyqi/Jg+sa0hKrH7D9kd/CeYqeA4HdzLpB2O233syefcwG+wme
M4WXZF78gtkih7/f4871vcXqieNhL//mVcN2zME58Icto7EqR2btFfjQJXfl
m4tsf1U/3JMhXIgfYO4UPua54LjDxcvzmAUy2Pb+9rX72pjlMXBqiXJ/9zSz
6jhsTrQzJgtZff0leEgW+UfdIFtv7YVHDtUGJcdQfsEkz8l/NhaN3Wfrkjfg
/NV3b7dvpfy7YV2/qzRLTfmPwaEhwiML7my/4Wv41zq16KEts8UMj5g3dGU7
Uf7ncPg3pQ3ZvpT/tSmeO2stmnOYY/W0UbDryMYL15Io/+ewZrShMryZ8l+A
Pfy3jWgV1P8uuCl0wGb6Fer/AswF1A/4uFH/faZ57u7jY9JenvofAdum1/yt
mqH8GfCQs/TAk6PME7Ww/dZQUcJ2yt8BTzlZDT+KWL3IWXjtsPenvgJmnfcM
zzX6ud6sGaX+h8G7yu5M9XZR/9Ph100/LIb7Uf5quCk+1+FGJlsPvrPk4nvW
aA3ln4Hz+7xOREjZ76tefYL5PlFv7/YBc+c2eHHX5bNlhZT/M7gvSdWem0H5
K+EHCn7SGEX5TbCyVF3qQvdDPwm71Otiqum8Wj2f8lxO4Ijrewep/yFwx7kt
Bi6R5j8NPil//4UjL1P+CjjOadpu72XqfztslhX4eND5GMZhicLiEm+h/Ctn
ee74UdnVL9dQ/i3wrZ6006M0D8H74SZBeu2zTatY/jOwqOCXRxEi5qo2uNnT
Oq++SPl5uEUdPflnIOV3neM5o1EibMql/Bz8+7L1RoUz5U+Ffefffil6iPKf
hivPlD8UC1j91hY4Mr/NtGcj88QjOEHftjd1kPK7zPPcuZ3j1qsllD8Irlhh
GYij/9Np4KyKTe8cpvtjKIHv7egOW61lttyEw8r+KvCUUf5/4PqEab+AUMq/
fAH5bVOKs8XM2nfhzV7JZhGdd1USvGZDjfhWPs3/KTivNMhjB82r4AY82lj2
0Uqab/kwrNaPZVyneVM5PsN5xmps6qmePgCWzaQ4n39K86+Gs+Ykfl4a6n8h
vC4kJt/7K5r/63Dhv5JyQzndfyvcqf3peSPdb53DfzxXoPjuoBDP2/8BOeA8
jg==
               "]]}, {
              Hue[0.6142719099991583, 0.6, 0.6], 
              Directive[
               PointSize[0.007333333333333334], 
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1A1Qk3UcB/CdFDq4CBwx5UUI3ERQ3FBU8pDnuYLTVF5WS8EU4iWNcTKn
gMPA1WHZoTHeTt4kiLIkUlqAN7FzdPjCRjKlxi1RRjcV4mlMYgvHi/32++9u
t/vs9/89e777/Z//6xl5ouwlLBYrFd7OT3jp0y0MPaBtqT0XGUA5vygDb0kQ
Jg+K/JwWdIHrbQZFxm1fp9NHwd7G4cWWDKwr2VMMHS7tHN9mw7pmIzhU/1WV
+CO09QD4gro+OnUprg86A05u7fiL8wjrSSqwcP1+L6oIrRgB/9MbPF+8Cd3h
amVouzgv9sNktEkADuk1P+F2oj33g98/6gg/V4OmToNXJH4u667B35NeAa9x
P8ItKfR3utkI1g4XHfP2xbx6l2fgQ6U7TF6rMH8EmP+A6+BH4XrBPvBnTXes
7bXo9E/BC45hc/0mtLIdrOPKRGY37NcYwA9Zqq0aE17fyppm6KWv5qetFaCD
wsFlJX3PfmrD/iQxOH7d4t11m9GKU+CpNN/mxhB0xyVw97GRNt5BtGkIXPyj
2j07Bu25CI7QBstdEtBU6L8M7SPvjTIwJL8IzB7jW0ZeQjd/DHY7GNHzpYTk
vwiOZlV8u6Yf+1n3wKv/fM+tbBnWBXPgk+45PckfkPy8GYYeD6Xmk+JI/kTw
XJWqevYxWiMHDxV5bB9chra2gp9mVmTphtBBd8E3v8stGMzH6yfNgotsTeKu
fJI/2MbQUaUq3S86rHfsBgv7Nev7r5H8BeDxRw3amHKSvwUsv7WlZy/5Pykd
OMDuYzkcjpbawJlnAiRxVSR/oB32n6C18DTp1+8Ex1zuCzw+TvIfBwv58kTJ
JJl/E/jWfa/LDXkk/x2weUbTpRbjvJXTYMOU36Trarxfjf9/DD3CXPymO4zM
Px48F+bDd+wk8z8KzjSyB3M5JH8DmHddflvhSvLfBK/yry7OIXk6psBcfdiS
C3KSf+UsQz+Q3R/9Phb7Pd8Cs2fohHtckv8IOGLgJJsuwfuT1oKrxI07hL+j
m38Fn21cm5LbFIj5GfCYLmphwyk0i/ucoSfKJn7Q15H50+BFDl9byKDTJeDn
Xyu+2PMHWlkDtl6a/NseTfb/DfCKT1JKHlIk/wT45xvyE2m5ZP7eDoZ+V939
G4dD9v92sF9t/Z5DZL3iMFjNYr+xUUryV4IjObzdvhacn+k6+Mo+4y5JKdrz
KbhPSjXEp6IprzmGNg28HLO8l8x/G/hxQEFldQV5/rPBHm+/cv6FB67Xl4MP
tJS/FpmJZl0DTxtEb4ZUkvPPDM5S8Tgr+8j8PebhfJB5hsrM5PzbClbaN4+e
SEFrMsD23ifGur1o61lwWl2n5UUbOf+ugiUJ72TFxaKTxsCty11yVHNohfsC
Qys2ONotV/2o/wGTXEXO
               "]]}}}, {{}, {{}, {}}}}, {
          DisplayFunction -> Identity, DisplayFunction -> Identity, 
           DisplayFunction -> Identity, AspectRatio -> 
           NCache[GoldenRatio^(-1), 0.6180339887498948], 
           Axes -> {False, False}, AxesLabel -> {None, None}, 
           AxesOrigin -> {3.8830752*^9, 6.380717052070449}, DisplayFunction :> 
           Identity, Frame -> {{True, True}, {True, True}}, 
           FrameLabel -> {{None, None}, {None, None}}, 
           FrameTicks -> {{Automatic, Automatic}, {
              Charting`DateTicksFunction[
              Automatic, DateTicksFormat -> {Automatic}], 
              Charting`DateTicksFunction[
              Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> 
               None]}}, GridLines -> {None, None}, GridLinesStyle -> Directive[
             GrayLevel[0.5, 0.4]], 
           Method -> {
            "NoShowPlotTheme" -> Automatic, "AxisPadding" -> Scaled[0.02], 
             "DefaultBoundaryStyle" -> Automatic, 
             "DefaultGraphicsInteraction" -> {
              "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
               "Effects" -> {
                "Highlight" -> {"ratio" -> 2}, 
                 "HighlightPoint" -> {"ratio" -> 2}, 
                 "Droplines" -> {
                  "freeformCursorMode" -> True, 
                   "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
             "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
               Directive[
                RGBColor[0.368417, 0.506779, 0.709798], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.880722, 0.611041, 0.142051], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.560181, 0.691569, 0.194885], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.922526, 0.385626, 0.209179], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.528488, 0.470624, 0.701351], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.772079, 0.431554, 0.102387], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.363898, 0.618501, 0.782349], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[1, 0.75, 0], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.647624, 0.37816, 0.614037], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.571589, 0.586483, 0.], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.915, 0.3325, 0.2125], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[
                0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
             "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
             Scaled[0.05], "AllowMicroRanges" -> {True, False}, 
             "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
             "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& )}}, 
           PlotRange -> {{3.8830752*^9, 3.8907648*^9}, {6.380717052070449, 
            9.621068103937755}}, PlotRangeClipping -> True, 
           PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {
              Scaled[0.05], 
              Scaled[0.08090169943749476]}}, Ticks -> {{}, Automatic}}], 
         FormBox[
          FormBox[
           
           TemplateBox[{
            "\"BNB\"", "\"DOGE\"", "\"XMR\"", "\"XRP\"", "\"HEX\""}, 
            "LineLegend", DisplayFunction -> (FormBox[
              StyleBox[
               StyleBox[
                PaneBox[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                  "Grid"], Alignment -> Left, AppearanceElements -> None, 
                 ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                 "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
               FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
               False], TraditionalForm]& ), 
            InterpretationFunction :> (RowBox[{"LineLegend", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    TagBox[#, HoldForm], ",", 
                    TagBox[#2, HoldForm], ",", 
                    TagBox[#3, HoldForm], ",", 
                    TagBox[#4, HoldForm], ",", 
                    TagBox[#5, HoldForm]}], "}"}], ",", 
                 RowBox[{"LegendMarkers", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
                 ",", 
                 RowBox[{"Joined", "\[Rule]", 
                   RowBox[{"{", 
                    
                    RowBox[{
                    "True", ",", "True", ",", "True", ",", "True", ",", 
                    "True"}], "}"}]}], ",", 
                 RowBox[{"LabelStyle", "\[Rule]", 
                   RowBox[{"{", "}"}]}], ",", 
                 RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
               "]"}]& ), Editable -> True], TraditionalForm], 
          TraditionalForm]},
        "Legended",
        DisplayFunction->(GridBox[{{
            TagBox[
             ItemBox[
              PaneBox[
               TagBox[#, "SkipImageSizeLevel"], 
               Alignment -> {Center, Baseline}, BaselinePosition -> Baseline],
               DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"], 
            ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}},
           AutoDelete -> False, GridBoxItemSize -> Automatic, 
          BaselinePosition -> {1, 1}]& ),
        Editable->True,
        InterpretationFunction->(RowBox[{"Legended", "[", 
           RowBox[{#, ",", 
             RowBox[{"Placed", "[", 
               RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
       TemplateBox[{
         GraphicsBox[{{}, {{{}, {}, {
              Hue[0.67, 0.6, 0.6], 
              Directive[
               PointSize[0.007333333333333334], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1A9MU1cUBnAGAxQ21kYYkf2hsC5BmLOT6YYw1heUDWQBEQYDGaWOBnWU
EgUjMK0OpZMOS9G06igFDUYhtugqzYppAUfoCLTAKMMgMjGiyRt2YqHACju9
p0nT/Hruu8mX774bxi9JL/T08PDIga/7Fz5W3hxN1VQHRaSUs7juP2rBeeY4
v+/kxBwdeJ/3pID+k5j3EKwrsxkyrhLL1j+nqZj4vaah28SmaHDY8JFQPz2x
PQ8s+qg/7q6GmCUBz05lNG6qI067BeYkHng07hXmtngSzI43f8w3kLnWx05T
n3/AXxTME09zwJY4vubwq2Q9IxfMqJQIGqbInHsarO/Obw1/QizSgLOaz2Ss
jyHr1RPgpfGHh2P9iK1e/9KUUJjfN9CD+T8EKxLGkhciyZyTDW4ukgyKxzH/
KfDQUy1fsIXMZe3gQe2ON2uVxCYbWDfvq5htIrZ7vKCpxra3RnOZxKwo8Kyq
soxZj/kzwdJ3C6RVPxOLT4C3B4cU73Jh/uvgi8qmzLwZzD8Kfp1t79ZsxPyr
4N4v9fmpW4m5EfM05TquyW4PIxalgyucX0X63yHPq6vA7PzybM9OYmsrOCnr
1KBPBFnvMQyeO7/7NGMR+18Bd8YNVjT0Yv73X9KU1/2/flpuw/5TwUZ7uMSG
Nh0Ds6e9V9TN2P8VcMne1ECGDPsfAkclOjfV3MT8TvBCXUdoLq4Xhztoaqb/
F3bAdcyfAg44FmX4/grmLwc/aDx0TmojZjSDr4Xumamtwf4HwM9yvinbIMT+
HeCy6GjzO2cxf+gCTdmYrxWHdGD+JPAlnssV0Ir9H3FbEWNu2YP9q8D+FZ4n
zhcT8/rdzzPek2z7DPt/Af6xz7LulSDs/+1Fmnqyv8n7jYvYfyI4p0aw1rsP
+y8Fy9L5X18OJk67DF7jpDSNPcX8v4N7E6odX+B51z4H+x5XPvpnAvNvdNLU
StevI3exT8ZOsEX7icoxjPmF4Ph2z64H+D6IlGAurTqb24Lnvwcs79g1knkG
zz/t3q/ff9nXF/sPXqKpG0xpZ9E17J8Cc8w+CrMS+z8E1u/YuVR4D/u/ADZ2
1wVZbmD/RvDBBXHsTXyf7M/Aj/Un61NHsf/AZZqyCkM203hfpMWD76f08Vh4
P4iL3BbIl/fXYn45eLNhHeOODvN3gb8ds0xb8fwyZsEFBSXC8EuYn7lCU7dN
GkMP7ieKBTNjmUPyKuy/EKzKahjZdhD7Pwe+2jGn23oA+/8NHFxv3D7Rgvkf
u+djlQnOVcwf8B/cH5H3vI14H8g+BScPtEUVYl4TH3y0Zkvpwh+YXwpu+UF9
6yTuz+oEq6dKJzckYf6/wa0vVx1reD7F/i6aqktWBB6tZnH/BwVoUgo=
               "]]}, {
              Hue[0.9060679774997897, 0.6, 0.6], 
              Directive[
               PointSize[0.007333333333333334], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1A9Qk2UcB/AJg9NGRSqBYLThFh2cMCAvRSDeFJOTgORAQVrA3ZLC+HOR
BpnbWSkccEyINEGCSFNTGgQYBLRT+SMEDDALyiQjhvoK4/+AQX15frt7b/fZ
87675/t+f+8rSUjZq7QQCAQxOFa+8dHHjfFcTWnSmvmr4sCVH3LgrBwvp8x+
Znkt/Mj1wxw/qWTFcffgZNVZaaM3s2bNOM/9ly7uTnFj1vnA5x0dPR8us+uN
b8JvFx3t8bNl6+Is+Eah6pHInTm8GrbYbDh4ehuz+k+44vKe/IRb7HqttZHn
QitFdfVm5iE5bM56dTxhgdn2ADzS1LVjfyVz4Gewg7DcELXEnPo9vN29b/Xl
J9n/lw3AB+xfcNx0n63rLSd4LizZfbf+AuX3gKebDuZV11H+/bBpeXJLz3fM
ccfhO8Py144NMGuuwLbCpI6ZeWbdHThgsI7/1c6F5RdMIn+UXfoTYZTfHa6Z
clyrLmHnh0fC2qyRFs+bzGoVbHXs6oyNEztfewmWWHfNx/xL+fvh4G9Xyd3o
ftouw5dMpkX9e8yBL07xnPzQYZ/MWubUvXCGrDrv+CDlPwpL7L2+7s1l1l+A
ZXNf/tN1hFnQC4+OfKII3cosX4R1ezrqE8Opf9k07mfCX4kPiqn/MPjsldR+
nzTqPwP+2LejrZn6MlbAET+VCd9pZhZ3w2nXU8pVU5TfBD/+3F49Mkf5XWZ4
rqCkKuPEJPUfAtvcTr+X+AflPwx77DTMua2n/OXwF9/8+G409RPYCauFkfwZ
DfU/A+tjqrxmqpjLnp/lOWNpg0LaS/0HwyGzVkFhs9R/OmwzHeuQTfMrL4VP
ndwsLKT5iWuHYwvi+wLImknYOmRDeynNg27jHM9NVQoVZT5s3bgLlrqWvPxb
JPWfBvtGKxwavWj+i+GNVkdeGq2l/C1w90U/1YKM+h+HI+rXce/TfoY2mHhu
X2PzhGUnzf9OeDRX4R0VT/0nw97+Pee0Yur/DGzh2nhLnU39X4c/cm/bNbGa
+ufhH8KFJ3gj5bef57nZu+e0yQWUn4MHFzzfOp9C858EW55qELXV0/wXwf7B
5mv29PzofobbxsxJndSf8QGsfWO+NXuY+l+/gHksTlMqaH7DA2Crm5l9605S
/kR4U7/04et51H8BfPf0QNoS7W+oEZZpglrVHZTfAIuUQc6xj6n/ZxZ5zifg
dl5FIfW/HQ7dlupykaP+lbD3KuX9+Oeo/3y4pq7dz+hM+RvgzmaBafADyj8M
N00absTQfuKeMvNc89qxOY8iyr8Vfrrqd+kv9L7QJcBOdvtatvhT/7nw4rP5
u7+i+RJfg+ujW1tkozT/f8POimrXTyPo/Sdawjy/wvkaD0kC/weUMU8P
               "]]}, {
              Hue[0.1421359549995791, 0.6, 0.6], 
              Directive[
               PointSize[0.007333333333333334], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl0w1Qk3UcwPEpCRGo83TGTOBpJodyIYZ2S4j2eMMDi5e0l03aXHQkjQYC
uQiXcHVcKRgviUKsxZsD8g2H8KCiDm+cWy8wQigJZVwush7YWOBIkPXj/9vd
bvfZ73+7++73f55NzdqTtpTD4eyD9+InvKyKSZaO7b528/yOINHiF8XgDqW0
im0njmgHR1oCottWBS9aMQoe0R7INrrJvMzXwdKesXF9zCSxMRI8vZzRip8i
550ycNMXFQ3lHjKnvgRn5fTk2+PIPNkADrRpPoiTEReOgAN6BkX2SnK+1dvJ
0ueVVKX2LLEtArzexBuwS8l5bgq4+B3HRL2ZzEVFYOpun2d6iMwPXgDn8d/I
2ZBGXHsHPOj//OWJQGKr1xRL53BFR8cZ7A8HC6ht2YZIMo+QgEtyrx8NbSNz
xWdgXkPv1D4JmZedBYdMmAy2Y8TGIbCjyOytcmE/xwWu6DBf4BFTYWCm9NvN
u/eS30t+E3yudrU5/ARxYQG488bbB0z3sL8FrNhafcQyhf0D4JZMP4FgNfYv
gD+Udcw8OE0sCv2Xpd/z7rNv2UuR/j1g/j351/FF2K8Bb9ZdTpGdJnOrHkyl
hN3hdRFz+sHH8yj3aBJxxByY9b+kTujG/W+cZumBBbG4fhD7k8BGr99j4jKw
/xOw1dfM/LIS+xvApwyShTkf7O8FJwn7v+nC/yt5FlztV/vEbiP2C2ZYOkMu
DOu/i/2vgT2eQqmUxX41OKq/Ym3LK9hfB2493DemLsf9/wjuHt7u/u194oMz
4Gv5fw9zNcS1wQ9Zul2t+nXrT8TWePCmTm/1o2rc/0dg3ZrX9cGpuH8dWFWQ
mhv7MvabwSPCMd0mO95/F9iikzZebMT7v97N0vNnVJPx6di/Cxxr7s0TOrE/
G2wr5Ve9dBH7a8DiYcuQ+S28/z3grJBw/0M9xK0OsDX6OxVTR2zjz7L0Cnm5
cVsz9ovBch3kXcX9Z4L/rC/N1Cvx/leBX5XVNDA1uP+b4MZEvwSvW9jPgkOd
604UDGL/0/+x9NQftwPb0vH5p8HiTh+leTve/wywgDm3gduM/ZXg6K/yPzfl
Yv8NMP3CqODF68TOB+DicsUzJ/E+U2sewf4M49rJJrz/MeAg13O7tFLcfzr4
+Mojt8PweW+tAPvMJ/FEs7j/LnCzJvjduMfE3PFFJ3Q3x+M+RavmWDp87dJ1
O09hfxTYx3fLGffPuP80sKTz0zqmBPtLwVcSlSebErH/CjjAVHjrcD723wcv
+yFk/8ffY/+KeZbW7li2JHQ/9gvB9w1lLq9i7E8F67Ubl1j4uP8S8HLJQ41c
gf0M+K+dlOOfIewfA1+KpaOCrmK/32OWPpT25JzcEST6H5zjTtU=
               "]]}, {
              Hue[0.37820393249936934`, 0.6, 0.6], 
              Directive[
               PointSize[0.007333333333333334], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1H9ME3cYx/FiYyeMDViYAwcTZp04Aqvyx9yqricoDCkFapWguNoGHIFJ
KdpA12pZViFA1o6gIlRslXXTAGtkSljqWlmnFBLt0MiKKBVRgl74KZbCZHv4
PiSkeXFJ7/u+z4VoSXFW3goGg5EDv8uf8OMST9DU+Z2rbafNbN7yH2rAVklo
f8ILYs5V8A7XtMSycv2yxcPg1s7jYqWTXNf7T9JUQHrv/Qf/ENsTwF13SvPH
BoincsHimN4ggY84qgrsTilTV+D1jCtgQdoZv+g7xJoh8FmF7ZchEbGFNUVT
H9fPvZHlIfZwwI92J5+seUQcvB+sHZQ3mjqJeVrwR2ahjztILPsVvGtkszec
Sc5vdIOP5gz+WP2QXHcxp2lqVV2cXCbF/njwqO9ix+ensD8bXJv7QXnADWLx
d+DEPdzz+Xh/fSv4D+e2jSw8v/0+WN1YUFPPIvebYszQVKFOd1OD94uKBe9z
Zg8f/gb7ReBj8lWZSg32nwBvf/rW0jjez3IJnNNy+Qb7AfbfBe94krRvHvcI
XgKnPjyQU8Qh5sXM0lTlcI+gnUssywIH53OkNPYYVeDGTPZzowv7zeA1Xdqf
zDT2/w1WDwXcFr/G/kWwM+Sm4s857F//Ep7f2JN7Ti/2C8Bq0/UiPp7PXg62
KUdMYwW4/0Xwi2cvv08twf7b4FshoppnV7F/HpzuJ8hgGLH/wzmaiu/tHu7q
wf40sCcm7PGhZuxXgE981er+7x7ubwKvFR1eczIM9+8D8yIWEq58gfvPgXOj
DZM6JfavfQXnPWh5Tl/D/i/BsfGLXW2/Yf9RcLe9mOF7hf3N4CNLSQNPN+H7
3wP2Exr4zfg89DNgGzut0jOB/RFemrJcoBtUUtx/F1jkFaqqyomjSsBxTG5p
RzJxRhO42qrI3BZErPkLzNk66QgrILZMgh2faAMj3if2hM/TVMQtw8LxDbh/
EjgwNIov5OP+R8A/7zEHHIvE/RvALu9mt38gvv/d4OmlWXWHA/tpcGV2eWIa
Pk/Gez6a6vGdbunjYT8Fnuh+V+dJwf0LwbN6jWilFvtPge8qr9WvwPfXbgOb
C22l50y4/zi4r0Va1taB+4cu0NQB1ozD+gPuvx08MuqubX8H9/8aXFe1mrbH
4f514Es+ZSQb31+PFczSGbP2HsT9x8CNuRJBqwL3D1mkqbaghoXP8LwyLpjZ
vzXsEH6/MQ9cVJJibJpeR/p1YOmZ5HBHLPb/Dr68Kf8Cow77R8H+JqulrAn7
3/6Xpvq3VKQbqrF/CzhzHacyWYX9ErBMFXduFN/vqVqwPG9cLNuA/Z1gfrvh
24FPsf8xWMhMLY6swP43X8P/h0TrvFzP5v0PM+lROQ==
               "]]}, {
              Hue[0.6142719099991583, 0.6, 0.6], 
              Directive[
               PointSize[0.007333333333333334], 
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1A0wm3ccB/CsWh1r1Q6d6nZCm0RPVTZWwZQH6xsjc3rWqjLFoVVF64au
zNt2rCuuhrKM6dphu7IyJ3sRbqZWL7Fi62ZqprrxXLwNlRT7+v9yl8t98nvu
yfPN9/c8VuHxAZEbBALBCbzXP/FSh2l4Lm0uLmnfwG6P9S/yYYldaWaHkWjd
0iY46VbYlj/2M4c9hNV/B95Ie5a5wGAac4HnyCFzZpUDnNhvMiAyY54JWbdl
7rFnpMzCD+D51bjeVZrLv163+3HZ26bMGcOwOGHXeEg7u556/RmeO+iyZuiz
lc1HpXCJi2JiZRezcTDspNX05K2y4z1y4LqXo30Mrdj8/G04avKi7ugh5soH
cKCfd1otzdV6szxnE32gUdpJ+ffBjlV3rMsWmaVvwbGdRyLc9Sh/JhxkPutS
Z0/5v4T/zL5mdpqsGoJFNWYG8pOUXzDHc1nvxOWGiym/LVwUkZPp08zOLz8G
//yq5lzLXeaMdNguL+Q3Axd2fH0NbBE7YRVI///ofdimdu9tU1/Kvwr7NiQX
22cxe9jM81z5yk6vgQuUPwA+k9sdtrzMzl95CXZv+bbLmfpQ34Q1+Q6uqT7M
gn74k1BJQZSc+tfBzo7asuTDlF/0H8/tVmhjfGSU3x+21rcVP3iF8qfAmyNK
3dx62e/NVMOib872OCqZhb2wUdVsU/dTyv8ENj0x5B8+T/mtF3ju+8UKc1Nj
yu8LCzu9P4uaYvPRZPgl1+q2EAnlr4KHujdtv/M+9X8P3mr/yE91lfn8Ajzo
dVwe0UX5LRexT4v2S9ZrzOoj8EcV2XvGVqj/C7CyW9bq6Ub5FbD4SsOpoTTK
fxcu6RKqgyop/xz8w6eJ5YOnKP+LS+h7y56Aohbq/yCc6uZQHdpK/SfAfS7/
nG0vof0vh1ukA3ZrgbT/HXBzR5OTczHln4arvd/8uDCY+t/xhOf2X7/od4n6
MvaGe2TD+fop1P85WCLpy0mMpP5LYRPx2qReDO1/O3zzemm6B/Wl5uGRDGNR
oRP1/8Iyz42ZlI+2NdL+c3Dt6aT3Ltcwh52BVbLg3yM1zAXFcEx+XuvJh8yq
VnhHwcSUbgPl/xf+Kt4yS7yd8ptqMf9iY8rIHPV/AH58rS++q5T6j4b7nI0s
am/R/V8E3wjwTFVuo/zfwb+MXP7caJLNjR/Dw4f91sqmqf/ndTz3bqOoPVZF
/bvCCVN1JWO0D5WRcOwbO/1/zab+r8KD7ve8QkuofyUsVzhok8Yp/zgcrdRp
+hcov9FTnlNUxP2oWqL8Mnhvuv+VXC3lD4eVQTPShtcp/4ewhcqwcyNdj7AZ
bmvWCSN/ovx/wa/V125L2ET9P7eC++vR/UJbPG/+Bx9jQxQ=
               "]]}}}, {{}, {{}, {}}}}, {
          DisplayFunction -> Identity, DisplayFunction -> Identity, 
           DisplayFunction -> Identity, AspectRatio -> 
           NCache[GoldenRatio^(-1), 0.6180339887498948], 
           Axes -> {False, False}, AxesLabel -> {None, None}, 
           AxesOrigin -> {3.8830752*^9, 7.3680082097423245`}, DisplayFunction :> 
           Identity, Frame -> {{True, True}, {True, True}}, 
           FrameLabel -> {{None, None}, {None, None}}, 
           FrameTicks -> {{Automatic, Automatic}, {
              Charting`DateTicksFunction[
              Automatic, DateTicksFormat -> {Automatic}], 
              Charting`DateTicksFunction[
              Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> 
               None]}}, GridLines -> {None, None}, GridLinesStyle -> Directive[
             GrayLevel[0.5, 0.4]], 
           Method -> {
            "NoShowPlotTheme" -> Automatic, "AxisPadding" -> Scaled[0.02], 
             "DefaultBoundaryStyle" -> Automatic, 
             "DefaultGraphicsInteraction" -> {
              "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
               "Effects" -> {
                "Highlight" -> {"ratio" -> 2}, 
                 "HighlightPoint" -> {"ratio" -> 2}, 
                 "Droplines" -> {
                  "freeformCursorMode" -> True, 
                   "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
             "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
               Directive[
                RGBColor[0.368417, 0.506779, 0.709798], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.880722, 0.611041, 0.142051], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.560181, 0.691569, 0.194885], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.922526, 0.385626, 0.209179], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.528488, 0.470624, 0.701351], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.772079, 0.431554, 0.102387], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.363898, 0.618501, 0.782349], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[1, 0.75, 0], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.647624, 0.37816, 0.614037], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.571589, 0.586483, 0.], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.915, 0.3325, 0.2125], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[
                0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
             "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
             Scaled[0.05], "AllowMicroRanges" -> {True, False}, 
             "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
             "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& )}}, 
           PlotRange -> {{3.8830752*^9, 3.8907648*^9}, {7.3680082097423245`, 
            10.873776531224156`}}, PlotRangeClipping -> True, 
           PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {
              Scaled[0.05], 
              Scaled[0.08090169943749476]}}, Ticks -> {{}, Automatic}}], 
         FormBox[
          FormBox[
           
           TemplateBox[{
            "\"TRX\"", "\"LINK\"", "\"VET\"", "\"BTC\"", "\"USDT\""}, 
            "LineLegend", DisplayFunction -> (FormBox[
              StyleBox[
               StyleBox[
                PaneBox[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                  "Grid"], Alignment -> Left, AppearanceElements -> None, 
                 ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                 "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
               FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
               False], TraditionalForm]& ), 
            InterpretationFunction :> (RowBox[{"LineLegend", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    TagBox[#, HoldForm], ",", 
                    TagBox[#2, HoldForm], ",", 
                    TagBox[#3, HoldForm], ",", 
                    TagBox[#4, HoldForm], ",", 
                    TagBox[#5, HoldForm]}], "}"}], ",", 
                 RowBox[{"LegendMarkers", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
                 ",", 
                 RowBox[{"Joined", "\[Rule]", 
                   RowBox[{"{", 
                    
                    RowBox[{
                    "True", ",", "True", ",", "True", ",", "True", ",", 
                    "True"}], "}"}]}], ",", 
                 RowBox[{"LabelStyle", "\[Rule]", 
                   RowBox[{"{", "}"}]}], ",", 
                 RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
               "]"}]& ), Editable -> True], TraditionalForm], 
          TraditionalForm]},
        "Legended",
        DisplayFunction->(GridBox[{{
            TagBox[
             ItemBox[
              PaneBox[
               TagBox[#, "SkipImageSizeLevel"], 
               Alignment -> {Center, Baseline}, BaselinePosition -> Baseline],
               DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"], 
            ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}},
           AutoDelete -> False, GridBoxItemSize -> Automatic, 
          BaselinePosition -> {1, 1}]& ),
        Editable->True,
        InterpretationFunction->(RowBox[{"Legended", "[", 
           RowBox[{#, ",", 
             RowBox[{"Placed", "[", 
               RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
       TemplateBox[{
         GraphicsBox[{{}, {{{}, {}, {
              Hue[0.67, 0.6, 0.6], 
              Directive[
               PointSize[0.007333333333333334], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl0wtQVFUYwPHNUmdRBMNh5b3AomwlUpgDGLKnVjOHBeIRUZaA7iZLAzRA
ZqIiLEYuijryEmWXBHJJYAtYkCElCipFpRwVAnkkYSxnYCHey+70cb47c+fO
7869c8//nHNd45LCpCs4HM4HcC5f4eiKGafEYX5JIfuSL1q+oQT3RcstC04x
ezeAbxvHhT2dzDEDYFWxb3Otmvkcd4ISo6GoIfw2c6sPWFDo+bf3dWbDR2CD
rduebYXM/BywXVYY0TQwh/4AjrB8Q7hwjjmjD9yfHrXKI5VZu8pAieZPfdAv
V5kHvcHxbvXmV0qZrT8E9+qHNnspmUXZ4CvXdj26mc2cXAsu9X2vY7KOWd0D
9uwrrxj/grnr+UlKXhv8dIVqH/Z7gXU+V2w647H/ffCbbc6dMnfszwT3v21q
31CM/dfBrwtWX1r7DfY/Am/y8g8tptjPmaLkQaJ7Twp+n/8yuMk8JlCdwf5I
8P1bTqLco9h/Apyfv/epvB77NeBMscUpr/PY/wBs01A/O4nzZ20GD0dKuseb
sd/zP0o8zj6T1+D7yWHgI6Objw3heqnTwb+++Crf+mfsrwRbuDkNTK92Zf1/
gEtEpvvhPszeRnDkyGL24zvY7zFNidjU23vje+wPAUv327zk34T9R8DPBeUd
HdZg/1Uw16PbGH8J+++BrYN7hvxV2D8PrnhhV5T+LPa7zVAS46wtaML9pw0C
j1bKUjbifA1+Dk6uqk6OLsf+MnDAMb+TO+Ow/w649q7OPjoG+2fAVZnpc9tw
P6ldZikxxadFKKXY/w64Zm1/3k8ncf1TwTyfWVliLq5/KXjLvjpqV4X9v4HT
dpus6rTYPwXWjZCk33F8rY5zlHx1pnrLWBv27wYn5DhZHnyI/Z+BIxaC+d34
f4SWgEvutdgb8P2MdnC5/V7bDtzf2gnwlITnzL2A/XbzlMyRguP/FmG/GDx5
WqHceg37E8GHqXwjtxL7i8CFVdOxku+wvw2ckRWt01/Efgr+RP5jc2wZ9vMW
KAk8IOBZxGI/Ac/kWf2lD8H+BHD448xGw2HszwffsO2qXsLnW2+BLx8f2SE7
gf2j4JWd2rdaDmH/hkVKFPRh6ggf+3eCg9cEhvi5YP8h8FNxxdZEHvZfAG/f
E3ha8TX2t4Az3jUK9wux/xlYovMrG0CL1hspKTiv4teYXVj/DvDA9idpByaY
1VJw4T9FNOAic1ceOCHJpqNaxcxpBrdypVaOXOwfBkuUihwHB+xftwTrlXKw
kazDfl+w9qafpcQV++OWluf3blZvIPbngrOeOH4sXI/9jeB2Tap50Qn7h8Ar
2yfcowTYv8YE4x0TB3xryxf9D2yWS5g=
               "]]}, {
              Hue[0.9060679774997897, 0.6, 0.6], 
              Directive[
               PointSize[0.007333333333333334], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1A9Qk3Ucx/GhQPxRGDTFxNrgNIecSAlhULoHQVklbgOMkGwSHKgJeHjr
DKPJgSIqApPCoERwgEpJpIIcwRA4Ai4baF12cUJJM+8BJn8c/68Pv+/udrvX
9jz3e9733e/nEZeiSlgiEAhi8F78xMuoHuG5H1dYe91sEMsWvzgD2/rb6w4M
M/vegnl5YogqVLJo9SP4e7dgN+k55nz7UZ5bGdJTv/UdZsNmuHppYNPoRmbz
h3BrZPzM20XMkhx4f/fLVbc3MCvq4M71C7Ivlczav+C9Lu+v9eln69famnmu
Y2qhXzPFPOALyzuFSYMfs+uFe+Frzd4XCqyYZdkwnymt2bOLOfUG3G0XbhsT
w1z2EL6eceXfnE3MxqXPeM7vkY3GY4b6feCery5+It3OfveNhs3SSu8NK6g/
Ew6qs26wC6b+GjjWITYuyJf6f4ff2Bn6zymRB+sXjGG9Uf5XXQr1e8MnO3el
haaz9RRR8JN817A+HbP2C/iuq1/W6iB2fe1V+FiWMurcCPXfh81rDQ8DPal/
AZZ9lx//7gnql47zXGT/ieeZTmz9VBUcNTE7XrCZuew43Bd7eLbBjtlYCQev
Kndo1bP7Bb1w870/c02XqX8WNq/pviPOoP51E+ifFBWM0bzzd8PqJsX5q2nU
fwxOXn7guF5C86+AlR2e9dsb2fNL7sE3G52VOR40/yk4r6oqKqKZ5u85yXOW
BK+GwqPU/x4s31NglXSbeUADS53HcjZGs+cXXoaHk+Y/m1jGLOuBnYXy1G2X
aP6T8NRv+3xWaWn+4uc8V5r7usaBntcoh08fFLS8mEj9R+HE0m/MTW3U/y28
s9o5vo2s/hmOmW5t0d+i/jG44usjNhdKqX+NhecMja7XNH3UvwN2X5Lg/mk7
zf8IXD75pLf3BvWXwJr0iJEfDlN/Bxw0XljDZVP/KDw53VWSXkD9L03xnOfB
rmodzUsYAltHOmZtW079yXC08oxTXgn1F8NDpoAa9UXqvwu39VjEebupn4cN
c5lplgrqd5vG9YE/mTRh1M/BnfusDFozm5/6EPxBccCW8o+ovwiOk+tLT9J+
M7TArv7+HeG0H8z/we37n7n/QvOTiGZ4rizUxVFF+0exFe4Ky4soElF/Enxq
WJd9J5b6C+HolU7Cp3TeDDTBnatnwh+Iqd8EV+YO+N2n+2Uuszw3/sK6Wm0e
9QfBfmF1vcX21J8AX7EcGvyczhPjedhrmSrxjwHa/42w5WmraJMN9T+Gr09k
r3+Vzgu10xzPXXJMscrwpv4tsF70WJtF/y9DHGx6M0DR94D6z8LJQ3/z6teo
vx5OHWo/a6T9qxiE5xyGS3e8Rf2O8zjv5ltq5l+RyP4H+/RDBQ==
               "]]}, {
              Hue[0.1421359549995791, 0.6, 0.6], 
              Directive[
               PointSize[0.007333333333333334], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl0w9Qk2UcwPHFnxyiNFLyvJoMaDiFbMUKk5o8nNhY0QbI0ga0uDZdLsIc
4pJowqgOQ/4IB974s/SEvBSm11wtO8giCKyGpZ6IgBel1StsKLgxmP14fu/d
e+993vfufe/7/J43Kv+9THUAi8V6A87FKxxO1SRDZtcf0k6HRCUv3jgEvt1l
Sn3qZWqhDWyZq8g7tZdaNQbOF9TJH2RR14RMMaQuxrbll43UPQngikpd+HEt
tSsX/Fr6mweF2dS8T8GvsEuUmnlq+VkwwzUoJgKiF20cAXvOJQWpGulz68Mu
hmhrvZr4o9TjQrA5ln84p5qaowT/8fbe9ufF1MkV4M2bBSsjW6gLu8BVkvs9
mVepLdfAYn/Kqi+7qJ2BboZEqPc5CfaxNoAvV0lIsBH7t4MF9THpbRLsLwOf
j63tHK3A/lPgx0ZT2ybvYv8VsNReyml7jva4WNMMWWMXLhFhHy8OzN+WqqiX
YX82OMHJ36bZT238CHxbOsgt7cb+k+Ds9CDrfC/2/w5uzfpiTHkE+/1gTWfD
DXY8fX+y4C5DurV89vgm6sJMsKSoYV1EH/aXgJeo7Kauc9jfDt5vDkg63IT9
Q2BHa0q7ZRD7feDdG0ST/Xbs59+D9SvvU1XqsV8GbgnSc0fqsd8AzrmUURC2
A+d/HOySci3NSTj/X8EiMlFbfwD7PeA/75TM78T9YoyeYUi63lHMUWH/q2B3
pGhtYwz27wMHD+96R1eK/Z+Dp941zxaE4vwHwa0+2W8hXh7tnwFfGfKxRwKw
P3KWIQ/NBH4zit9zpoE//mpFcATOm6UHy3Ivi9LOYH8rWPCvItt6E/v7wd9L
VhwU2bB/Gny9YdOOsrPY/8R9hsS5nrSE3sP+reAfd56UmfzYvwdcbEjpluH6
ys3gqL/V2pdex/5esGNgxtdpwP4p8LH4pWtSi7F/tYchN2Kvpk1txf4t4J/G
1IXKY9hfAOZYs6pO4PoWNoGbH/fs0XyC/RfAy835HQaC/Qx4fV94Qkce9q/y
MmRtS9OA0E/XT0jAXKmLkzFOrdoNfiGRdV2ZiP0NYLn3/YuhHOzvBv9QdOlB
ZRT2/wNO+0+qj0XzVs4xRP31gqJ/jr5PLgZPvFXkb6mmNu4CswcPNOZ0UFvr
wOvGy3vLlmL/eXD0Ee+JZ5Zj/y2wP/evR5oDsT/cB/t9+IOFyE6cfxLYfe3p
Zb2N1BY1+Fm3eyBMQu2sBp9WqEtM5dQsB3ioPeN01hnsnwB/d1S1bPsQ9ofN
M6RGd+HWh07qmo1gjzjIarpD3ZMPXm3TtVXi/+n6DPyi+Nvq4jDst4MdF/N+
1g5j/02wTRc37HsU5x+6wJCRxMCm0gVe8v9MMECV
               "]]}, {
              Hue[0.37820393249936934`, 0.6, 0.6], 
              Directive[
               PointSize[0.007333333333333334], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwl1H1Q03UcwPFlQFCQcrdQCHEsPYmHuSycSWz74fQwATeCQiTYsCEHzXiG
qSGiNnlIZDJwcXQCRzyJDAqfDoLLVgxKsDoD43ARSfN+bjhgOEXpw/ezu93u
te/vj71/n89vvsmfRctXMRiMeHivfMJrVGqmqR3VmfuWN7KEK1+UgRddzKbD
W4m5PeCYCe9U1SKx9B64u+7ZiI3ju+JzLhaa8vdxzyl+mXjgbXAY98TrZ5rJ
9bMfgyvD45p3PydmnQFvPKtSHviRWNwNfsnG7m1NIC6aAGvbgnicY8Q6p1ma
UufenFudQmzkgsPdUv7YW0q85gB4VRgvtjaRWHgavC2c6dUzRZzRCV67v4tu
dSK/7+I4+LdId62sjpyPvviIpnaefEudKsB+DlhgWeLPZGF/HLjfoX9mUwb2
F4PjhWcN0nbic5fANyezKhPniQfugD3u0LzeSexnWGlq7Eifb30H9geAdeve
7clPx/5YcND6oXlTMPYfB4v4LQXDadjfCj5oztWWK7D/d3CsLSXuoQb7n4N7
GpfinYJJn9BvjqaeVHg63k9ik/5oMG06nTE5jv3HwOc5MrZGSc5HvwEb+Qk/
eTwg54zbYMmvfvETfcTcp+BsgyBtWkCul26ap6kk4b8SnxKc/z7wyCGbqNOA
81eCD4WurgmkiGcbwdrre1/j3cf+W+Awsal33Jmcix+DFaoWo8CK/ewFmgp9
57prdhY510WAL++q/3PRh9iYB840eaYPi4nX1IN/9qliq/tw/sNghX+NMf8X
nP8CODoqx+uFBuKLG2w0tbzl8lj1BM5/D7itSR21B+fHyAHne9g+aJdh/9dg
exdTIAshlg6Cmc1jcYWJ2G8FO6pcv2tgYb/3Ik3pa4OZGWbs3w2WcWyfu84T
szLBC3znuqm72F8Lbq8scWv4iLhID47VPlo3cBD7LeBb/3hnU5HY7/kY9rnZ
5tHCwH4RWK6oFknweRQeBp8/Mu03NIf9F8C5/gXyZX+c/w/g0DRxR/K32E+D
lTbLXzseYP9aOzxPBU1mVxnuPwXW6yKL5nbh/qeD3STfF28vwv3XgCVu9g3O
+PwO9IPtER8Wln+F+28CXziaEmXC+89iPqEpzcnNeapC3H8+WLfzXsybn+D8
U8FfnHhomnkf918NFpRcqdpWjvvfC3aJud2micL9nwE7Kt4LSlLj/N2fwv9L
dddx3mbsDwFfLa2y5t7F+cvBAofSNxzKsL8CXJHgJOLg88i4AW48Grj1U9wn
7jQ4wGCPuGTA/leXaKom4NqI15fYvx08qO9Q/peN/cngqZGyAgve/9lysJzZ
eSpEj/1XwYF5lvUOJdj/NzhosMyvqQn7X3lGU9ahLY7dxSzh/96hQ+Q=
               "]]}, {
              Hue[0.6142719099991583, 0.6, 0.6], 
              Directive[
               PointSize[0.007333333333333334], 
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwt0w9Q0mcYwHF05eyorOblSAwkO/O4PJR2mTbHz9IOc4l0DGdjkctG82+X
K+1oc22ddjOkds1ZwYHeoaUmV3lp6DR3m5Z/RjSms03wT7Wun0tBEueme3yf
eed5Hx/e+/HleQnNzJdm+TIYjAz4XfoLP1blXzS1j7XWUB8WIlr6x9fgod0V
H2zz37hkQTO40Cco6omJWOkA34nJ+uTyDWLtipcwr8yU7ekl7hSCvzCq49h8
4ikFuE4uV+sPEnPLwBH3l5dExhFLboJD1uc+L3uDu+SS38GOMeE7/k/J+zH7
TdHUYH1VE7Oe2CkAt8qvWUbY5PyaA+AbP+2MjT5N5qKzYFZPun18lrigCWw4
bGEmrCavN/wGPrqTspgCia2vTdNU30dvFjtisT8SbAtKk8d2YX86eNf1rUb1
VTJXngEnDY/43H+M/Q1gqeOtbxO3Y/+vYK97uDpDwCH9DBdNCa/uEle2k/Nc
PljzrtykPMsm/TKwtLSRpXqbzEs+By/6v9ojrsT+a+DI8w/iLRLsfwQePm0K
aMK+NQtgR+09lXeOPF+0xQ3vr/2HB+ODxAVScN2YrtmRiP1qcGjwqHUwBvtN
4B3p2qzah8SMh+DFjrT+6XPYPw82vR6t3XAS9795hqbyfM/UmBbJ87WpYNut
zRuYYaS3sxgc+GJyLnMY918D7jbqJU9HsH8AvClU73KVE0u84Bnq0yelfOzn
eWgqPUKX2leM/Sngr6J1A5Zk7D8Bnik36v5MwP0bwXvFLxR5XNx/L7iR7wlk
tJHPt8ADDo/K2XoonMwNnFfw+SvOHzc5ydwqBocfv96w0U3MKAQnuTqejZWR
1wv0YLe0ldt4CvffAw5my9YxdmC/C3zFnmqYWyDnO9mzNHXwIos37ov9SWB5
8mROUTPe/2PgI9FVRz7G74fkCvicVPPH8njs/xFMe6sKP7yA/S/BdwNW2ELx
+U6Wl6ZWbvOohuS4/93g3O9Prm/XYH8e2DnE3l+qwPv/HfhRrmme5Yf77wLL
WM0Kmw+ZW2lwDeeb/t7/73/QHE3la8rMkYmkR0CB3e/n+1U0BZP+bPC8pno/
f5bMtZfAvL6J7aogcr6zA7yqa5lwE35fp56DxbKW21/uxf0H/k1TbdkRCe/V
4v2PBxtWTsSEZWC/CnzbPN3noMncfBHMO6o7VTqJ/W1gZ4glOVWE+38GVp84
XF23D/vXztOUKMDe7xnF/ceBtdlRRu4FYkMWePSyT4oxHvdfAa6y07+0rMP+
u2Az80CafQD7J8DCAVmO7R6xcvU/NJXhiUjacgn7Y8D1cYrungbcfya4UOrf
8rMe+8vB3sefHWpdhv13wEWc1u4FDt7/UbDlVpGpyEXOlzD/paljPTd5Kas4
ov8An+FFug==
               "]]}}}, {{}, {{}, {}}}}, {
          DisplayFunction -> Identity, DisplayFunction -> Identity, 
           DisplayFunction -> Identity, AspectRatio -> 
           NCache[GoldenRatio^(-1), 0.6180339887498948], 
           Axes -> {False, False}, AxesLabel -> {None, None}, 
           AxesOrigin -> {3.8830752*^9, 6.792776152081906}, DisplayFunction :> 
           Identity, Frame -> {{True, True}, {True, True}}, 
           FrameLabel -> {{None, None}, {None, None}}, 
           FrameTicks -> {{Automatic, Automatic}, {
              Charting`DateTicksFunction[
              Automatic, DateTicksFormat -> {Automatic}], 
              Charting`DateTicksFunction[
              Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> 
               None]}}, GridLines -> {None, None}, GridLinesStyle -> Directive[
             GrayLevel[0.5, 0.4]], 
           Method -> {
            "NoShowPlotTheme" -> Automatic, "AxisPadding" -> Scaled[0.02], 
             "DefaultBoundaryStyle" -> Automatic, 
             "DefaultGraphicsInteraction" -> {
              "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
               "Effects" -> {
                "Highlight" -> {"ratio" -> 2}, 
                 "HighlightPoint" -> {"ratio" -> 2}, 
                 "Droplines" -> {
                  "freeformCursorMode" -> True, 
                   "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
             "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
               Directive[
                RGBColor[0.368417, 0.506779, 0.709798], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.880722, 0.611041, 0.142051], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.560181, 0.691569, 0.194885], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.922526, 0.385626, 0.209179], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.528488, 0.470624, 0.701351], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.772079, 0.431554, 0.102387], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.363898, 0.618501, 0.782349], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[1, 0.75, 0], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.647624, 0.37816, 0.614037], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.571589, 0.586483, 0.], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.915, 0.3325, 0.2125], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[
                0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
             "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
             Scaled[0.05], "AllowMicroRanges" -> {True, False}, 
             "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
             "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& )}}, 
           PlotRange -> {{3.8830752*^9, 3.8907648*^9}, {6.792776152081906, 
            9.237465929377583}}, PlotRangeClipping -> True, 
           PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {
              Scaled[0.05], 
              Scaled[0.08090169943749476]}}, Ticks -> {{}, Automatic}}], 
         FormBox[
          FormBox[
           
           TemplateBox[{
            "\"BCH\"", "\"EOS\"", "\"MATIC\"", "\"FIL\"", "\"THETA\""}, 
            "LineLegend", DisplayFunction -> (FormBox[
              StyleBox[
               StyleBox[
                PaneBox[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                  "Grid"], Alignment -> Left, AppearanceElements -> None, 
                 ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                 "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
               FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
               False], TraditionalForm]& ), 
            InterpretationFunction :> (RowBox[{"LineLegend", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    TagBox[#, HoldForm], ",", 
                    TagBox[#2, HoldForm], ",", 
                    TagBox[#3, HoldForm], ",", 
                    TagBox[#4, HoldForm], ",", 
                    TagBox[#5, HoldForm]}], "}"}], ",", 
                 RowBox[{"LegendMarkers", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
                 ",", 
                 RowBox[{"Joined", "\[Rule]", 
                   RowBox[{"{", 
                    
                    RowBox[{
                    "True", ",", "True", ",", "True", ",", "True", ",", 
                    "True"}], "}"}]}], ",", 
                 RowBox[{"LabelStyle", "\[Rule]", 
                   RowBox[{"{", "}"}]}], ",", 
                 RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
               "]"}]& ), Editable -> True], TraditionalForm], 
          TraditionalForm]},
        "Legended",
        DisplayFunction->(GridBox[{{
            TagBox[
             ItemBox[
              PaneBox[
               TagBox[#, "SkipImageSizeLevel"], 
               Alignment -> {Center, Baseline}, BaselinePosition -> Baseline],
               DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"], 
            ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}},
           AutoDelete -> False, GridBoxItemSize -> Automatic, 
          BaselinePosition -> {1, 1}]& ),
        Editable->True,
        InterpretationFunction->(RowBox[{"Legended", "[", 
           RowBox[{#, ",", 
             RowBox[{"Placed", "[", 
               RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}], "}"}]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxBackground->{"Columns" -> {{
        GrayLevel[1]}}},
   GridBoxDividers->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.890858742559469*^9, 3.890859617201705*^9},
 CellLabel->"Out[295]=",
 CellID->1141132442,ExpressionUUID->"42c01377-4d8f-4be9-973e-3ff18a0511a3"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Other types of analysis", "Section",
 CellChangeTimes->{{3.833370887092462*^9, 3.833370902280817*^9}},
 CellID->1738236873,ExpressionUUID->"629e3776-d7f6-4ee4-b880-bcdc86a9d0ab"],

Cell["I investigated the data with several other methods:", "Text",
 CellChangeTimes->{{3.8333709053062763`*^9, 3.833370937708322*^9}},
 CellID->179590723,ExpressionUUID->"a02e9758-ef34-4e2b-93f3-8b8b074a2890"],

Cell["Clustering with different methods and distance functions", "Item",
 CellChangeTimes->{{3.833370940768117*^9, 3.833370966830961*^9}},
 CellID->1166757426,ExpressionUUID->"b2c77ca2-4672-4f72-b2e3-7a1dea0a4520"],

Cell["\<\
Clustering after the application of Independent Component Analysis (ICA), \
[AAw5]\
\>", "Item",
 CellChangeTimes->{{3.833370940768117*^9, 3.833371001373597*^9}, {
  3.8333711110643578`*^9, 3.833371112128045*^9}, {3.833371252649619*^9, 
  3.833371255327517*^9}},
 CellID->1018878025,ExpressionUUID->"b29bbb9e-109f-4eb8-bb00-9a4d106009da"],

Cell["Time series analysis with Quantile Regression (QR), [AAw6]", "Item",
 CellChangeTimes->{{3.833370940768117*^9, 3.833371001373597*^9}, {
  3.8333711110643578`*^9, 3.833371134429449*^9}, {3.833371258792322*^9, 
  3.833371261155157*^9}},
 CellID->248364997,ExpressionUUID->"0d7d2a0c-3714-4c5b-b270-67216ffdd68c"],

Cell["\<\
None of the outcomes provided some \[OpenCurlyDoubleQuote]immediate\
\[CloseCurlyDoubleQuote], notable insight. The analyses with ICA and QR, \
though, seem to provide some interesting and fruitful future explorations. \
\>", "Text",
 CellChangeTimes->{{3.83337113707054*^9, 3.8333712313080072`*^9}, {
  3.833371264822386*^9, 3.8333714166572647`*^9}},
 CellID->1709778458,ExpressionUUID->"30542a40-fa79-4be3-a881-26ba2cbb32e3"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Load packages", "Section",
 CellChangeTimes->{{3.795432542698386*^9, 3.795432555612383*^9}},
 FontSlant->"Italic",
 CellID->767863099,ExpressionUUID->"5b1992d8-54a8-4b6c-97c2-c48917178155"],

Cell[BoxData[{
 RowBox[{"Import", "[", 
  "\"\<https://raw.githubusercontent.com/antononcube/MathematicaForPrediction/\
master/SSparseMatrix.m\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Import", "[", 
  "\"\<https://raw.githubusercontent.com/antononcube/MathematicaForPrediction/\
master/Misc/HeatmapPlot.m\>\"", "]"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7948247933964863`*^9, 3.79482479774011*^9}, {
   3.794825215242093*^9, 3.7948252158650103`*^9}, 3.796115991859358*^9, {
   3.833279065098578*^9, 3.833279067571574*^9}},
 CellLabel->"In[199]:=",
 CellID->1245870070,ExpressionUUID->"47763aad-3d3b-4e6c-a5f0-d8f9640fae52"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definitions", "Section",
 CellChangeTimes->{{3.832924390855831*^9, 3.8329243976732607`*^9}, {
  3.833278493416416*^9, 3.833278499162484*^9}},
 FontSlant->"Italic",
 CellID->1372708240,ExpressionUUID->"4cb6ecc9-96ac-4a35-a651-4b46c5fbfc78"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "CryptocurrencyPlot", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"CryptocurrencyPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "aCryptoCurrenciesData_Association", ",", "dsEventData_Dataset"}], 
      "}"}], ",", 
     RowBox[{"opts", ":", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "aEventDateObject", ",", "aEventURL", ",", "aEventRank", ",", "grGrid", 
       ",", "lsVals"}], "}"}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"aEventDateObject", "=", 
       RowBox[{"Normal", "@", 
        RowBox[{"dsEventData", "[", 
         RowBox[{"Association", ",", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"#Event", "\[Rule]", 
             RowBox[{"AbsoluteTime", "[", "#DateObject", "]"}]}], "}"}], 
           "&"}]}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"aEventURL", "=", 
       RowBox[{"Normal", "@", 
        RowBox[{"dsEventData", "[", 
         RowBox[{"Association", ",", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"#Event", "->", 
             RowBox[{"Button", "[", 
              RowBox[{
               RowBox[{"Mouseover", "[", 
                RowBox[{
                 RowBox[{"Style", "[", 
                  RowBox[{"#Event", ",", "Gray", ",", 
                   RowBox[{"FontSize", "\[Rule]", "10"}]}], "]"}], ",", 
                 RowBox[{"Style", "[", 
                  RowBox[{"#Event", ",", "Pink", ",", 
                   RowBox[{"FontSize", "\[Rule]", "10"}]}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"NotebookLocate", "[", 
                RowBox[{"{", 
                 RowBox[{"#URL", ",", "None"}], "}"}], "]"}], ",", 
               RowBox[{"Appearance", "\[Rule]", "None"}]}], "]"}]}], "}"}], 
           "&"}]}], "]"}]}]}], ";", 
      RowBox[{"aEventRank", "=", 
       RowBox[{"Block", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"k", "=", "1"}], "}"}], ",", 
         RowBox[{"Normal", "@", 
          RowBox[{"dsEventData", "[", 
           RowBox[{"Association", ",", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"#Event", "->", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"k", "++"}], ")"}], "/", 
                RowBox[{"Length", "[", "dsEventData", "]"}]}]}], "}"}], 
             "&"}]}], "]"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"lsVals", "=", 
       RowBox[{"Flatten", "@", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"#", "[", "\"\<Values\>\"", "]"}], "&"}], ",", 
          RowBox[{"Values", "@", "aCryptoCurrenciesData"}]}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"grGrid", "=", "\[IndentingNewLine]", 
       RowBox[{"DateListPlot", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"KeyValueMap", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Callout", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"#2", ",", 
                RowBox[{"Rescale", "[", 
                 RowBox[{
                  RowBox[{"aEventRank", "[", "#1", "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "1"}], "}"}], ",", 
                  RowBox[{"MinMax", "[", "lsVals", "]"}]}], "]"}]}], "}"}], 
              ",", 
              RowBox[{"aEventURL", "[", "#1", "]"}], ",", "Right"}], "]"}], 
            "&"}], ",", 
           RowBox[{"Sort", "@", "aEventDateObject"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"Gray", ",", 
            RowBox[{"Opacity", "[", "0.3", "]"}], ",", 
            RowBox[{"PointSize", "[", "0.0035", "]"}]}], "}"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Joined", "->", "False"}], ",", "\[IndentingNewLine]", 
         RowBox[{"GridLines", "->", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Sort", "@", 
             RowBox[{"Values", "[", "aEventDateObject", "]"}]}], ",", 
            "None"}], "}"}]}]}], "\[IndentingNewLine]", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Show", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"DateListPlot", "[", "\[IndentingNewLine]", 
         RowBox[{
         "aCryptoCurrenciesData", ",", "\[IndentingNewLine]", "opts", ",", 
          "\[IndentingNewLine]", 
          RowBox[{"GridLines", "->", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Sort", "@", 
              RowBox[{"Values", "[", "aEventDateObject", "]"}]}], ",", 
             "None"}], "}"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{"PlotRange", "\[Rule]", "All"}], ",", "\[IndentingNewLine]", 
          RowBox[{"AspectRatio", "\[Rule]", 
           RowBox[{"1", "/", "4"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "\[IndentingNewLine]", 
         "]"}], ",", "\[IndentingNewLine]", "grGrid"}], "\[IndentingNewLine]",
        "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"CryptocurrencyPlot", "[", "___", "]"}], ":=", "$Failed"}], 
  ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8328420692741537`*^9, 3.8328422003551283`*^9}, {
   3.8328422898980417`*^9, 3.832842342527631*^9}, {3.8328423953373203`*^9, 
   3.832842428882183*^9}, {3.832843202241749*^9, 3.832843205310986*^9}, {
   3.832846598150277*^9, 3.8328466030742702`*^9}, {3.832846635984754*^9, 
   3.832846736099024*^9}, {3.8328467716407223`*^9, 3.832846818508429*^9}, {
   3.832910812781322*^9, 3.8329108206563263`*^9}, {3.8329109741621447`*^9, 
   3.83291097442231*^9}, {3.832911356434414*^9, 3.832911396911456*^9}, {
   3.832911434712758*^9, 3.832911563155345*^9}, {3.8329116537979116`*^9, 
   3.832911659669557*^9}, {3.832912165586707*^9, 3.832912171053059*^9}, {
   3.832912427419248*^9, 3.8329124329999743`*^9}, {3.832912631693918*^9, 
   3.832912694463282*^9}, {3.832912733744706*^9, 3.8329127715688334`*^9}, {
   3.8329128123431396`*^9, 3.832912855011492*^9}, {3.832912891058416*^9, 
   3.832912953758361*^9}, {3.832912997113908*^9, 3.832912997372156*^9}, {
   3.832913140430538*^9, 3.8329131409248533`*^9}, {3.832913179615645*^9, 
   3.832913185408577*^9}, {3.832913241701075*^9, 3.832913303153235*^9}, {
   3.832913566241459*^9, 3.832913609911742*^9}, {3.8329137978587418`*^9, 
   3.83291380960494*^9}, {3.8329237492459593`*^9, 3.8329238867031612`*^9}, {
   3.832923958008407*^9, 3.83292395843445*^9}, {3.832924182854541*^9, 
   3.8329241840695267`*^9}, {3.832924234088337*^9, 3.832924234525708*^9}, {
   3.8329244018949633`*^9, 3.832924496936792*^9}, {3.832924554031476*^9, 
   3.8329245701087646`*^9}, {3.832924604544697*^9, 3.832924677706087*^9}, {
   3.83292470813643*^9, 3.832924744239367*^9}, {3.832924787481509*^9, 
   3.8329248187961597`*^9}, {3.832924886014776*^9, 3.8329248973437157`*^9}, {
   3.8329249329056473`*^9, 3.832924957891725*^9}, {3.83292500404169*^9, 
   3.832925057344481*^9}, {3.8329251447029343`*^9, 3.832925151340289*^9}, 
   3.832925723267963*^9, 3.833278981151746*^9, 3.833279449210823*^9, 
   3.833284911195847*^9, {3.8332849449233418`*^9, 3.833285062475831*^9}, {
   3.833285126556481*^9, 3.833285178756936*^9}, {3.8332859851407824`*^9, 
   3.8332859898097754`*^9}, {3.83328605000954*^9, 3.833286053429669*^9}, {
   3.833286153555562*^9, 3.833286160698702*^9}, {3.833286202628334*^9, 
   3.83328620411617*^9}, {3.8332863045544252`*^9, 3.83328630491402*^9}, {
   3.8332868346860523`*^9, 3.8332868397489233`*^9}, {3.833286881150374*^9, 
   3.8332869198503227`*^9}, {3.833368704479252*^9, 3.833368754744093*^9}, 
   3.833368908623776*^9},
 CellLabel->"In[201]:=",
 CellID->690569959,ExpressionUUID->"c6e412f5-7772-4ff3-abbf-9d87cc3c5f34"]
}, Open  ]],

Cell[CellGroupData[{

Cell["References", "Section",
 CellChangeTimes->{{3.8332730231657877`*^9, 3.8332730257537937`*^9}},
 CellID->1407672525,ExpressionUUID->"ae8dda3e-ced5-4290-bfd2-b73a8fda69e4"],

Cell[CellGroupData[{

Cell["Articles", "Subsection",
 CellChangeTimes->{{3.8332814427185802`*^9, 3.833281444406196*^9}},
 CellID->2072272323,ExpressionUUID->"455cd917-45de-4c8c-acdb-a050173657bc"],

Cell[TextData[{
 "[AA1] Anton Antonov, ",
 ButtonBox["\"Crypto-currencies data acquisition \
with\[NonBreakingSpace]visualization\"",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://mathematicaforprediction.wordpress.com/2021/06/19/crypto-\
currencies-data-acquisition-with-visualization/"], None},
  ButtonNote->
   "https://mathematicaforprediction.wordpress.com/2021/06/19/crypto-\
currencies-data-acquisition-with-visualization/"],
 ", (2021), ",
 ButtonBox["MathematicaForPrediction at WordPress",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://mathematicaforprediction.wordpress.com"], None},
  ButtonNote->"https://mathematicaforprediction.wordpress.com"],
 "."
}], "Text",
 CellChangeTimes->{{3.8332930926384697`*^9, 3.8332931001905003`*^9}, {
  3.833293237237082*^9, 3.833293296294854*^9}},
 CellID->791145615,ExpressionUUID->"28ad449e-1c3f-4884-9c9b-eefc66cda601"],

Cell[TextData[{
 "[AA2] Anton Antonov, ",
 ButtonBox["\"NY Times COVID-19 data visualization\"",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/SystemModeling/blob/master/Projects/\
Coronavirus-propagation-dynamics/Documents/NYTimes-COVID-19-data-\
visualization.md"], None},
  ButtonNote->
   "https://github.com/antononcube/SystemModeling/blob/master/Projects/\
Coronavirus-propagation-dynamics/Documents/NYTimes-COVID-19-data-\
visualization.md"],
 ", (2020), ",
 ButtonBox["SystemModeling at GitHub",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/SystemModeling"], None},
  ButtonNote->"https://github.com/antononcube/SystemModeling"],
 "."
}], "Text",
 CellChangeTimes->{{3.794745781750211*^9, 3.794745830524087*^9}, {
  3.794828285485854*^9, 3.794828286767498*^9}, {3.833293087024465*^9, 
  3.833293087080522*^9}},
 CellID->1713092728,ExpressionUUID->"efbcae13-740a-4238-915e-ac05176f906f"],

Cell[TextData[{
 "[AA3] Anton Antonov, ",
 ButtonBox["\[OpenCurlyDoubleQuote]Apple mobility trends data visualization\
\[CloseCurlyDoubleQuote]",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/SystemModeling/blob/master/Projects/\
Coronavirus-propagation-dynamics/Documents/Apple-mobility-trends-data-\
visualization.md"], None},
  ButtonNote->
   "https://github.com/antononcube/SystemModeling/blob/master/Projects/\
Coronavirus-propagation-dynamics/Documents/Apple-mobility-trends-data-\
visualization.md"],
 ", (2020), ",
 ButtonBox["SystemModeling at GitHub",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/SystemModeling"], None},
  ButtonNote->"https://github.com/antononcube/SystemModeling"],
 "."
}], "Text",
 CellChangeTimes->{{3.794745781750211*^9, 3.794745830524087*^9}, {
   3.794828285485854*^9, 3.794828286767498*^9}, {3.833273205635466*^9, 
   3.833273225562039*^9}, 3.833273507789813*^9, {3.833293090084992*^9, 
   3.833293090141348*^9}},
 CellID->636224167,ExpressionUUID->"99aff6fb-311b-49a7-afb1-f21f02a94b80"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Packages", "Subsection",
 CellChangeTimes->{{3.833281455015277*^9, 3.833281457175215*^9}},
 CellID->698496356,ExpressionUUID->"36f168b8-b1d7-4191-a012-56b62e1d271d"],

Cell[TextData[{
 "[AAp1] Anton Antonov, ",
 ButtonBox["Data reshaping Mathematica package",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/MathematicaForPrediction/blob/master/\
DataReshape.m"], None},
  ButtonNote->
   "https://github.com/antononcube/MathematicaForPrediction/blob/master/\
DataReshape.m"],
 ", (2018), ",
 ButtonBox["MathematicaForPrediciton at GitHub",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/MathematicaForPrediction"], None},
  ButtonNote->"https://github.com/antononcube/MathematicaForPrediction"],
 "."
}], "Text",
 CellChangeTimes->{{3.794828156850593*^9, 3.794828236850971*^9}},
 CellID->1482640790,ExpressionUUID->"58a47311-9a37-49c2-bd27-458f1006cba2"],

Cell[TextData[{
 "[AAp2] Anton Antonov, ",
 ButtonBox["Heatmap plot Mathematica package",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/MathematicaForPrediction/blob/master/\
Misc/HeatmapPlot.m"], None},
  ButtonNote->
   "https://github.com/antononcube/MathematicaForPrediction/blob/master/Misc/\
HeatmapPlot.m"],
 ", (2018), ",
 ButtonBox["MathematicaForPrediciton at GitHub",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/MathematicaForPrediction"], None},
  ButtonNote->"https://github.com/antononcube/MathematicaForPrediction"],
 "."
}], "Text",
 CellChangeTimes->{{3.794828156850593*^9, 3.794828236850971*^9}, {
  3.7952479470287867`*^9, 3.795247992691471*^9}},
 CellID->1491001389,ExpressionUUID->"279d341f-b2f0-4bfa-bcd9-87df74a8240e"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Resource functions", "Subsection",
 CellChangeTimes->{{3.833281462451518*^9, 3.8332814653542747`*^9}},
 CellID->273668080,ExpressionUUID->"41e89eb2-eb44-49a5-a4ca-ca9d11a790b7"],

Cell[TextData[{
 "[AAw1] Anton Antonov, ",
 ButtonBox["CryptocurrencyData",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://www.wolframcloud.com/obj/antononcube/DeployedResources/\
Function/CryptocurrencyData"], None},
  ButtonNote->
   "https://www.wolframcloud.com/obj/antononcube/DeployedResources/Function/\
CryptocurrencyData"],
 ", (2021)."
}], "Text",
 CellChangeTimes->{{3.833293302784493*^9, 3.8332933336967783`*^9}, {
  3.8332933654596043`*^9, 3.833293365460411*^9}},
 CellID->1776932333,ExpressionUUID->"b519f19d-8f9f-4c94-be62-dd622d533a3a"],

Cell[TextData[{
 "[AAw2] Anton Antonov, ",
 ButtonBox["RecordsSummary",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://resources.wolframcloud.com/FunctionRepository/resources/\
RecordsSummary/"], None},
  ButtonNote->
   "https://resources.wolframcloud.com/FunctionRepository/resources/\
RecordsSummary/"],
 ", (2019)."
}], "Text",
 CellChangeTimes->{{3.8332933707655783`*^9, 3.833293424013489*^9}},
 CellID->1994125549,ExpressionUUID->"13ecc6a9-6f13-4952-b476-8a247965727e"],

Cell[TextData[{
 "[AAw3] Anton Antonov, ",
 ButtonBox["ParetoPrinciplePlot",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://resources.wolframcloud.com/FunctionRepository/resources/\
ParetoPrinciplePlot"], None},
  ButtonNote->
   "https://resources.wolframcloud.com/FunctionRepository/resources/\
ParetoPrinciplePlot"],
 ", (2019)."
}], "Text",
 CellChangeTimes->{{3.833296183162264*^9, 3.8332962348565083`*^9}},
 CellID->1638306961,ExpressionUUID->"196f4ddc-bdde-42cc-934f-99bfa92a4a90"],

Cell[TextData[{
 "[AAw4] Anton Antonov, ",
 ButtonBox["CrossTabulate",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://resources.wolframcloud.com/FunctionRepository/resources/\
CrossTabulate"], None},
  ButtonNote->
   "https://resources.wolframcloud.com/FunctionRepository/resources/\
CrossTabulate"],
 ", (2019)."
}], "Text",
 CellChangeTimes->{{3.833293480683115*^9, 3.833293539170412*^9}, {
  3.8332962367016973`*^9, 3.833296236757818*^9}},
 CellID->2137255340,ExpressionUUID->"849f2023-1dec-4fee-bc9d-6ec38023a694"],

Cell[TextData[{
 "[AAw5] Anton Antonov, ",
 ButtonBox["IndependentComponentAnalysis",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://resources.wolframcloud.com/FunctionRepository/resources/\
IndependentComponentAnalysis"], None},
  ButtonNote->
   "https://resources.wolframcloud.com/FunctionRepository/resources/\
IndependentComponentAnalysis"],
 ", (2019)."
}], "Text",
 CellChangeTimes->{{3.833371005568866*^9, 3.833371068808207*^9}},
 CellID->2039019658,ExpressionUUID->"c82c5426-4fa3-4803-882c-53fb6a516e84"],

Cell[TextData[{
 "[AAw6] Anton Antonov, ",
 ButtonBox["QuantileRegression",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://resources.wolframcloud.com/FunctionRepository/resources/\
QuantileRegression"], None},
  ButtonNote->
   "https://resources.wolframcloud.com/FunctionRepository/resources/\
QuantileRegression"],
 ", (2019)."
}], "Text",
 CellChangeTimes->{{3.8333710710582*^9, 3.83337109859169*^9}},
 CellID->259353180,ExpressionUUID->"8ac2f384-8e7e-4cb2-b47c-288eb1690ba0"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Related Guides", "TutorialMoreAboutSection",
 CellChangeTimes->{{3.843042384656711*^9, 3.843042386024461*^9}},
 CellID->2146422486,ExpressionUUID->"eef4aea3-687f-4a58-820f-4795366921b3"],

Cell["XXXX", "TutorialMoreAbout",
 CellID->1492419896,ExpressionUUID->"66064b6d-e8a4-4d11-ad8f-616090f40ded"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Related Tech Notes", "RelatedTutorialsSection",
 CellID->492195112,ExpressionUUID->"0480ffa3-4b5e-459a-8f4c-3166dbe38248"],

Cell["Crypto-currencies data acquisition with visualization", \
"RelatedTutorials",
 CellChangeTimes->{3.89085876961274*^9},
 CellID->216239140,ExpressionUUID->"316e7e1e-c412-4f43-8975-e19adff68fcd"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Metadata", "MetadataSection",
 CellID->788895256,ExpressionUUID->"6949361f-cdd6-4a72-9d53-9a99e70df553"],

Cell[TextData[{
 "New in: ",
 Cell["1.0.1", "HistoryData",
  CellTags->"New",ExpressionUUID->"3f3f02d7-bf50-4d85-a6f2-f8ceea0077ed"],
 " | Modified in: ",
 Cell[" ", "HistoryData",
  CellTags->"Modified",ExpressionUUID->"7db1ac81-77a2-4a78-a778-09f580760f4e"],
 " | Obsolete in: ",
 Cell[" ", "HistoryData",
  CellTags->"Obsolete",ExpressionUUID->
  "ee9d02eb-1f09-4477-88cf-46b62f7bd9be"]
}], "History",
 CellChangeTimes->{{3.8908588009742937`*^9, 3.890858801987315*^9}},
 CellID->398531014,ExpressionUUID->"89c0d3cb-aa2e-476d-a303-62306ecb75f5"],

Cell[CellGroupData[{

Cell["Categorization", "CategorizationSection",
 CellID->109257305,ExpressionUUID->"80756550-1a44-4603-b48f-7af544775404"],

Cell["Tech Note", "Categorization",
 CellLabel->"Entity Type",
 CellID->189006950,ExpressionUUID->"daf61bdc-9be3-4fc3-915d-c693565d7bad"],

Cell["AntonAntonov/CryptocurrencyData", "Categorization",
 CellLabel->"Paclet Name",
 CellID->511494737,ExpressionUUID->"135ec80d-e540-4218-99d9-b8afa8ee4ca9"],

Cell["AntonAntonov`CryptocurrencyData`", "Categorization",
 CellLabel->"Context",
 CellID->315005818,ExpressionUUID->"dd873a6a-3a89-49df-813a-d562774d104f"],

Cell["\<\
AntonAntonov/CryptocurrencyData/tutorial/Cryptocurrenciesdataexplorations\
\>", "Categorization",
 CellLabel->"URI",
 CellID->755593271,ExpressionUUID->"893192be-2631-4f8d-9847-978860e22df7"]
}, Closed]],

Cell[CellGroupData[{

Cell["Keywords", "KeywordsSection",
 CellID->1185300986,ExpressionUUID->"e53523b1-e1f4-4c67-a66d-d061a3eccdb9"],

Cell["Cryptocurrency, Correlation, Graph", "Keywords",
 CellChangeTimes->{{3.890858807222337*^9, 3.890858839228862*^9}, {
  3.890859629000318*^9, 3.890859630381715*^9}},
 CellID->1295362130,ExpressionUUID->"10ae1bf8-cb94-4385-ab3c-2085a5079b68"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1363, 935},
WindowMargins->{{752, Automatic}, {213, Automatic}},
TaggingRules-><|"Paclet" -> "AntonAntonov/CryptocurrencyData"|>,
FrontEndVersion->"13.2 for Mac OS X ARM (64-bit) (January 30, 2023)",
StyleDefinitions->FrontEnd`FileName[{"Wolfram"}, "TechNotePageStylesExt.nb", 
  CharacterEncoding -> "UTF-8"],
ExpressionUUID->"33cb3556-7930-431c-9e33-dc519b649b81"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 126, 1, 114, "Title",ExpressionUUID->"e5fdd3a4-67a4-4981-8e2a-4591aed66139",
 CellID->443633144],
Cell[CellGroupData[{
Cell[731, 27, 172, 2, 45, "Section",ExpressionUUID->"d0cfcadf-3dac-4784-87e6-f0fe8b803f90",
 CellID->362479408],
Cell[906, 31, 829, 16, 63, "Text",ExpressionUUID->"b527cd70-7886-4731-afed-2a302e89d0bb",
 CellID->1927787364],
Cell[1738, 49, 256, 3, 25, "Text",ExpressionUUID->"54a3dab9-5595-44a3-8aab-44c977cae162",
 CellID->1236444459],
Cell[1997, 54, 189, 2, 27, "ItemNumbered",ExpressionUUID->"2ecf6c7d-c357-42aa-8a38-a023ef48a582",
 CellID->1870254041],
Cell[2189, 58, 212, 2, 27, "ItemNumbered",ExpressionUUID->"5aa396dc-77a7-4dda-a402-32e7e0a31c19",
 CellID->641525948],
Cell[2404, 62, 206, 2, 27, "ItemNumbered",ExpressionUUID->"6f28b443-7913-4665-a7f5-5b6ec0530e1b",
 CellID->1758700096],
Cell[2613, 66, 266, 5, 27, "ItemNumbered",ExpressionUUID->"a596bfe9-7c88-464b-a018-0c605206f071",
 CellID->507596164],
Cell[2882, 73, 214, 2, 27, "ItemNumbered",ExpressionUUID->"34eec393-16c7-4bf5-9297-088dd2b437b8",
 CellID->1363682464],
Cell[3099, 77, 286, 5, 27, "ItemNumbered",ExpressionUUID->"3ab9ad88-852c-4cd9-a3be-f76a44e8edd0",
 CellID->1465691664],
Cell[3388, 84, 239, 4, 27, "ItemNumbered",ExpressionUUID->"66da6198-93bd-4cea-8f15-811362d4dcd5",
 CellID->94882111],
Cell[3630, 90, 251, 3, 25, "Text",ExpressionUUID->"9765b1d1-76f6-47b5-b147-dd02e4783767",
 CellID->1250773503],
Cell[3884, 95, 902, 18, 23, "Item",ExpressionUUID->"7a5bac39-790b-406d-a87b-0cbd158c6b7b",
 CellID->32844438],
Cell[4789, 115, 950, 18, 23, "Subitem",ExpressionUUID->"df51f116-e51a-4f8a-8d66-5360c57ba93a",
 CellID->113172187],
Cell[5742, 135, 539, 8, 23, "Item",ExpressionUUID->"d5e34c44-d7b6-46d6-ae7c-d884cd4229be",
 CellID->1561919314],
Cell[6284, 145, 504, 6, 23, "Subitem",ExpressionUUID->"c45da308-fe9d-40cd-84ca-82d06ea91a6e",
 CellID->337809470],
Cell[6791, 153, 1152, 26, 23, "Item",ExpressionUUID->"1c30b718-a494-4ff5-a8cc-c37269e415c6",
 CellID->1764483269],
Cell[7946, 181, 461, 6, 23, "Subitem",ExpressionUUID->"c34b99d9-797c-491a-ba5f-2ce3f22caa14",
 CellID->1068620660],
Cell[8410, 189, 534, 10, 44, "Text",ExpressionUUID->"d428b2b2-6dfc-40f0-8fce-3d626bedcaa0",
 CellID->901692759]
}, Open  ]],
Cell[CellGroupData[{
Cell[8981, 204, 184, 2, 45, "Section",ExpressionUUID->"0dd32104-9d92-43af-b14e-feef4218e0dd",
 CellID->2105587281],
Cell[9168, 208, 1453, 31, 67, "Text",ExpressionUUID->"f1b20729-f1be-477e-a5e3-21fa6083f829",
 CellID->222412854],
Cell[CellGroupData[{
Cell[10646, 243, 179, 2, 41, "MathCaption",ExpressionUUID->"e27fa627-5975-4b38-ad12-b31ceb93cfd8",
 CellID->45557952],
Cell[10828, 247, 245, 5, 27, "Input",ExpressionUUID->"c0984499-a9b8-4752-9e70-c5544aa150d6",
 CellID->1188320932]
}, Open  ]],
Cell[CellGroupData[{
Cell[11110, 257, 207, 2, 25, "Text",ExpressionUUID->"6f9aa651-111d-4363-9237-69672ed8a917",
 CellID->1471291398],
Cell[CellGroupData[{
Cell[11342, 263, 315, 6, 27, "Input",ExpressionUUID->"00130bf0-5f76-4144-b712-b349911678a6",
 CellID->1867814628],
Cell[11660, 271, 1869, 31, 126, "Output",ExpressionUUID->"86061a57-48b4-4a0d-ab97-f2398579fc70",
 CellID->1860420078]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[13578, 308, 1050, 26, 67, "Text",ExpressionUUID->"e2c95732-d0e7-4fc3-8b59-7bda7d352bed",
 CellID->444500950],
Cell[CellGroupData[{
Cell[14653, 338, 666, 16, 66, "Input",ExpressionUUID->"4cf8a913-18d8-4edd-8ffc-3f4ce1bbdfc3",
 CellID->1779342384],
Cell[15322, 356, 9612, 193, 180, "Output",ExpressionUUID->"2f836043-dea7-421c-a419-7c6bee42ba62",
 CellID->718350626]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[24995, 556, 238, 3, 45, "Section",ExpressionUUID->"a2c49c41-a8b0-4468-91af-da1eb7bd3564",
 CellID->1697663413],
Cell[25236, 561, 290, 5, 44, "Text",ExpressionUUID->"309c06c9-a839-4114-8e3e-f993002dbcf5",
 CellID->1161248249],
Cell[25529, 568, 378, 7, 44, "Text",ExpressionUUID->"9b5021c9-9303-4ee4-b73c-e93f1e2de30d",
 CellID->767937007],
Cell[25910, 577, 565, 12, 25, "Text",ExpressionUUID->"dd8c0ae8-3bef-4ace-a626-db02059f3f3d",
 CellID->340558179],
Cell[26478, 591, 693, 14, 63, "Text",ExpressionUUID->"61e5f50a-0c7b-44f1-8b39-2647255653a1",
 CellID->717395198],
Cell[CellGroupData[{
Cell[27196, 609, 176, 2, 42, "Subsection",ExpressionUUID->"5f5a23da-2f93-45c0-bdb0-9fe712b0ea05",
 CellID->1287898528],
Cell[CellGroupData[{
Cell[27397, 615, 569, 12, 44, "Text",ExpressionUUID->"cb14e7d0-745b-4e85-8af7-f3721b19259a",
 CellID->1222881983],
Cell[CellGroupData[{
Cell[27991, 631, 441, 8, 27, "Input",ExpressionUUID->"f293f207-76ca-4aca-b0be-4de267c080c0",
 CellID->1558986491],
Cell[28435, 641, 169886, 3328, 620, "Output",ExpressionUUID->"8d8df739-99bd-4c2f-a1d8-fe4160700b90",
 CellID->165907748]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[198370, 3975, 254, 3, 25, "Text",ExpressionUUID->"439a611d-d1cf-4faa-b88f-39fc5bb61aee",
 CellID->437977190],
Cell[CellGroupData[{
Cell[198649, 3982, 298, 6, 27, "Input",ExpressionUUID->"6ec12c71-8df1-4d37-a65b-a15d3acef00b",
 CellID->1656174061],
Cell[198950, 3990, 10483, 299, 459, "Output",ExpressionUUID->"70cf8bcf-cd79-42be-b551-840facf42e99",
 CellID->977746830]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[209482, 4295, 247, 5, 25, "Text",ExpressionUUID->"38217457-51ee-46ee-ab3f-3ac336df3ce4",
 CellID->1781894460],
Cell[CellGroupData[{
Cell[209754, 4304, 1115, 27, 104, "Input",ExpressionUUID->"1d94215a-afaa-4993-befd-fa0b5054b145",
 CellID->1640731805],
Cell[210872, 4333, 62253, 1267, 187, "Output",ExpressionUUID->"e7e3ca31-4af2-4135-93fd-9bd779c1fc66",
 CellID->820751885]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[273174, 5606, 226, 4, 25, "Text",ExpressionUUID->"97366aac-e3d4-4517-a10c-539eabf8aef9",
 CellID->2089419155],
Cell[CellGroupData[{
Cell[273425, 5614, 599, 14, 47, "Input",ExpressionUUID->"53429138-04d0-44bc-a921-186775eb7497",
 CellID->1215142341],
Cell[274027, 5630, 1056, 18, 65, "Output",ExpressionUUID->"5be1f4a4-7139-4c06-99ba-deed11abf1a8",
 CellID->1089466514]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[275144, 5655, 170, 2, 42, "Subsection",ExpressionUUID->"8d6a1d7b-8dc5-47ed-86d4-3f8774e9a7d1",
 CellID->327842217],
Cell[CellGroupData[{
Cell[275339, 5661, 270, 5, 25, "Text",ExpressionUUID->"a9a3d7bb-3e0f-4517-8e9a-b701a280c456",
 CellID->1748586564],
Cell[CellGroupData[{
Cell[275634, 5670, 1314, 34, 161, "Input",ExpressionUUID->"c87afafa-c8d4-4288-87f1-f3d13093f69e",
 CellID->180671953],
Cell[276951, 5706, 2281, 65, 144, "Output",ExpressionUUID->"82831958-37b1-403e-9f58-388a3168e78c",
 CellID->299903841]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[279281, 5777, 459, 7, 25, "Text",ExpressionUUID->"5e66c5e4-bcc4-447f-832d-d15dc6a0300a",
 CellID->1894663852],
Cell[CellGroupData[{
Cell[279765, 5788, 926, 19, 47, "Input",ExpressionUUID->"1de176fb-e314-48e2-b41c-7b2b3c71e6d7",
 CellID->1500293889],
Cell[280694, 5809, 55003, 1125, 409, "Output",ExpressionUUID->"4f35d894-1c97-4186-a322-528f5e62c773",
 CellID->232328406]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[335746, 6940, 279, 5, 25, "Text",ExpressionUUID->"564d0832-2377-4642-bbd6-bcf4be554ae5",
 CellID->11637213],
Cell[CellGroupData[{
Cell[336050, 6949, 584, 14, 66, "Input",ExpressionUUID->"5bf6e00e-a6ed-42b0-b50a-986a6cb67089",
 CellID->165627014],
Cell[336637, 6965, 1077, 18, 65, "Output",ExpressionUUID->"a4672d40-2e6c-4517-ada7-cb175799bff5",
 CellID->1323815371]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[337763, 6989, 453, 8, 25, "Text",ExpressionUUID->"0247ec4b-2bf6-4229-96cb-3ed3184e2a52",
 CellID->96863732],
Cell[CellGroupData[{
Cell[338241, 7001, 1238, 26, 104, "Input",ExpressionUUID->"2e30ad5b-81d1-449b-a806-90360b535ca1",
 CellID->608928330],
Cell[339482, 7029, 363847, 6241, 293, "Output",ExpressionUUID->"03fa4810-7392-47a2-9841-e01e25316cbb",
 CellID->1999720550]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[703390, 13277, 181, 2, 42, "Subsection",ExpressionUUID->"cfe33a1b-d8cb-439b-9eac-3c5d3bd91fa3",
 CellID->554417786],
Cell[CellGroupData[{
Cell[703596, 13283, 270, 5, 25, "Text",ExpressionUUID->"987cd30e-3ae1-4fd7-ad6f-2ff72f830cd5",
 CellID->168184969],
Cell[CellGroupData[{
Cell[703891, 13292, 1257, 32, 161, "Input",ExpressionUUID->"0375f3e0-3c1c-4cc9-9c57-2154f07bbbb6",
 CellID->596294531],
Cell[705151, 13326, 2328, 66, 144, "Output",ExpressionUUID->"23242700-6f2e-4228-8d03-cfc8b4a08e16",
 CellID->189130563]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[707528, 13398, 456, 7, 25, "Text",ExpressionUUID->"f8171919-b9a8-4d93-b402-9f2e942e2bc1",
 CellID->1475574675],
Cell[CellGroupData[{
Cell[708009, 13409, 1071, 23, 66, "Input",ExpressionUUID->"0a07171a-1e23-41ff-a6d1-a731f2a478d3",
 CellID->842407169],
Cell[709083, 13434, 54898, 1128, 412, "Output",ExpressionUUID->"7f81f06f-2470-4ce1-bc2d-56431e5a4e31",
 CellID->2131469926]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[764030, 14568, 284, 5, 25, "Text",ExpressionUUID->"06323b1c-3a70-49c9-b44e-f1297b288e1a",
 CellID->1763485615],
Cell[CellGroupData[{
Cell[764339, 14577, 716, 17, 66, "Input",ExpressionUUID->"b7ee8de3-8768-4693-a8d9-27aad7c87fa7",
 CellID->1480919058],
Cell[765058, 14596, 1075, 18, 65, "Output",ExpressionUUID->"f6a386b7-5402-459c-89b8-14a926f3384e",
 CellID->395681658]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[766182, 14620, 505, 9, 25, "Text",ExpressionUUID->"f47a9922-fef0-4286-8c7f-60f3637ca9e9",
 CellID->1469200750],
Cell[CellGroupData[{
Cell[766712, 14633, 1387, 29, 85, "Input",ExpressionUUID->"a78d8044-b3d1-41f5-a5ef-90dcd7ab9205",
 CellID->1090032044],
Cell[768102, 14664, 356272, 6130, 352, "Output",ExpressionUUID->"4fd76ee1-550a-451b-9bb6-898a50c5004f",
 CellID->1459762632]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1124447, 20802, 176, 2, 45, "Section",ExpressionUUID->"4585c35e-6471-4360-bc1a-acbba485906e",
 CellID->471139076],
Cell[1124626, 20806, 301, 5, 44, "Text",ExpressionUUID->"b94fd5c5-eacd-4807-90b9-1710d7cb194d",
 CellID->662243843],
Cell[CellGroupData[{
Cell[1124952, 20815, 528, 12, 25, "Text",ExpressionUUID->"0e8cd5a8-f40b-44b8-9223-cf127cee7639",
 CellID->2072010547],
Cell[CellGroupData[{
Cell[1125505, 20831, 5005, 113, 940, "Input",ExpressionUUID->"9c4ffbe9-0434-4bee-b660-87bad262e65c",
 CellID->686443677],
Cell[1130513, 20946, 51293, 969, 302, "Output",ExpressionUUID->"5e08e715-e29c-4ce6-9bf1-434cc77a636d",
 CellID->1019271023]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1181867, 21922, 249, 3, 45, "Section",ExpressionUUID->"1a46493e-7bca-4500-9a00-ef62a8fde5c0",
 CellID->776727655],
Cell[1182119, 21927, 324, 6, 25, "Text",ExpressionUUID->"feda22b3-fc79-4c2a-9400-284bf52b1cc6",
 CellID->2056091119],
Cell[1182446, 21935, 398, 8, 44, "Text",ExpressionUUID->"593e89ab-c8c8-4947-8389-c2001992b35d",
 CellID->1564073156],
Cell[CellGroupData[{
Cell[1182869, 21947, 179, 2, 25, "Text",ExpressionUUID->"c2d08032-82fd-4e19-8b04-163fb3098006",
 CellID->30209965],
Cell[1183051, 21951, 525, 11, 27, "Input",ExpressionUUID->"b12719d0-6032-441a-ae03-cc7a75e33146",
 CellID->932741063]
}, Open  ]],
Cell[CellGroupData[{
Cell[1183613, 21967, 360, 7, 25, "Text",ExpressionUUID->"3b8c0d35-6466-4b82-bb08-5eb5632653bb",
 CellID->2095906388],
Cell[1183976, 21976, 1462, 31, 66, "Input",ExpressionUUID->"7311a2c2-de6c-415a-a491-5066614c5451",
 CellID->724401375]
}, Open  ]],
Cell[CellGroupData[{
Cell[1185475, 22012, 243, 3, 25, "Text",ExpressionUUID->"f8465fe3-e8d2-4e80-9695-4fec884d23b8",
 CellID->929114782],
Cell[CellGroupData[{
Cell[1185743, 22019, 800, 21, 66, "Input",ExpressionUUID->"e7d23a27-937c-45ab-a444-215ea41f0e81",
 CellID->1278543737],
Cell[1186546, 22042, 6902, 183, 296, "Output",ExpressionUUID->"3b1f8f44-0817-4806-984f-00ac033e789c",
 CellID->411031442]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1193497, 22231, 250, 3, 25, "Text",ExpressionUUID->"d6654746-6a5b-4ea7-9566-2721b53a63d7",
 CellID->763215877],
Cell[CellGroupData[{
Cell[1193772, 22238, 420, 10, 27, "Input",ExpressionUUID->"1490ce37-0cfd-4431-a3bc-4c2a56a8cd08",
 CellID->449421208],
Cell[1194195, 22250, 2553, 69, 132, "Output",ExpressionUUID->"87acab8e-4eac-4a97-a4b8-c744b85b1628",
 CellID->1898036942]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1196797, 22325, 364, 7, 25, "Text",ExpressionUUID->"6fab0050-1b7a-4791-9718-a94ddce0c4d6",
 CellID->722256357],
Cell[CellGroupData[{
Cell[1197186, 22336, 1527, 24, 47, "Input",ExpressionUUID->"a5384dc6-d7ad-4942-babe-799fc936be81",
 CellID->1385019255],
Cell[1198716, 22362, 47057, 1054, 340, "Output",ExpressionUUID->"1425728b-e032-420b-abdb-44adac062eb6",
 CellID->1584791656]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1245822, 23422, 411, 7, 25, "Text",ExpressionUUID->"de120fdd-bc0e-4ef6-96c7-111b6c8c8e9d",
 CellID->1443368952],
Cell[CellGroupData[{
Cell[1246258, 23433, 1924, 34, 66, "Input",ExpressionUUID->"a86a78c5-5ed9-48ff-8720-837db92a7033",
 CellID->726699752],
Cell[1248185, 23469, 46994, 1054, 341, "Output",ExpressionUUID->"b6dd3534-35a0-4464-a5b2-b1f2c08e36fe",
 CellID->353688651]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1295228, 24529, 361, 7, 25, "Text",ExpressionUUID->"4f269298-3300-47a8-b5f4-41f6665b376e",
 CellID->903231375],
Cell[CellGroupData[{
Cell[1295614, 24540, 1408, 22, 47, "Input",ExpressionUUID->"c00c6cbd-e6db-4a9b-a80b-7beca3c11e45",
 CellID->47818982],
Cell[1297025, 24564, 48901, 1123, 336, "Output",ExpressionUUID->"ec9d94ec-ef53-4576-a214-734a3130d63e",
 CellID->210422461]
}, Open  ]]
}, Open  ]],
Cell[1345953, 25691, 157, 2, 25, "Text",ExpressionUUID->"e0050155-f41e-448b-87d3-a73f19150e3a",
 CellID->534746496],
Cell[CellGroupData[{
Cell[1346135, 25697, 175, 2, 42, "Subsection",ExpressionUUID->"82baa0ed-6ccb-4e31-86a8-91d52566b0a1",
 CellID->265295577],
Cell[CellGroupData[{
Cell[1346335, 25703, 178, 2, 43, "Subsubsection",ExpressionUUID->"6eff2aea-1b4f-4aae-8598-ae69644c53a1",
 CellID->646711467],
Cell[1346516, 25707, 330, 6, 25, "Text",ExpressionUUID->"28464abd-0602-4340-97e5-51410f356976",
 CellID->864888402],
Cell[1346849, 25715, 368, 6, 27, "ItemNumbered",ExpressionUUID->"f0f78484-fc07-440b-a474-d415b8417104",
 CellID->2010049518],
Cell[1347220, 25723, 403, 5, 27, "ItemNumbered",ExpressionUUID->"76d34af9-9910-4244-99c1-14c6ca810a92",
 CellID->836998069],
Cell[1347626, 25730, 671, 11, 43, "ItemNumbered",ExpressionUUID->"de3217ff-f355-4007-96fa-08d89e6effa5",
 CellID->1408657833],
Cell[1348300, 25743, 400, 5, 27, "ItemNumbered",ExpressionUUID->"056a65d7-e33f-4582-a362-2ed298f7f3af",
 CellID->1452474703],
Cell[1348703, 25750, 175, 2, 25, "Text",ExpressionUUID->"7bde41e7-539b-442f-93c1-283b646c4327",
 CellID->1295717872],
Cell[1348881, 25754, 436, 8, 40, "Item",ExpressionUUID->"76be5bf9-df67-4a31-a72c-dbe2e423de85",
 CellID->1646094124],
Cell[1349320, 25764, 523, 9, 23, "Item",ExpressionUUID->"49466913-c7cf-4c32-b2a1-75fdd852f71d",
 CellID->2019601414]
}, Open  ]],
Cell[CellGroupData[{
Cell[1349880, 25778, 173, 2, 43, "Subsubsection",ExpressionUUID->"6b8a25fa-a4d8-48fe-8cc1-101ea1d9e566",
 CellID->314440616],
Cell[1350056, 25782, 267, 3, 25, "Text",ExpressionUUID->"bf2f126d-9f03-4b69-8277-0950a9a28c15",
 CellID->1993661492],
Cell[1350326, 25787, 274, 5, 27, "ItemNumbered",ExpressionUUID->"68402f07-ea0f-44b8-9aa1-f5e04ac784c5",
 CellID->281351903],
Cell[1350603, 25794, 391, 7, 27, "ItemNumbered",ExpressionUUID->"db4eb5f8-0486-4192-8fcf-1e7864f6ce68",
 CellID->2069926674],
Cell[1350997, 25803, 251, 3, 27, "ItemNumbered",ExpressionUUID->"e2748fe8-63e5-41e7-858b-562c3d039ac0",
 CellID->22528518],
Cell[1351251, 25808, 177, 2, 25, "Text",ExpressionUUID->"fc228e53-0b34-442e-a6fd-5aedb098ed2a",
 CellID->679680154],
Cell[1351431, 25812, 349, 6, 23, "Item",ExpressionUUID->"f2cd9ef3-7152-4723-ac22-833236a14b6a",
 CellID->918829885],
Cell[1351783, 25820, 274, 5, 23, "Item",ExpressionUUID->"8f61c07a-3699-4ff5-b421-52f9ac1df335",
 CellID->218971618],
Cell[1352060, 25827, 334, 6, 40, "Subitem",ExpressionUUID->"fdeb20b9-6cdf-4763-8ee3-d857684e9c7c",
 CellID->1616496415],
Cell[1352397, 25835, 308, 5, 23, "Item",ExpressionUUID->"77f43c26-47df-4cfe-82c8-027e0bcd3146",
 CellID->639628708],
Cell[1352708, 25842, 353, 6, 23, "Subitem",ExpressionUUID->"14ee29dc-fe2f-4313-a42a-56ea37003176",
 CellID->2084042121],
Cell[1353064, 25850, 288, 5, 23, "Subitem",ExpressionUUID->"88849b19-6a49-4b6b-bb34-bdfcaa745c00",
 CellID->1037645077]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1353413, 25862, 185, 2, 45, "Section",ExpressionUUID->"b40797ec-7d16-418e-962f-a038def7b2f7",
 CellID->2133595499],
Cell[1353601, 25866, 274, 5, 25, "Text",ExpressionUUID->"6a101fc6-ccf4-4d63-952e-df5994448e6c",
 CellID->657614087],
Cell[CellGroupData[{
Cell[1353900, 25875, 190, 2, 42, "Subsection",ExpressionUUID->"f36dd83d-08aa-4727-8b9e-0b3038b84d2b",
 CellID->1569112747],
Cell[CellGroupData[{
Cell[1354115, 25881, 254, 3, 25, "Text",ExpressionUUID->"27552f34-af8a-4b22-b94b-862a72bb8eee",
 CellID->978753669],
Cell[CellGroupData[{
Cell[1354394, 25888, 418, 8, 27, "Input",ExpressionUUID->"552d9f00-1618-4688-b043-71be6140fa47",
 CellID->188178863],
Cell[1354815, 25898, 764, 13, 46, "Output",ExpressionUUID->"e3eeee39-1f66-427b-85b0-df3266ced6d1",
 CellID->1008742356]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1355628, 25917, 561, 11, 25, "Text",ExpressionUUID->"1e75c067-2f35-4e4c-a894-eeee8409c386",
 CellID->1626222057],
Cell[CellGroupData[{
Cell[1356214, 25932, 653, 14, 27, "Input",ExpressionUUID->"1df1c6f3-02b2-4976-9afa-612d72cdb5bc",
 CellID->889736630],
Cell[1356870, 25948, 300, 7, 26, "Output",ExpressionUUID->"22258757-833f-4790-8e3e-feb03ddb9ee8",
 CellID->1696867874]
}, Open  ]],
Cell[1357185, 25958, 1222, 30, 85, "Input",ExpressionUUID->"11415c51-f3cb-4fb4-bec2-af172038aef5",
 CellID->874906349],
Cell[1358410, 25990, 1161, 31, 85, "Input",ExpressionUUID->"ce552769-e9ae-496d-bb00-9b0c467b4294",
 CellID->730476634]
}, Open  ]],
Cell[CellGroupData[{
Cell[1359608, 26026, 180, 2, 25, "Text",ExpressionUUID->"f76ec478-5cc9-4055-9a83-6f1b036a8082",
 CellID->254136533],
Cell[1359791, 26030, 657, 17, 47, "Input",ExpressionUUID->"f87ef3c2-b43b-40f3-9ab1-23db6f414137",
 CellID->1866686397]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1360497, 26053, 239, 3, 42, "Subsection",ExpressionUUID->"bd9b6854-b953-4e9d-bb5a-010eb8585d1e",
 CellID->2104261386],
Cell[CellGroupData[{
Cell[1360761, 26060, 352, 7, 25, "Text",ExpressionUUID->"54984b94-e403-446b-8317-228fe6efb62d",
 CellID->1560415706],
Cell[CellGroupData[{
Cell[1361138, 26071, 1829, 47, 180, "Input",ExpressionUUID->"6bc48f32-bdf1-46e9-b842-dd618d6c303a",
 CellID->836473578],
Cell[1362970, 26120, 114278, 1993, 286, "Output",ExpressionUUID->"a1786600-fa8a-4fab-a9b6-aca501fb29dc",
 CellID->891221476]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1477297, 28119, 253, 6, 25, "Text",ExpressionUUID->"644cc153-04cb-4b54-bf35-9fd591b20878",
 CellID->1183472184],
Cell[1477553, 28127, 1617, 45, 161, "Input",ExpressionUUID->"a4724570-aac6-4155-8d1e-a339b0d99365",
 CellID->623457974]
}, Open  ]],
Cell[CellGroupData[{
Cell[1479207, 28177, 202, 2, 25, "Text",ExpressionUUID->"40ec1167-60ac-4300-b4da-12991f56bf63",
 CellID->885455305],
Cell[CellGroupData[{
Cell[1479434, 28183, 372, 7, 27, "Input",ExpressionUUID->"ee0c7656-b3f0-40c8-be9c-a82b3e4c7a05",
 CellID->1933121072],
Cell[1479809, 28192, 3273, 95, 144, "Output",ExpressionUUID->"58b8f2be-ce32-4fca-93f3-bb29db7b0411",
 CellID->1483730539]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1483131, 28293, 200, 2, 25, "Text",ExpressionUUID->"d9313fea-9cf0-45f9-9dea-07194842e7a8",
 CellID->685761641],
Cell[CellGroupData[{
Cell[1483356, 28299, 1246, 30, 66, "Input",ExpressionUUID->"c32fd15b-5b7e-4344-bbac-805ccd549cc3",
 CellID->51166838],
Cell[1484605, 28331, 30326, 550, 140, "Output",ExpressionUUID->"1a1607d7-4717-4c55-9606-a53e22394425",
 CellID->2086721270]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1514980, 28887, 240, 4, 25, "Text",ExpressionUUID->"f897d740-d8fa-4511-9ab8-8f1712507f86",
 CellID->967587466],
Cell[CellGroupData[{
Cell[1515245, 28895, 382, 8, 27, "Input",ExpressionUUID->"6be8c55c-a8be-437c-8f9b-53636c422042",
 CellID->1496365978],
Cell[1515630, 28905, 230329, 4629, 640, "Output",ExpressionUUID->"68447bd4-fa8a-4e77-aa4c-e1ea63399d5a",
 CellID->1180211751]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1746008, 33540, 333, 6, 25, "Text",ExpressionUUID->"7c69e5f7-100c-4599-94e4-ed7904907ecc",
 CellID->242002229],
Cell[CellGroupData[{
Cell[1746366, 33550, 1242, 26, 85, "Input",ExpressionUUID->"d7465cdd-5b63-474c-b8b9-11fda6883c06",
 CellID->2144919032],
Cell[1747611, 33578, 40391, 674, 387, "Output",ExpressionUUID->"e60c7a05-67d2-4a01-a814-e3a5aeff7383",
 CellID->800408663]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1788063, 34259, 289, 4, 42, "Subsection",ExpressionUUID->"1491c1a4-958d-4d0b-b622-14074259fa96",
 CellID->1993672282],
Cell[CellGroupData[{
Cell[1788377, 34267, 323, 6, 25, "Text",ExpressionUUID->"7ff07e9c-eac3-4232-a7a5-fd4c141ae0fa",
 CellID->462699433],
Cell[CellGroupData[{
Cell[1788725, 34277, 1879, 47, 180, "Input",ExpressionUUID->"dfdf75ad-7048-4303-b263-609dbe50b85d",
 CellID->551084644],
Cell[1790607, 34326, 115116, 2002, 286, "Output",ExpressionUUID->"bbc7138b-214a-4b1d-9aa3-56ce9401804b",
 CellID->1489947284]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1905772, 36334, 253, 6, 25, "Text",ExpressionUUID->"623f4c43-7441-4cb8-b00d-d28466f07c91",
 CellID->2130125844],
Cell[1906028, 36342, 1676, 46, 161, "Input",ExpressionUUID->"f01bf6de-16f3-4efe-bd8f-36c5a8ebddab",
 CellID->325180971]
}, Open  ]],
Cell[CellGroupData[{
Cell[1907741, 36393, 203, 2, 25, "Text",ExpressionUUID->"386f85ac-3774-4c72-9ba2-a2a112924210",
 CellID->2118181629],
Cell[CellGroupData[{
Cell[1907969, 36399, 372, 7, 27, "Input",ExpressionUUID->"379d3cfe-86ad-4c7b-98c1-f7ee81b90980",
 CellID->1442222284],
Cell[1908344, 36408, 3275, 95, 144, "Output",ExpressionUUID->"877c9aff-f302-4789-acba-65569e5823db",
 CellID->829883714]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1911668, 36509, 200, 2, 25, "Text",ExpressionUUID->"11dd9d5a-874f-41e5-9b96-7da44f68a5ad",
 CellID->782003499],
Cell[CellGroupData[{
Cell[1911893, 36515, 1247, 30, 66, "Input",ExpressionUUID->"e95069d2-8e36-4a02-b131-a9c33ce0b724",
 CellID->532888053],
Cell[1913143, 36547, 28900, 521, 112, "Output",ExpressionUUID->"088b4fa5-115d-4efb-964b-248d606eecac",
 CellID->217713625]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1942092, 37074, 241, 4, 25, "Text",ExpressionUUID->"ab682ca4-d1b8-49ac-8ec4-1e0ca4f73443",
 CellID->1242698781],
Cell[CellGroupData[{
Cell[1942358, 37082, 382, 8, 27, "Input",ExpressionUUID->"77fc2db6-29f1-4c60-8ba5-dee4d5fe6394",
 CellID->1759945192],
Cell[1942743, 37092, 230288, 4630, 640, "Output",ExpressionUUID->"d804a614-8445-47aa-b731-cd7dfbc3cec9",
 CellID->1641479894]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2173080, 41728, 361, 7, 25, "Text",ExpressionUUID->"2180968c-a329-43ff-b718-61aab4fc4c75",
 CellID->2106571813],
Cell[CellGroupData[{
Cell[2173466, 41739, 1244, 26, 85, "Input",ExpressionUUID->"ddc593b2-68e1-407b-9a35-9a4024af165a",
 CellID->1737056649],
Cell[2174713, 41767, 40762, 669, 387, "Output",ExpressionUUID->"6f89ee88-577b-4e9f-a9bc-07712317cc01",
 CellID->391999494]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2215536, 42443, 278, 4, 42, "Subsection",ExpressionUUID->"628cad28-b2d2-4c4f-86f3-be5c2f003a37",
 CellID->1818402425],
Cell[CellGroupData[{
Cell[2215839, 42451, 483, 8, 25, "Text",ExpressionUUID->"fc6e5239-b0b2-4073-917c-a42b628872da",
 CellID->1049776518],
Cell[CellGroupData[{
Cell[2216347, 42463, 323, 7, 27, "Input",ExpressionUUID->"7ea2522c-5570-4422-91a4-c3962497ae80",
 CellID->2015777921],
Cell[2216673, 42472, 85717, 1454, 797, "Output",ExpressionUUID->"8c6aff19-48f4-46e6-80de-b71d14718f2d",
 CellID->2070517821]
}, Open  ]]
}, Open  ]],
Cell[2302417, 43930, 385, 7, 44, "Text",ExpressionUUID->"313f4767-e688-4b67-a2bf-f7c64a03a39c",
 CellID->477503175]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2302851, 43943, 186, 2, 45, "Section",ExpressionUUID->"8241f5dc-26ad-4e8b-b4b3-5e755e426472",
 CellID->249473386],
Cell[2303040, 43947, 443, 7, 44, "Text",ExpressionUUID->"92b74bc1-5218-4470-96b1-15944da64409",
 CellID->1011119558],
Cell[CellGroupData[{
Cell[2303508, 43958, 178, 2, 42, "Subsection",ExpressionUUID->"14d7b165-3946-4a33-9ae6-b39913414e99",
 CellID->848312595],
Cell[CellGroupData[{
Cell[2303711, 43964, 199, 2, 25, "Text",ExpressionUUID->"3573329e-7a0f-4762-98d4-8769aad080c9",
 CellID->445851732],
Cell[2303913, 43968, 1004, 26, 104, "Input",ExpressionUUID->"fd166abc-d029-450b-bc02-3fdec8e09fa6",
 CellID->859615341],
Cell[2304920, 43996, 2551, 54, 161, "Input",ExpressionUUID->"e13f321f-9fae-4f4a-9d55-e620cab942e6",
 CellID->1432542818]
}, Open  ]],
Cell[CellGroupData[{
Cell[2307508, 44055, 195, 2, 25, "Text",ExpressionUUID->"35fc31d9-beba-4847-ae92-571d8b489dbc",
 CellID->1307975609],
Cell[CellGroupData[{
Cell[2307728, 44061, 828, 21, 85, "Input",ExpressionUUID->"6d0bd1e2-ed97-4767-b154-ca9fdede85e0",
 CellID->1503449771],
Cell[2308559, 44084, 40072, 743, 1150, "Output",ExpressionUUID->"1f537c0c-b447-427e-93c3-9e359d9c0c15",
 CellID->530993538]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2348680, 44833, 228, 4, 25, "Text",ExpressionUUID->"eb0dd866-2ae3-4e29-ab35-b2e6a1923b19",
 CellID->1187710595],
Cell[2348911, 44839, 1419, 30, 180, "Input",ExpressionUUID->"47f7ef85-fd48-45fb-8a26-4f49ebd24f55",
 CellID->991471300],
Cell[CellGroupData[{
Cell[2350355, 44873, 687, 14, 66, "Input",ExpressionUUID->"10426e35-83b7-49c8-bf7d-7927415ab630",
 CellID->1332522027],
Cell[2351045, 44889, 190628, 3889, 772, "Output",ExpressionUUID->"42c01377-4d8f-4be9-973e-3ff18a0511a3",
 CellID->1141132442]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2541746, 48786, 184, 2, 45, "Section",ExpressionUUID->"629e3776-d7f6-4ee4-b880-bcdc86a9d0ab",
 CellID->1738236873],
Cell[2541933, 48790, 210, 2, 25, "Text",ExpressionUUID->"a02e9758-ef34-4e2b-93f3-8b8b074a2890",
 CellID->179590723],
Cell[2542146, 48794, 214, 2, 23, "Item",ExpressionUUID->"b2c77ca2-4672-4f72-b2e3-7a1dea0a4520",
 CellID->1166757426],
Cell[2542363, 48798, 348, 7, 23, "Item",ExpressionUUID->"b29bbb9e-109f-4eb8-bb00-9a4d106009da",
 CellID->1018878025],
Cell[2542714, 48807, 315, 4, 23, "Item",ExpressionUUID->"0d7d2a0c-3714-4c5b-b270-67216ffdd68c",
 CellID->248364997],
Cell[2543032, 48813, 437, 7, 44, "Text",ExpressionUUID->"30542a40-fa79-4be3-a881-26ba2cbb32e3",
 CellID->1709778458]
}, Open  ]],
Cell[CellGroupData[{
Cell[2543506, 48825, 195, 3, 45, "Section",ExpressionUUID->"5b1992d8-54a8-4b6c-97c2-c48917178155",
 CellID->767863099],
Cell[2543704, 48830, 653, 12, 139, "Input",ExpressionUUID->"47763aad-3d3b-4e6c-a5f0-d8f9640fae52",
 InitializationCell->True,
 CellID->1245870070]
}, Open  ]],
Cell[CellGroupData[{
Cell[2544394, 48847, 245, 4, 45, "Section",ExpressionUUID->"4cb6ecc9-96ac-4a35-a651-4b46c5fbfc78",
 CellID->1372708240],
Cell[2544642, 48853, 8038, 172, 785, "Input",ExpressionUUID->"c6e412f5-7772-4ff3-abbf-9d87cc3c5f34",
 InitializationCell->True,
 CellID->690569959]
}, Open  ]],
Cell[CellGroupData[{
Cell[2552717, 49030, 175, 2, 45, "Section",ExpressionUUID->"ae8dda3e-ced5-4290-bfd2-b73a8fda69e4",
 CellID->1407672525],
Cell[CellGroupData[{
Cell[2552917, 49036, 174, 2, 42, "Subsection",ExpressionUUID->"455cd917-45de-4c8c-acdb-a050173657bc",
 CellID->2072272323],
Cell[2553094, 49040, 897, 21, 44, "Text",ExpressionUUID->"28ad449e-1c3f-4884-9c9b-eefc66cda601",
 CellID->791145615],
Cell[2553994, 49063, 967, 23, 25, "Text",ExpressionUUID->"efbcae13-740a-4238-915e-ac05176f906f",
 CellID->1713092728],
Cell[2554964, 49088, 1099, 25, 25, "Text",ExpressionUUID->"99aff6fb-311b-49a7-afb1-f21f02a94b80",
 CellID->636224167]
}, Open  ]],
Cell[CellGroupData[{
Cell[2556100, 49118, 171, 2, 42, "Subsection",ExpressionUUID->"36f168b8-b1d7-4191-a012-56b62e1d271d",
 CellID->698496356],
Cell[2556274, 49122, 756, 19, 25, "Text",ExpressionUUID->"58a47311-9a37-49c2-bd27-458f1006cba2",
 CellID->1482640790],
Cell[2557033, 49143, 815, 20, 25, "Text",ExpressionUUID->"279d341f-b2f0-4bfa-bcd9-87df74a8240e",
 CellID->1491001389]
}, Open  ]],
Cell[CellGroupData[{
Cell[2557885, 49168, 183, 2, 42, "Subsection",ExpressionUUID->"41e89eb2-eb44-49a5-a4ca-ca9d11a790b7",
 CellID->273668080],
Cell[2558071, 49172, 564, 14, 25, "Text",ExpressionUUID->"b519f19d-8f9f-4c94-be62-dd622d533a3a",
 CellID->1776932333],
Cell[2558638, 49188, 487, 13, 25, "Text",ExpressionUUID->"13ecc6a9-6f13-4952-b476-8a247965727e",
 CellID->1994125549],
Cell[2559128, 49203, 500, 13, 25, "Text",ExpressionUUID->"196f4ddc-bdde-42cc-934f-99bfa92a4a90",
 CellID->1638306961],
Cell[2559631, 49218, 531, 14, 25, "Text",ExpressionUUID->"849f2023-1dec-4fee-bc9d-6ec38023a694",
 CellID->2137255340],
Cell[2560165, 49234, 525, 13, 25, "Text",ExpressionUUID->"c82c5426-4fa3-4803-882c-53fb6a516e84",
 CellID->2039019658],
Cell[2560693, 49249, 491, 13, 25, "Text",ExpressionUUID->"8ac2f384-8e7e-4cb2-b47c-288eb1690ba0",
 CellID->259353180]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2561233, 49268, 192, 2, 74, "TutorialMoreAboutSection",ExpressionUUID->"eef4aea3-687f-4a58-820f-4795366921b3",
 CellID->2146422486],
Cell[2561428, 49272, 109, 1, 24, "TutorialMoreAbout",ExpressionUUID->"66064b6d-e8a4-4d11-ad8f-616090f40ded",
 CellID->1492419896]
}, Open  ]],
Cell[CellGroupData[{
Cell[2561574, 49278, 128, 1, 74, "RelatedTutorialsSection",ExpressionUUID->"0480ffa3-4b5e-459a-8f4c-3166dbe38248",
 CellID->492195112],
Cell[2561705, 49281, 199, 3, 24, "RelatedTutorials",ExpressionUUID->"316e7e1e-c412-4f43-8975-e19adff68fcd",
 CellID->216239140]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2561953, 49290, 110, 1, 72, "MetadataSection",ExpressionUUID->"6949361f-cdd6-4a72-9d53-9a99e70df553",
 CellID->788895256],
Cell[2562066, 49293, 547, 13, 26, "History",ExpressionUUID->"89c0d3cb-aa2e-476d-a303-62306ecb75f5",
 CellID->398531014],
Cell[CellGroupData[{
Cell[2562638, 49310, 122, 1, 21, "CategorizationSection",ExpressionUUID->"80756550-1a44-4603-b48f-7af544775404",
 CellID->109257305],
Cell[2562763, 49313, 137, 2, 70, "Categorization",ExpressionUUID->"daf61bdc-9be3-4fc3-915d-c693565d7bad",
 CellID->189006950],
Cell[2562903, 49317, 159, 2, 70, "Categorization",ExpressionUUID->"135ec80d-e540-4218-99d9-b8afa8ee4ca9",
 CellID->511494737],
Cell[2563065, 49321, 156, 2, 70, "Categorization",ExpressionUUID->"dd873a6a-3a89-49df-813a-d562774d104f",
 CellID->315005818],
Cell[2563224, 49325, 201, 4, 70, "Categorization",ExpressionUUID->"893192be-2631-4f8d-9847-978860e22df7",
 CellID->755593271]
}, Closed]],
Cell[CellGroupData[{
Cell[2563462, 49334, 111, 1, 21, "KeywordsSection",ExpressionUUID->"e53523b1-e1f4-4c67-a66d-d061a3eccdb9",
 CellID->1185300986],
Cell[2563576, 49337, 245, 3, 20, "Keywords",ExpressionUUID->"10ae1bf8-cb94-4385-ab3c-2085a5079b68",
 CellID->1295362130]
}, Open  ]]
}, Open  ]]
}
]
*)

