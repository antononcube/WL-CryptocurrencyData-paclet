(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1367850,      28280]
NotebookOptionsPosition[   1351138,      27897]
NotebookOutlinePosition[   1351682,      27915]
CellTagsIndexPosition[   1351639,      27912]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Crypto-currencies data acquisition with visualization", "Title",
 CellID->1314978730,ExpressionUUID->"136e45c5-6bad-40e6-8a67-21df6668c7b5"],

Cell[CellGroupData[{

Cell["Introduction", "Section",
 CellChangeTimes->{{3.8328470105737658`*^9, 3.832847011373234*^9}, {
  3.833032918524819*^9, 3.8330329235646067`*^9}},
 CellID->1623692738,ExpressionUUID->"ee7766aa-34d4-488f-a1c0-03333f87b794"],

Cell["\<\
In this notebook we show how to obtain crypto-currencies data from several \
data sources and make some basic time series visualizations. We assume the \
described data acquisition workflow is useful for doing more detailed \
(exploratory) analysis.\
\>", "Text",
 CellChangeTimes->{{3.8330992744361153`*^9, 3.8330993131928167`*^9}, {
  3.83309944908355*^9, 3.8330994994840593`*^9}, {3.833099554654814*^9, 
  3.833099594255035*^9}, {3.833104987965117*^9, 3.8331049939293003`*^9}, {
  3.8331060367251596`*^9, 3.8331060744582148`*^9}, {3.833106143420895*^9, 
  3.8331063229395027`*^9}, {3.890858456882699*^9, 3.890858468932001*^9}},
 CellID->1329145137,ExpressionUUID->"6061885c-6fa4-41c7-b118-7f61299bd763"],

Cell["\<\
There are multiple crypto-currencies data sources, but a small proportion of \
them give a convenient way of extracting crypto-currencies data \
automatically. I found the easiest to work with to be \
https://finance.yahoo.com/cryptocurrencies, [YF1]. Another easy to work with \
Bitcoin-only data source is  https://data.bitcoinity.org , [DBO1].\
\>", "Text",
 CellChangeTimes->{{3.83284701643567*^9, 3.8328471694648037`*^9}, {
   3.832847534627529*^9, 3.83284754281743*^9}, 3.833099521264471*^9, {
   3.83310502532588*^9, 3.833105081619815*^9}},
 CellID->817421465,ExpressionUUID->"264924c2-f72c-4679-8a78-b70625356b93"],

Cell["\<\
(I also looked into using https://www.coindesk.com/coindesk20. )\
\>", "Text",
 CellChangeTimes->{{3.83284701643567*^9, 3.8328472043619127`*^9}, {
   3.832847245527562*^9, 3.8328472639201727`*^9}, 3.833105023933894*^9, 
   3.833105090799806*^9},
 CellID->949672396,ExpressionUUID->"b493740e-f3d8-4256-9ad7-0a89be186115"],

Cell[TextData[{
 StyleBox["Remark:",
  FontWeight->"Bold"],
 " The code below is made with certain ad-hoc inductive reasoning that \
brought meaningful results. This means the code has to be changed if the \
underlying data organization in [YF1, DBO1] is changed."
}], "Text",
 CellChangeTimes->{{3.832847859391765*^9, 3.832848053730464*^9}, {
  3.833105102983273*^9, 3.8331051057630453`*^9}},
 CellID->1045495068,ExpressionUUID->"e814f3ad-a61f-469a-afba-24b37164777d"],

Cell[CellGroupData[{

Cell["Load the paclet (not used below)", "MathCaption",
 CellChangeTimes->{{3.890858350132883*^9, 3.8908583557465*^9}, {
  3.890858487191462*^9, 3.890858492781591*^9}},
 CellID->2128220291,ExpressionUUID->"9e3d0a9a-377e-446c-8877-d15965462ce5"],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<AntonAntonov`CryptocurrencyData`\>\"", 
  "]"}]], "Input",
 CellChangeTimes->{{3.890858357983747*^9, 3.890858395873764*^9}, 
   3.8908585101395693`*^9},
 CellLabel->"In[94]:=",
 CellID->510806405,ExpressionUUID->"9c0e7f00-9de2-45fe-8205-c74ca64e06bd"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Yahoo! Finance ", "Section",
 CellChangeTimes->{{3.83284087919444*^9, 3.832840886710039*^9}, {
  3.832848487742343*^9, 3.8328484902401533`*^9}, {3.8330338750785103`*^9, 
  3.833033876002084*^9}, {3.8330998595345383`*^9, 3.8330998938856897`*^9}},
 CellID->924408122,ExpressionUUID->"c50a4f36-345c-49d9-b2dd-f6ab4971b35a"],

Cell[CellGroupData[{

Cell["Getting cryptocurrencies symbols and summaries", "Subsection",
 CellChangeTimes->{{3.83284087919444*^9, 3.832840886710039*^9}, {
  3.832848487742343*^9, 3.8328484902401533`*^9}, {3.8330338750785103`*^9, 
  3.833033876002084*^9}, {3.8330998595345383`*^9, 3.833099903803274*^9}},
 CellID->1630604056,ExpressionUUID->"3d227464-fdd9-4b01-93f7-14e8cb011c66"],

Cell["\<\
In this section we get all crypto-currencies symbols and related metadata.\
\>", "Text",
 CellChangeTimes->{{3.832847306391037*^9, 3.832847336598261*^9}},
 CellID->1523549825,ExpressionUUID->"4c052a63-f099-4190-bd6b-07d3003fdc66"],

Cell[CellGroupData[{

Cell["Get the data of all crypto-currencies in [YF1]:", "Text",
 CellChangeTimes->{{3.8328480778839617`*^9, 3.832848098956263*^9}},
 CellID->1854385594,ExpressionUUID->"146b697d-9853-4a63-97f1-930af9cbacef"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AbsoluteTiming", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"lsData", "=", 
    RowBox[{"Import", "[", 
     RowBox[{
     "\"\<https://finance.yahoo.com/cryptocurrencies\>\"", ",", 
      "\"\<Data\>\""}], "]"}]}], ";"}], "\[IndentingNewLine]", "]"}]], "Input",\

 CellChangeTimes->{{3.8328408908319283`*^9, 3.832840935119575*^9}, {
  3.8328469785902643`*^9, 3.832846982426807*^9}},
 CellLabel->"In[95]:=",
 CellID->228509447,ExpressionUUID->"a7af4569-c6a2-495f-b78d-44ac39a9a074"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"7.949884`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.890858511708722*^9},
 CellLabel->"Out[95]=",
 CellID->484941240,ExpressionUUID->"5119257a-c5cd-412e-a433-1ff3bdb7bbae"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Locate the data:", "Text",
 CellChangeTimes->{{3.8328480720570097`*^9, 3.8328480730470953`*^9}, {
  3.832848105154789*^9, 3.8328481146054373`*^9}},
 CellID->857514893,ExpressionUUID->"3088ca8d-a4e3-4814-b27b-e710b4b806a0"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"pos", "=", 
   RowBox[{"First", "@", 
    RowBox[{"Position", "[", 
     RowBox[{"lsData", ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Symbol\>\"", ",", "\"\<Name\>\"", ",", "\"\<Price (Intraday)\>\"",
         ",", "\"\<Change\>\"", ",", "\"\<% Change\>\"", ",", "___"}], 
       "}"}]}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"dsCryptoCurrenciesColumnNames", "=", 
  RowBox[{"lsData", "\[LeftDoubleBracket]", 
   RowBox[{"Sequence", "@@", "pos"}], 
   "\[RightDoubleBracket]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Length", "[", "dsCryptoCurrenciesColumnNames", "]"}]}], "Input",
 CellChangeTimes->{{3.832841070978525*^9, 3.832841186917664*^9}, {
  3.832841224054969*^9, 3.832841258711072*^9}, {3.832841289656437*^9, 
  3.832841324507606*^9}, {3.8328413586641607`*^9, 3.83284137575235*^9}},
 CellLabel->"In[96]:=",
 CellID->490051634,ExpressionUUID->"5955b557-e0ea-4114-833b-418d2b5cb2e3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Symbol\"\>", ",", "\<\"Name\"\>", 
   ",", "\<\"Price (Intraday)\"\>", ",", "\<\"Change\"\>", 
   ",", "\<\"% Change\"\>", ",", "\<\"Market Cap\"\>", 
   ",", "\<\"Volume in Currency (Since 0:00 UTC)\"\>", 
   ",", "\<\"Volume in Currency (24Hr)\"\>", 
   ",", "\<\"Total Volume All Currencies (24Hr)\"\>", 
   ",", "\<\"Circulating Supply\"\>", ",", "\<\"52 Week Range\"\>", 
   ",", "\<\"Day Chart\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.890858511755794*^9},
 CellLabel->"Out[97]=",
 CellID->706980315,ExpressionUUID->"7bac9465-e049-46a2-bf32-475681b4d31d"],

Cell[BoxData["12"], "Output",
 CellChangeTimes->{3.890858511757369*^9},
 CellLabel->"Out[98]=",
 CellID->191135354,ExpressionUUID->"7605b349-7d3b-4d4c-a2c3-e05fbf309cab"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Get the data:", "Text",
 CellChangeTimes->{{3.832848123049382*^9, 3.832848126795443*^9}},
 CellID->698026393,ExpressionUUID->"f7e43289-c1d3-4761-a83d-71bf6bfc41fe"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"dsCryptoCurrencies", "=", 
   RowBox[{"lsData", "\[LeftDoubleBracket]", 
    RowBox[{"Sequence", "@@", 
     RowBox[{"Append", "[", 
      RowBox[{
       RowBox[{"Most", "[", "pos", "]"}], ",", "2"}], "]"}]}], 
    "\[RightDoubleBracket]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Dimensions", "[", "dsCryptoCurrencies", "]"}]}], "Input",
 CellChangeTimes->{{3.832841070978525*^9, 3.832841186917664*^9}, {
  3.832841224054969*^9, 3.832841258711072*^9}, {3.832841289656437*^9, 
  3.832841324507606*^9}, {3.8328413586641607`*^9, 3.832841371579454*^9}},
 CellLabel->"In[99]:=",
 CellID->26423590,ExpressionUUID->"3b2995e5-8789-48f5-9d25-f23e389ba4b8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"25", ",", "10"}], "}"}]], "Output",
 CellChangeTimes->{3.890858511769203*^9},
 CellLabel->"Out[100]=",
 CellID->1923842413,ExpressionUUID->"7ecf3eed-1d07-49fc-bfa5-550a28283dd9"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Make a dataset:", "Text",
 CellChangeTimes->{{3.832848062472061*^9, 3.8328480663749323`*^9}},
 CellID->1719645848,ExpressionUUID->"283d5646-31d0-4660-926f-8a3f625a38d8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dsCryptoCurrencies", "=", 
  RowBox[{
   RowBox[{"Dataset", "[", "dsCryptoCurrencies", "]"}], "[", 
   RowBox[{"All", ",", 
    RowBox[{
     RowBox[{"AssociationThread", "[", 
      RowBox[{
       RowBox[{"dsCryptoCurrenciesColumnNames", "\[LeftDoubleBracket]", 
        RowBox[{"1", ";;", 
         RowBox[{"-", "3"}]}], "\[RightDoubleBracket]"}], ",", "#"}], "]"}], 
     "&"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.832841070978525*^9, 3.832841186917664*^9}, {
  3.832841224054969*^9, 3.832841251699356*^9}, {3.832841331470697*^9, 
  3.8328413435188723`*^9}, {3.832841388981042*^9, 3.8328413921310253`*^9}},
 CellLabel->"In[101]:=",
 CellID->1252846010,ExpressionUUID->"bd96c46d-8514-428c-b224-12944cbe7208"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|
       "Symbol" -> "BTC-USD", "Name" -> "Bitcoin USD", "Price (Intraday)" -> 
        "30,254.11", "Change" -> 867.5, "% Change" -> "+2.95%", "Market Cap" -> 
        "585.424B", "Volume in Currency (Since 0:00 UTC)" -> "19.032B", 
        "Volume in Currency (24Hr)" -> "19.032B", 
        "Total Volume All Currencies (24Hr)" -> "19.032B", 
        "Circulating Supply" -> "19.35M"|>, <|
       "Symbol" -> "ETH-USD", "Name" -> "Ethereum USD", "Price (Intraday)" -> 
        "2,096.10", "Change" -> 21.78, "% Change" -> "+1.05%", "Market Cap" -> 
        "250.207B", "Volume in Currency (Since 0:00 UTC)" -> "8.869B", 
        "Volume in Currency (24Hr)" -> "8.869B", 
        "Total Volume All Currencies (24Hr)" -> "8.869B", 
        "Circulating Supply" -> "119.368M"|>, <|
       "Symbol" -> "USDT-USD", "Name" -> "Tether USD", "Price (Intraday)" -> 
        1.0003, "Change" -> -0.0001, "% Change" -> "-0.01%", "Market Cap" -> 
        "81.087B", "Volume in Currency (Since 0:00 UTC)" -> "31.712B", 
        "Volume in Currency (24Hr)" -> "31.712B", 
        "Total Volume All Currencies (24Hr)" -> "31.712B", 
        "Circulating Supply" -> "81.061B"|>, <|
       "Symbol" -> "BNB-USD", "Name" -> "BNB USD", "Price (Intraday)" -> 
        342.18, "Change" -> 2.27, "% Change" -> "+0.67%", "Market Cap" -> 
        "53.334B", "Volume in Currency (Since 0:00 UTC)" -> "731.234M", 
        "Volume in Currency (24Hr)" -> "731.234M", 
        "Total Volume All Currencies (24Hr)" -> "731.234M", 
        "Circulating Supply" -> "155.865M"|>, <|
       "Symbol" -> "USDC-USD", "Name" -> "USD Coin USD", "Price (Intraday)" -> 
        1., "Change" -> 0.0001, "% Change" -> "+0.01%", "Market Cap" -> 
        "31.38B", "Volume in Currency (Since 0:00 UTC)" -> "4.339B", 
        "Volume in Currency (24Hr)" -> "4.339B", 
        "Total Volume All Currencies (24Hr)" -> "4.339B", 
        "Circulating Supply" -> "31.379B"|>, <|
       "Symbol" -> "XRP-USD", "Name" -> "XRP USD", "Price (Intraday)" -> 
        0.526506, "Change" -> 0.014994, "% Change" -> "+2.93%", "Market Cap" -> 
        "27.247B", "Volume in Currency (Since 0:00 UTC)" -> "1.211B", 
        "Volume in Currency (24Hr)" -> "1.211B", 
        "Total Volume All Currencies (24Hr)" -> "1.211B", 
        "Circulating Supply" -> "51.751B"|>, <|
       "Symbol" -> "ADA-USD", "Name" -> "Cardano USD", "Price (Intraday)" -> 
        0.440402, "Change" -> 0.007689, "% Change" -> "+1.78%", "Market Cap" -> 
        "15.318B", "Volume in Currency (Since 0:00 UTC)" -> "331.455M", 
        "Volume in Currency (24Hr)" -> "331.455M", 
        "Total Volume All Currencies (24Hr)" -> "331.455M", 
        "Circulating Supply" -> "34.782B"|>, <|
       "Symbol" -> "DOGE-USD", "Name" -> "Dogecoin USD", "Price (Intraday)" -> 
        0.093236, "Change" -> 0.002771, "% Change" -> "+3.06%", "Market Cap" -> 
        "12.959B", "Volume in Currency (Since 0:00 UTC)" -> "810.359M", 
        "Volume in Currency (24Hr)" -> "810.359M", 
        "Total Volume All Currencies (24Hr)" -> "810.359M", 
        "Circulating Supply" -> "138.996B"|>, <|
       "Symbol" -> "STETH-USD", "Name" -> "Lido Staked ETH USD", 
        "Price (Intraday)" -> "2,083.12", "Change" -> 13.1, "% Change" -> 
        "+0.63%", "Market Cap" -> "12.593B", 
        "Volume in Currency (Since 0:00 UTC)" -> "20.447M", 
        "Volume in Currency (24Hr)" -> "20.447M", 
        "Total Volume All Currencies (24Hr)" -> "20.447M", 
        "Circulating Supply" -> "6.045M"|>, <|
       "Symbol" -> "HEX-USD", "Name" -> "HEX USD", "Price (Intraday)" -> 
        0.066948, "Change" -> -0.002883, "% Change" -> "-4.13%", "Market Cap" -> 
        "11.61B", "Volume in Currency (Since 0:00 UTC)" -> "8.946M", 
        "Volume in Currency (24Hr)" -> "8.946M", 
        "Total Volume All Currencies (24Hr)" -> "8.946M", 
        "Circulating Supply" -> "173.411B"|>, <|
       "Symbol" -> "MATIC-USD", "Name" -> "Polygon USD", "Price (Intraday)" -> 
        1.1738, "Change" -> 0.0205, "% Change" -> "+1.78%", "Market Cap" -> 
        "10.821B", "Volume in Currency (Since 0:00 UTC)" -> "303.782M", 
        "Volume in Currency (24Hr)" -> "303.782M", 
        "Total Volume All Currencies (24Hr)" -> "303.782M", 
        "Circulating Supply" -> "9.219B"|>, <|
       "Symbol" -> "SOL-USD", "Name" -> "Solana USD", "Price (Intraday)" -> 
        24.74, "Change" -> 0.4, "% Change" -> "+1.65%", "Market Cap" -> 
        "9.706B", "Volume in Currency (Since 0:00 UTC)" -> "452.706M", 
        "Volume in Currency (24Hr)" -> "452.706M", 
        "Total Volume All Currencies (24Hr)" -> "452.706M", 
        "Circulating Supply" -> "392.364M"|>, <|
       "Symbol" -> "DOT-USD", "Name" -> "Polkadot USD", "Price (Intraday)" -> 
        6.8758, "Change" -> 0.1918, "% Change" -> "+2.87%", "Market Cap" -> 
        "8.216B", "Volume in Currency (Since 0:00 UTC)" -> "233.629M", 
        "Volume in Currency (24Hr)" -> "233.629M", 
        "Total Volume All Currencies (24Hr)" -> "233.629M", 
        "Circulating Supply" -> "1.195B"|>, <|
       "Symbol" -> "LTC-USD", "Name" -> "Litecoin USD", "Price (Intraday)" -> 
        101.3, "Change" -> 1.95, "% Change" -> "+1.96%", "Market Cap" -> 
        "7.368B", "Volume in Currency (Since 0:00 UTC)" -> "678.738M", 
        "Volume in Currency (24Hr)" -> "678.738M", 
        "Total Volume All Currencies (24Hr)" -> "678.738M", 
        "Circulating Supply" -> "72.736M"|>, <|
       "Symbol" -> "AVAX-USD", "Name" -> "Avalanche USD", "Price (Intraday)" -> 
        21.15, "Change" -> 0.54, "% Change" -> "+2.61%", "Market Cap" -> 
        "6.906B", "Volume in Currency (Since 0:00 UTC)" -> "272.264M", 
        "Volume in Currency (24Hr)" -> "272.264M", 
        "Total Volume All Currencies (24Hr)" -> "272.264M", 
        "Circulating Supply" -> "326.618M"|>, <|
       "Symbol" -> "SHIB-USD", "Name" -> "Shiba Inu USD", "Price (Intraday)" -> 
        0.000012, "Change" -> 0., "% Change" -> "+1.39%", "Market Cap" -> 
        "6.8B", "Volume in Currency (Since 0:00 UTC)" -> "204.38M", 
        "Volume in Currency (24Hr)" -> "204.38M", 
        "Total Volume All Currencies (24Hr)" -> "204.38M", 
        "Circulating Supply" -> "589.544T"|>, <|
       "Symbol" -> "WTRX-USD", "Name" -> "Wrapped TRON USD", 
        "Price (Intraday)" -> 0.066616, "Change" -> 0.000679, "% Change" -> 
        "+1.03%", "Market Cap" -> "6.773B", 
        "Volume in Currency (Since 0:00 UTC)" -> "378,412", 
        "Volume in Currency (24Hr)" -> "378,412", 
        "Total Volume All Currencies (24Hr)" -> "378,412", 
        "Circulating Supply" -> "101.676B"|>, <|
       "Symbol" -> "BUSD-USD", "Name" -> "Binance USD USD", 
        "Price (Intraday)" -> 0.999999, "Change" -> -0.000046, "% Change" -> 
        "-0.00%", "Market Cap" -> "6.641B", 
        "Volume in Currency (Since 0:00 UTC)" -> "3.283B", 
        "Volume in Currency (24Hr)" -> "3.283B", 
        "Total Volume All Currencies (24Hr)" -> "3.283B", 
        "Circulating Supply" -> "6.641B"|>, <|
       "Symbol" -> "TRX-USD", "Name" -> "TRON USD", "Price (Intraday)" -> 
        0.066821, "Change" -> 0.000894, "% Change" -> "+1.36%", "Market Cap" -> 
        "6.065B", "Volume in Currency (Since 0:00 UTC)" -> "180.006M", 
        "Volume in Currency (24Hr)" -> "180.006M", 
        "Total Volume All Currencies (24Hr)" -> "180.006M", 
        "Circulating Supply" -> "90.772B"|>, <|
       "Symbol" -> "DAI-USD", "Name" -> "Dai USD", "Price (Intraday)" -> 
        0.999289, "Change" -> -0.000937, "% Change" -> "-0.09%", "Market Cap" -> 
        "5.055B", "Volume in Currency (Since 0:00 UTC)" -> "124.708M", 
        "Volume in Currency (24Hr)" -> "124.708M", 
        "Total Volume All Currencies (24Hr)" -> "124.708M", 
        "Circulating Supply" -> "5.059B"|>, <|
       "Symbol" -> "WBTC-USD", "Name" -> "Wrapped Bitcoin USD", 
        "Price (Intraday)" -> "30,307.34", "Change" -> 901.55, "% Change" -> 
        "+3.07%", "Market Cap" -> "4.65B", 
        "Volume in Currency (Since 0:00 UTC)" -> "125.006M", 
        "Volume in Currency (24Hr)" -> "125.006M", 
        "Total Volume All Currencies (24Hr)" -> "125.006M", 
        "Circulating Supply" -> "153,412"|>, <|
       "Symbol" -> "LINK-USD", "Name" -> "Chainlink USD", "Price (Intraday)" -> 
        8.5198, "Change" -> 0.4076, "% Change" -> "+5.03%", "Market Cap" -> 
        "4.406B", "Volume in Currency (Since 0:00 UTC)" -> "512.4M", 
        "Volume in Currency (24Hr)" -> "512.4M", 
        "Total Volume All Currencies (24Hr)" -> "512.4M", 
        "Circulating Supply" -> "517.1M"|>, <|
       "Symbol" -> "UNI7083-USD", "Name" -> "Uniswap USD", "Price (Intraday)" -> 
        6.4014, "Change" -> 0.2805, "% Change" -> "+4.58%", "Market Cap" -> 
        "3.697B", "Volume in Currency (Since 0:00 UTC)" -> "106.313M", 
        "Volume in Currency (24Hr)" -> "106.313M", 
        "Total Volume All Currencies (24Hr)" -> "106.313M", 
        "Circulating Supply" -> "577.487M"|>, <|
       "Symbol" -> "ATOM-USD", "Name" -> "Cosmos USD", "Price (Intraday)" -> 
        12.45, "Change" -> 0.16, "% Change" -> "+1.31%", "Market Cap" -> 
        "3.567B", "Volume in Currency (Since 0:00 UTC)" -> "135.436M", 
        "Volume in Currency (24Hr)" -> "135.436M", 
        "Total Volume All Currencies (24Hr)" -> "135.436M", 
        "Circulating Supply" -> "286.37M"|>, <|
       "Symbol" -> "OKB-USD", "Name" -> "OKB USD", "Price (Intraday)" -> 
        54.85, "Change" -> 1.99, "% Change" -> "+3.76%", "Market Cap" -> 
        "3.291B", "Volume in Currency (Since 0:00 UTC)" -> "44.89M", 
        "Volume in Currency (24Hr)" -> "44.89M", 
        "Total Volume All Currencies (24Hr)" -> "44.89M", 
        "Circulating Supply" -> "60M"|>}, "AllowEmbedding" -> True, 
     "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "Symbol"} -> 
        1, {All, "Name"} -> 1, {All, "Price (Intraday)"} -> 
        1, {All, "Change"} -> 1, {All, "% Change"} -> 1, {All, "Market Cap"} -> 
        1, {All, "Volume in Currency (Since 0:00 UTC)"} -> 
        1, {All, "Volume in Currency (24Hr)"} -> 
        1, {All, "Total Volume All Currencies (24Hr)"} -> 
        1, {All, "Circulating Supply"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "Symbol" -> TypeSystem`PackageScope`AtomShape[100.80000000000001`],
             "Name" -> TypeSystem`PackageScope`AtomShape[212.8], 
            "Price (Intraday)" -> TypeSystem`PackageScope`UnknownShape[False],
             "Change" -> TypeSystem`PackageScope`AtomShape[60], "% Change" -> 
            TypeSystem`PackageScope`AtomShape[67.2], "Market Cap" -> 
            TypeSystem`PackageScope`AtomShape[89.60000000000001], 
            "Volume in Currency (Since 0:00 UTC)" -> 
            TypeSystem`PackageScope`AtomShape[89.60000000000001], 
            "Volume in Currency (24Hr)" -> 
            TypeSystem`PackageScope`AtomShape[89.60000000000001], 
            "Total Volume All Currencies (24Hr)" -> 
            TypeSystem`PackageScope`AtomShape[89.60000000000001], 
            "Circulating Supply" -> 
            TypeSystem`PackageScope`AtomShape[89.60000000000001]|>], 
          DirectedInfinity[1], 10, {All}]], 20, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "Symbol", "Name", "Price (Intraday)", "Change", "% Change", 
         "Market Cap", "Volume in Currency (Since 0:00 UTC)", 
         "Volume in Currency (24Hr)", "Total Volume All Currencies (24Hr)", 
         "Circulating Supply"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], TypeSystem`AnyType, 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String]}], 25], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "Symbol"} -> 
        1, {All, "Name"} -> 1, {All, "Price (Intraday)"} -> 
        1, {All, "Change"} -> 1, {All, "% Change"} -> 1, {All, "Market Cap"} -> 
        1, {All, "Volume in Currency (Since 0:00 UTC)"} -> 
        1, {All, "Volume in Currency (24Hr)"} -> 
        1, {All, "Total Volume All Currencies (24Hr)"} -> 
        1, {All, "Circulating Supply"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "Symbol" -> TypeSystem`PackageScope`AtomShape[100.80000000000001`],
             "Name" -> TypeSystem`PackageScope`AtomShape[212.8], 
            "Price (Intraday)" -> TypeSystem`PackageScope`UnknownShape[False],
             "Change" -> TypeSystem`PackageScope`AtomShape[60], "% Change" -> 
            TypeSystem`PackageScope`AtomShape[67.2], "Market Cap" -> 
            TypeSystem`PackageScope`AtomShape[89.60000000000001], 
            "Volume in Currency (Since 0:00 UTC)" -> 
            TypeSystem`PackageScope`AtomShape[89.60000000000001], 
            "Volume in Currency (24Hr)" -> 
            TypeSystem`PackageScope`AtomShape[89.60000000000001], 
            "Total Volume All Currencies (24Hr)" -> 
            TypeSystem`PackageScope`AtomShape[89.60000000000001], 
            "Circulating Supply" -> 
            TypeSystem`PackageScope`AtomShape[89.60000000000001]|>], 
          DirectedInfinity[1], 10, {All}]], 20, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "Symbol", "Name", "Price (Intraday)", "Change", "% Change", 
         "Market Cap", "Volume in Currency (Since 0:00 UTC)", 
         "Volume in Currency (24Hr)", "Total Volume All Currencies (24Hr)", 
         "Circulating Supply"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], TypeSystem`AnyType, 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String]}], 25], "Path" -> {}, "DisplayedRowCount" -> 
     20, "DisplayedColumnCount" -> 10, "DataRowCount" -> 25, 
     "DataColumnCount" -> 10, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Symbol", 
                  Style[
                  "Symbol", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Symbol"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Symbol"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Name", 
                  Style[
                  "Name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Name"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Name"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Price (Intraday)", 
                  Style[
                  "Price (Intraday)", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Price (Intraday)"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Price (Intraday)"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Change", 
                  Style[
                  "Change", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Change"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Change"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["% Change", 
                  Style[
                  "% Change", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "% Change"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "% Change"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Market Cap", 
                  Style[
                  "Market Cap", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Market Cap"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Market Cap"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Volume in Currency (Since 0:00 UTC)", 
                  Style[
                  "Volume in Currency (Since 0:00 UTC)", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Volume in Currency (Since 0:00 UTC)"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Volume in Currency (Since 0:00 UTC)"}, "ColumnHeader", 
                True], "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Volume in Currency (24Hr)", 
                  Style[
                  "Volume in Currency (24Hr)", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Volume in Currency (24Hr)"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Volume in Currency (24Hr)"}, "ColumnHeader", True], 
               "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Total Volume All Currencies (24Hr)", 
                  Style[
                  "Total Volume All Currencies (24Hr)", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Total Volume All Currencies (24Hr)"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Total Volume All Currencies (24Hr)"}, "ColumnHeader", 
                True], "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Circulating Supply", 
                  Style[
                  "Circulating Supply", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Circulating Supply"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Circulating Supply"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation["BTC-USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Bitcoin USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{212.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["30,254.11", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Price (Intraday)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["867.5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+2.95%", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["% Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{67.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["585.424B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Market Cap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["19.032B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Volume in Currency (Since 0:00 UTC)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["19.032B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Volume in Currency (24Hr)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["19.032B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Total Volume All Currencies (24Hr)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["19.35M", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Circulating Supply"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["ETH-USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Ethereum USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{212.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2,096.10", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Price (Intraday)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["21.78"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+1.05%", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["% Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{67.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["250.207B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Market Cap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["8.869B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Volume in Currency (Since 0:00 UTC)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["8.869B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Volume in Currency (24Hr)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["8.869B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Total Volume All Currencies (24Hr)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["119.368M", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Circulating Supply"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["USDT-USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Tether USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{212.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0003"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Price (Intraday)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-0.0001"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["-0.01%", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["% Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{67.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["81.087B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Market Cap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["31.712B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Volume in Currency (Since 0:00 UTC)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["31.712B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Volume in Currency (24Hr)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["31.712B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Total Volume All Currencies (24Hr)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["81.061B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Circulating Supply"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["BNB-USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["BNB USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{212.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["342.18"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Price (Intraday)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.27"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.67%", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["% Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{67.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["53.334B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Market Cap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["731.234M", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Volume in Currency (Since 0:00 UTC)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["731.234M", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Volume in Currency (24Hr)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["731.234M", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Total Volume All Currencies (24Hr)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["155.865M", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Circulating Supply"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["USDC-USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["USD Coin USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{212.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Price (Intraday)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0001"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.01%", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["% Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{67.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["31.38B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Market Cap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["4.339B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Volume in Currency (Since 0:00 UTC)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["4.339B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Volume in Currency (24Hr)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["4.339B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Total Volume All Currencies (24Hr)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["31.379B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Circulating Supply"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["XRP-USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["XRP USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{212.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.526506"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Price (Intraday)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.014994"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+2.93%", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["% Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{67.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["27.247B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Market Cap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["1.211B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Volume in Currency (Since 0:00 UTC)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["1.211B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Volume in Currency (24Hr)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["1.211B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Total Volume All Currencies (24Hr)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["51.751B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Circulating Supply"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["ADA-USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Cardano USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{212.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.440402"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Price (Intraday)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.007689"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+1.78%", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["% Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{67.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["15.318B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Market Cap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["331.455M", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Volume in Currency (Since 0:00 UTC)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["331.455M", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Volume in Currency (24Hr)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["331.455M", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Total Volume All Currencies (24Hr)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["34.782B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Circulating Supply"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["DOGE-USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Dogecoin USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{212.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.093236"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Price (Intraday)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.002771"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+3.06%", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["% Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{67.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["12.959B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Market Cap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["810.359M", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Volume in Currency (Since 0:00 UTC)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["810.359M", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Volume in Currency (24Hr)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["810.359M", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Total Volume All Currencies (24Hr)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["138.996B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Circulating Supply"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["STETH-USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Lido Staked ETH USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{212.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2,083.12", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Price (Intraday)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["13.1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.63%", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["% Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{67.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["12.593B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Market Cap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["20.447M", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Volume in Currency (Since 0:00 UTC)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["20.447M", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Volume in Currency (24Hr)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["20.447M", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Total Volume All Currencies (24Hr)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["6.045M", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Circulating Supply"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["HEX-USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["HEX USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{212.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.066948"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Price (Intraday)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-0.002883"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["-4.13%", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["% Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{67.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["11.61B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Market Cap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["8.946M", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Volume in Currency (Since 0:00 UTC)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["8.946M", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Volume in Currency (24Hr)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["8.946M", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Total Volume All Currencies (24Hr)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["173.411B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Circulating Supply"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["MATIC-USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Polygon USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{212.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.1738"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Price (Intraday)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0205"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+1.78%", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["% Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{67.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["10.821B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Market Cap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["303.782M", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Volume in Currency (Since 0:00 UTC)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["303.782M", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Volume in Currency (24Hr)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["303.782M", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Total Volume All Currencies (24Hr)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["9.219B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Circulating Supply"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["SOL-USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Solana USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{212.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["24.74"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Price (Intraday)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+1.65%", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["% Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{67.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["9.706B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Market Cap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["452.706M", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Volume in Currency (Since 0:00 UTC)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["452.706M", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Volume in Currency (24Hr)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["452.706M", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Total Volume All Currencies (24Hr)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["392.364M", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Circulating Supply"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["DOT-USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Polkadot USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{212.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6.8758"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Price (Intraday)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.1918"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+2.87%", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["% Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{67.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["8.216B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Market Cap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["233.629M", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Volume in Currency (Since 0:00 UTC)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["233.629M", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Volume in Currency (24Hr)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["233.629M", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Total Volume All Currencies (24Hr)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["1.195B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Circulating Supply"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["LTC-USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Litecoin USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{212.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["101.3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Price (Intraday)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.95"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+1.96%", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["% Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{67.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["7.368B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Market Cap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["678.738M", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Volume in Currency (Since 0:00 UTC)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["678.738M", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Volume in Currency (24Hr)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["678.738M", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Total Volume All Currencies (24Hr)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["72.736M", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Circulating Supply"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["AVAX-USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Avalanche USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{212.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["21.15"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Price (Intraday)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.54"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+2.61%", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["% Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{67.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["6.906B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Market Cap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["272.264M", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Volume in Currency (Since 0:00 UTC)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["272.264M", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Volume in Currency (24Hr)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["272.264M", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Total Volume All Currencies (24Hr)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["326.618M", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Circulating Supply"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["SHIB-USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Shiba Inu USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{212.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000012"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Price (Intraday)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+1.39%", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["% Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{67.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["6.8B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Market Cap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["204.38M", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Volume in Currency (Since 0:00 UTC)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["204.38M", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Volume in Currency (24Hr)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["204.38M", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Total Volume All Currencies (24Hr)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["589.544T", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Circulating Supply"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["WTRX-USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Wrapped TRON USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{212.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.066616"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["Price (Intraday)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000679"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+1.03%", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["% Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{67.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["6.773B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["Market Cap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["378,412", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["Volume in Currency (Since 0:00 UTC)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["378,412", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["Volume in Currency (24Hr)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["378,412", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["Total Volume All Currencies (24Hr)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["101.676B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["Circulating Supply"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["BUSD-USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Binance USD USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{212.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.999999"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["Price (Intraday)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-0.000046"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["-0.00%", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["% Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{67.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["6.641B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["Market Cap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["3.283B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["Volume in Currency (Since 0:00 UTC)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["3.283B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["Volume in Currency (24Hr)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["3.283B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["Total Volume All Currencies (24Hr)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["6.641B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["Circulating Supply"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["TRX-USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["TRON USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{212.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.066821"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["Price (Intraday)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000894"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+1.36%", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["% Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{67.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["6.065B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["Market Cap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["180.006M", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["Volume in Currency (Since 0:00 UTC)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["180.006M", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["Volume in Currency (24Hr)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["180.006M", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["Total Volume All Currencies (24Hr)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["90.772B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["Circulating Supply"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["DAI-USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Dai USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{212.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.999289"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["Price (Intraday)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-0.000937"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["-0.09%", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["% Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{67.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["5.055B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["Market Cap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["124.708M", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["Volume in Currency (Since 0:00 UTC)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["124.708M", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["Volume in Currency (24Hr)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["124.708M", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["Total Volume All Currencies (24Hr)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["5.059B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["Circulating Supply"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[True, 25, 1], {1, 25 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[False, 25, 1], {1, 25 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[25, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[25, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 25, 1], {1, 25 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 25, 1], {1, 25 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
               ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{1410., {300.8544921875, 306.1455078125}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{1410., {300.8544921875, 306.1455078125}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.890858511837757*^9},
 CellLabel->"Out[101]=",
 CellID->702946947,ExpressionUUID->"32ea6b06-b684-4553-b9e6-c8a1e0f00b63"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Here are the (generic) crypto-currency symbols:", "Text",
 CellChangeTimes->{{3.833113495873563*^9, 3.833113571587555*^9}},
 CellID->505731235,ExpressionUUID->"43f3c9bf-94ad-463f-af1c-f411b135ecda"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lsCryptoCurrencySymbols", "=", 
  RowBox[{
   RowBox[{"StringSplit", "[", 
    RowBox[{
     RowBox[{"Normal", "@", 
      RowBox[{"dsCryptoCurrencies", "[", 
       RowBox[{"All", ",", "\"\<Symbol\>\""}], "]"}]}], ",", "\"\<-\>\""}], 
    "]"}], "\[LeftDoubleBracket]", 
   RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}]], "Input",
 CellChangeTimes->{{3.8331134181800537`*^9, 3.8331134741673603`*^9}},
 CellLabel->"In[102]:=",
 CellID->84591819,ExpressionUUID->"2b4c7cc2-985d-4573-b125-54a65c6d4ec5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"BTC\"\>", ",", "\<\"ETH\"\>", ",", "\<\"USDT\"\>", 
   ",", "\<\"BNB\"\>", ",", "\<\"USDC\"\>", ",", "\<\"XRP\"\>", 
   ",", "\<\"ADA\"\>", ",", "\<\"DOGE\"\>", ",", "\<\"STETH\"\>", 
   ",", "\<\"HEX\"\>", ",", "\<\"MATIC\"\>", ",", "\<\"SOL\"\>", 
   ",", "\<\"DOT\"\>", ",", "\<\"LTC\"\>", ",", "\<\"AVAX\"\>", 
   ",", "\<\"SHIB\"\>", ",", "\<\"WTRX\"\>", ",", "\<\"BUSD\"\>", 
   ",", "\<\"TRX\"\>", ",", "\<\"DAI\"\>", ",", "\<\"WBTC\"\>", 
   ",", "\<\"LINK\"\>", ",", "\<\"UNI7083\"\>", ",", "\<\"ATOM\"\>", 
   ",", "\<\"OKB\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.8908585120240507`*^9},
 CellLabel->"Out[102]=",
 CellID->1121796082,ExpressionUUID->"e4175ae7-f672-4013-8918-5a7ef13ec1a5"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Get all time series", "Subsection",
 CellChangeTimes->{{3.832841418421777*^9, 3.832841423214127*^9}},
 CellID->100527619,ExpressionUUID->"ad3d87fc-92f7-4ea2-b4cf-7df310b02254"],

Cell[CellGroupData[{

Cell["\<\
In this section we get all the crypto-currencies time series from [YF1].\
\>", "Text",
 CellChangeTimes->{{3.832847360921855*^9, 3.83284736929175*^9}, {
  3.8328474942722807`*^9, 3.8328475302059813`*^9}},
 CellID->1645545991,ExpressionUUID->"083b9cca-e15a-4625-884f-3234bc5df9b0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AbsoluteTiming", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ccNow", "=", 
    RowBox[{
     RowBox[{"Round", "@", 
      RowBox[{"AbsoluteTime", "[", 
       RowBox[{"Date", "[", "]"}], "]"}]}], "-", 
     RowBox[{"AbsoluteTime", "[", 
      RowBox[{"{", 
       RowBox[{"1970", ",", "1", ",", "1", ",", "0", ",", "0", ",", "0"}], 
       "}"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
   RowBox[{"currencySymbol", "=", "\"\<USD\>\""}], ";", "\[IndentingNewLine]", 
   RowBox[{"stYFURL", "=", 
    RowBox[{"StringTemplate", "[", 
     RowBox[{
     "\"\<https://query1.finance.yahoo.com/v7/finance/download/`\
cryptoCurrencySymbol`-`currencySymbol`?period1=1410825600&period2=\>\"", "<>", 
      RowBox[{"ToString", "[", "ccNow", "]"}], "<>", 
      "\"\<&interval=1d&events=history&includeAdjustedClose=true\>\""}], 
     "]"}]}], ";", "\[IndentingNewLine]", 
   RowBox[{"aCryptoCurrenciesDataRaw", "=", "\[IndentingNewLine]", 
    RowBox[{"Association", "@", "\[IndentingNewLine]", 
     RowBox[{"Map", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"#", "<>", "\"\<-\>\"", "<>", "currencySymbol"}], ")"}], "->", 
         RowBox[{
          RowBox[{
          "ResourceFunction", "[", "\"\<ImportCSVToDataset\>\"", "]"}], "[", 
          RowBox[{"stYFURL", "[", 
           RowBox[{"<|", 
            RowBox[{
             RowBox[{"\"\<cryptoCurrencySymbol\>\"", "->", "#"}], ",", 
             RowBox[{"\"\<currencySymbol\>\"", "->", "currencySymbol"}]}], 
            "|>"}], "]"}], "]"}]}], "&"}], ",", "lsCryptoCurrencySymbols"}], 
      "\[IndentingNewLine]", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.832841437130556*^9, 3.832841467370812*^9}, {
  3.832841502355351*^9, 3.8328415413518143`*^9}, {3.832841948680324*^9, 
  3.8328419627090807`*^9}, {3.832842666070636*^9, 3.832842672447597*^9}, {
  3.8328429359031878`*^9, 3.8328429379288473`*^9}, {3.8330323889826612`*^9, 
  3.833032408681848*^9}, {3.83311397259382*^9, 3.833114120691905*^9}, {
  3.8331141797711477`*^9, 3.833114192819501*^9}, {3.833119812696293*^9, 
  3.8331198139790077`*^9}},
 CellLabel->"In[103]:=",
 CellID->1397064671,ExpressionUUID->"9e831947-b7a8-4fbe-8c78-6d0137ac30d8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"7.367029`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.890858519399508*^9},
 CellLabel->"Out[103]=",
 CellID->720447816,ExpressionUUID->"647363ae-f8b1-460a-b3d5-b4b968e7109e"]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 StyleBox["Remark:",
  FontWeight->"Bold"],
 " Note that in the code above we specified the upper limit of the time span \
to be the current date. (And shifted it with respect to the epoch start \
1970-01-01 used by [YF1].)"
}], "Text",
 CellChangeTimes->{{3.833106349941077*^9, 3.833106480263129*^9}},
 CellID->2027212846,ExpressionUUID->"dec47120-0ccf-4b9e-b30c-81c05c663a25"],

Cell[CellGroupData[{

Cell["Check we good the data with dimensions retrieval:", "Text",
 CellChangeTimes->{{3.8328477219694853`*^9, 3.832847796434547*^9}},
 CellID->1538243067,ExpressionUUID->"cb555081-4731-4a92-b34a-f04e839536b1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dimensions", "/@", "aCryptoCurrenciesDataRaw"}]], "Input",
 CellChangeTimes->{{3.832841555132306*^9, 3.832841565337654*^9}, {
  3.832841925529983*^9, 3.832841929905305*^9}, {3.832842942687043*^9, 
  3.832842945746461*^9}, {3.8328475966402807`*^9, 3.832847714711795*^9}, {
  3.8328477713802633`*^9, 3.832847778277573*^9}},
 CellLabel->"In[104]:=",
 CellID->1843084483,ExpressionUUID->"2f9169f8-a757-4706-995f-af25e7233772"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"BTC-USD\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"3136", ",", "7"}], "}"}]}], ",", 
   RowBox[{"\<\"ETH-USD\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1987", ",", "7"}], "}"}]}], ",", 
   RowBox[{"\<\"USDT-USD\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1987", ",", "7"}], "}"}]}], ",", 
   RowBox[{"\<\"BNB-USD\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1987", ",", "7"}], "}"}]}], ",", 
   RowBox[{"\<\"USDC-USD\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1654", ",", "7"}], "}"}]}], ",", 
   RowBox[{"\<\"XRP-USD\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1987", ",", "7"}], "}"}]}], ",", 
   RowBox[{"\<\"ADA-USD\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1987", ",", "7"}], "}"}]}], ",", 
   RowBox[{"\<\"DOGE-USD\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1987", ",", "7"}], "}"}]}], ",", 
   RowBox[{"\<\"STETH-USD\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"847", ",", "7"}], "}"}]}], ",", 
   RowBox[{"\<\"HEX-USD\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1219", ",", "7"}], "}"}]}], ",", 
   RowBox[{"\<\"MATIC-USD\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1452", ",", "7"}], "}"}]}], ",", 
   RowBox[{"\<\"SOL-USD\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1104", ",", "7"}], "}"}]}], ",", 
   RowBox[{"\<\"DOT-USD\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"972", ",", "7"}], "}"}]}], ",", 
   RowBox[{"\<\"LTC-USD\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"3136", ",", "7"}], "}"}]}], ",", 
   RowBox[{"\<\"AVAX-USD\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1010", ",", "7"}], "}"}]}], ",", 
   RowBox[{"\<\"SHIB-USD\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"991", ",", "7"}], "}"}]}], ",", 
   RowBox[{"\<\"WTRX-USD\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"410", ",", "7"}], "}"}]}], ",", 
   RowBox[{"\<\"BUSD-USD\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1307", ",", "7"}], "}"}]}], ",", 
   RowBox[{"\<\"TRX-USD\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1987", ",", "7"}], "}"}]}], ",", 
   RowBox[{"\<\"DAI-USD\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1244", ",", "7"}], "}"}]}], ",", 
   RowBox[{"\<\"WBTC-USD\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1540", ",", "7"}], "}"}]}], ",", 
   RowBox[{"\<\"LINK-USD\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1987", ",", "7"}], "}"}]}], ",", 
   RowBox[{"\<\"UNI7083-USD\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"943", ",", "7"}], "}"}]}], ",", 
   RowBox[{"\<\"ATOM-USD\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1497", ",", "7"}], "}"}]}], ",", 
   RowBox[{"\<\"OKB-USD\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1450", ",", "7"}], "}"}]}]}], "\[RightAssociation]"}]], "Output",\

 CellChangeTimes->{3.890858519490467*^9},
 CellLabel->"Out[104]=",
 CellID->1053641726,ExpressionUUID->"2b87e7d7-5603-4292-b0b6-cbc47030e0bf"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Check we good the data with random sample:", "Text",
 CellChangeTimes->{{3.8328477219694853`*^9, 3.8328477527369947`*^9}},
 CellID->1416781453,ExpressionUUID->"efc35e5d-83c6-483f-a146-22ddaad7f592"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"RandomSample", "[", 
    RowBox[{"#", ",", "6"}], "]"}], "&"}], "/@", 
  RowBox[{"KeyTake", "[", 
   RowBox[{"aCryptoCurrenciesDataRaw", ",", 
    RowBox[{"RandomChoice", "[", 
     RowBox[{"Keys", "@", "aCryptoCurrenciesDataRaw"}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.832841555132306*^9, 3.832841565337654*^9}, {
  3.832841925529983*^9, 3.832841929905305*^9}, {3.832842942687043*^9, 
  3.832842945746461*^9}, {3.8328475966402807`*^9, 3.832847714711795*^9}},
 CellLabel->"In[105]:=",
 CellID->547202635,ExpressionUUID->"f27292ae-35a2-4da9-b7c0-f55f081a6b98"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{"\<\"DOGE-USD\"\>", "\[Rule]", 
   TagBox[
    TagBox[
     DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
      "InitialData" -> {<|
         "Date" -> "2019-08-31", "Open" -> 0.002482, "High" -> 0.002529, 
          "Low" -> 0.002459, "Close" -> 0.002511, "Adj Close" -> 0.002511, 
          "Volume" -> 23927277|>, <|
         "Date" -> "2017-12-02", "Open" -> 0.002122, "High" -> 0.002212, 
          "Low" -> 0.002017, "Close" -> 0.002149, "Adj Close" -> 0.002149, 
          "Volume" -> 4978180|>, <|
         "Date" -> "2020-06-21", "Open" -> 0.002447, "High" -> 0.002478, 
          "Low" -> 0.002441, "Close" -> 0.002447, "Adj Close" -> 0.002447, 
          "Volume" -> 169917761|>, <|
         "Date" -> "2018-09-21", "Open" -> 0.005695, "High" -> 0.005961, 
          "Low" -> 0.005553, "Close" -> 0.005684, "Adj Close" -> 0.005684, 
          "Volume" -> 22345300|>, <|
         "Date" -> "2021-01-27", "Open" -> 0.008255, "High" -> 0.008259, 
          "Low" -> 0.007294, "Close" -> 0.007482, "Adj Close" -> 0.007482, 
          "Volume" -> 204797186|>, <|
         "Date" -> "2022-08-04", "Open" -> 0.066197, "High" -> 0.067502, 
          "Low" -> 0.066007, "Close" -> 0.067357, "Adj Close" -> 0.067357, 
          "Volume" -> 256457805|>}, "AllowEmbedding" -> True, "InitialShape" -> 
       TypeSystem`PackageScope`HeaderShape[<|{All, "Date"} -> 
          1, {All, "Open"} -> 1, {All, "High"} -> 1, {All, "Low"} -> 
          1, {All, "Close"} -> 1, {All, "Adj Close"} -> 1, {All, "Volume"} -> 
          1|>, 
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`Limited[
            
            TypeSystem`PackageScope`RowShape[<|
             "Date" -> TypeSystem`PackageScope`AtomShape[112.00000000000001`],
               "Open" -> TypeSystem`PackageScope`AtomShape[60], "High" -> 
              TypeSystem`PackageScope`AtomShape[60], "Low" -> 
              TypeSystem`PackageScope`AtomShape[60], "Close" -> 
              TypeSystem`PackageScope`AtomShape[60], "Adj Close" -> 
              TypeSystem`PackageScope`AtomShape[60], "Volume" -> 
              TypeSystem`PackageScope`AtomShape[34]|>], 
            DirectedInfinity[1], 7, {All}]], 6, 
          DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
         TypeSystem`Struct[{
          "Date", "Open", "High", "Low", "Close", "Adj Close", "Volume"}, {
           TypeSystem`Atom[String], 
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Integer]}], 6], "Meta" -> <||>, "RowTarget" -> 20, 
       "ColumnTarget" -> 10, "Shape" -> 
       TypeSystem`PackageScope`HeaderShape[<|{All, "Date"} -> 
          1, {All, "Open"} -> 1, {All, "High"} -> 1, {All, "Low"} -> 
          1, {All, "Close"} -> 1, {All, "Adj Close"} -> 1, {All, "Volume"} -> 
          1|>, 
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`Limited[
            
            TypeSystem`PackageScope`RowShape[<|
             "Date" -> TypeSystem`PackageScope`AtomShape[112.00000000000001`],
               "Open" -> TypeSystem`PackageScope`AtomShape[60], "High" -> 
              TypeSystem`PackageScope`AtomShape[60], "Low" -> 
              TypeSystem`PackageScope`AtomShape[60], "Close" -> 
              TypeSystem`PackageScope`AtomShape[60], "Adj Close" -> 
              TypeSystem`PackageScope`AtomShape[60], "Volume" -> 
              TypeSystem`PackageScope`AtomShape[34]|>], 
            DirectedInfinity[1], 7, {All}]], 6, 
          DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
         TypeSystem`Struct[{
          "Date", "Open", "High", "Low", "Close", "Adj Close", "Volume"}, {
           TypeSystem`Atom[String], 
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Integer]}], 6], "Path" -> {}, "DisplayedRowCount" -> 
       6, "DisplayedColumnCount" -> 7, "DataRowCount" -> 6, "DataColumnCount" -> 
       7, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null,
        "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$,
       TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
       TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
          Style[
           Grid[{{
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Date", 
                    Style[
                    "Date", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Date"}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "Date"}, "ColumnHeader", True], "Mouse"], 
                ImageSize -> {{1, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Open", 
                    Style[
                    "Open", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Open"}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "Open"}, "ColumnHeader", True], "Mouse"], 
                ImageSize -> {{1, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["High", 
                    Style[
                    "High", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "High"}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "High"}, "ColumnHeader", True], "Mouse"], 
                ImageSize -> {{1, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Low", 
                    Style[
                    "Low", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Low"}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "Low"}, "ColumnHeader", True], "Mouse"], 
                ImageSize -> {{1, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Close", 
                    Style[
                    "Close", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Close"}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "Close"}, "ColumnHeader", True], "Mouse"], 
                ImageSize -> {{1, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Adj Close", 
                    Style[
                    "Adj Close", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Adj Close"}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "Adj Close"}, "ColumnHeader", True], "Mouse"], 
                ImageSize -> {{1, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Volume", 
                    Style[
                    "Volume", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Volume"}, 1]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "Volume"}, "ColumnHeader", True], "Mouse"], 
                ImageSize -> {{1, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
              Item[
               Pane[
                Annotation["2019-08-31", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                   Key["Date"]}, "Item", False], "Mouse"], 
                ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.002482"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                   Key["Open"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.002529"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                   Key["High"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.002459"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                   Key["Low"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.002511"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                   Key["Close"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.002511"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                   Key["Adj Close"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["23927277"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                   Key["Volume"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation["2017-12-02", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                   Key["Date"]}, "Item", False], "Mouse"], 
                ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.002122"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                   Key["Open"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.002212"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                   Key["High"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.002017"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                   Key["Low"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.002149"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                   Key["Close"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.002149"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                   Key["Adj Close"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["4978180"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                   Key["Volume"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation["2020-06-21", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                   Key["Date"]}, "Item", False], "Mouse"], 
                ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.002447"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                   Key["Open"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.002478"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                   Key["High"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.002441"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                   Key["Low"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.002447"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                   Key["Close"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.002447"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                   Key["Adj Close"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["169917761"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                   Key["Volume"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation["2018-09-21", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                   Key["Date"]}, "Item", False], "Mouse"], 
                ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.005695"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                   Key["Open"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.005961"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                   Key["High"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.005553"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                   Key["Low"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.005684"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                   Key["Close"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.005684"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                   Key["Adj Close"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["22345300"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                   Key["Volume"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation["2021-01-27", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                   Key["Date"]}, "Item", False], "Mouse"], 
                ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.008255"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                   Key["Open"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.008259"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                   Key["High"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.007294"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                   Key["Low"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.007482"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                   Key["Close"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.007482"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                   Key["Adj Close"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["204797186"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                   Key["Volume"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation["2022-08-04", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                   Key["Date"]}, "Item", False], "Mouse"], 
                ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.066197"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                   Key["Open"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.067502"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                   Key["High"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.066007"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                   Key["Low"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.067357"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                   Key["Close"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.067357"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                   Key["Adj Close"]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["256457805"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                   Key["Volume"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}}, 
            BaseStyle -> {
             ContextMenu -> 
              Dynamic[TypeSystem`NestedGrid`PackagePrivate`$\
contextMenuTrigger; 
                Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                  TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                  TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                   True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                   TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                  TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                   Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
              "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
            Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
            Spacings -> {0, 0}, Alignment -> Left, 
            BaseStyle -> {
             FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
              Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
           NumberMarks -> False, ShowAutoStyles -> False]], 
        TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
       Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
        TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
           Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
           Module[{
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
             TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
             TypeSystem`NestedGrid`PackagePrivate`datasetData[
              TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
               FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
               TypeSystem`NestedGrid`PackagePrivate`renderGrid[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
               TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
              Not[
               FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
              TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
              TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
         TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
         TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
           FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
           TypeSystem`SparseGrid[
            TypeSystem`H["(data no longer present)"]], 
           TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
       DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
       TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
        TypeSystem`PackageScope`SubViewPathbar[
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
         TypeSystem`NestedGrid`PackagePrivate`updateState[
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
          TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
       TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
       Framed[
        Dynamic[
         Replace[
         TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
             TypeSystem`NestedGrid`PackagePrivate`localHold[
             TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
             Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
             TypeSystem`NestedGrid`PackagePrivate`localHold[
             TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
              Blank[]], 
             Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
              Blank[]], 
             Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
              Blank[]]] :> (
            Increment[
             TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path$; 
            TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
             TypeSystem`NestedGrid`PackagePrivate`pathType$; 
            TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
             TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
            TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
             TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path$, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], 
         TrackedSymbols :> {
          TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
      DynamicWrapperBox[
       DynamicBox[ToBoxes[
         Dataset`DatasetContent[
         2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
          "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
          "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
          "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
          "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
          "TopBar" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
          "BottomBar" -> 
          Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
          Hold[
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
        ImageSizeCache->{537., {101.3544921875, 106.6455078125}},
        TrackedSymbols:>{
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
       MouseAnnotation[],
       ImageSizeCache->{537., {101.3544921875, 106.6455078125}}],
      BaseStyle->{LineBreakWithin -> False},
      DynamicModuleValues:>{},
      Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
       CreateUUID[]),
      UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
     Deploy,
     DefaultBaseStyle->"Deploy"],
    Dataset`InterpretDataset[1],
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.8908585195204077`*^9},
 CellLabel->"Out[105]=",
 CellID->406335720,ExpressionUUID->"c358d0f3-5903-498f-b1ba-bf14aa6d907e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Here we add the crypto-currencies symbols and convert date strings into date \
objects.\
\>", "Text",
 CellChangeTimes->{{3.8328475581294622`*^9, 3.832847591351821*^9}},
 CellID->1309709991,ExpressionUUID->"62ea23fd-8c10-4ada-be10-c7737923c4a7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AbsoluteTiming", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"aCryptoCurrenciesData", "=", 
    RowBox[{"Association", "@", 
     RowBox[{"KeyValueMap", "[", 
      RowBox[{
       RowBox[{"Function", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"k", ",", "v"}], "}"}], ",", 
         RowBox[{"k", "->", 
          RowBox[{"v", "[", 
           RowBox[{"All", ",", 
            RowBox[{
             RowBox[{"Join", "[", 
              RowBox[{
               RowBox[{"<|", 
                RowBox[{
                 RowBox[{"\"\<Symbol\>\"", "->", "k"}], ",", 
                 RowBox[{"\"\<DateObject\>\"", "->", 
                  RowBox[{"DateObject", "[", "#Date", "]"}]}]}], "|>"}], ",", 
               "#"}], "]"}], "&"}]}], "]"}]}]}], "]"}], ",", 
       "aCryptoCurrenciesDataRaw"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.832842224649994*^9, 3.83284228174234*^9}, {
  3.832842741221692*^9, 3.8328428161116037`*^9}, {3.8328429562447243`*^9, 
  3.832842957257986*^9}, {3.832843004743512*^9, 3.832843018783093*^9}},
 CellLabel->"In[106]:=",
 CellID->588436987,ExpressionUUID->"d53abdfe-00e7-439a-9cc6-fe673c951157"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3.784727`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.890858523369636*^9},
 CellLabel->"Out[106]=",
 CellID->1352809056,ExpressionUUID->"6310dd45-9651-4df2-857f-6b6793cd8f88"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Summary", "Subsection",
 CellChangeTimes->{{3.83284318246175*^9, 3.832843186979512*^9}},
 CellID->698246074,ExpressionUUID->"08ae5493-e708-4d11-99a0-310f15719b8c"],

Cell[CellGroupData[{

Cell[TextData[{
 "In this section we compute the summary over ",
 StyleBox["all",
  FontWeight->"Bold"],
 " datasets:"
}], "Text",
 CellChangeTimes->{{3.832847831636127*^9, 3.832847843088766*^9}, {
  3.832848138155221*^9, 3.832848154735001*^9}},
 CellID->1571118510,ExpressionUUID->"a7810da6-7e67-4c14-98bd-3a392cda41e8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<RecordsSummary\>\"", "]"}], "[", 
  RowBox[{
   RowBox[{"Join", "@@", 
    RowBox[{"Values", "[", "aCryptoCurrenciesData", "]"}]}], ",", 
   RowBox[{"\"\<MaxTallies\>\"", "->", "30"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8328427154839487`*^9, 3.832842723742131*^9}, {
  3.832842856499304*^9, 3.832842890137642*^9}, {3.832843039955122*^9, 
  3.832843067877819*^9}},
 CellLabel->"In[107]:=",
 CellID->329874058,ExpressionUUID->"3d580f54-e74c-48de-80f8-14db39f6b461"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[GridBox[{
      {
       StyleBox["\<\"1 Symbol\"\>",
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontFamily->"Times",
        FontColor->RGBColor[0, 0, 1]]},
      {
       TagBox[GridBox[{
          {"\<\"BTC-USD\"\>", "3136"},
          {"\<\"LTC-USD\"\>", "3136"},
          {"\<\"ADA-USD\"\>", "1987"},
          {"\<\"BNB-USD\"\>", "1987"},
          {"\<\"DOGE-USD\"\>", "1987"},
          {"\<\"ETH-USD\"\>", "1987"},
          {"\<\"LINK-USD\"\>", "1987"},
          {"\<\"TRX-USD\"\>", "1987"},
          {"\<\"USDT-USD\"\>", "1987"},
          {"\<\"XRP-USD\"\>", "1987"},
          {"\<\"USDC-USD\"\>", "1654"},
          {"\<\"WBTC-USD\"\>", "1540"},
          {"\<\"ATOM-USD\"\>", "1497"},
          {"\<\"MATIC-USD\"\>", "1452"},
          {"\<\"OKB-USD\"\>", "1450"},
          {"\<\"BUSD-USD\"\>", "1307"},
          {"\<\"DAI-USD\"\>", "1244"},
          {"\<\"HEX-USD\"\>", "1219"},
          {"\<\"SOL-USD\"\>", "1104"},
          {"\<\"AVAX-USD\"\>", "1010"},
          {"\<\"SHIB-USD\"\>", "991"},
          {"\<\"DOT-USD\"\>", "972"},
          {"\<\"UNI7083-USD\"\>", "943"},
          {"\<\"STETH-USD\"\>", "847"},
          {"\<\"WTRX-USD\"\>", "410"}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"], ",", 
   TagBox[GridBox[{
      {
       StyleBox["\<\"2 DateObject\"\>",
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontFamily->"Times",
        FontColor->RGBColor[0, 0, 1]]},
      {
       TagBox[GridBox[{
          {"\<\"Min\"\>", 
           TemplateBox[{
             RowBox[{"\"Wed 17 Sep 2014 00:00:00\"", 
               StyleBox[
                RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
                  StyleBox[
                   RowBox[{"-", "4"}], NumberMarks -> False, StripOnInput -> 
                   False]}], FontColor -> GrayLevel[0.5]]}], 
             RowBox[{"DateObject", "[", 
               RowBox[{
                 RowBox[{"{", 
                   
                   RowBox[{
                    "2014", ",", "9", ",", "17", ",", "0", ",", "0", ",", 
                    "0"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", 
                 ",", 
                 RowBox[{"-", "4.`"}]}], "]"}]},
            "DateObject",
            Editable->False]},
          {"\<\"1st Qu\"\>", 
           TemplateBox[{
             RowBox[{"\"Fri 6 Sep 2019 00:00:00\"", 
               StyleBox[
                RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
                  StyleBox[
                   RowBox[{"-", "4"}], NumberMarks -> False, StripOnInput -> 
                   False]}], FontColor -> GrayLevel[0.5]]}], 
             RowBox[{"DateObject", "[", 
               RowBox[{
                 RowBox[{"{", 
                   
                   RowBox[{
                    "2019", ",", "9", ",", "6", ",", "0", ",", "0", ",", 
                    "0"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", 
                 ",", 
                 RowBox[{"-", "4.`"}]}], "]"}]},
            "DateObject",
            Editable->False]},
          {"\<\"Mean\"\>", 
           TemplateBox[{
             RowBox[{"\"Wed 7 Oct 2020 08:55:41\"", 
               StyleBox[
                RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
                  StyleBox[
                   RowBox[{"-", "4"}], NumberMarks -> False, StripOnInput -> 
                   False]}], FontColor -> GrayLevel[0.5]]}], 
             RowBox[{"DateObject", "[", 
               RowBox[{
                 RowBox[{"{", 
                   
                   RowBox[{
                    "2020", ",", "10", ",", "7", ",", "8", ",", "55", ",", 
                    "41.72025728225708`"}], "}"}], ",", "\"Instant\"", ",", 
                 "\"Gregorian\"", ",", 
                 RowBox[{"-", "4.`"}]}], "]"}]},
            "DateObject",
            Editable->False]},
          {"\<\"Median\"\>", 
           TemplateBox[{
             RowBox[{"\"Tue 26 Jan 2021 00:00:00\"", 
               StyleBox[
                RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
                  StyleBox[
                   RowBox[{"-", "4"}], NumberMarks -> False, StripOnInput -> 
                   False]}], FontColor -> GrayLevel[0.5]]}], 
             RowBox[{"DateObject", "[", 
               RowBox[{
                 RowBox[{"{", 
                   
                   RowBox[{
                    "2021", ",", "1", ",", "26", ",", "0", ",", "0", ",", 
                    "0"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", 
                 ",", 
                 RowBox[{"-", "4.`"}]}], "]"}]},
            "DateObject",
            Editable->False]},
          {"\<\"3rd Qu\"\>", 
           TemplateBox[{
             RowBox[{"\"Wed 16 Mar 2022 00:00:00\"", 
               StyleBox[
                RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
                  StyleBox[
                   RowBox[{"-", "4"}], NumberMarks -> False, StripOnInput -> 
                   False]}], FontColor -> GrayLevel[0.5]]}], 
             RowBox[{"DateObject", "[", 
               RowBox[{
                 RowBox[{"{", 
                   
                   RowBox[{
                    "2022", ",", "3", ",", "16", ",", "0", ",", "0", ",", 
                    "0"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", 
                 ",", 
                 RowBox[{"-", "4.`"}]}], "]"}]},
            "DateObject",
            Editable->False]},
          {"\<\"Max\"\>", 
           TemplateBox[{
             RowBox[{"\"Tue 18 Apr 2023 00:00:00\"", 
               StyleBox[
                RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
                  StyleBox[
                   RowBox[{"-", "4"}], NumberMarks -> False, StripOnInput -> 
                   False]}], FontColor -> GrayLevel[0.5]]}], 
             RowBox[{"DateObject", "[", 
               RowBox[{
                 RowBox[{"{", 
                   
                   RowBox[{
                    "2023", ",", "4", ",", "18", ",", "0", ",", "0", ",", 
                    "0"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", 
                 ",", 
                 RowBox[{"-", "4.`"}]}], "]"}]},
            "DateObject",
            Editable->False]}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"], ",", 
   TagBox[GridBox[{
      {
       StyleBox["\<\"3 Date\"\>",
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontFamily->"Times",
        FontColor->RGBColor[0, 0, 1]]},
      {
       TagBox[GridBox[{
          {"\<\"2022-03-05\"\>", "25"},
          {"\<\"2022-03-06\"\>", "25"},
          {"\<\"2022-03-07\"\>", "25"},
          {"\<\"2022-03-08\"\>", "25"},
          {"\<\"2022-03-09\"\>", "25"},
          {"\<\"2022-03-10\"\>", "25"},
          {"\<\"2022-03-11\"\>", "25"},
          {"\<\"2022-03-12\"\>", "25"},
          {"\<\"2022-03-13\"\>", "25"},
          {"\<\"2022-03-14\"\>", "25"},
          {"\<\"2022-03-15\"\>", "25"},
          {"\<\"2022-03-16\"\>", "25"},
          {"\<\"2022-03-17\"\>", "25"},
          {"\<\"2022-03-18\"\>", "25"},
          {"\<\"2022-03-19\"\>", "25"},
          {"\<\"2022-03-20\"\>", "25"},
          {"\<\"2022-03-21\"\>", "25"},
          {"\<\"2022-03-22\"\>", "25"},
          {"\<\"2022-03-23\"\>", "25"},
          {"\<\"2022-03-24\"\>", "25"},
          {"\<\"2022-03-25\"\>", "25"},
          {"\<\"2022-03-26\"\>", "25"},
          {"\<\"2022-03-27\"\>", "25"},
          {"\<\"2022-03-28\"\>", "25"},
          {"\<\"2022-03-29\"\>", "25"},
          {"\<\"2022-03-30\"\>", "25"},
          {"\<\"2022-03-31\"\>", "25"},
          {"\<\"2022-04-01\"\>", "25"},
          {"\<\"2022-04-02\"\>", "25"},
          {"\<\"(Other)\"\>", "39083"}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"], ",", 
   TagBox[GridBox[{
      {
       StyleBox["\<\"4 Open\"\>",
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontFamily->"Times",
        FontColor->RGBColor[0, 0, 1]]},
      {
       TagBox[GridBox[{
          {"0.`", "259"},
          {"\<\"null\"\>", "94"},
          {"0.000011`", "92"},
          {"0.000012`", "85"},
          {"8.`*^-6", "75"},
          {"9.`*^-6", "61"},
          {"7.`*^-6", "47"},
          {"0.00001`", "47"},
          {"1.`", "43"},
          {"1.0001`", "41"},
          {"0.000013`", "38"},
          {"0.9999`", "36"},
          {"1.0002`", "32"},
          {"6.`*^-6", "23"},
          {"0.000024`", "17"},
          {"0.9998`", "17"},
          {"0.000022`", "16"},
          {"0.000026`", "15"},
          {"0.000025`", "14"},
          {"0.000023`", "13"},
          {"0.000027`", "13"},
          {"0.000031`", "13"},
          {"0.000021`", "12"},
          {"0.000028`", "12"},
          {"2.`*^-6", "11"},
          {"1.000096`", "11"},
          {"1.000038`", "10"},
          {"1.00019`", "10"},
          {"1.`*^-6", "9"},
          {"\<\"(Other)\"\>", "38642"}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"], ",", 
   TagBox[GridBox[{
      {
       StyleBox["\<\"5 High\"\>",
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontFamily->"Times",
        FontColor->RGBColor[0, 0, 1]]},
      {
       TagBox[GridBox[{
          {"0.`", "258"},
          {"1.0002`", "117"},
          {"\<\"null\"\>", "94"},
          {"0.000011`", "89"},
          {"0.000012`", "83"},
          {"8.`*^-6", "70"},
          {"9.`*^-6", "66"},
          {"0.000013`", "50"},
          {"0.00001`", "42"},
          {"7.`*^-6", "41"},
          {"1.0004`", "36"},
          {"1.0003`", "30"},
          {"0.000025`", "23"},
          {"1.0005`", "21"},
          {"0.000014`", "17"},
          {"0.000022`", "17"},
          {"1.000199`", "17"},
          {"2.`*^-6", "13"},
          {"1.0006`", "13"},
          {"1.001999`", "13"},
          {"0.000023`", "12"},
          {"0.000028`", "12"},
          {"0.000029`", "12"},
          {"0.000027`", "11"},
          {"0.000032`", "11"},
          {"6.`*^-6", "10"},
          {"0.000024`", "10"},
          {"0.000026`", "10"},
          {"1.001994`", "10"},
          {"\<\"(Other)\"\>", "38600"}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"], ",", 
   TagBox[GridBox[{
      {
       StyleBox["\<\"6 Low\"\>",
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontFamily->"Times",
        FontColor->RGBColor[0, 0, 1]]},
      {
       TagBox[GridBox[{
          {"0.`", "259"},
          {"0.9998`", "102"},
          {"\<\"null\"\>", "94"},
          {"0.000011`", "90"},
          {"0.000012`", "77"},
          {"8.`*^-6", "75"},
          {"0.00001`", "67"},
          {"7.`*^-6", "63"},
          {"9.`*^-6", "48"},
          {"0.9997`", "42"},
          {"6.`*^-6", "30"},
          {"0.9996`", "29"},
          {"0.000013`", "24"},
          {"0.999801`", "20"},
          {"0.9999`", "20"},
          {"0.9995`", "19"},
          {"0.000024`", "18"},
          {"0.000022`", "16"},
          {"0.000023`", "16"},
          {"0.000026`", "15"},
          {"1.`*^-6", "14"},
          {"1.`", "14"},
          {"0.000025`", "13"},
          {"0.000028`", "13"},
          {"0.00002`", "12"},
          {"0.000021`", "12"},
          {"0.000033`", "10"},
          {"0.000014`", "9"},
          {"0.000027`", "9"},
          {"\<\"(Other)\"\>", "38578"}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"], ",", 
   TagBox[GridBox[{
      {
       StyleBox["\<\"7 Close\"\>",
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontFamily->"Times",
        FontColor->RGBColor[0, 0, 1]]},
      {
       TagBox[GridBox[{
          {"0.`", "258"},
          {"\<\"null\"\>", "94"},
          {"0.000011`", "92"},
          {"0.000012`", "85"},
          {"8.`*^-6", "74"},
          {"9.`*^-6", "60"},
          {"7.`*^-6", "49"},
          {"0.00001`", "48"},
          {"1.0001`", "45"},
          {"1.`", "43"},
          {"0.9999`", "41"},
          {"0.000013`", "38"},
          {"1.0002`", "31"},
          {"6.`*^-6", "23"},
          {"0.000024`", "17"},
          {"0.9998`", "17"},
          {"0.000022`", "16"},
          {"0.000026`", "15"},
          {"0.000025`", "14"},
          {"0.000031`", "14"},
          {"0.000023`", "13"},
          {"0.000027`", "13"},
          {"0.000021`", "12"},
          {"0.000028`", "12"},
          {"2.`*^-6", "11"},
          {"0.999993`", "10"},
          {"1.000046`", "10"},
          {"1.00009`", "10"},
          {"1.`*^-6", "9"},
          {"\<\"(Other)\"\>", "38634"}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"], ",", 
   TagBox[GridBox[{
      {
       StyleBox["\<\"8 Adj Close\"\>",
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontFamily->"Times",
        FontColor->RGBColor[0, 0, 1]]},
      {
       TagBox[GridBox[{
          {"0.`", "258"},
          {"\<\"null\"\>", "94"},
          {"0.000011`", "92"},
          {"0.000012`", "85"},
          {"8.`*^-6", "74"},
          {"9.`*^-6", "60"},
          {"7.`*^-6", "49"},
          {"0.00001`", "48"},
          {"1.0001`", "45"},
          {"1.`", "43"},
          {"0.9999`", "41"},
          {"0.000013`", "38"},
          {"1.0002`", "31"},
          {"6.`*^-6", "23"},
          {"0.000024`", "17"},
          {"0.9998`", "17"},
          {"0.000022`", "16"},
          {"0.000026`", "15"},
          {"0.000025`", "14"},
          {"0.000031`", "14"},
          {"0.000023`", "13"},
          {"0.000027`", "13"},
          {"0.000021`", "12"},
          {"0.000028`", "12"},
          {"2.`*^-6", "11"},
          {"0.999993`", "10"},
          {"1.000046`", "10"},
          {"1.00009`", "10"},
          {"1.`*^-6", "9"},
          {"\<\"(Other)\"\>", "38634"}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"], ",", 
   TagBox[GridBox[{
      {
       StyleBox["\<\"9 Volume\"\>",
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontFamily->"Times",
        FontColor->RGBColor[0, 0, 1]]},
      {
       TagBox[GridBox[{
          {"\<\"null\"\>", "94"},
          {"0", "66"},
          {"9", "4"},
          {"36", "4"},
          {"13", "3"},
          {"45", "3"},
          {"51", "3"},
          {"5446317941", "3"},
          {"2", "2"},
          {"4", "2"},
          {"6", "2"},
          {"8", "2"},
          {"10", "2"},
          {"20", "2"},
          {"32", "2"},
          {"50", "2"},
          {"52", "2"},
          {"53", "2"},
          {"69", "2"},
          {"429", "2"},
          {"1881", "2"},
          {"7745", "2"},
          {"1211900", "2"},
          {"2783960", "2"},
          {"3696066", "2"},
          {"12387900", "2"},
          {"14529600", "2"},
          {"15499400", "2"},
          {"26124800", "2"},
          {"\<\"(Other)\"\>", "39586"}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"]}], "}"}]], "Output",
 CellChangeTimes->{3.890858523893641*^9},
 CellLabel->"Out[107]=",
 CellID->1252433403,ExpressionUUID->"80850e81-13f6-4076-8414-a76d157cf8d6"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plots", "Subsection",
 CellChangeTimes->{{3.832842063791706*^9, 3.832842068212636*^9}},
 CellID->1537999899,ExpressionUUID->"d16ae009-a782-4d07-b855-107ca27ee45e"],

Cell[CellGroupData[{

Cell["\<\
Here we plot the \[OpenCurlyDoubleQuote]Low\[CloseCurlyDoubleQuote] and \
\[OpenCurlyDoubleQuote]High\[CloseCurlyDoubleQuote] price time series for \
each crypto-currency for the last 120 days:\
\>", "Text",
 CellChangeTimes->{{3.832848209894744*^9, 3.832848242958969*^9}, {
  3.832848325524247*^9, 3.832848336190008*^9}},
 CellID->2051127201,ExpressionUUID->"a1f149a4-95a1-4e81-ba24-4976b148fb36"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"nDays", "=", "120"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Map", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"dsTemp", "=", 
        RowBox[{"#", "[", 
         RowBox[{"Select", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"AbsoluteTime", "[", "#DateObject", "]"}], ">", 
            RowBox[{"AbsoluteTime", "[", 
             RowBox[{"DatePlus", "[", 
              RowBox[{"Now", ",", 
               RowBox[{"-", 
                RowBox[{"Quantity", "[", 
                 RowBox[{"nDays", ",", "\"\<Days\>\""}], "]"}]}]}], "]"}], 
             "]"}]}], "&"}], "]"}], "]"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"DateListPlot", "[", 
       RowBox[{
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Normal", "[", 
           RowBox[{
            RowBox[{"dsTemp", "[", 
             RowBox[{"All", ",", 
              RowBox[{"{", 
               RowBox[{"\"\<DateObject\>\"", ",", "\"\<Low\>\""}], "}"}]}], 
             "]"}], "[", "Values", "]"}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Normal", "[", 
           RowBox[{
            RowBox[{"dsTemp", "[", 
             RowBox[{"All", ",", 
              RowBox[{"{", 
               RowBox[{"\"\<DateObject\>\"", ",", "\"\<High\>\""}], "}"}]}], 
             "]"}], "[", "Values", "]"}], "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<Low\>\"", ",", "\"\<High\>\""}], "}"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"AspectRatio", "\[Rule]", 
         RowBox[{"1", "/", "4"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], 
     "\[IndentingNewLine]", "]"}], "&"}], ",", "\[IndentingNewLine]", 
   "aCryptoCurrenciesData"}], "\[IndentingNewLine]", "]"}]}], "Input",
 CellChangeTimes->{{3.8328420692741537`*^9, 3.8328422003551283`*^9}, {
  3.8328422898980417`*^9, 3.832842342527631*^9}, {3.8328423953373203`*^9, 
  3.832842428882183*^9}, {3.832843202241749*^9, 3.832843205310986*^9}, {
  3.832846598150277*^9, 3.8328466030742702`*^9}, {3.832846635984754*^9, 
  3.832846736099024*^9}, {3.8328467716407223`*^9, 3.832846818508429*^9}, {
  3.8331056094563513`*^9, 3.83310561394466*^9}},
 CellLabel->"In[108]:=",
 CellID->1887365563,ExpressionUUID->"274f52bb-0b0f-4b6c-917c-622ab5eb32c2"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"BTC-USD\"\>", "\[Rule]", 
    TemplateBox[{
      GraphicsBox[{{}, {{{}, {}, {
           Hue[0.67, 0.6, 0.6], 
           Directive[
            PointSize[0.009166666666666668], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJwt1AlMFGcYBuBB4hkKq9GuVuIuVo0taidijEJTl2owalNWSaNNPVYQ0Vhl
rHdjZGNQa8C4QtSqrVkx8Ug0Lm1MjRfr0YbWaAYvxNKITU1d9pq92Itix/f9
SQh58s3/fd87/y555dWLKvtJkrRN/337V/+Rqz2+4hcj+9njQ1SLbtsx3V+u
71uRWgo77uhu3fHG9N402O0X9R9Xw5qx21dcnZXhXkmbP9V9KNI3S+V569e6
zzZkOI3rYPsR4VoL7HILV+TCXd2iX74JNozwct6YAbBllpf9V+bBylrdb4OU
joWdjV72y/4IVm942e9oESy91j1jr9SllcDyMB/zNVQy/8c+9htdxvyrfZxX
X8v8DuHMfcx/1cf3V9PM/K983LflNvPn+LlPTYD5Z/rZ/35DG/JX+Hl+vvUh
8h8Q9ZjyCPmv+Llfi+kx8v/tZ55gIaxkBVhv2gk7pweYrzwHVm0B7rOkAJbq
xPOt62H5sqjH0k+Q/0WA+yY7YcfgIPdrND1F/oIg69X9YW1ZkPNqX+J583fC
7StQt/4UZJ4zPG/vDHL+dNZdAzT2n/MN3CVrfL+VZtjwlcb9VhXBlj0a+ymL
YeWSxn4TvLCzQ/i/a7CaGeI+4ZuwNCXE/ZXPYXmJcMYHsG13iPsYZsKOCyHu
89tU5n8a4j67ZiOvJoU5r2MQ8+eHeT8/5MLWL8Lc9/Ik2F4T5rz+Mbx/1/kw
+48yo971SLjZARv6wtznVFY78k+McL7sYf5FEeYzvkLduTPCfTy3YPVMhP1S
y2CpTdjYBMtp0W+4EbaNj7Lft+/DjtIo9727jfl3RJmvooz3fzrKedl1sPlB
lP23n+f9J8T5tft5/2NjfH5iPe//sxjnF//M+98a4/nSZuY/FeO8mxdhyz1x
/vdWWIkJP34AO009fF7dBavzesT3tQCWNvdwn8br+H7JJ0XdkA/bWoU/PAY7
wuL5ggTszo2zf30V779EeEEt3pd5Y5znC6tg64k495t7Drb/Guf7/WP5M+QP
ivOGzOfIPyrBur8ENsxJ8P1cOQ5bNgh77sHK9wmef5MHO28nOL+9DlZ9CX7+
2qpgyZikcw7CcrHw7PuwbV2S+15IdyD/4STnbX4HdXeLcPdJWPMkOW/IsD+R
f3iK+/iDqFs/SbH/gibU7WtS4vNfBLsaUpw35TTzX0/x8142CHXDvynx/1qG
LUPTPO96F1aK0uy/exzsrExz/rNCWD0oPGYyLF1Nc/+F+2D5nzT3L+vuRP7s
Xj6/auBfyD+jl/PPTobd5cKmxbBW38t9t++Hzb/0st+WTbD1pejXfqTT8j9t
nTRB
            "]]}, {
           Hue[0.9060679774997897, 0.6, 0.6], 
           Directive[
            PointSize[0.009166666666666668], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJwtlQ1MlHUcxx9ovTmHF0rmRuOEuSzn7TZn4rTugbJmOruxZTanPtF0OdO7
Vmq3YjyZUIycp4hIpl5rw4m9XG6UOoxTo+E0u9M85U1Ohppwxz3c+3EX9Pj9
/tkYfPZ7eb6f38ON2ZW2io25kiTt1L8f/tS/zLYHwbKHv1iOeGX9h9Ks877o
hGVBDdh5Uecux2TRyU/AnpDoX7ULrM0cJs9n3Viu88AzuWrJTrD1A51La6XA
47Vg9eAw9yX2gt0eUZ+igAPDOr+zdWKDVg42FIyQe2WwbBnhvOUlsH2z4G/J
roYR5vGvA3vP6Xx8f46rcD1Y+neE+ebsA5vzg9yfU0X/pUH2TzbRf1OQ+883
0N8Z5H0uuel/VnBVhv53Rb9pug/+00Lcf+YLsLo4xP01jdfg/57gGdXX4b8n
xPlLB/6B/+kQ72NTwfJgiH6lfWD71FE+vzUMdr04ynnjtBvwV3S2Tc3xeFpR
l+pHue/p5/3wbxPzB9vByoDoN+0GO58Mc9+xRrBnQZh1tQmsrQvTr/aFm/D/
Ksx8y35B3XpKzG+7DVb7RL/jGNj9mMb+9FrMB8wa86xeAjas1dhf9hP65RqN
7694Ier2nwX/1Qx2dWu8Z20R2PvIGPMuzQFLpjH69w7Qf41gXwP9d43xeb9f
pP8Pgv/z0d8/xryF2+kvRTi/YivubZwXYf4eBWx9K8I8lnqwWh1h3m8qwe4T
Ee5b3gkOXBf74u30nxD9X9bfgv/cKPflvg22V0RZb1sEdn0m+JXPwd6WKPM/
awNLPlH/tQ5szkR5n4J7eJ4yJ0Z+dBLsfDPG9xeqA3scMc7vaaX/94KbZvH9
X43Rx7ESbE3FmHfNE2C1OM7+uRVg98o4fbtMfP874ryfP4T9hu/izL/iDu4j
Xxb9WwpQt8fjzJufB3YVJcg9k/z7X57g/OIOsPRxgvM/vgE2H03Qr2UInz+l
K8G8s1fh8+KMJOhT3op+T2GS9bY08mqvJcW+oW74f5jk855rwX2th0X9QDNY
7UxyX6y4F/5hwVXTwYFZKfaX/Ak2vJrivtFesLwtxf6hTrD9UIr3vGHsg/8F
Ud+RB/YGBReeQb80M839sRKwuSzNe9ftBitbBH/6LtjZmOa8ydcD/4407zsY
QV17IDjtwPOMM8aZN51E3fryOPcdYT71fVE/103//ePMc/8q/dvH6WP7g/73
xfzfBszLT2V4/0PMa1+SYb57H4FdGzPsT1aDvXszfL8L++l/NsO8/fn98B/K
MM+yy2AlL8v60Q6wszQr/l9dA3sqs8y76fXb8P86y3nbIOrG3wQP+sHWO1nm
vXK4X/4fQ0wycQ==
            "]]}}}, {{}, {}}}, {
       DisplayFunction -> Identity, DisplayFunction -> Identity, 
        DisplayFunction -> Identity, AspectRatio -> NCache[
          Rational[1, 4], 0.25], Axes -> {False, False}, 
        AxesLabel -> {None, None}, 
        AxesOrigin -> {3.8804832*^9, 15597.522786055591`}, DisplayFunction :> 
        Identity, Frame -> {{True, True}, {True, True}}, 
        FrameLabel -> {{None, None}, {None, None}}, 
        FrameTicks -> {{Automatic, Automatic}, {
           Charting`DateTicksFunction[
           Automatic, DateTicksFormat -> {Automatic}], 
           Charting`DateTicksFunction[
           Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}},
         GridLines -> {None, None}, GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.4]], 
        Method -> {
         "NoShowPlotTheme" -> Automatic, "AxisPadding" -> Scaled[0.02], 
          "DefaultBoundaryStyle" -> Automatic, 
          "DefaultGraphicsInteraction" -> {
           "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
            "Effects" -> {
             "Highlight" -> {"ratio" -> 2}, 
              "HighlightPoint" -> {"ratio" -> 2}, 
              "Droplines" -> {
               "freeformCursorMode" -> True, 
                "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
          "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.922526, 0.385626, 0.209179], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.528488, 0.470624, 0.701351], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.772079, 0.431554, 0.102387], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.363898, 0.618501, 0.782349], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[1, 0.75, 0], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.647624, 0.37816, 0.614037], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.571589, 0.586483, 0.], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.915, 0.3325, 0.2125], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[
             0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
             AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
          "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
          Scaled[0.05], "AllowMicroRanges" -> {True, False}, 
          "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
          "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), "CopiedValueFunction" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& )}}, 
        PlotRange -> {{3.8804832*^9, 3.8906784*^9}, {15597.522786055591`, 
         31005.607422}}, PlotRangeClipping -> True, PlotRangePadding -> {{
           Scaled[0.02], 
           Scaled[0.02]}, {
           Scaled[0.05], 
           Scaled[0.05]}}, Ticks -> {{}, Automatic}}], 
      FormBox[
       FormBox[
        TemplateBox[{"\"Low\"", "\"High\""}, "LineLegend", 
         DisplayFunction -> (FormBox[
           StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                   "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxDividers -> {
                 "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
                GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False], TraditionalForm]& ), 
         InterpretationFunction :> (RowBox[{"LineLegend", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                  ",", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
              RowBox[{"{", 
                RowBox[{#, ",", #2}], "}"}], ",", 
              RowBox[{"LegendMarkers", "\[Rule]", 
                RowBox[{"{", 
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
              ",", 
              RowBox[{"Joined", "\[Rule]", 
                RowBox[{"{", 
                  RowBox[{"True", ",", "True"}], "}"}]}], ",", 
              RowBox[{"LabelStyle", "\[Rule]", 
                RowBox[{"{", "}"}]}], ",", 
              RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
         Editable -> True], TraditionalForm], TraditionalForm]},
     "Legended",
     DisplayFunction->(GridBox[{{
         TagBox[
          ItemBox[
           PaneBox[
            TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
            BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
          "SkipImageSizeLevel"]}, {
         ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
       GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
       AutoDelete -> False, GridBoxItemSize -> Automatic, 
       BaselinePosition -> {1, 1}]& ),
     Editable->True,
     InterpretationFunction->(RowBox[{"Legended", "[", 
        RowBox[{#, ",", 
          RowBox[{"Placed", "[", 
            RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]}], ",", 
   RowBox[{"\<\"ETH-USD\"\>", "\[Rule]", 
    TemplateBox[{
      GraphicsBox[{{}, {{{}, {}, {
           Hue[0.67, 0.6, 0.6], 
           Directive[
            PointSize[0.009166666666666668], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJwt1A1MU1cUB/CHooxYpIKIiNqHhrnpZkpm2BzDvsfU6EZmZ8J0OtdOxTi/
KBF17sNWnI6pjQUs3641bE6CYdXNL8S1Q7apM6y6KKvD9elAPnwtpZZSSpUd
zylJQ3459713//eee1PW5i3PHcUwzC74PfsPf/K8HpEv1D9y5qaXcGB1JfhC
pGBqdqANV8D1liSh8DDa5gKfuRuyBkfQnsRekW+aEXCuiih9ZjYLvCTwr1No
xbpyC7hPn8KsHELrysAL70Wxxja0xQb+s/bBSOsBtNAbfl5TjJYmPBL5nekd
JocezSnA8zZ2m+wn0ZqPwd+XRJgP1qLNpeBRsRK2/RTafhl8L9qvGryHZrrB
nLXPecqHlseJIr9YjOdOF+D81W+Aixpjuevr0IYN4K1PfKaEi2ibARw5fTLX
bUF7GsHZkwZlF6ccxfydYNeeBCG5Cq2MdVHenAa0bj44weBXWL42Yv514KSG
8brJHrSgB8fv7ZX56ssw/wXw9aJxXOmVcsz/ANyZ1al6+yFaI3GH13dRBeZP
B6d9MI05bcS6Xe2m7++vQzOH3DS/+pk4Xn4W/CLr0nKbKzG/Exy632VdIUcb
ovtEPn2Xz1ojQ9teAV+ISmGPZOLznjV99L20R/h+tggs3SHTrb+OdeWZPuqP
YAFa1w5uc8bpjuxAW8Z66PuefWhBDk6+PMX87Wy0dDXYWymaXs1Dc/vB+ckx
wtbP0JofwKWjxqnf+g7nZ3aAU8dMsnUUoe2j+0U+TxJh+8WGZub2034X82j5
SnDd8Rjb4pcpfyHYdzJg3Z5B+U+Bb5QnqmP1lP9OP/VbYyTlZ7wif3RCou69
fZR/TthlFWhljpf6w7EDrdN6w/sdwP211IGv7h6R/b4e68Jf4MqX3Irm5yn/
U/DrRgljrMDvcy88FvkvawZHThvQmuXg4sdPFQ3vVGH+z8Gyv/tV5llo+wnw
gfrR7FwX5b8J1u1lubI6yj8MNr0fZ06Pp/ypPsr/ZiHlX+aj81PehPOx7Qb/
1POccGAP5a8FNzR1aEscaLYVrCq/r9Bn4vPKAPjgtWT1uWi0bsYA7UfaWLQl
e4DqG1ahhZ3g6oygqpWn/McH6P3eBbT/fwxQv91U0f4PgKdd61QU5FD/y/x0
fxVORduX+qk/VgWo/wv81L+xmbj+8m/A22cnMVMO4vlTX/VT/3Ysx7rBC85t
GWPOv4O2TR0U+ZSuJ9psA+VfDA78JmVqonC92XzwurND2v1ZlL86XJcco/y/
gn9Oi2S+kuB4Sx84Z9lDWcyaasyfFKD53j2Eli4M0H20iUFz28Bd7/Zro3z4
vKYiQOcpto32vxm84kOvIikOx9vFQPh+j0YziUMi73BPN1ffwvFyHvxPsEdx
aR7W1ZuHaH0nbMK6wThE/ZhVhbZZwVvc3drKH3G8pwfcsrrL+bQCzU4M0noV
t6OVC8AfnXCpdmfXYP6N4CXDMvUXl7BuKQHfto9Vx5dR/iZwbUGP6tYcHC/t
CtJ+tMw6hvknDNN5WRGJ1mSAdXuc1qE2HG/OHab7RPcf2n5kmO77GyVophEc
vD2VPSmg5R3gc4GJzMxP8X3q8SGR/2SRx5oqRRteC9F65J9H29aGaL6jt5kw
/+EQ7feY+WbMfz5E57OOrLwfovMUP93M/Q90rzXh
            "]]}, {
           Hue[0.9060679774997897, 0.6, 0.6], 
           Directive[
            PointSize[0.009166666666666668], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJwt1QtMU1cYB/AOg6Cy8ZLHROhFpujYZp2GDSS014HRZW6VZXPOR684Zt0G
lAR0r0B1SgzKqDJFBqNlPhKnm8hCXBis1+kWwalFVrIprgV56oWW0kIfQPfx
fW3SNL98J+ee//nOPY3Pzs/K8ROJRPvhO/sLH0n+sMDe2DZo2slUysBcNXjl
plDzjUC05jr4p5a+ElsUmh8BN4cL+pkktDXqscDubnKVnEtAM+vA1S+MSsPi
0PJPwJ9mWvX9NF59CuwXHMRcSkE38ODAFIv3K/uJWZsfg1dtjxUdN6BDIp4I
rCnaT51wEy2TghvvT+nf/xut2gu+UP80P3AbrasErxfCZQXBOL+hFZxzw1+3
KwgtGgK3LHGaUq+jJWGCwG7ZaZNu/IHypwk0vqeP8n8IjmldpPvgPuXXgOdv
8IhVsd9g/mbwMDetrXSimX7ww3kTigAPWh48IrAdjaPiXy+fxPwp4Nl1MLtO
Yf7d4A3O/0wNXWhz+Qjtvz3vNOb/BbzjaKTu9ttoWS/4xXR/fvkQWhU0Svv1
FFmXDFZU9UhzA6sxPzfqy7MF66Kj4D8/GveWWbAuaQLbqgXt1eXfYn4T2FIe
L4oewrpmnkVg/6qK4kxn0fxq8JtL58j669DWHeDBzWMlk2o0c8RC87cr0fJG
C+UTZaDV3RZab0cYumGuVWDL2mK4gS60WQJ+4B6W1jSjQ7aBD9VOekPdlP8w
eN0dj3eoEeuqy+CMhwGMsR7Xr/sXvC+5T9u2CG2YMyaw5cYBb44SLXoJvNQ/
kl8oRkveAyetdGm76fncwTFa36pErGsugUeKI8wx2Wi+C7yCGSmxdlN+kU1g
s16LUW/KxPUxSTY6j+9GoOXv2Gh/XlmGVpeAXw944hXuVWH+C2BeFsIkKLFu
7rT5+rsCnxcyA04M7VGsCa/B/MvHBXaNckjLdGJdlQWOH5wuSTtH+b8EV/ot
4NofUP7z47Q/jg7K3wEOKRKrn2uj/B5w8n67fspL+Zfaqf/K5yn/W3bKt8NO
/f8MfLD8iakogfKf8Y2PbqL+3/GN3+Sm/jvBx8dnpL9dof4vcdD73zJN/X/D
4cvH4PPM+xy+9/ka9b/eQfmO1VH/bzno+Uaezr8D3H5kgazzRzr/4gmBrYrt
FZ+/hDZsnKD742c1nf9C8N0zvd48Bi2pm6D9mv8Fvn/cTXDQlgDZMQn2R2Pz
uXYx5V88KbC503btuQpcr3X9JJ2Pi3exP0wBOO1sNLO5D+vyGnDDLav260K0
+g9whGZCysXWYn4LuPTiHCbvGtr8rFNgxf+MKbi76JAMsHZrmG4gHS3Lc9J5
SryCVp120vtoLELrfgfD9cSVT6INAnhPZyjfmo8WRbkEtl4ZxzeW4XolLHhr
7ozicBTWuY9d1I9DRqxrTrro/iiYQvN6F91ve0pxvHXYRfsZV45mFrppf5ru
oeXpbrqPr/BotRKc3vBILz9A+U+4af76Fsrf4qb7gvv8O8w/6KbzNJ1Zh/lD
PQKrPsDIIo1YV60FnykcVry8F63LAdesdSvytqMNFR76v0jNQIuawUbDXG61
Ay3pm52v2KQfXofzc89M0X1UmojWvDpF9erTWsyfDa7os4m/r9Vh/mNT1N9l
xWjmKnjGOm561IiW9/jGp2p0sv8BZuRA8Q==
            "]]}}}, {{}, {}}}, {
       DisplayFunction -> Identity, DisplayFunction -> Identity, 
        DisplayFunction -> Identity, AspectRatio -> NCache[
          Rational[1, 4], 0.25], Axes -> {False, False}, 
        AxesLabel -> {None, None}, 
        AxesOrigin -> {3.8804832*^9, 1111.6080658333358`}, DisplayFunction :> 
        Identity, Frame -> {{True, True}, {True, True}}, 
        FrameLabel -> {{None, None}, {None, None}}, 
        FrameTicks -> {{Automatic, Automatic}, {
           Charting`DateTicksFunction[
           Automatic, DateTicksFormat -> {Automatic}], 
           Charting`DateTicksFunction[
           Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}},
         GridLines -> {None, None}, GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.4]], 
        Method -> {
         "NoShowPlotTheme" -> Automatic, "AxisPadding" -> Scaled[0.02], 
          "DefaultBoundaryStyle" -> Automatic, 
          "DefaultGraphicsInteraction" -> {
           "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
            "Effects" -> {
             "Highlight" -> {"ratio" -> 2}, 
              "HighlightPoint" -> {"ratio" -> 2}, 
              "Droplines" -> {
               "freeformCursorMode" -> True, 
                "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
          "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.922526, 0.385626, 0.209179], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.528488, 0.470624, 0.701351], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.772079, 0.431554, 0.102387], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.363898, 0.618501, 0.782349], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[1, 0.75, 0], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.647624, 0.37816, 0.614037], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.571589, 0.586483, 0.], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.915, 0.3325, 0.2125], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[
             0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
             AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
          "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
          Scaled[0.05], "AllowMicroRanges" -> {True, False}, 
          "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
          "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), "CopiedValueFunction" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& )}}, 
        PlotRange -> {{3.8804832*^9, 3.8906784*^9}, {1111.6080658333358`, 
         2137.445068}}, PlotRangeClipping -> True, PlotRangePadding -> {{
           Scaled[0.02], 
           Scaled[0.02]}, {
           Scaled[0.05], 
           Scaled[0.05]}}, Ticks -> {{}, Automatic}}], 
      FormBox[
       FormBox[
        TemplateBox[{"\"Low\"", "\"High\""}, "LineLegend", 
         DisplayFunction -> (FormBox[
           StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                   "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxDividers -> {
                 "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
                GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False], TraditionalForm]& ), 
         InterpretationFunction :> (RowBox[{"LineLegend", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                  ",", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
              RowBox[{"{", 
                RowBox[{#, ",", #2}], "}"}], ",", 
              RowBox[{"LegendMarkers", "\[Rule]", 
                RowBox[{"{", 
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
              ",", 
              RowBox[{"Joined", "\[Rule]", 
                RowBox[{"{", 
                  RowBox[{"True", ",", "True"}], "}"}]}], ",", 
              RowBox[{"LabelStyle", "\[Rule]", 
                RowBox[{"{", "}"}]}], ",", 
              RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
         Editable -> True], TraditionalForm], TraditionalForm]},
     "Legended",
     DisplayFunction->(GridBox[{{
         TagBox[
          ItemBox[
           PaneBox[
            TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
            BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
          "SkipImageSizeLevel"]}, {
         ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
       GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
       AutoDelete -> False, GridBoxItemSize -> Automatic, 
       BaselinePosition -> {1, 1}]& ),
     Editable->True,
     InterpretationFunction->(RowBox[{"Legended", "[", 
        RowBox[{#, ",", 
          RowBox[{"Placed", "[", 
            RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]}], ",", 
   RowBox[{"\<\"USDT-USD\"\>", "\[Rule]", 
    TemplateBox[{
      GraphicsBox[{{}, {{{}, {}, {
           Hue[0.67, 0.6, 0.6], 
           Directive[
            PointSize[0.009166666666666668], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJxV1XtMU2cYx/Eqgk5Rq+J1CIUBkkykVCcyUTiEgVgYFVZ0OqWiMhAdJTgL
jgAZ6mCbsRveEB0FkakzghiheNmKDLTDTJgJXqKTVRDBA63coYD76fP+UxJC
Pjkvh37P+54Hp5jEiB3jBQKBCt9vf+JLnNjOc+F/FR9cLjD5wYo8+OwZ+7tu
ZHUNnBV2Orj2jfGtdZ3wuuGAO6lk09wOnhs3756mkCwKgDOG7510JMt2wUe7
Ll1xImceg6sEy9YeH3vnMh08x4sXu42+c3MHvPVczeTKkXcWzn7Fc87eNVMH
yf5+sIdrfYg7rVfGwzmurV3JdF2TC8uLeI9WcsNN+FOjYVRL6wUvYW+zVWsF
WTyT57lG38xP0skKX/h2bPAFI/2+OhaePX+hej9d16lhl4APHmrp85uuwQ6/
vlyzhPW3wuaLksiNrH96J8/NzAmov8b6feAWzf68CnLZNrg9o2qOBz3v5kNw
yPXG22lkoRYWfl6coyL7G+A3beLoLWSlbRfPVdip+/3ImuVdFvvVoIClqgeP
1GTBD/Dljzal6sniq3Cp9U3vg2z/n8F1Q/mybLb/7xl5bkqMJiGarFsKF8+9
apaTTZthp6iM/VvJomz4wklRx2qyrBxOWtHzmw858wn8tHNf/PfkMhsT9v/J
9BQF6xebLM6fcBOcEly3s4c+r/8B2Nnw4jMJ6y+Fy35ymbSe9T+CVZ4D+nXk
BqvXPBf7e1bBCrJgCdy7uzpiM1m8AR42LeaCWP+3sDxM+LUj678IXz9ubnFn
/U3wLs54yIn1C7p5blFYVlEq6/+w22J/ZHL4btpEvyTWnwEnnNbal7L+83Dt
qmOr94yj/vvw062z8qpY/xjs0dCljmH7797Dc2lu5rZ41h8BJ4lcppxg/Wmw
oSX9uyLWXwJLbndf2sf6G3ssno/YDFsnnAoLZv2uvTxXILr8dBXrD4ftXxmW
L2D9qbBPU+3uZaz/TK/F/BD9Dc+JU63xYv2DvRZ/L9O5D/eL/iY2hPWHwjYD
Vg7z2P7vhXNL8Eqy/kJ4aeTGDCnrr4c3BdrlerP+vj6L86xx7LeYTw0hcKW2
7stydv73wOcO6xzT6f0V/wLP9w01vyAr7sDi3uzG5CnU3w3r5YvTI+dRv/0A
z217nX9rrTX1B8EBHXv7j06k/iS4JjDLzpeuy/JhV9/CBwUTqL8WrpC+P01q
Rf1G+LhgJPICXW+eP8hzfJitXk8WBsIbpePi39B6/69gn64j05qoR3kCttal
2Eyl+aS5BX9ss71Uxfp5eOmz6nB7tv9zh3jO7Xyo10Q6b2IOrh5/QqJk+58A
Ryui3P+h+6mPwu2K0YIamoe6P+BUp4UOtwZp/rXDj70H1h820/yzG8b7Nkux
YYzWy1bDk2cFXSmn+2XGwRPUj//Uk8t+HraYt8034CNx+ufxQzT/2+CSU579
W9j8n2HmuRl14c//JStXwuZ2v4R0Nv93wDJD8qKHrP8wrH25/Xwf7a/gmtni
/5O4Bb6xUhKVT1ZMG+G5tfc1cQ7s/K+AlZPkO/vZ+Y8ZsXi+ph/hwWWLPCX0
PEWV8JhtYlMz9cn+g78QLDgrxfr/AU/fVSQ=
            "]]}, {
           Hue[0.9060679774997897, 0.6, 0.6], 
           Directive[
            PointSize[0.009166666666666668], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJxV1HlQlGUcwPEFhOQIljuUiUOYSDSWQ1kGcffdgNhiYlsoLiGUPAqRrSmD
gYCYIVQg16VCzbVtKAhjhq245HIDUUokhEJgBFdkhcV3YXE55eqnv+efZYZh
PvN7eXm+z/OwbocyhIcNGQzG5/D97Cd8sTLUNHV3rOpKH0PLAadcAOdY7nqj
Gy3uBKe96qrJQys0YGuVeUIEWus4TVMNduJFDtqVB04MtSsLRAuOgx+eql+2
Q+d/Bx6yDKdt0XIFeLXGLzphc/aZldPgS6fVvJqN52baP6Ypo0xzDy80lwNO
jigqYqFFH4K7Xh65aYaWlYE9eDuGmtB9beDOweMqT3w/Ywqc9JI6TINzlg1N
U+K017vYOE/ZBxbufGDahnPxEXBbtMHSPpwrxLTe+rXNtN5+uKrA7PbFHgnp
t9LQ1Ct/bu//hfQHga8UvMOXkv5UcPPRpAoVWlkKfuTyRVmlwXMzm8CxPVsz
rAyfmzsOts0ZmB/GuchihqYk08HXvNCyvWDf8pj0QHRfCpj9ZrI0Fd/PKAbf
Guq7vYFm1YO915zGavD5lPvge/zQZUe02HSWpjThLjoDtMIfLEn+dyYWrU0C
RxT7fxWEdj0F1oXssN6GFvwO/sAwt9QDnX9vVm99chMtnN9f65ZhaCULvDKU
JPsJ18dMBBecK9/zG5pbCJacrDi7ghbVavXWIxsG877xOeZG+o3maMovuHis
mvS/Bp7s/GOLE85ZceBdMkGUC+kv0Le4Zk5vvxSDc3r7o2U8oam9hnPNuaTf
G/xRoTr7RdL/Lrgu7syEN+nPA4/OqPYHmWF/NTj5cq/9z1uwfwAcecNXEoLn
zdwAm1ZejH8Lf5/rpaOpQSF3ZJP0C8F1Pe52iaQ/B6xpbnT3Jf2VOr37wbgD
nora/p+anP8qOE7EUX5J+j3naer8imXuOPn/jwLbs4dNZkh/FvhGekB+I7n/
FeA7kxUlTeT+94LrRfGFt8n9XwZHnzNLNSf97gs0Fb9WKReS848E87Z2lwvI
+Z8Er//QmZNF7v+PC3r7z721oH/+C+A0aZNzLVrmskhTF6RhszHoPj7YffxR
jB85/0/B6ryrDrtJ/2XwZAbPzdAS+7vBCy3yPYlZ2P8ELFv95EgLD/udl2jK
IriEn+eD/eHgKX/ZWMk27P8Y7NVQUOnpgP3fg8WFU0y2DfZ3gX1WP6sKtsL+
WXCwk7NnLf59pdMy7HccI9oEzQwF3y+5WCvB57knwHNh2a1inIvOg5eM5zuk
5tjfAb7JPzj20AL7aXBCQUm+2QvY77hCU5shmZp+E+ynwDurQjwn8f6lpIHf
vtrRcgAt/hYcWxfUm473UXENPDAS0HAXrVWDp3tt/xlGu9o9pan3vPrXL6EF
+8HpYn54Lzr/mP5cLgF/nXDwabIR9reC5TGOWj80cxJ85te/273J55/1Kk0J
SstP2OBcFAx+n2dc5IjrlR0Gj1oEKnU47zsL1jEcVhbQjGawbwNzQobPsybA
VhEd7VLSb7kG53+UIwzF/RGzwQHDnCgjtOIQOPbxdVWmMfaXgCPXW6sj0K6N
4OsHhPWj+D7BA3D27qk2X/D/D3Y39A==
            "]]}}}, {{}, {}}}, {
       DisplayFunction -> Identity, DisplayFunction -> Identity, 
        DisplayFunction -> Identity, AspectRatio -> NCache[
          Rational[1, 4], 0.25], Axes -> {False, False}, 
        AxesLabel -> {None, None}, 
        AxesOrigin -> {3.8804832*^9, 0.9974208888888914}, DisplayFunction :> 
        Identity, Frame -> {{True, True}, {True, True}}, 
        FrameLabel -> {{None, None}, {None, None}}, 
        FrameTicks -> {{Automatic, Automatic}, {
           Charting`DateTicksFunction[
           Automatic, DateTicksFormat -> {Automatic}], 
           Charting`DateTicksFunction[
           Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}},
         GridLines -> {None, None}, GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.4]], 
        Method -> {
         "NoShowPlotTheme" -> Automatic, "AxisPadding" -> Scaled[0.02], 
          "DefaultBoundaryStyle" -> Automatic, 
          "DefaultGraphicsInteraction" -> {
           "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
            "Effects" -> {
             "Highlight" -> {"ratio" -> 2}, 
              "HighlightPoint" -> {"ratio" -> 2}, 
              "Droplines" -> {
               "freeformCursorMode" -> True, 
                "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
          "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.922526, 0.385626, 0.209179], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.528488, 0.470624, 0.701351], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.772079, 0.431554, 0.102387], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.363898, 0.618501, 0.782349], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[1, 0.75, 0], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.647624, 0.37816, 0.614037], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.571589, 0.586483, 0.], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.915, 0.3325, 0.2125], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[
             0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
             AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
          "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
          Scaled[0.05], "AllowMicroRanges" -> {True, False}, 
          "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
          "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), "CopiedValueFunction" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& )}}, 
        PlotRange -> {{3.8804832*^9, 3.8906784*^9}, {0.9974208888888914, 
         1.029628}}, PlotRangeClipping -> True, PlotRangePadding -> {{
           Scaled[0.02], 
           Scaled[0.02]}, {
           Scaled[0.05], 
           Scaled[0.05]}}, Ticks -> {{}, Automatic}}], 
      FormBox[
       FormBox[
        TemplateBox[{"\"Low\"", "\"High\""}, "LineLegend", 
         DisplayFunction -> (FormBox[
           StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                   "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxDividers -> {
                 "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
                GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False], TraditionalForm]& ), 
         InterpretationFunction :> (RowBox[{"LineLegend", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                  ",", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
              RowBox[{"{", 
                RowBox[{#, ",", #2}], "}"}], ",", 
              RowBox[{"LegendMarkers", "\[Rule]", 
                RowBox[{"{", 
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
              ",", 
              RowBox[{"Joined", "\[Rule]", 
                RowBox[{"{", 
                  RowBox[{"True", ",", "True"}], "}"}]}], ",", 
              RowBox[{"LabelStyle", "\[Rule]", 
                RowBox[{"{", "}"}]}], ",", 
              RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
         Editable -> True], TraditionalForm], TraditionalForm]},
     "Legended",
     DisplayFunction->(GridBox[{{
         TagBox[
          ItemBox[
           PaneBox[
            TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
            BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
          "SkipImageSizeLevel"]}, {
         ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
       GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
       AutoDelete -> False, GridBoxItemSize -> Automatic, 
       BaselinePosition -> {1, 1}]& ),
     Editable->True,
     InterpretationFunction->(RowBox[{"Legended", "[", 
        RowBox[{#, ",", 
          RowBox[{"Placed", "[", 
            RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]}], ",", 
   RowBox[{"\<\"BNB-USD\"\>", "\[Rule]", 
    TemplateBox[{
      GraphicsBox[{{}, {{{}, {}, {
           Hue[0.67, 0.6, 0.6], 
           Directive[
            PointSize[0.009166666666666668], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJwt1A1MU1cUB/Aqix/RWHRM/NreA786iVo1ZTDNeE/5qG4DNBOHRvoigzEQ
WhFQQfvKtBsqSieiIM52I26MaQCDTkXWFzcUJ6LMsa0D02dFsO6BFYZQvrrj
uTZpml/Ou73933Nu/bZpNySMlclku+D98hNeSq1TYutmqjRn3akMmCsB/xqn
4FZeTntp0y/gc+f/1mTJ0UIX+IA5yKA/inb5PpXYg3e/5ng9ml4Nntvq1icH
oqO3g5+8r+WXRKANJ8DtkU5uZD26SgCrRXkIvwYtPgX3Fiabj6ajvd/4V2KH
2xWMzydoJgScVxctZJWhdZ+BJ29WC0nkeUsh+L7tlqgg+9+rA884EWKfXoKW
PQHPqdlEFVxCK6dJEhtrvCPz7dVi/lXgp5tzzIscaFMiuLxAoPTBOsxvAi9m
w5kwNdp1FVyryBbjR9H0Y3DJ2+etCT3oaHmXxIqLoujtih2YPxh8ZfpipjUH
XRUPfrTCFiK/jxaPgMP+MlKnY9Mx/2Vw84Vu6nYkmnGAVdkqxrkNrZvcLbG6
cby1uABtCXzlGRX4ffc4sHqI4rq60LLD4Fnl+by5F628CDZWG+nx1bies4Md
wVuYcmLTxGcSm+q1yxL5GC2sAL9cvqwW7doKtqRoGG0Kms4Dd+XGcOoOdPQF
8Na8FsqvHm1oA2vlqxn9mJ2Yf5xLYr/NTuECXkeLSrB22n5hnZvk3wKucU4Q
O2ZhnTGCG0/6chp/tK4S3LFpp4G7jbbYwA17GcvObvQ9r+cSO/IiU2zLycD8
S8BlGU7NtEi08mPwjBKDZi6F5j4Hf7RhoWXtGrTpHNjnxG7GFoEW/gQHLHWb
r/WR/LIeiR119drXuEj+AHC9LlMW6ov7R28EVzanWyIUaAMPbld/ys2rJf3/
Aezwyzff8Mf14n1wadAVu18iyT8KLl6uYyZNIPkVvRIbZzxu/mOA9H8D+G6Z
w9N0nOTfCw59MJ7uyyD5vwObY5qpf2LQsmZwlP91q1qDVg6B9ek+9CEvNDf/
P4mtaqikHOR8TVHgL370orsF0v894CMtHZ6iQpK/DKzalyVk3iX5m8AVZxpD
BptI/wfAjwJnCbNvkf7790nsmdAD/FfN6KoPwGf39/GReSR/FvhGcq+nwoPn
4/0N+MrMNKHTiWZug6tFveA1itb1gW/yuTRjRVuoF5CPyg0ZrifzvxaccDOc
jrOR+c8AP5j4QvP9JDL/Z8CZwfPpxFK8r1wDuHP9c/7L17Bu6gG3jiwS3lmH
Fub0k+c7BtCu8H6SXyXD86J39JP7PbuV5C/tJ/NqH0f6X9//at7TcZ6qnoFj
k+vs5efQ4swBibV1v2XJuYz2DgW3/HZAU3EHzaQNkN/fWYDWFYNvZf1sPmUj
/b8OPj7V1xA+SvovgStKD1tT20j/fd0S+3DeHaqQ1JUsWB7/u/2wH5n/FHD2
+lpN2ELS/yLwm40LBJcKLVjBxpJL/Nl8tMsJzi1MFafoSH6fQYmNv+jmi06T
+X8PXNm0jB4qJvmTwLvDXNai3eT+Hxsk/59zG0j/r4EnrFIadBFY9+4EP4ms
8rybROZ/6pDEMtZn9mGyn24leKx8Mn2NzLMlARybOqpRJZL8BWCT28AsjCP5
r4I3RnVQI3tJ/nbwpZ5jnrUOMv9ThiV26YdTxYwWkj9omNyfU6QubAMvjyn1
nGTwvFz54DGD+zwL9qDpn8BeEw9RZTXo6Idg1yGRD5iXyfwPFQAtSA==
            "]]}, {
           Hue[0.9060679774997897, 0.6, 0.6], 
           Directive[
            PointSize[0.009166666666666668], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJwt1Q9Qk3UYB/AhanoiDtRTU9vQMymvWho4ldz7GgZ2ipM0pQ72+oflH3Cg
qIXiXgrC8N8I0Qhwr9pJGiraHw319gJTMS9ZkIopbASUwAvMAToHuh6fx93t
dp973/3u/b7P9/e+QasM0fEDZDLZNvg+/4WPytAqsUURV7wTDxgYMJcPPppW
4pi5FW2qBP+Rk6cb7IMWO8COQN74+xC0c0ybxAZmTBNsVzY+t3Ie+JDaxaw5
j9YmgK+tSfYG5KL5g+BUg5+P2IsuFcFZP1SYG/9GO9rA1rhgbk4tWj66XWK/
zD6pa61GMxpwQnuxt8SFTloHjmjSWnbTcSEXbB87gG96hLZdBmuKlZoCWl/2
AJzjvGxhI5OeWxUoSezyOJdm1ttoLgzcvukDZs97aJMevK8tRbnBgBZN4JDU
EOa1V5Mxfxl4fNldxdpStLIF3JH+ERe5Bq0d0SGxibJQZUUNmp8F3h6Vald7
0aWrwZn5vxrjUzZh/r3gT2sDxOHCZsx/AfzG3EGiegKa+Qecnpvo2DcLneTX
KbF+y19iCv3QQii44ZUMPswfbeM6af2WZFxfthv82XynZZkcj6t+AadMrTPW
x6A5eyfdv2Pr0KahXRJ77s5FTUMoWpwBHhKm4p3TUjB/LDiuaDUTmovHlbvA
iU97zCFL0dpz4OFLr1oWx6H5+2DG0mUPy0GXDnZK7MJxaqHFB9dzqMA11jni
yIFo+SdgrsTATS+i/JngCwMd5uhuyn8GfLJgt6XjDp4v3AXPu9nnvfAAbfN9
KLGd2//SddWjZW+CI90NduXoLZh/BTjeOkhYcgaPc1+A84blGRPr0KYS8Pdf
b+OL29HibXDVDkaYYaL8MpfEbvT8pGjVUv5p4K2hzeaYTZR/Gfg4/7O33BfP
543grr1BMvdZyn8CXKD+zR5UQ/OvBZ++1Gycfpvm/wz8+PoSPng9/p8J7pZY
7Uyto+gq5Y8Guw7+qLjXRvPfATZmrBRr/qX5HwcHNV/yVvegZX+C31oU4Oip
pvn3gaWEKk33Hpr/lB6JPRyeYVxymua/uOfFft9B8/8cfO/p6+I2J16v8xjY
HBMo6Kk/ypvgtNivvO8so/xucONUf0HxMs1/Uq/Elpyq0z2aRPkX9lKeejfl
3wr28aR59eVo+RHwTkOt+d0QNHMD7K8fya2IQCf1gjPMan7neLSgePTi+iaj
bQvAI9PbFOEfU/9TwIFZCcp6Wk91GPxAbxQKV+J+5KrAOd3PNFHfoU0ucPns
fYr1tL444bHENs24qxlRiNfvfB/cWzafS3hK+ZPBTIWKu36Y8heAp45ZzU20
0fyvgPc3uxTR4di/0i7woLEHNYpitGOcG/p+QLDIY9HycPDAoBjRGoZmNoJv
2QZzlWp00rdu6rt7NlqoAJ+yTJEZLdR/CTwgcJFQdZT6P+aJxHpq7pmHadEq
FhyXecA8Kp/6vwF8dFWhZUEe9T8PXFvu0Vw7Q/O3gPXlVkWmm/K3gvsbjmsu
3qf8ozwS6zs0WzHZQ/nngi8GpzqaqI/8WvBZx07Rt5Lm/w247qFOuYued45L
4Ozr4zl9OvX/P/DQqDTlEyvt/4A+er5sOUH9nwP23JqgrNtL/Y8Hl95wmjuz
qf/7we7KamN1PvW/rI/eV3K6HlUzuGVei27YTcrv3y+xR+LrNbdnUn41OOzI
HbP1Q9r/q8C6Q42aWDft/z39dH+yvGjlefCKzTwXZcd5aBv76f0Q3LiF+R8t
CDi2
            "]]}}}, {{}, {}}}, {
       DisplayFunction -> Identity, DisplayFunction -> Identity, 
        DisplayFunction -> Identity, AspectRatio -> NCache[
          Rational[1, 4], 0.25], Axes -> {False, False}, 
        AxesLabel -> {None, None}, 
        AxesOrigin -> {3.8804832*^9, 233.67527816666717`}, DisplayFunction :> 
        Identity, Frame -> {{True, True}, {True, True}}, 
        FrameLabel -> {{None, None}, {None, None}}, 
        FrameTicks -> {{Automatic, Automatic}, {
           Charting`DateTicksFunction[
           Automatic, DateTicksFormat -> {Automatic}], 
           Charting`DateTicksFunction[
           Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}},
         GridLines -> {None, None}, GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.4]], 
        Method -> {
         "NoShowPlotTheme" -> Automatic, "AxisPadding" -> Scaled[0.02], 
          "DefaultBoundaryStyle" -> Automatic, 
          "DefaultGraphicsInteraction" -> {
           "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
            "Effects" -> {
             "Highlight" -> {"ratio" -> 2}, 
              "HighlightPoint" -> {"ratio" -> 2}, 
              "Droplines" -> {
               "freeformCursorMode" -> True, 
                "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
          "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.922526, 0.385626, 0.209179], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.528488, 0.470624, 0.701351], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.772079, 0.431554, 0.102387], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.363898, 0.618501, 0.782349], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[1, 0.75, 0], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.647624, 0.37816, 0.614037], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.571589, 0.586483, 0.], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.915, 0.3325, 0.2125], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[
             0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
             AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
          "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
          Scaled[0.05], "AllowMicroRanges" -> {True, False}, 
          "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
          "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), "CopiedValueFunction" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& )}}, 
        PlotRange -> {{3.8804832*^9, 3.8906784*^9}, {233.67527816666717`, 
         350.072296}}, PlotRangeClipping -> True, PlotRangePadding -> {{
           Scaled[0.02], 
           Scaled[0.02]}, {
           Scaled[0.05], 
           Scaled[0.05]}}, Ticks -> {{}, Automatic}}], 
      FormBox[
       FormBox[
        TemplateBox[{"\"Low\"", "\"High\""}, "LineLegend", 
         DisplayFunction -> (FormBox[
           StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                   "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxDividers -> {
                 "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
                GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False], TraditionalForm]& ), 
         InterpretationFunction :> (RowBox[{"LineLegend", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                  ",", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
              RowBox[{"{", 
                RowBox[{#, ",", #2}], "}"}], ",", 
              RowBox[{"LegendMarkers", "\[Rule]", 
                RowBox[{"{", 
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
              ",", 
              RowBox[{"Joined", "\[Rule]", 
                RowBox[{"{", 
                  RowBox[{"True", ",", "True"}], "}"}]}], ",", 
              RowBox[{"LabelStyle", "\[Rule]", 
                RowBox[{"{", "}"}]}], ",", 
              RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
         Editable -> True], TraditionalForm], TraditionalForm]},
     "Legended",
     DisplayFunction->(GridBox[{{
         TagBox[
          ItemBox[
           PaneBox[
            TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
            BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
          "SkipImageSizeLevel"]}, {
         ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
       GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
       AutoDelete -> False, GridBoxItemSize -> Automatic, 
       BaselinePosition -> {1, 1}]& ),
     Editable->True,
     InterpretationFunction->(RowBox[{"Legended", "[", 
        RowBox[{#, ",", 
          RowBox[{"Placed", "[", 
            RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]}], ",", 
   RowBox[{"\<\"USDC-USD\"\>", "\[Rule]", 
    TemplateBox[{
      GraphicsBox[{{}, {{{}, {}, {
           Hue[0.67, 0.6, 0.6], 
           Directive[
            PointSize[0.009166666666666668], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJxV1HtMk1cYBvBOHMMJioJDvIyyCSNAsDK5TQU+RdFEEB0lDDcsMFSUASKR
EJg2LrpRQBqVm4u06jYggclYCMhFOxCcY2CHBpGhVBxjpR9QC6hc3SPv+adN
muaX857L872nn3104r7YBQKBIBXfN7/4iBK1PGcwLZxcMjfqB0uK4Oyd1hFd
s/OWN8Pvz9x+a3x63qpheHZc4eFH9XqbIZ6rUeeZhb6et3ArvPmg0n2O5ofE
w2Zt3ep2qpfmw64WM6VnabxSBZeW5KrsaFwzBN9YaaLzJluu0PFcT/8qxV2y
vx9sdUNjPkdOitMZra+8AJ9artj0G1ndCDvK5HWXaT/Bf3CdqDOrhyxazvPc
bdPFH8Wx/Jvhp1+L3ULJ8oOwc8UtBwHlU8nfuOVc6xWWvw4+5LJ+UjFD+Qfg
/oqxxAKWf+kwz337ONU8lyz1gVuvhTZZTVH+GFgg7q1tofmaHFgddbNBQM/b
shbOc2lo207j/v3wkwjH5ufkJPMRnlvWuufZE7LSE57dlTGykOarJbDrhKvZ
AMufBR89OfPjdpa/Gu7rUzZOvaL8fXBK2vHaMJovXzTKcze7059vZ/3/GLaK
KTqZSfX6L+D8bVnxgzQu/A4eD367d4zOE1IF/yLzcs8lS3vhi9NrZQtY/031
PBdhkZnuStaI4B47p5phln8/rN3p9tqexv3PwB22e3tWs/zX4UUhn7Z10fNU
PoJ9831TOKpXmzznuaKDdQ93sfxucHtYpMFvkvKHw+VeR85oaT/JaVgm/kZU
w/KXw2GdskQn2k/VBXuYHa8voHG9wGA0X+gCm+//Na+A5RcbjO6H9BQceeai
IpTqK8tgmyhZchzr/31YIh+PW0HntZyDa7dw0fVU7+80xnPJG0y7jrH8++D0
h8r1jVSvzIBL/mz3usr6/xO8I+3fgUqy4C+4sfTx9QU0XzQNX7Qadv6BLHEY
57mVaZ9ZLSbL94wb3QdVGiyWrc3ZRvvpr8EZo4nqSLKwA/Zxueo4xfK/gi/l
h9vmsPwfTPBckrZwLJv1f/eE0X3VnJgw6qflFVihdWh1Z/1vg922XBq6y/JP
wM9amix9WH67Fzx3Ovnvm4Gs/7vg7od1D8xY/1PgdOufA5/S+qJiODP6zRuQ
8v8Ou4tFzmVW/Hx+A7w0ambjSNDIfP41L3nOq+xw+exlyr8D/iqxZt07POU/
BgcOOB6JG6H838P5lZ6twfR/kbbAAc3RD6pfUP5ROMRz4N1RA+W3fYX7fuD8
H9ZjlD8AdkzSJRQPUf4EONf7SxNtP+UvhDOcS7Y4DFL+Jrhxr8vuPh3l5+H8
rcICb1pfYDPJcy90wanFdB4RB8d6F9+T0vOQHIUXfnLBU/yS+p8HX9Jt7NxH
z0d1C27VRPV40bheCz/63OPeMhoXWk8Z/X9CfOFNWU/KpGTpYdinMEgaRfWV
5+HTd2pSLWh/TQNsO3ffwprOZzkIByScXa2nev9l0zxnn6J2WEP1SZvgCEXy
7vfoPMpYeHZDRVAMu/+5cO+hvKJOqhfUwY598cdjWP//mTbaT7Jkhufu1H8Y
U037yb3hbteCnA6WPxqO7EkKX8Xef9mwYX9K1QNaT1gDn5gbrjpA5wl5Ck/7
rlkXgPn/A2sjms0=
            "]]}, {
           Hue[0.9060679774997897, 0.6, 0.6], 
           Directive[
            PointSize[0.009166666666666668], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJxV1H801Xccx/FLNsx2/ciPrGzYEScaYkyc8VUzO5NkWQrtjtmPtuXeapkp
Pzr5cRJdPyInIb/iZKjWclobm3QixmwckfyI+bGvufn9I+yVz/uf7z3Huedx
Pvf7/d7nfX98TILDfEOVRSJROP6ev+NlEzbKcz/YjpxuVVK4wpJseOVWmtFG
Znkd7BIXWPY5c+04rL5NecsmZoXBGM+FpgwFzYjWbOwOJ0fnyfqZfb6Gb0r3
xzUzx2TCeuUyByN2fVUt3OHr1rXK1vvG4B+bTHUD2LqW3r88t9loSOLA7OYK
m6WelIcyS7+EdTMKzkcy56fDhUejzjxh92v95fn1ZV62qmxdNAIfWoi96sJs
o8MLPi9x4QW98s/g+MFPBz6ifjlsmRhbcZL6b8PDVwdDwpmNh2Cpmt+hWerX
HOc5sbbjlTS2HuMEdxuW/PQ39YfAQ5EepvbKrD8ZfuzSbuK4jvVXw8OOXvae
1D8AP1s6q6HKPi99+T/B8/Md4E/0u5ya2XqrBK5of23WnfqTYNfSJN1Gtm5z
Ez5cO5ygzSzphc1e0K/NoH71CZ7j9WOv/Ur9drC72v0sH+oPgiO278vQYdcb
J8Kal3LDQ9i6z3XYZWG6M5P6H8H1fqG9etT/ooLnvg0wNchh7rOBG2uVtgbR
/ANgs4iKiTrqj4Nd5XeOWrDfR1oJO4yZvNpD/Q/hf1QrJlWof91Tnpu3N7fe
Rv1vwoUBlaMczd8fDmnr/aCf9v8p2DHFP2k39ZfD3uK8Y6bU3wF7+WYHi9n9
FaJJwXyNLScF+9XHD/Z6LLLrpf7oScHvUVUGV6cnKqxp/n/B+5rUwjSZtVbg
g93dWxuo32KK51rWtzxUpvn7wln9rj1u1H8C7rjXqW7N3FoyJZiX6E94r9ER
u0dsf9osTQm+j8RsWvA8+W64Y7vM6SD1R8A1bQsKK5p/4bRgfxn/Ad+w4AtG
qH8e/jD1pRAN6jed4blLnTuW/KnfC97Qkn85mvqPw3ezP25Wov7LcLy06bo5
9T+Al/PqTkTQ//8MnKvQyVlkPfmvz/KcWsqD6jLqf39W8DzRMfj4qn+imOaf
Cxc5yI7UsP0kuQ8vKqw4D3Y/+SR8oSc9Ia5rYq1/0xzP7U8Ux75B/R5wT8SA
UwCdfzK4uOvKE1t2P5+L8EWVMM9C1hNTD09vGMrOYutVE/DpnLlVGfUbzvOc
b7vKnjna/zvh7uJXEoqp/zDs91tpkTd7nvQC/P05u12dK2vfL/93uC2pa3kL
nX88fCo1661rzCKDBcF5bMPB6coakkY6/76CD+T3mNRT/3m4oOU9QxnNvwa2
1B2N8qb+0QXB/jDWXcT57X9m0JLm/w4cORtYspnm/wWcaNV215ndvyptUTDv
vjtw2ezod01sXWsYdiwxt3rK7Ka9xHMbf94500H9zrBKZaazHe3/ULjU94bq
AZr/OXh5fWB5Kc3/NlzfsCx+l+Y/CIcp4hr20v4XPxOe/2/Dnkl28U7UHww7
f5Osdo/6z8K7TjkW7aH+W3Dl+HjmIJ3//bCksqovCv4fmQcr3A==
            "]]}}}, {{}, {}}}, {
       DisplayFunction -> Identity, DisplayFunction -> Identity, 
        DisplayFunction -> Identity, AspectRatio -> NCache[
          Rational[1, 4], 0.25], Axes -> {False, False}, 
        AxesLabel -> {None, None}, 
        AxesOrigin -> {3.8804832*^9, 0.8705380555555577}, DisplayFunction :> 
        Identity, Frame -> {{True, True}, {True, True}}, 
        FrameLabel -> {{None, None}, {None, None}}, 
        FrameTicks -> {{Automatic, Automatic}, {
           Charting`DateTicksFunction[
           Automatic, DateTicksFormat -> {Automatic}], 
           Charting`DateTicksFunction[
           Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}},
         GridLines -> {None, None}, GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.4]], 
        Method -> {
         "NoShowPlotTheme" -> Automatic, "AxisPadding" -> Scaled[0.02], 
          "DefaultBoundaryStyle" -> Automatic, 
          "DefaultGraphicsInteraction" -> {
           "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
            "Effects" -> {
             "Highlight" -> {"ratio" -> 2}, 
              "HighlightPoint" -> {"ratio" -> 2}, 
              "Droplines" -> {
               "freeformCursorMode" -> True, 
                "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
          "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.922526, 0.385626, 0.209179], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.528488, 0.470624, 0.701351], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.772079, 0.431554, 0.102387], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.363898, 0.618501, 0.782349], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[1, 0.75, 0], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.647624, 0.37816, 0.614037], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.571589, 0.586483, 0.], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.915, 0.3325, 0.2125], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[
             0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
             AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
          "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
          Scaled[0.05], "AllowMicroRanges" -> {True, False}, 
          "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
          "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), "CopiedValueFunction" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& )}}, 
        PlotRange -> {{3.8804832*^9, 3.8906784*^9}, {0.8705380555555577, 
         1.000915}}, PlotRangeClipping -> True, PlotRangePadding -> {{
           Scaled[0.02], 
           Scaled[0.02]}, {
           Scaled[0.05], 
           Scaled[0.05]}}, Ticks -> {{}, Automatic}}], 
      FormBox[
       FormBox[
        TemplateBox[{"\"Low\"", "\"High\""}, "LineLegend", 
         DisplayFunction -> (FormBox[
           StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                   "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxDividers -> {
                 "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
                GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False], TraditionalForm]& ), 
         InterpretationFunction :> (RowBox[{"LineLegend", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                  ",", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
              RowBox[{"{", 
                RowBox[{#, ",", #2}], "}"}], ",", 
              RowBox[{"LegendMarkers", "\[Rule]", 
                RowBox[{"{", 
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
              ",", 
              RowBox[{"Joined", "\[Rule]", 
                RowBox[{"{", 
                  RowBox[{"True", ",", "True"}], "}"}]}], ",", 
              RowBox[{"LabelStyle", "\[Rule]", 
                RowBox[{"{", "}"}]}], ",", 
              RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
         Editable -> True], TraditionalForm], TraditionalForm]},
     "Legended",
     DisplayFunction->(GridBox[{{
         TagBox[
          ItemBox[
           PaneBox[
            TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
            BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
          "SkipImageSizeLevel"]}, {
         ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
       GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
       AutoDelete -> False, GridBoxItemSize -> Automatic, 
       BaselinePosition -> {1, 1}]& ),
     Editable->True,
     InterpretationFunction->(RowBox[{"Legended", "[", 
        RowBox[{#, ",", 
          RowBox[{"Placed", "[", 
            RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]}], ",", 
   RowBox[{"\<\"XRP-USD\"\>", "\[Rule]", 
    TemplateBox[{
      GraphicsBox[{{}, {{{}, {}, {
           Hue[0.67, 0.6, 0.6], 
           Directive[
            PointSize[0.009166666666666668], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJwl1AlQE1cYB/AgiHgUAoIg0BoBUWhaM3WkcghZr/EM0YEiRjGAAVoFos3I
4RVQQKvWAIbTwVgFj3pEqxJQIAooAjaIXBaEeGLCCgmKqHj043uZ2cn85ntv
9/33e/umR8SvEY1hMBgJcI3+w48Tr6OpOvPm2hJ5awBYmA/uTF/N9KtEy6rB
ByZyT0p0aPVrMM89zq6G2zZqg72eplSvNp0d2o1mLQB3SxosjVZo/hbw/FQn
D4EbWpoDLu8carY1aR+1Ug0+FONb0l+Pda0evGwlv7pUic9j2vXRVAHX+qDD
djQ3ABzoP/+6SI0W/wq2X+5+ens6WpENVsnDCg/LW0bdVAF+rPfW7XqGdcYr
sPudnz7bGNEcG5qmjpt59WrzSX4/8BRbc5HjKpI/Cqwcs7M0icxXy8BDx95W
Gq+hDeVgQ5Wc7rAg+V+A75tVl6VPJfmtXtPU0qcvdOtXk/zeYPXlaI3oN5I/
EhxZVtwqU6G1h8Fma5+3W13uwPwqsPfDfa9nRqK5T8HNqy2jJgvR4kn9NJUb
crH0fhBa4QUWrmuZWVaN92sSglnhDsrnnlhnHAR/rtzz5mkNmnMNHOvXEVGq
eYT5e8ATKr64+SegZeMHaCqDp7lxWYFWzwEfrSg+Nvsd2rABnGMR9JWVhWbt
B7dqCv8IcvgP818Bu42/bcc/g3VpFzi/1bfL8husK80NNDVDklsTao3WcsA9
PJfbVRY4nikAnzozZ1hmIPnTwLsl+vroJKyLL4HH3CjwE83F+YpH4L8bj7b1
2KCbTI2wvoRW05fT0Ywfwec87vk4b8D5nLXgIjpqSYAjyZ8KpqyuxTqMJfnP
g483Bnx0X0Xyt4FrfYIro91wPQbGIKzfNTo80BfN+h4s0kpzLpL+8IPBp74k
p40dxn5I94A3LhSvv7OK9P8s+IfEByGyKNL/h+BNmqKGFnJ/5hfwCaZJBr+Y
5J/1hqbYCn7gtBTS/zVg6YBX/DFbXJ9iJzhjpO7CslKsN5WALYczBdlxpP8P
wAXJj104baT/I+CW8DSBfxZaOOMt7F+Wv/JZFVoWCB6+0HagwYjrUyeBY3tH
zhqb0YaT4CK9rPCJOcn/L9g24ea9+AdY578HJ+aHnzzfQ/K7DNHUV5eYRjc9
yb8S7O6cfDCDvB/tdvDcqyYdUgs08wR4fZ2rKvMKmtsA3hY3uV+ehBYPgdnM
+R7ZjmjFtHc0xYhPMas9Qvb/MvCVSFfmpT40QwJeOoWTIkhAc4rAk5sd9/LI
84R14G9NuthhbLRsEFy9uF+n/xO/X7XzME0ZbwZtaewj598S8OxOnsA1Fcez
toIrfO5K6SHy/ReCvxsJZS8eJN9/LThyl2m202KSfwC8NSjur5yXJP/U93De
mK2JaH9H8i8Cz/l02mmWgeSPA9coq/PekvclzgOnmq4rT40l+/82mLdR087O
JfufBufFnr5gfYvsf/sPNLXovT0V6d6J+SlwccyLMOEvXZh/Mzik6WpNfQxa
JgfXf4gYqLXvxvxVYKdH8pzMZC3m14HTNG23bnWjWbYf4bzlpiQM6tB8f/D1
TcH7CiehpTHgu+wdNh3OaGUWODBJ4sr27MH8N8G240sKQlegmb3gS2Mrfk5n
4Hiu9QhNLd+xd/bKEqyLfcHpJisuRhjRChE4JUz1e7gbjm86Ag7tDrbKG4dm
lIPbNyfz+RPQnOfgAUnvgd4taKHlJ5r6xyMkMXciWjYP7Lltv8rbDq2OAAsS
wzy9okj+Q2B54ZniMjnJXwoW9pbcn3eY5H8CZg+cG9e4UBvwP7STWGY=
            "]]}, {
           Hue[0.9060679774997897, 0.6, 0.6], 
           Directive[
            PointSize[0.009166666666666668], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJxV1Hs0lGkcwPHZlIOTXNZ1dli1ZV12axQ22jKvsEkxqSyNmNytLsNa4iji
qKmoOZTRxWYiYe2YtW1J2QbJWF1cIsoyY1mlV6a7Szr783v+2jlnzpzPec7z
vPOd37zv4rB9/pHzGAxGMrznPuHF3veMpprbuq5fPNXjBuafAbsG/VA/GIMW
NYFNXxYVvg1Dy8fBeiE3rqhkaLXpGE1dNazzGapCW7mDF7dlHnU7hubuBm+R
J7HDLjyac0YBeFqnM8ezCy2Tg7v6dXY5FaCVY2BNQyO3O/24X9/4OU3JcvfX
nDNHc9zAfaFJfpYmaEEs2MhKJ2pTQ/eci/PBV6ML5pdX4Hp7PbhZkedSkIxm
PAXfynQM70hEsw1pmtr83rVihQ/p/xYco71ynh2L9EeBO5lZvloWpF8EZmhQ
GQuJ1XXg0xEWJ6SdpH8EnNp0YLinlPTrjdOU92EW74F+L/a7gFcNBKTucUbL
wsHHVWMM4Q20MhccEi4uH2A+xv5a8O9LOZu/5vVh/xC43iX4l7U0WrDwBU1V
zDBKnePRxc7g2L3ZMqYPup3/fzOOgx+3Km1SfsLz2X+AjVsOfd9WhOYPgg82
M5cn+KFF2hM0NTk10RAnfoL9q8DV7n/5VR5Aq3eC17OeDzkz0VZCcHFu8DeX
buJ+bg3Yi1+1j5+AzugHq8YpLYUYLdNU05Tux4MOvBq0kg3e9mt2UMwo6eeB
LQcHnJ76oDnZ4MyhlsIbBWhBNdhxcqZ5dyu6uA8cmZsq9EpGt2u8pCkXvS/Z
RT1oxnLwpT+/Gn8YTPoDweVO99b4duDvw88EcxxqIk6MoEVV4I1aAd1tE2h5
D3ju7mjRxf1qxiua2jkzL1V1H+dnZQ+usWvc7HUazd0OTjXbUXReQuafDrae
rTeydCTzrwA/kgdomxwh8+8Cx25TRnxWi9fT/wi+LPOnPLvJ/G1e01R+uWna
2Xwyf3+wooMVNBVJ5p8GHjwatOJwApl/Gfii9XTaKQPS3wHO0bfcw/oN19kz
4FgBj7c/hPQve0NTA1JxmZaA9PuBl7p/0Vv7Eb+fPAVs3mopidqAVpeAP2yt
9Ojjkf77YMUDL+k5f9I/CT7FnXZXpJD+JW9pSnp2VJgmJv2bwNuntaOvFZD+
JHCo+4Ijph5ofQl4tU9rguFGNKcNPGzQv6FvCVrwFsxtCde0+wefH8Wfv6Mp
k3dXmkLzcb3dG3zG0PvNymPk/58IZpZdfUiRXvbP4PLh873rZ3A/XwFWdTqM
mhOLXoHtsznL44fRctZ7mrLNq57vH0b6vcCGDatrE++S/niw2F+cE76U9J8D
N7fOLvI8RJ5/zWBfO2ZcejTpnwAHJwnTeztJv/kkTVXq6N6uOUPm7wGuDdyS
FWtG5r8X7LqjO+9EwiD2F4Kf5+7YNR0ygP2N4JOV1sI6vb+xnwab3Xe6276/
H/tNp+D5qjv7aXAVrrMpMAwrxF6C5seBv6vWtNF1wvNFp8HeWU8eN75WYv8t
sJn11gUleUPY/wxcz0oadLipwn6jaZryuH2vIiIDzV0HPj51XWK7Bp0RA/Zc
URK49xmeJ8sDTxnH1Srq0cqb4NupJQGF69D6o2CRAVel1YnmGMzA/Vt6RNLt
jRasAfu+SLbRSUQXR4Ir7S+MpAjQ7SfBDoW33P/diGbUgQsv/+hpK0Gzh8Ed
Ws7S9Edo/qIPNHVB+iJwdz5atBrsKmMt1kgh/WHgNLvLa5dFY486B+wXOPRJ
ZBeuW10DCzPNt8ruoLkq8DGL3PWzUqXbfxEhTtU=
            "]]}}}, {{}, {}}}, {
       DisplayFunction -> Identity, DisplayFunction -> Identity, 
        DisplayFunction -> Identity, AspectRatio -> NCache[
          Rational[1, 4], 0.25], Axes -> {False, False}, 
        AxesLabel -> {None, None}, 
        AxesOrigin -> {3.8804832*^9, 0.3072517777777787}, DisplayFunction :> 
        Identity, Frame -> {{True, True}, {True, True}}, 
        FrameLabel -> {{None, None}, {None, None}}, 
        FrameTicks -> {{Automatic, Automatic}, {
           Charting`DateTicksFunction[
           Automatic, DateTicksFormat -> {Automatic}], 
           Charting`DateTicksFunction[
           Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}},
         GridLines -> {None, None}, GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.4]], 
        Method -> {
         "NoShowPlotTheme" -> Automatic, "AxisPadding" -> Scaled[0.02], 
          "DefaultBoundaryStyle" -> Automatic, 
          "DefaultGraphicsInteraction" -> {
           "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
            "Effects" -> {
             "Highlight" -> {"ratio" -> 2}, 
              "HighlightPoint" -> {"ratio" -> 2}, 
              "Droplines" -> {
               "freeformCursorMode" -> True, 
                "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
          "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.922526, 0.385626, 0.209179], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.528488, 0.470624, 0.701351], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.772079, 0.431554, 0.102387], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.363898, 0.618501, 0.782349], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[1, 0.75, 0], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.647624, 0.37816, 0.614037], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.571589, 0.586483, 0.], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.915, 0.3325, 0.2125], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[
             0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
             AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
          "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
          Scaled[0.05], "AllowMicroRanges" -> {True, False}, 
          "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
          "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), "CopiedValueFunction" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& )}}, 
        PlotRange -> {{3.8804832*^9, 3.8906784*^9}, {0.3072517777777787, 
         0.5804}}, PlotRangeClipping -> True, PlotRangePadding -> {{
           Scaled[0.02], 
           Scaled[0.02]}, {
           Scaled[0.05], 
           Scaled[0.05]}}, Ticks -> {{}, Automatic}}], 
      FormBox[
       FormBox[
        TemplateBox[{"\"Low\"", "\"High\""}, "LineLegend", 
         DisplayFunction -> (FormBox[
           StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                   "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxDividers -> {
                 "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
                GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False], TraditionalForm]& ), 
         InterpretationFunction :> (RowBox[{"LineLegend", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                  ",", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
              RowBox[{"{", 
                RowBox[{#, ",", #2}], "}"}], ",", 
              RowBox[{"LegendMarkers", "\[Rule]", 
                RowBox[{"{", 
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
              ",", 
              RowBox[{"Joined", "\[Rule]", 
                RowBox[{"{", 
                  RowBox[{"True", ",", "True"}], "}"}]}], ",", 
              RowBox[{"LabelStyle", "\[Rule]", 
                RowBox[{"{", "}"}]}], ",", 
              RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
         Editable -> True], TraditionalForm], TraditionalForm]},
     "Legended",
     DisplayFunction->(GridBox[{{
         TagBox[
          ItemBox[
           PaneBox[
            TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
            BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
          "SkipImageSizeLevel"]}, {
         ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
       GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
       AutoDelete -> False, GridBoxItemSize -> Automatic, 
       BaselinePosition -> {1, 1}]& ),
     Editable->True,
     InterpretationFunction->(RowBox[{"Legended", "[", 
        RowBox[{#, ",", 
          RowBox[{"Placed", "[", 
            RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]}], ",", 
   RowBox[{"\<\"ADA-USD\"\>", "\[Rule]", 
    TemplateBox[{
      GraphicsBox[{{}, {{{}, {}, {
           Hue[0.67, 0.6, 0.6], 
           Directive[
            PointSize[0.009166666666666668], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJwl0w0w1GkcwPFVnei6ohdOd2Vz5KWwcZTTsX+u0kWtTJjaOmxCFtuLl5Ls
MZorGqvU6IpIrURkjdekzct52UvYJKJEFP7Yuiy3XN3P79mZnZ3PPM///8x3
9ves9Qvb4z+PwWBEwnfuFz6ssGGayvYODbIxbHUE+1wFx+zbGhs49HTOolpw
f6Tc3L4OLR0DK6aVBdRvuF+hO0JT7lXN3eIoNNMJfOPJ3acdnmgOH3wuekPM
+zi08Ar4s+/OZPEp9H0p+AL9q8zlIb6/bwR8PD5ryfqeljlrrRylKZ0Z2XhT
LZrtCLYIF3XG78D9gqC59eXXkoOd0ZmXwA0vNC0f56JbH4K5agmnVBp4HuM9
uMAiZ0Ed6WUto2kqz2l+EX+I9G8BK0JUxfqmbdh/GFx8+sDZLyfQUhG4RudB
jOdVtKISHPZpo77W+3bsHwRH0QFFK5rk2L90jKbqjBrS2x+jhXZgj9SdA7oH
n2E/Dyzpnn000ojuuwA+mx86ef1TB/aXg2M37peY1aDZ/WCr47/LeE/QgsXj
NOV8zOpoHvM59tuCsw12GXeN4PtafcDyIy49vGE0IxHc3Rju0RyMz7NKwDPD
jsFnZvF5n9fgQId3oZ07O7Ffc4KmKHP1pfJqtNQarC98tm7XOO5XHAAnJx7R
dndFM/8A/5SaZSZux/0cCThjYWTAWCla2ANu0//z5DG3F9ivrqApDc8O2cSP
6D4W+EuqmbvyCu7X2g/2fnMl+dYtNDsBHDHQm1LUjRYUgtm63+gl7+nC/i7w
2Z/HFJ2H0K3zP9BUelb5gNsZNMMC3GUQtEmVhuexvMGKWwkyMz7aJw5cNNWf
qIxCi/LBE978S+f/Qkufg9W6PYtbpkk/4yNNlTcv17CvJ/3rwZn85pWvBtGc
veChUavZnO9Ifyx43KFhe6I1rt/PBbOqLr6tqEb3ycGzaksXM0/jeVqfweqH
Ewx6n6LZJv/QlE1MhDS8Hi3YA94t6RhMFZL+0+CV9Xn5IedJvxhcKCk1XaNL
+tvAwvI8r5Q20j8D1msslpU5kH6jTzRVffu6pfIg6d8Nlv4dqVi+kPz/J8FV
Xvdcp2+T/mxwdtTlErcPpL8F/GCRqWOukvRPg4XG5lxPX7TQYJKmXDm1ZfdD
Sb8rOMlVWphiSPojwNktPc41UzivWlngO4IFuSvsyfzLwFEHzWyHwsn8T4KV
B7Rnw4zQmfpKmtIesCkcySfzvwM8sFlxpMKazP8JsNVAyO3Ow3gfWRng3q1p
N7mr0D6N4E0z8wdLY9Cij2DveaZFwdFo6fdTNOXLX9tIaeJ5im1gTojAQFWC
Zh4FSzL2xYTvxfM418BO6/Tsvo5GC+vBJlevd+uJyf2fAGc7NK22TcHn+/Sm
aco48FKtcTq5/7+Aw16UmhRTpD8U7LnthxteW0h/Gjjh8iKzu2fI/a8BT27/
Vn1DBbqVBlvvLjAVdaEZuv/S1Ove5mXp/mgWBTbx065dwiP3Pxic5K8y6r+H
7xddBkfH1UVMMXBd+gjs7GXA+S8e50ExDLYr05xqrkIzV6ho6lCEzkMPNZwf
jgM49BxXoB6LFgaCxbwWa6URuf8XwZHVN1ZZ9uLzfVVgtrgkiF9I5v8deK33
XstHcjL/2jPQF1/pkrWBzL89eKws4qahITrTH3w0JbqykoduTQbbnLJhB91B
MyrBks4Hjq/yyPy/BXdRRgU8Lt4PnyWzcD81cr6yVJH53wxOtG2ocCvHdakf
WH5z7g97if1J4IAMrgezGM0sA4++XVy/OqwH+9+AuWuCt6lXvHT8H4ULXec=

            "]]}, {
           Hue[0.9060679774997897, 0.6, 0.6], 
           Directive[
            PointSize[0.009166666666666668], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJw10wtMk1cUB/BGRGXTyfCJIq9JMipqrYEK8ugnijinKywwFB8VwRcqRY0U
RmzBoTDsrN1AQVNKQcFasTjBJ1Ip2xQVa/EFgtSJIPQrLaKI0Lkdzs2+pPny
y7k39/77neMRlxSZMIrBYKTAb+QNDyupm6aKa4aEb67rQ8D8ArCmIauhNh8t
1YFzz76b1LgbrTWP1FUbDpTdQVun9dBUr5fkYYAK7b4ErFte/1u4Es3bCc44
7uzXMIQW54Nd/5n/VGn/cMQaLThw6vNSZSXWjT3gu6fm5ebcfzBixykmmnJ6
4fqTOB3NDQHnzrx8omgmrhdsBxfLg0eJBrGu+BV8PMZZkr4B6/oacHS/yzFL
JJrxBmzY+/n6HC6ez3KiacqYdb65YSWaHwj+bNBXNvolWroF7HraSa43obVS
8KkF9xxaOgyY/xo4fOjSz5/0jzH/azCzLMirq/4R5p9opqnrBnak5Sxa7A8e
w3zVvnUdrtdsBv8+m7tqbuwTzC8B198LPhohf4r5r4Az1q+SXyzEOvdvcKib
z+ZQDtYF43tpasI54Vf9t7Gu8ANPKriqfV2J1vPBPR4z2igaz2Pkglk+optz
Y3A/qwrMDJDdFYU/w/ztYIWfqilDjZY6WGhKVJo9/pwQrV0Itrvf1WpOQ1vX
g0cnu67mB6Dds8FHbqhz7G+ieRfBhgBVoXsPWtwKznvksM1zZzPmH2OlKXZn
hVfHQbSRBd4bvqM4fg/aMRZcMdEkWbsJzc0CxwdVDfWo0IILYHla6a1du1ow
fzPYv+BKlKMdWm/XR1MRJdL4aAuuZ8wDz67isf2r0KwY8EaRU9HiW2h+Jpjd
5Twsk6ClarC4+rF64U209gl4nN2DmsMr0VbGW5pK8alesWwz/p/uc8ATyjkl
nefQvCiwJka3rLcbLRaBY6Lm1zbFozVnwTYXt7mN00n+phG/qtmRUIf3d/wE
lhQsrTE2oblf99PU8L7ALQo2WhAJfqBMYRrlJH86OC338AeXGJL/DFhQqRzT
xEIzHoKnsjJiU/pJ/mFwxMHt04M9SX6vdzRFWQcHKiiS/ztwVq9s0Rwl+f6p
YN8wU/mOTLy/tQQs89rrY1GR/I1gdWCG5ns1yT8Izh6ozGw/RPJ7vqep6swz
XtFhJP+3YG8N48x4F7RxP1h8oL02NRn717EYnBK+gKt0IP1/F2yrm7NCbsJ+
FrwHO9uZFh0oRyvcBmjqjvrFy/3b0PoV4FlrPiawwkj/7wOnHnOACcd5ZMnB
r/su2bRRaP5tsHFyNLO8HC19C85dnb/WwsH9WpcPNJU/ttt7TzbexxoG1p30
FW7MI/mTP/x/HtZ5J8HVq/qulE/F/eI/wKKSWRzbbqxrLOCwQuFYoYHMv/Mg
zGtQXpNcRvIvBXN0EwZtLJJ/NzhtmuUv83H8HoIT4AuzUyssOrSiDny6SLA/
sQCtp8FmZqmttAXvx5j2kaYYfu5L1vmT+afAV3PWFsZ6oPmJ4OnjRsW/eYbn
SfPA0iLJOs5prGtrwWyPTpnKTOa/Gxxr4bQkk/PdJw/RVKeJbSubif3GCwb/
+O7Q8O3z2E/ibeA/tQG/uDHJ/MvAvt72bRsMpP9vgP8NflWXISXz3wUWbkqs
fisj8//lME0liebNYLuS+V8MVviGfDKQ/lQkgO2nRNUaPpL8R8FOQwVpbaS/
GdfAuq0mIz+J9H8H2G7prSPeZF74X9igP34I4ruS+ZIuAq9h9S2P2Poc88eB
x1YuzGpMbMX8R8Df9PU5NKe2Yf7L4KqyjlPPQtG8l2BPX3NcYXdryH9nCF30

            "]]}}}, {{}, {}}}, {
       DisplayFunction -> Identity, DisplayFunction -> Identity, 
        DisplayFunction -> Identity, AspectRatio -> NCache[
          Rational[1, 4], 0.25], Axes -> {False, False}, 
        AxesLabel -> {None, None}, 
        AxesOrigin -> {3.8804832*^9, 0.22811600000000073`}, DisplayFunction :> 
        Identity, Frame -> {{True, True}, {True, True}}, 
        FrameLabel -> {{None, None}, {None, None}}, 
        FrameTicks -> {{Automatic, Automatic}, {
           Charting`DateTicksFunction[
           Automatic, DateTicksFormat -> {Automatic}], 
           Charting`DateTicksFunction[
           Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}},
         GridLines -> {None, None}, GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.4]], 
        Method -> {
         "NoShowPlotTheme" -> Automatic, "AxisPadding" -> Scaled[0.02], 
          "DefaultBoundaryStyle" -> Automatic, 
          "DefaultGraphicsInteraction" -> {
           "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
            "Effects" -> {
             "Highlight" -> {"ratio" -> 2}, 
              "HighlightPoint" -> {"ratio" -> 2}, 
              "Droplines" -> {
               "freeformCursorMode" -> True, 
                "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
          "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.922526, 0.385626, 0.209179], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.528488, 0.470624, 0.701351], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.772079, 0.431554, 0.102387], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.363898, 0.618501, 0.782349], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[1, 0.75, 0], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.647624, 0.37816, 0.614037], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.571589, 0.586483, 0.], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.915, 0.3325, 0.2125], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[
             0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
             AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
          "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
          Scaled[0.05], "AllowMicroRanges" -> {True, False}, 
          "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
          "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), "CopiedValueFunction" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& )}}, 
        PlotRange -> {{3.8804832*^9, 3.8906784*^9}, {0.22811600000000073`, 
         0.460562}}, PlotRangeClipping -> True, PlotRangePadding -> {{
           Scaled[0.02], 
           Scaled[0.02]}, {
           Scaled[0.05], 
           Scaled[0.05]}}, Ticks -> {{}, Automatic}}], 
      FormBox[
       FormBox[
        TemplateBox[{"\"Low\"", "\"High\""}, "LineLegend", 
         DisplayFunction -> (FormBox[
           StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                   "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxDividers -> {
                 "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
                GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False], TraditionalForm]& ), 
         InterpretationFunction :> (RowBox[{"LineLegend", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                  ",", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
              RowBox[{"{", 
                RowBox[{#, ",", #2}], "}"}], ",", 
              RowBox[{"LegendMarkers", "\[Rule]", 
                RowBox[{"{", 
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
              ",", 
              RowBox[{"Joined", "\[Rule]", 
                RowBox[{"{", 
                  RowBox[{"True", ",", "True"}], "}"}]}], ",", 
              RowBox[{"LabelStyle", "\[Rule]", 
                RowBox[{"{", "}"}]}], ",", 
              RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
         Editable -> True], TraditionalForm], TraditionalForm]},
     "Legended",
     DisplayFunction->(GridBox[{{
         TagBox[
          ItemBox[
           PaneBox[
            TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
            BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
          "SkipImageSizeLevel"]}, {
         ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
       GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
       AutoDelete -> False, GridBoxItemSize -> Automatic, 
       BaselinePosition -> {1, 1}]& ),
     Editable->True,
     InterpretationFunction->(RowBox[{"Legended", "[", 
        RowBox[{#, ",", 
          RowBox[{"Placed", "[", 
            RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]}], ",", 
   RowBox[{"\<\"DOGE-USD\"\>", "\[Rule]", 
    TemplateBox[{
      GraphicsBox[{{}, {{{}, {}, {
           Hue[0.67, 0.6, 0.6], 
           Directive[
            PointSize[0.009166666666666668], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJw11QlQU1cUBuCI2zhEiBS3gi2y1UEJsaC4AXlV9oIxiNqhSIoFClUJokGE
ChYsKCiRlkxYDThSF9bYBKQCAXFBrUaCaNs4UgQL+CJBBBEi9nDuNDOZzDfn
5c7973Le8vBYfoQRg8FIgO/0L3w4sQM0lTjLla/0kXuABfngnfYGvkcsWnwd
3GLRcUHVjlbpwA7tGyxDz1+Ztn7xIE2tSmly3HUJbfUF2Ncp5u1lBpq3d7q+
4MIUZYtOlYANPfw8ZT2OV6MCd4/NOqF7VTvt7kEwO2eNTZoWzVr4kqZOJe8e
7rRBcz3A1xI6pax4tDAafH58PJ2+hpb9DK7yrbM70IJWN4J5cZaHFWQ8Rj94
/atfTLo+oDlmNE09dhla5+lN8m8C7/E6nMQyIvkjwZZzdzsmRJL8YrBUu0Le
xUPrG8BuxSv95rWgrfrALyQ7Nvd8QvKb6mhKPizIeupO8q8HG1ydApMV6Jo9
YIk61CzK8zfMfwocKpyT0ixVYP568KNZ297O8EFze8CVhs+X2JihhcxXNMXc
mO2b4oSWrQVb896n+fyE46kFYN/XXz/LSEMzssCn86RRdpVojgI8+PJdQZ8c
/y94Bp7tXC44dQUtnjdEU4fumgybhigxvzM4qXHyeWMM1vWh4OaS6q/YFmir
TPBAocv8ky/QPDnYua2Wvf8cOlULXh0id2gNwPFq5uhp6vLsMalPNLqbo/9/
v0j+EPAJja+yoQjr3ONgW8HBxPh6tLAabHN256ZRnzrM/yeYeUbzeGQNWj1z
mKbSC7MdrtejGWzwCc/pFUNzdoEPGHjRbfdwPMGP4GPcqI7yQbS4Apy84mHu
LQ3J3wVWmpiM2ZP11TNe01RUoYXmIwnaaiX4SFv/1eNVaF4wOO6SgmOsQ6em
gJ9siWQLE9E1F8F2bszKwPtk/zVgU1jtIy4k/xQ4v9hzaLuK7P+KEZo6Obup
LKSa7D8fLOUU5Ok24/xkyeBL3h9ruxah1eXgkfjNQaIJfJ7xEFz064beyHo0
ZxLsvslfvIBH9t/uDU3dPrrI/0wy2f+t4PyIrUaF8Tg/VSLYuC7Z1s6N5D8H
zgh88HutjOS/Dz5oZ/TII5PkHwcXldlcNWSQ/NajNHXH9W+ttITk/xLsLfar
PRdH8ovA2SOupawZeD9YpeA3e3f8UKXE+8W9C04Y2Z6hZWJdOApexT59J6AT
67JPx2hqTZJs4RI5Wu0Lnuooc29fhmYcBHv3Rw0eyqrB/CXgiqC+JC9rtOA2
uNw7yC0/BS1+DQ7O9O7pG0CrLN/S1PO4bY7WJ7F/6L3ALd0FGyfCyP2PAz/w
SfeqicM6rxB848OybaUN6NQb4PkWEe8jw0n/GwKnNYfdk1Sgu5eO09ScPVvK
1GT+rC3gtf3+sSlskn8/+Jgow3ymLVooBYumdPKwBJK/FZz5eNRYdJ3kp8Fn
178MOk36N2PxO5oKZLa3t1WiORTY02uu7TfPSP/7Hvyo1m8gfzfpf3lgET9M
Iooh/a8ZvLyqqNH5L9L/BsATxm7hb7Qkv/kETS3tZbea96F57uDVgvbgVUdJ
//sObG9hqnyiI/0vFzzVoCn+rATdfQ0c7NSs+fYm3k/Wv2Cm1fQNRHMXTML7
oKA6N+cpOf8bwcEuXVP3x/D8yCLARp2dckUT6X85YMWiyNJiDel/DeA/ql8w
WizJ+e8Fb7/lcD7qCDn/Jgaa6lqWtY//EJ8XrwNfHBs4fI+LdVU4eN/N6EwH
A+l/2eDl8RG8fUK8b1Z14N6Ao1mBEjTvH/CtNEfRZIXS4z8cw0j/
            "]]}, {
           Hue[0.9060679774997897, 0.6, 0.6], 
           Directive[
            PointSize[0.009166666666666668], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJxV1H0w1HkcB/CVU3mIpW7QqDbd9ShtIXURv63JdCoPnTtz6Daqy9SxpVAu
u0VS6FYukXLbqeaUuZbzsHnIFqnulO2cMCf0INJPHivSuXv7fP+6ndnZec3n
+7Dv79Ps4HDf7RMEAkEUvuO/+IjDX/JcmWSWXcia39xgaSacnSld0SgmK6vg
23pDo2P3ydoeONVkZXH27MJx91l289yMyLalLm+pLpLAi43K5h9sJ3vvhr89
q/5nWzJZkQ7H3quJWxxJVmvhL6fcanndUTDu9m542bU5ps3uZOHHr3huf0R/
iStHdneDjRIipjg4kmWhsMbfJy7UiqxKg3PSLj0aTSHrKuBVSa25ihiyoAtO
ORNmEacliy14nguZ67Nk2JHld4E3FV5VDqRRXbkDnlRSdLTzElmrhOuazux2
aSL3lcI1VTGmdh60HqIOWPDL05rFL1h+sx6eq523KOGqPtUVK2GDZeP/iKwO
gc0/67IwrSii/CnwuzsxDb/Hl1B+DXx6oc/b9L3FlP8pfNhAvL1dQZaZvOa5
O/Y+FU5q6q9aDj8+HSTWvKC6TgpXrjslCtSjuiAJjm/KlHQ6UV1cBEfI32jC
i8jSNliyxWzu7Ts0v9Kwl+c8705yzfIjax1gbYxHiuFScl8QHDE0XLFRTv1F
ifAhztjQKojsXQCvbPg642gkWdECvy88Maarpf7qiX04D9bJ5scl5HYxHC9U
LrlwhOUPgAvTbvoMdGso/1E4N7F+fXEpWXYN3hseW7U2jqxqho9/k5+Q1EL9
dfr9PHcmaXhT7cHrlN8e7pbkjU2uovZif7jfLOCgYwO1lx6Bu3bIVS3FLH8e
PO2+vv/zRpb/EazJb07tXsXyCwZ4btHU2NyfnGl9RYtgC69Ih5xZZG8/OOHf
ffoGrWSFHJ4epu08Zk7roc6FhxylyqFQtv/18FW+zHa4jerCMfiZ5Zb1A4E0
n/v8QZy/jVl7pv/M9t8XTrKKtEobI6u+h5sDnerMR9j+X4a9Ok/4StRkwUN4
gahHrmD7LR6FH9am7TLaxvb/0yGeuxwcssXDhqz0ggvsw3L0yun/aQ/AFc/l
A1G97P7nwL2p9/0GbVj+B7D/nitFYmOWfxgWmbi8m2nP8tu+4bmzBfVm3bZk
9Qb4QHTd4Y7JLH8k/H7hSFOQisYXXoCvmF63DtPSfXL/A25rderyDCfL3sAp
sY7nljmTVbPe8pwxZ/p5RihZtx5OHnS+INQjC/bBcq+8zR3sPRBnwzfvLZdN
6lZT/rvwi7oSA8/9+ZR/AHY1asyRubL7b/OO5+pDH08samP3fx3sd6zFxJm9
d6I98NSQzNjj0ez+Z8FtVhMUIXXUXnEb/tFhWlT5Pfb+9cI2c6dfbF9Aedut
h3kur+PBBvE5qgvXwh7PvCuNA1j+MFjusDQosYHlz4CjQqu2hrL5VbdgvvVE
9UdONJ6Oh8sDq6OCH7H8liPYvw+b0qzZ+ok5eOfqzrBGT/b+7YJvPjEwz2Xr
pzwNu30VkF/Js/yVcLVtwoyai1TvewmHbE08dyOb5Z/2nuey9Ozvpnew/Kvh
yTaGjk1/sf3f+X+rT8FlPZKI8+tKKX857NaRYffajSzshDOObRgRfkH31918
FOsxM9Huz2q6D7JVsJnE/Ua8ETv/2+GIwZSu7P00vu4HuMI3ffZJZkHpePuS
NVXBbH7xc3jzr332lv1kqekHnD95Q+qc82TlCvhQdLpojorG1wbDtrJPdNLN
7P4nw4X7DP5OnEcWlcDXXlnyCd+RvZ/Ah6ODKqXOGrf/AHHORS0=
            "]]}}}, {{}, {}}}, {
       DisplayFunction -> Identity, DisplayFunction -> Identity, 
        DisplayFunction -> Identity, AspectRatio -> NCache[
          Rational[1, 4], 0.25], Axes -> {False, False}, 
        AxesLabel -> {None, None}, 
        AxesOrigin -> {3.8804832*^9, 0.060822055555555914`}, DisplayFunction :> 
        Identity, Frame -> {{True, True}, {True, True}}, 
        FrameLabel -> {{None, None}, {None, None}}, 
        FrameTicks -> {{Automatic, Automatic}, {
           Charting`DateTicksFunction[
           Automatic, DateTicksFormat -> {Automatic}], 
           Charting`DateTicksFunction[
           Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}},
         GridLines -> {None, None}, GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.4]], 
        Method -> {
         "NoShowPlotTheme" -> Automatic, "AxisPadding" -> Scaled[0.02], 
          "DefaultBoundaryStyle" -> Automatic, 
          "DefaultGraphicsInteraction" -> {
           "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
            "Effects" -> {
             "Highlight" -> {"ratio" -> 2}, 
              "HighlightPoint" -> {"ratio" -> 2}, 
              "Droplines" -> {
               "freeformCursorMode" -> True, 
                "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
          "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.922526, 0.385626, 0.209179], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.528488, 0.470624, 0.701351], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.772079, 0.431554, 0.102387], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.363898, 0.618501, 0.782349], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[1, 0.75, 0], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.647624, 0.37816, 0.614037], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.571589, 0.586483, 0.], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.915, 0.3325, 0.2125], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[
             0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
             AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
          "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
          Scaled[0.05], "AllowMicroRanges" -> {True, False}, 
          "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
          "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), "CopiedValueFunction" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& )}}, 
        PlotRange -> {{3.8804832*^9, 3.8906784*^9}, {0.060822055555555914`, 
         0.10264}}, PlotRangeClipping -> True, PlotRangePadding -> {{
           Scaled[0.02], 
           Scaled[0.02]}, {
           Scaled[0.05], 
           Scaled[0.05]}}, Ticks -> {{}, Automatic}}], 
      FormBox[
       FormBox[
        TemplateBox[{"\"Low\"", "\"High\""}, "LineLegend", 
         DisplayFunction -> (FormBox[
           StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                   "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxDividers -> {
                 "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
                GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False], TraditionalForm]& ), 
         InterpretationFunction :> (RowBox[{"LineLegend", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                  ",", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
              RowBox[{"{", 
                RowBox[{#, ",", #2}], "}"}], ",", 
              RowBox[{"LegendMarkers", "\[Rule]", 
                RowBox[{"{", 
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
              ",", 
              RowBox[{"Joined", "\[Rule]", 
                RowBox[{"{", 
                  RowBox[{"True", ",", "True"}], "}"}]}], ",", 
              RowBox[{"LabelStyle", "\[Rule]", 
                RowBox[{"{", "}"}]}], ",", 
              RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
         Editable -> True], TraditionalForm], TraditionalForm]},
     "Legended",
     DisplayFunction->(GridBox[{{
         TagBox[
          ItemBox[
           PaneBox[
            TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
            BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
          "SkipImageSizeLevel"]}, {
         ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
       GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
       AutoDelete -> False, GridBoxItemSize -> Automatic, 
       BaselinePosition -> {1, 1}]& ),
     Editable->True,
     InterpretationFunction->(RowBox[{"Legended", "[", 
        RowBox[{#, ",", 
          RowBox[{"Placed", "[", 
            RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]}], ",", 
   RowBox[{"\<\"STETH-USD\"\>", "\[Rule]", 
    TemplateBox[{
      GraphicsBox[{{}, {{{}, {}, {
           Hue[0.67, 0.6, 0.6], 
           Directive[
            PointSize[0.009166666666666668], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJwt1AtMU2cUB/Ab3oiPbiDCeLSgTDNASphGfPVexhxuTisbYQZcKwyZEwSE
TVwINOoWM8cAGQjz0SIJk824jszNKNIrbhMxYXVENx/Q0kEQuJTSFigUZMdz
aNI0v5x7+93/Od93wzLykrNcGIY5At8Xv/CR5g0J3JXW/jJTexULVtaDo7e6
8wHc6ReuvA3eWLOYGQhA86PghC7nvOMw2rJiWOD2NY0qAsmSBHCV7bls7fto
eQ7Yfsmhqy5Fq2rB7buCWYUcreWHab1nr6KNw+C+1Us1Ma+gRctHBE70qViV
uAzNysBve47Mp7+Jzj8AXpTkFEuS0Jpq8N5T/pqQnWj9TXBB0BJjdAqaeQbe
JviyDQVo6cuCwCX2eEoiRNWYfzN4IGFAcaOf8u8Hrz9i1+WIsc5XCnT/rS1o
y3XwDv8p8fZatGQA/NxiMxwP/RbzLxsVOJ4VSW6/i1bFg3u8JxWp62owfyb4
z09s84+r0MZy8P0Ws/iGtBbzXwPvjHBlI1afwfwm8JByTn38K3T+YrPAGQJc
VL79aM16Mz2P90dovdK8kOcQmjkF7jg6L/bsREuvmmm9J2vqMb8BrL1nUX/T
U4f5vccEri3WjcluQ/Nx4MHd42V3EtCWveDmhiX8/gf4f5KT4MWpnmzUCazL
W8aoH67+aNVT8K8OPyYuDq31sAjck5khmVOONkrBj8yhmnf80KI0C633Tyya
/cJC89ZvROf/BI5ND2G4YHx+zSNwjvlZ2dF0tN51XOAq+q3ii/loZi045O6A
rMgDLf0AnPxGkKrcjfIfG6f90uODrrwMDryyVFW8B80/HKf9cG4S81oYq8BF
xkyrLx+k/JHgkTxvPuZztDwF3HnSh/UtRqvKrAv7vRvnq20GK870yXLn0MZu
K62f24bXi55bab7V9PzsGpvANRYNKTL2ofOTbbS/4r6n/CXgX4a8jE0C5W+y
UX6TjvLft9E8qkewf1InOK1kkarBhFZG2AUubHCuLHgD5d9lp/Oq7qX5H7VT
Py6V0PwbwfVRZll4K1rSBS58LZD5YSXeL3fYqd8nnDT/8AmBE/87rmCWYV27
A3zNzai+mIQ2fjZB85hLovk3gFdOemvW0H5j74FbHs/qhrfT/CcmaP8GrUJr
xJMCl3l1uizFBa3fDk5y9Brkd2n/F03S++HmJuy39MLC9e7ZeP6UHWBVqUEX
74X1Siv4mmeYREzz4oOn6Hz0FlP+beDuWzOytzrw+SUFUzTvzN2U/+wUzas9
A636Y2phvS7KPza1cD6zz2L+QIfA/dVomg89iRYlgg+YQoyBHmj2EPjLH10l
F3q+w/x1DnofcZ1oTTt4tHS50TmA1gsOen/aV+H9zIppgat28VFufIp1KTdN
894ciXXlQfDvaYOGQ1lYr6wBHysfMayrQ/O6aVrv50K83jIE3qr9T8cWoyV+
M3T+DjSh5VtnqP9Kr3OY/+MZen9HtWBde3qG+tl2hPK3LlzPP6T8g+AHeg9l
YTfez77kFLgId3++3+U85t8ELsn0Ysw9WNdkgc+EmMSTf6P1FU6aX8UeNHMd
fN1X0F05j5b2O6k/r7+H/6dcOitwXvFj877DWK/cAE790CprPox1PmOW+ntW
qsb8X4Nz5+zqLWEazP8buDXcYbgYjZb3zdL+uOOvYf8HHCM5Og==
            "]]}, {
           Hue[0.9060679774997897, 0.6, 0.6], 
           Directive[
            PointSize[0.009166666666666668], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJwt1QtMU2cUB/ALIqPCeIiAREaLi9OwTeoeTKeDe9lLjY6OaGCBjTsJzE2B
ig/mQmhhOnmIVJwPYNo6jJvPdRgGI7heHjOoC6lDnANMq8MgcrG1raW0CDuc
Y5Om+eW797vf/zvnfo3ZlJ+S7c0wTCF8Z37hI88fETlLVQyz+mQNC+ZrwY6f
XYbOU2hNJzi+0GHIaEALY+CUdxeo7/yOtkY8FLnVHil/+SZalgTWX7dq8/5G
K7aC61e6M3suodVHwHcXB+rifkPrBfDwx49Vi7ejzQ/Bfiss07170cFhozRf
QjGaTQRfbBtS/ViCVn4J/qI3RHjnW7TuEPivoxG86hzaeBl85Sv7dMUZNPMA
vGh2uODYfmjG8rki+WYeml8F9omez3bvRGtywBVXF/DxSrSgAV8r82c7z6Ot
reB14ePS8i3fY/774BYfszapGa0IGhM5W62ofSvsMOZfAR5wjyRWSo5g/ixw
hNabH9yINleBe9vdiR8+OIr5W8Aj/FPtJeYY5r8HHs2XCMmpaGXAI5H7/PRY
5po2tC4efNA+lXhiH9rIgw95+/N1AWimElxaNWrqK6zF/E3gVxNmC66raN4E
nrLaTfZytEZiEbk7EmfmvjS08LqF5j+QgbZ+Co5bH2LeEI6WlYHf2PxAK8Si
FY0W6p8iOz5fPQhWF5sMtf1ova+V9vPFUrzeLAeXtQaxa4vRwengpB7PtF8L
5d9rpfUffg3Hlb+Az+kjzTXxdZj/X3BX+rDpxB0cN856LHK+sf+ZxoNwnFkK
dl0JZta9gpangQU2WNb5HeUvBc9cZ71A+c8/pv65NkD5b4Eb+ycNZyspP2MT
ufwAL8FrIa5P9rKN8my/hfVTbAQXF8yTuZ1otQq8K35IK2lD68/YaL46b7zf
3Av+Y5kP808b5Z8Ct4aKhugCXC+7xC5yi0PuZjpy0MoUO/X/+lTKXwSOvBio
XrINbTxtp/2WVFD+G3aqjyyX8nvstL66dsq/yCFyP9V46WL7KX8y2N0XJSvr
ofy7HfS8KqqvtcFB/bd7D9W/x0Hnw4X7VH8XeFnGC8zBU2j1widUn7zbaP06
cFGWH7P0HtV/Fzhm+Klq1VHKfxKc3TVbF6Oj+l8H32h8JPWvpf5/AtZ+Mlf3
Ujn1v9RJ73/cAer/NU56X+LSqP93OGm+X6dw/+UnnFS/9kJ8//huJ9Vf8zaO
a2xOOm86GvB+IWr82XrjcP+sH4zT/dsK6jH/NnBgTiifdh7HFfVga4VZNSBD
q/8EpxfNUcf04/V6yzjtj9fmHzB/pAvqVSJjw/PRwe+5qB6tIWg2D9yRHMVK
30crj4FN873Vs1ahdR3g3KcObdPXaKMIDi15KO1ajmYiJkSONVhMgzX4fDk3
QfVIsKH5LWBns49ZNYzWHJ6g8zv6LFowgPuMvvysZJzPOjJB71NUHFo2z03n
WVEBWpEA/mbDpOlgLlq92U39H5mB1te4af0Nn1H+NjedJ3sijmP+4WceMqPZ
EI/InTn5vODbg1auBGc1Tah2foTWZXuoPwbeRBurwWufG53eaqf8rR7aP9N+
HJcPeai/u51oPnBS5MaKw8znbqM1y8Fz4A9Os0OL+TeBj6/1VcdW6zD//kk6
L+tT0bLmScofUINW3AVXD9mkjft07P/OYDrl
            "]]}}}, {{}, {}}}, {
       DisplayFunction -> Identity, DisplayFunction -> Identity, 
        DisplayFunction -> Identity, AspectRatio -> NCache[
          Rational[1, 4], 0.25], Axes -> {False, False}, 
        AxesLabel -> {None, None}, 
        AxesOrigin -> {3.8804832*^9, 1082.0376921666693`}, DisplayFunction :> 
        Identity, Frame -> {{True, True}, {True, True}}, 
        FrameLabel -> {{None, None}, {None, None}}, 
        FrameTicks -> {{Automatic, Automatic}, {
           Charting`DateTicksFunction[
           Automatic, DateTicksFormat -> {Automatic}], 
           Charting`DateTicksFunction[
           Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}},
         GridLines -> {None, None}, GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.4]], 
        Method -> {
         "NoShowPlotTheme" -> Automatic, "AxisPadding" -> Scaled[0.02], 
          "DefaultBoundaryStyle" -> Automatic, 
          "DefaultGraphicsInteraction" -> {
           "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
            "Effects" -> {
             "Highlight" -> {"ratio" -> 2}, 
              "HighlightPoint" -> {"ratio" -> 2}, 
              "Droplines" -> {
               "freeformCursorMode" -> True, 
                "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
          "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.922526, 0.385626, 0.209179], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.528488, 0.470624, 0.701351], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.772079, 0.431554, 0.102387], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.363898, 0.618501, 0.782349], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[1, 0.75, 0], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.647624, 0.37816, 0.614037], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.571589, 0.586483, 0.], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.915, 0.3325, 0.2125], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[
             0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
             AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
          "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
          Scaled[0.05], "AllowMicroRanges" -> {True, False}, 
          "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
          "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), "CopiedValueFunction" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& )}}, 
        PlotRange -> {{3.8804832*^9, 3.8906784*^9}, {1082.0376921666693`, 
         2121.02417}}, PlotRangeClipping -> True, PlotRangePadding -> {{
           Scaled[0.02], 
           Scaled[0.02]}, {
           Scaled[0.05], 
           Scaled[0.05]}}, Ticks -> {{}, Automatic}}], 
      FormBox[
       FormBox[
        TemplateBox[{"\"Low\"", "\"High\""}, "LineLegend", 
         DisplayFunction -> (FormBox[
           StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                   "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxDividers -> {
                 "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
                GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False], TraditionalForm]& ), 
         InterpretationFunction :> (RowBox[{"LineLegend", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                  ",", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
              RowBox[{"{", 
                RowBox[{#, ",", #2}], "}"}], ",", 
              RowBox[{"LegendMarkers", "\[Rule]", 
                RowBox[{"{", 
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
              ",", 
              RowBox[{"Joined", "\[Rule]", 
                RowBox[{"{", 
                  RowBox[{"True", ",", "True"}], "}"}]}], ",", 
              RowBox[{"LabelStyle", "\[Rule]", 
                RowBox[{"{", "}"}]}], ",", 
              RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
         Editable -> True], TraditionalForm], TraditionalForm]},
     "Legended",
     DisplayFunction->(GridBox[{{
         TagBox[
          ItemBox[
           PaneBox[
            TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
            BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
          "SkipImageSizeLevel"]}, {
         ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
       GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
       AutoDelete -> False, GridBoxItemSize -> Automatic, 
       BaselinePosition -> {1, 1}]& ),
     Editable->True,
     InterpretationFunction->(RowBox[{"Legended", "[", 
        RowBox[{#, ",", 
          RowBox[{"Placed", "[", 
            RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]}], ",", 
   RowBox[{"\<\"HEX-USD\"\>", "\[Rule]", 
    TemplateBox[{
      GraphicsBox[{{}, {{{}, {}, {
           Hue[0.67, 0.6, 0.6], 
           Directive[
            PointSize[0.009166666666666668], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJw10gs0lGkYwPFJYSu5xdqSjNREJaNErY35KlS6jEsSXYYuW6s1I6l0WbPa
yr1BRJPbCrmUcSkzEqNWaYmxnSNNOkalCV9MomKs3WeeOTlnjvM7z/vN+/6/
dyyC2F4HNSgUykn4qP7DH53dRxL116ZOCxtJdwGzMsCy0YxK51407yGY7b7a
5lT7VZXFH8ASPcs/3E3RCpN+kpge2ktmtqepTF0HZmf18/g9aOZRsHuJ/z+e
umhuGtjS+NH3UfOuqCwQg28cm33HvjpZZVk/2Lkt26H4WZLK+sYDsJ/r+kd5
PjhnuIAHWX85TzFKUZlzBFwbsOvPyhac56SAe11psucb0ZL7YA3hrlq/H9CU
92CpmZcO7zCabkiSRP/JwOC7w2jWT+B3WuvNfIWp2H8IXL51ydzgSHU/D+xU
ZOvhtErdXwPOgdP+Xoqm9oLde2m/HAnB55l6H+B8t0akR0uxl7sGTP2Ol7tf
G+eC/WBhr6V1XyC+b1kC2D47rHogPwP7hWBRyc6k9iloxmuwfI4yOUGbj/06
gyShtUwU28i+hv0O4M1DpvvOHML1Ehb4ZF32XNtXuD8lDtwe3qMt98bz0u+A
u2pDvdK/qO+/G2wQf97j8XWc86YPkcTWi2/GdG6q+1eC1wTZOGuKcb1iD1iY
upefkIqmRoNv6w0k+AfieZgV4PqOfLf3P6O5XWBXvbM6vtfRAi0FSUTImReL
09EyOnh1sKJuiQlaPwAsnCbL9lqEZlwAf95jMMFepO4vA3uUWIRezs/G/hfg
pcy4hodVaMnUjySxLFOvzfDADexfDvZOs0gMD83Dfj+w5YrS1wktaFYUONOG
WjW/DtfzSsF8H/uOydYC7O8Ah4kamJeM0QrKMEn4zf3qOUuZj/1LwU7xmyJt
LxRi/w7wm+KKoVgZmhsJrldsTpaP4/OCInBY57nHik6cy56BTTea8H1nFGH/
JPhYY6OnKKYY+60+wf2dWhD9iYPmeIEfCk03BLuWYP9ZcH6WZm7tZbSkAHyz
URYodSzD/nbwrvyRLbZ2t7FfCZ50L1hfKL+F/YtGSML3YLdxw384520HX2qY
MF6xEy2OAM+K83wuVZZifx64bZuW+5MS3I/aCl5YTXuV1oTfx/wKrrFbGxij
LcD+BaMk0XnXqpKglWP/FnDEbp+46KAK7D8Bpp72oq2qwrl+Lth8tvXTd6H4
PKMZnNwqbmq+huaMgptoYwb1Qbg+x/wz9Fj1t6xdiHPJJnDi00Sf7jE8D+U4
2F539J5gFZ6XngUuDDgRHdmJ75PVBF6jW+s/2IJ9vGHwuCjX2ulf/D7xvC8k
0TJd+laxqRL73cBTtauOa76swv7QL99+jzhn8sF/M429+xbjnNsINv+8bsrL
BrRgCPyjs/91u5Y72D/nK0lc9fnVscERrb8BXGfjVzzzFJoRAo6WOsRHydCc
dLB3uV2Zpa4I+x+Az9tuKZjhhpaQ4H6CsPYX4XkoJmNwP7ovGDWduD+dAJ/Z
3BqztgrnrGBwpqF+CscCzUsFaxkauTzqwvcrrgc3i4x2pp5T9/eBrRZLd2wc
w/NQjcZJokdn8je7gLvY7ww2O7ayi9uG67mHwfsk6zTcrqIFyeDwspTxCvX+
slqwvHu5MrwQrS8Hz86SDGx/jWYYKOF9R5wY67iE5+E4gZd2DSddGcH7yTkI
pjmYP78Yi3PJZTAz1ndQ8xCaUgPef+DJvOZ7+HujvwWvoJ65r3yDc5buBEns
UWqc7mlF81aDlxdJQ6LYuF4cBPa4HfSR/wCtiAfvUxzZtvcAmloNdkjKmLl7
vvr+e8B5Zo4TITXlLv8Dkoo+tg==
            "]]}, {
           Hue[0.9060679774997897, 0.6, 0.6], 
           Directive[
            PointSize[0.009166666666666668], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJw11AlMk2ccx/G6qYgnFBQZqEW8QLmCmxwO+jJYwiZQYBwC1Qa5LMo1QFGO
imGaCNiJIFqUEqlaVGA4BQwDxEmmsslEJjrQilMOX+UQEKyy/fpv1oQ0nzzP
+zzP93kbzMLj/SI/4XA4e/Cn+cbHNn6AZZxcQkrs2k66wqKT8CZFQ6DbHrL0
JvzRasbk+e/Iza/hptqBe5nlxRoPGw2yjDr4RvxXuSc05rnB6W6pT1qjyIJd
8Ji/qc42K7KkCA7MvvWsrapI4+pm2Cl535O8WYUaqwbhfvH6iRM9BRrrLX7F
MoMh+0sr3Mh8V/hiO3+DzPG4xgk74TUmi651vaZxeQFsnJe+beQBuf0XWNr1
ZrlcfUxjTj88pCyZOF5C47ZcFs8/X3p7eRmdR7QZTr6vbn14RtsfBX+25Gzl
1XfafikcLTPpMCjS9l+Hc9xmmroVnqL+F/Cr52VDcZE0X7DoNctsd//bLiWI
1pc4whGhs0sUETRevQMOS1lWYXGbnlflwQYWv79MXFpC/XXwaqH9VJRMRv29
cFT2s7Cb809T//w3LDNV+qHHWUzz5V/AYm6DWd5ccrsIzu1aKwnX7sc5ovH4
gi1xhmTbq7DUa9Q88xbtL3oK2/tUWkgfaft1h3CfnIq6xCPafnv4Qt5gMu8V
eVgIl0UkiaOLtf2HYfGWw/XlYjqvoAY+tNEyoWYBnUfSDfuHBUwI9cnVs4dZ
Zp8j27hjL1llC3fpH9rFE2r7Q2Hn7xfpPlVr+3PgTTc2eZUuk1N/FdxntLrf
ZowsfwTv3V44rzBLQf2fjrCMnXnDl3NmKKnfGv7BLOn9vsZz1B8M8zKn9w8/
pvmibFgSqfC06Kdx6SX4fF9PsGDpJer/Cz5uE2M24+xF6ueMsoxLwce3G0UX
qH89LOtN9LVaWUH9AXBFZ1DQLDHtL8mCpx/sHVhjR/OrlbCXwbXS3BEaV3XA
+XfrlAde0vp607BSUb+4RUz789e9ZRnP0bCnhw6SE/zgjDt2W7uzyPJ02MQ6
ySdoTzX1n4Mdpqyctop/ov4/4XcpqhJ9BdlWDXOeG28c86H5otVjLFPULuRG
e5ClPrD3+hy+dSK5OQ22N87vs5dXUv9Z2J/x6KxKJvP+gHcH+281TKX1BZMw
YxFSb1RMlqwcZ5l6E/dYD9kV6t8CB9g0dUS0klWp8L1YltsZStYrg0/LvRaW
JtdQ/104I8QjK+YlrZcwDrsMuGcro2hcvmKCZXzSks03WJLbPWFZ4NwDYb10
fk4ynPRBsPPXNjqv7RnYOv+O14P7dH+i3+DP7/ulObfQ+tJROOXYZevzM3+m
ftN3+D3VROS/EF6l/q/hyYB6wdTDa9SfCPtidZejNC6QwY4jnfm9pmTJLbj9
1Iqsnb611D8Ex679xm3lbrLKeJJlFvgNGyYpaD09dzi+dpUOKybz4+DZXEPX
1u566i+GBzdbTg8dbqT+FvjEv9JMtVMz9bOwna7R6Jy4Buo3msJ99cU9/Na/
jvoZ2Jsty7ikov1FsXCjOLLFZpwsLYR70nodQ/na/ia4zPBy97w2Os/wAPxY
Wd8tukDzeYbv/3+/ZIEL7JBTONeyguZLYuDAM/wui0C6j+pjsGdnqkF6B62v
aoC9O6J1woLIen2wrncGL62PzNdXs0x4YwNH3U9OcIb3i8c7Aw5o338kTNfv
q33/R+G3pj8O+Q2SOdfhuspi/SfL6Xnbf2D/1PeMsJwsWvgB/0+7hPLyZpov
dYD1Hbgx1Ur6PTaHw4O8Kp2CXvJwLlzEM5e36NPzvFp4lftU9hIuWfAM3ty0
jskqu+L6H9fnORo=
            "]]}}}, {{}, {}}}, {
       DisplayFunction -> Identity, DisplayFunction -> Identity, 
        DisplayFunction -> Identity, AspectRatio -> NCache[
          Rational[1, 4], 0.25], Axes -> {False, False}, 
        AxesLabel -> {None, None}, AxesOrigin -> {3.8804832*^9, 0}, 
        DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
        FrameLabel -> {{None, None}, {None, None}}, 
        FrameTicks -> {{Automatic, Automatic}, {
           Charting`DateTicksFunction[
           Automatic, DateTicksFormat -> {Automatic}], 
           Charting`DateTicksFunction[
           Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}},
         GridLines -> {None, None}, GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.4]], 
        Method -> {
         "NoShowPlotTheme" -> Automatic, "AxisPadding" -> Scaled[0.02], 
          "DefaultBoundaryStyle" -> Automatic, 
          "DefaultGraphicsInteraction" -> {
           "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
            "Effects" -> {
             "Highlight" -> {"ratio" -> 2}, 
              "HighlightPoint" -> {"ratio" -> 2}, 
              "Droplines" -> {
               "freeformCursorMode" -> True, 
                "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
          "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.922526, 0.385626, 0.209179], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.528488, 0.470624, 0.701351], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.772079, 0.431554, 0.102387], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.363898, 0.618501, 0.782349], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[1, 0.75, 0], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.647624, 0.37816, 0.614037], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.571589, 0.586483, 0.], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.915, 0.3325, 0.2125], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[
             0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
             AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
          "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
          Scaled[0.05], "AllowMicroRanges" -> {True, False}, 
          "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
          "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), "CopiedValueFunction" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& )}}, 
        PlotRange -> {{3.8804832*^9, 3.8906784*^9}, {0, 0.1268}}, 
        PlotRangeClipping -> True, PlotRangePadding -> {{
           Scaled[0.02], 
           Scaled[0.02]}, {
           Scaled[0.02], 
           Scaled[0.05]}}, Ticks -> {{}, Automatic}}], 
      FormBox[
       FormBox[
        TemplateBox[{"\"Low\"", "\"High\""}, "LineLegend", 
         DisplayFunction -> (FormBox[
           StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                   "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxDividers -> {
                 "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
                GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False], TraditionalForm]& ), 
         InterpretationFunction :> (RowBox[{"LineLegend", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                  ",", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
              RowBox[{"{", 
                RowBox[{#, ",", #2}], "}"}], ",", 
              RowBox[{"LegendMarkers", "\[Rule]", 
                RowBox[{"{", 
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
              ",", 
              RowBox[{"Joined", "\[Rule]", 
                RowBox[{"{", 
                  RowBox[{"True", ",", "True"}], "}"}]}], ",", 
              RowBox[{"LabelStyle", "\[Rule]", 
                RowBox[{"{", "}"}]}], ",", 
              RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
         Editable -> True], TraditionalForm], TraditionalForm]},
     "Legended",
     DisplayFunction->(GridBox[{{
         TagBox[
          ItemBox[
           PaneBox[
            TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
            BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
          "SkipImageSizeLevel"]}, {
         ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
       GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
       AutoDelete -> False, GridBoxItemSize -> Automatic, 
       BaselinePosition -> {1, 1}]& ),
     Editable->True,
     InterpretationFunction->(RowBox[{"Legended", "[", 
        RowBox[{#, ",", 
          RowBox[{"Placed", "[", 
            RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]}], ",", 
   RowBox[{"\<\"MATIC-USD\"\>", "\[Rule]", 
    TemplateBox[{
      GraphicsBox[{{}, {{{}, {}, {
           Hue[0.67, 0.6, 0.6], 
           Directive[
            PointSize[0.009166666666666668], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJwl1Qs0VHkcwPFBq9KcRmvVVraddcojsVNsxQq35/Y0KZIhI+/XhsbKc6MU
Mdw1UbQyEW3o7Gy7SoyMXlLWmR5HtVkk1tDFGCm0m/3N7z/nOHM+5/e/1/3e
/71nvjp4yC1Ql8VixcGf9hs+vEMDDJVlNzpXfVHlDBYWgneuipn/zm5Aa/o2
WDQ0R5Vej3PFELjjBu9xlhfO1QsGGaqsz4VTE4nmrgc/bk5ykdqi+RHgP6po
jSQMfbQAfNxKynctQcsU4BbJxXCzLjx/9yA4uHg0Ofoy2tD4DUOdDivJaWaj
XZzBgZF7HG2Wo6NCwa7eOfu4U/1aSyXgct5IdMVsnCsbwJW10VmTN9AsFfiE
u/yn+F4071OGofwTrVUNK/F6hI7g0mE9+q87OKeDwJZMqSo1F+cKGryqKq72
iyLSXwdes0gh4DYNYn8f+D8j7+pfiPmcIYYS6uxYuJb7BvvtwfryVtnudrTM
HywvoDkJ1xjsF4Mzi1Rju+8NYX8teOrpb9sGCoexvwdc6ddo3m45gv3sYYZq
EP+Zs7cLLV0N3jL9sCZEB9crhWCbyk0bV8bj+VhZYOtBSYefEc55NWCv4CRf
70o8XtgF3pWStavAC03PHmGogAcnpWEitMIW3Kc0fTmZgserfcCGzMTXhjPQ
3Azw5qEU4+56XM+/Cu5hTSVPm41ifwe4Wrfmc8dstExfDfvvcWaPrqkG+3ng
OGO3FDdrnBsKwMEj2deWb0W7pINTD9Qe9luKjvoV/N7JPV2/B4+XvgBHrx2r
sleglXqjDBXbn9kfkTqG/TbgkJne+1pnoXme4LJW/cKAXlwvTAMnNFs65M3B
OV0N9jXgFPmseYv97eCWOMvYliM4V7M0DGW8KCPQ9iSaawV+/qzu6axkNN8d
/LFGHtNwBX30R3Dk3kt6+13x/8kugy/GGNXYXSf9T7THp3Uu3qDA9YYfwf0m
jkZFS8ex32KMobqMm6Y9NOgoN3BHYOOw6NJ77E8Cn4md9szIQSsrwK0pfw+0
GaFZj8C+5uOBof14PO8D2CD4ekELDy1c9pahFj9f3tQThaZdwf6+V0eFc0h/
PHh/qJtB3TrSXwZ+3TS/Prmd9LeBO/8RS24lkf4J8N11BU4iHdJvOs5Qh49d
mGtlgpbtAMeEP47MJO7+AWyXJn7T9Q3eD8ML2vV1K8xWl5D9fwhmXd75c8cI
2f9xcKz9Mq7ZK7T0y3cMdaXU2W6sF63cCvbarhM6fVuN/SJwgIMooVOMzyfv
PFjsU5oQLsTnV3gf/MkpzzsyPVxPa8BLrRrZ9+6jFSbvGapYo9rseRrPr94M
ljt3VnkE4fVyo8FOeXlLTnjgnH8OfCzT+ZTD7+T5vwsuPy50b3Ak+z8C3pZv
kbj9Btn/hRPwvs6wt/CrIP0bwfTJm/X55aT/e3BMdkAu/zDpPwu+5BIU/CiR
9N8Cm8w8YB1XQfoZsOS2efF3PDRrwSTcLyfH7fQ8NI8CC9hLKpJt0cJwcEIv
R/98IunPB5unx+faikl/I9ifXf16wo/0D2jX3z/NodzR3M+m4HlPjXl5cwvp
dwJveiF4MFlK+kPAz8qi1hnsI+9/HvhKWeXsUht0txwML+chThp5//vBJxar
J/1m4P1wmfeBody2Fh81u0X6vwVPpYTJRRLSHwgeYu8RDEpJfy441vNVQW4A
6a8DBzhxlYUi0t8LZmt/4O6S/rn/MlSz1Gj9TB80vRYcMqt5RWIeWnEQ7HtO
nH/WHK9HnQ3ue+Iv0Pcm+38d7Pk6wkH3CJr/CixoK6+tjNA4/w9ZyVtl
            "]]}, {
           Hue[0.9060679774997897, 0.6, 0.6], 
           Directive[
            PointSize[0.009166666666666668], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJwl1AtUTHkcwPGRU1jJ9FrEriHlWaalthTmVrKSVa08ShmlFRNGO+Q9YyuP
FCNbShoRtrKYbcUYjwYbvcxMam2sxxiWHrdmmh4aptn99fvPOXPmfM7/3v+9
3/v/z50QuyU83oLBYCTDd+AXPuwtLTR1PtP5qbahZT6Ymwe29s1YJLyKFj8A
e9XGF/20D61oB6/2ZmZZ1qH1o1ppSnYl1/aVBM3yBxcw5zTbHUWHJoKvxytW
BX/ZOmBRDtjxjWtRDRstVYCpAkNzUBMer2kFd6gWBDx0RjMd22gqZuG4sv3d
zQPmzAfPDj5pdilB8zeA6yfwJ6m56MIT4P6l5o6vPPF89R2wyJCsK/ZAM5rB
shbVvvND8fpsO5qm/v408azbB9LvB66j1PWlOaT/R3DVk4PuxTrSLwZ3TuPl
azvxfL0cfGZ5/fhTxjbs/xfMawyYLU9Bh45spyn1yVfm1ddo7PcBs3KLHuk2
tWN/HNhtnqVih1UH9meCF8S16xJVeuyXgQUqeVDtIDRHC7ZYaDHCqxzNt+6g
KeXRZa+NaehCL3Bw+dJHcUFoNRdsZC7LjMnE+RlHwPbTi46reDjOLgfPlfny
bhSgua/Bl5pHPvbbiRYP09HUpC/c2sweaMUs8LCSf56tkKD10eAX67PznsxB
sw6BqziS6Ls9ndhfBg7yj1Je6DNg/wtwp62HS1YxWmqlh+d1Kvn0Oecu7GeD
770f52f/HMeZUeBUG3lqgA7n46SBbX89kbjNB4/nXwWfvDQ+/92Qbux/Bh6x
ieHFskCrB3fSVFd1+ptWEZrhDk4yuzpMZKHZK8EvVVOrVA9xPu7PYNfRSs+6
UBwX/wYO2SJ0d0rqwf6n4LEGlbU2Ba1nGGiqxF4d2KTH41nTwbv7vglLdUCH
RoC3rnTqC3uMFgnBTbdL/4jU4PWkJeBsQ+Swly44rmkAvz3MUj5YhPMzzeCN
G59Frln3EfundMH+vezmNzO7D/vDwV8fvGdyNKAL94B5EmdDdDpafRGsLDZO
M45GM+rBZanlHtst0OzP4Bqt2blhbS/2u3TTVNbvz00VpWjxUnDDeQfB7mrS
vxPMtxJW5G7C+9UXgRvLe+dFVJJ+JThqsvuj6WLS3wfW3LU5PUuLvaKJPTR1
PFYUaD8Fx6Uh4KBdYbfWWJL+7eAnJo/LS4rweOZZ8FhJzNRaNe4HTi04Pykt
+eYhNL8HrAwvO50aji4c3wvPixfItrmCVi8CK/8UTFguRDME4Be23w+PEeB+
YkvATfLGof3WaG4V+Ga/oTp9LVpsAPvkySKYKXi+YtxHmnLZEeDk6I33pw8C
H/avlQtpNGsruPyCjWGXFB2aD171stWnZS/Z/5VgEbNaHHeJrL8OvDf6wH+C
waR/TB9NPZCNDeSlkf5AcHrNAc/sStK/GXygpiJnBenj54JTNs/ckJFD+u+D
7RxL84+QXjUNdiyu1KyNJP2jjPC+O2eZEPWY9FNgh0nXbw1pJv088NblgUu6
b5L+bPDi6iS74DNoRQV4/1zX8FNLcD59CzjEFNaY54tmOXyiqYiQC2f4veT/
Pw/8S2GF2tmK9CeAW5jedgl6HJdmge+M8Vzj8hqtuQ1m9N8VdsWS//8HsNzd
pNlTSvptP8P7bF0lfxuH9PuC098PmmFow/ML48EJyd95cLRo9TGw+7ejW6X3
0Qw5+J63TFBnJP3vwNf8RnYonXA+ro2Jpo6NKc4QkvsRe4NFBfleb2eT9Y8d
8FNT3+LhZP0zwOslq39gdZH+G+BE2u6vqMFk/d+AL06e0SkyGOb/D0oYaxE=

            "]]}}}, {{}, {}}}, {
       DisplayFunction -> Identity, DisplayFunction -> Identity, 
        DisplayFunction -> Identity, AspectRatio -> NCache[
          Rational[1, 4], 0.25], Axes -> {False, False}, 
        AxesLabel -> {None, None}, AxesOrigin -> {3.8804832*^9, 0}, 
        DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
        FrameLabel -> {{None, None}, {None, None}}, 
        FrameTicks -> {{Automatic, Automatic}, {
           Charting`DateTicksFunction[
           Automatic, DateTicksFormat -> {Automatic}], 
           Charting`DateTicksFunction[
           Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}},
         GridLines -> {None, None}, GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.4]], 
        Method -> {
         "NoShowPlotTheme" -> Automatic, "AxisPadding" -> Scaled[0.02], 
          "DefaultBoundaryStyle" -> Automatic, 
          "DefaultGraphicsInteraction" -> {
           "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
            "Effects" -> {
             "Highlight" -> {"ratio" -> 2}, 
              "HighlightPoint" -> {"ratio" -> 2}, 
              "Droplines" -> {
               "freeformCursorMode" -> True, 
                "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
          "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.922526, 0.385626, 0.209179], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.528488, 0.470624, 0.701351], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.772079, 0.431554, 0.102387], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.363898, 0.618501, 0.782349], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[1, 0.75, 0], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.647624, 0.37816, 0.614037], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.571589, 0.586483, 0.], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.915, 0.3325, 0.2125], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[
             0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
             AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
          "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
          Scaled[0.05], "AllowMicroRanges" -> {True, False}, 
          "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
          "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), "CopiedValueFunction" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& )}}, 
        PlotRange -> {{3.8804832*^9, 3.8906784*^9}, {0, 1.559103}}, 
        PlotRangeClipping -> True, PlotRangePadding -> {{
           Scaled[0.02], 
           Scaled[0.02]}, {
           Scaled[0.02], 
           Scaled[0.05]}}, Ticks -> {{}, Automatic}}], 
      FormBox[
       FormBox[
        TemplateBox[{"\"Low\"", "\"High\""}, "LineLegend", 
         DisplayFunction -> (FormBox[
           StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                   "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxDividers -> {
                 "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
                GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False], TraditionalForm]& ), 
         InterpretationFunction :> (RowBox[{"LineLegend", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                  ",", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
              RowBox[{"{", 
                RowBox[{#, ",", #2}], "}"}], ",", 
              RowBox[{"LegendMarkers", "\[Rule]", 
                RowBox[{"{", 
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
              ",", 
              RowBox[{"Joined", "\[Rule]", 
                RowBox[{"{", 
                  RowBox[{"True", ",", "True"}], "}"}]}], ",", 
              RowBox[{"LabelStyle", "\[Rule]", 
                RowBox[{"{", "}"}]}], ",", 
              RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
         Editable -> True], TraditionalForm], TraditionalForm]},
     "Legended",
     DisplayFunction->(GridBox[{{
         TagBox[
          ItemBox[
           PaneBox[
            TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
            BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
          "SkipImageSizeLevel"]}, {
         ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
       GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
       AutoDelete -> False, GridBoxItemSize -> Automatic, 
       BaselinePosition -> {1, 1}]& ),
     Editable->True,
     InterpretationFunction->(RowBox[{"Legended", "[", 
        RowBox[{#, ",", 
          RowBox[{"Placed", "[", 
            RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]}], ",", 
   RowBox[{"\<\"SOL-USD\"\>", "\[Rule]", 
    TemplateBox[{
      GraphicsBox[{{}, {{{}, {}, {
           Hue[0.67, 0.6, 0.6], 
           Directive[
            PointSize[0.009166666666666668], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJwt1AlQE1cYB/CgVkUdBbRlFILhELyKMSigoGQ5AghqiBeHlIiIMIUaq5ai
MgkQVBQUUVQkQOSqRVpSxqCDCKFUq2MrsWqV4kEwlAQWCRFUDrVfvtfM7GR+
897svv/+31v72D2CXRMYDEYKXKZ/+LH36Gkq8WTNOEflwgULC8ExfQLHoQ50
Xis41DaVVSdCq/rBvnUS82cZaIN1L03F1bh/qj3obDLLFxzVd0Jan4PmJ4Fb
wl+qtDy05BxY3Ljtp9BjC0xWqMDVby6/b57uaHJnL1gwKA7cHMQy2eLzPpoy
Dri52rIcTOb6gPe162SlsThflAi+b5sfuXAvWn4GHC2aLG5WoNU3wWn6/rYA
G3w+QweuM94T5jxdZDLbiqapnCz7b0dH0UJvcNwa5WjvcXRePHjSXa+jHNvF
mD8P7Li+caJ3O44bGsCybL1vTdVSzN8N1o2utXVKWob5Z/XT1HnG+KbqRlfM
vwrMWaV0C03DccVO8BTzsCb5DjbmzwVvablcscGfg/mvg2MuOqj0THfM3wVm
Xjlboi9Ai2a8pinzF3m8z7rQcnfwlDapc/YvKzC/EMz03O2feBTNOAH+kKRt
WGS2EvMrwaneX/qIij0x/0twsvvW2JIWD8xvPkBT1gZOK28ErXIDl/ZstHlc
ic8zRINTgpZzy3ahWcfA/x74zd5mCOfz68CbonpZtWK05Bn47qvEkfQnaMVk
A02tWrijqv8hupMNHhpPLF+dhraIAiu/iL9UfB7NzQKf2qqsKK8g+WvBj52+
95tH4frl7eCqabwFB+zQ6omDNFWbAjsuDM1wBbPXqWN0TLwfOxxsqZVLCy/i
/YQZ4IGeOdrdRei8GnCCWu3TokGr/ga3eKwvZa7A92lgGGlqfuC+uO4nbph/
CfhWl0dWgR2O87eAg5usgrIr0RIxWO1idNK/wPmKH8Hb7WtuW9XjeOdD8DlK
2ZItwX4sPoKvFXUWVfmR/he+oalXyZVP4l1IfgF4ZGlb5o13pP/DYF2TrP1n
f8ynrgJf6Hw0JX8byf8APMO+54O4Bs0eA3dPjwxSCXG+cMEQnB+B8vmkWtL/
RvDKacHxw2UkfyqYnbncIawC12coB1vPlMaZbSL93wcHRjQXXohH89+DC2Sz
DyU8xPkSh2E437ztjHk30YpQsNvHtNtZN9Cd34ETcykX6XF8HxaXwJp+auqd
GDT3Hng4XVvs140WDYOnH/pHU5uFls9/S1PzOHaVVn/h+1UHg+/Uz/AMCcbz
xNgPLmsLnLt3EM8buwRsFsbeOc0OLbwDfm1u1fF8yXLMbwSr/ZJteINole07
mhLqLMt73uL9DDzwDd69dLte0v9e8H5DaEL+IxznF4FzpPWyEHMcl9x69//3
VUz6HwAXBJWdD3Mi+ee+p6mr8xc5tHJI//5g6dNC354CNPcb8JHbsylZOVp0
AbxB7Xx0ozNa/iu4S7f4ebQHWk2Df5gqOmgdRc6/9Qj0c1p5RLAMzabAr3L/
cBSHo4VfgxtPp2pnZeD68grAH0IEhbHVaFUz+NOZ5kOBB8j+14Mjxrw6yr3Q
rDmjNPXo9TazJhey/9eCz2w97KfpIPs/AZzJf/H7Az5akQ/WXPQajZlM9n8j
2KVS3hESSfrvAft+Ncv51hXSv+UYTZ30toioSCf9e4EHh9ZFHPEn/e8C75EG
BMiMpP9T4OixCQc1b9GMBvCcvs0jJUySXwvO8mktWvmM5J85TlMTrkc0hieR
8+8JnhTZkJF8lXz/YsHertUB/g/Qhhwwl8NcveYlmnUNnHF5jFFhJN8/DfjP
+2UpixM8uf8BHO0Lug==
            "]]}, {
           Hue[0.9060679774997897, 0.6, 0.6], 
           Directive[
            PointSize[0.009166666666666668], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJwl1AtUTHkcB/B7THYoy4wjsVQzjWlpjB21W3psze0kcZIemDQeo+QVmugk
thJJkZhT5JFllMorRaiNmFWRVyXqoGlND5lyaZQoeexvfv855545n/P7/+//
fv+//7380MjA8GEURW2Fy/gPP0lkF0NfLHy+IubVVClYcQx8TLzEvPUAWlUJ
3ntc3xewGK15B7ZOMi8IEaENFt0MbZrznqXK+NVonid4/cZfmiO4aP8N4EY5
Sy7U2xqdmAV2zDBpNa1BF2vAfW1VMld7tK4bHCu8vyW+QGA0x/wtQ7f2WJQI
zaYYLfUAs2Mb7oTPRyvXgdesUt0YMQmtzgRfWNEVF3sL71dfAY6PzeIJKJHR
lB68kNq/pl4y3WjJWAby2k04/Gwv1hVu4CrT0rgp5mjVanCtDh7gZ7RGBU4I
Cj6nPo/zDeXguty2HweWzsT8r8GeR5srtLkSzD/mHUM3ayzPBm1GJzqDYwab
Uvpr0cVh4JqejV9Kkuwxfzq4Ip89PE81C/OXgR+sLz+pz0dL28D/3S+4d12D
Vo56z9AO9jXLdj92wvyOYDNDS2f6X+h6BXjF20DBx8o/MH8aWPzI07Wg0Bnz
XwOPGiZKGb/OBfO/Atd9DmrPC8O6amQPQ7fUTaupa8P1NA5gTtFbC8YO64Zl
4PZ9abmbndC8VHCWYBWvzgrtfwUc2pR2+oQW5ydqjeOVnbItJlgv/snA0P7n
412sCnB9nQQ8uDp70lMPNEcOXr87IX+5jORPBr/PzKUCeDhfWQTexQop3zUS
x6tfGMfPcJrQTWG9nvUB8vHffNvRgfOpGeCUrw5JAxvQkmCwS2Gz+lMR7pdi
F3jWoNhlSSdadRFcGHF1sl5I8jeBrSta3TfPwbqB6mXo35r95AIr3F+eCOwR
6LVnkfZ3zL8IXH57u7bU0xHz7wCXTJPFHknB8cXnwEeqqzrb3bGuewp+edaP
fYWsz/kO5laODmtgk/xT+xg6vSFvx9wErCsDwWP9zJZ//Jf0Pw68kbVV7ZdM
8ueD9z1aqutlcH+oJ+BtxgO1AS0ZAn8IXZl6wgbHK4QfGTqoSG5yNwfXUy0A
n6rJPBMxmuTfBo7aYjeR8ib5c8EOef2lJnFoXi34aXLwN+5ytP8AOCDZozL7
H5Lfpp+hJ3tFzM5+iC72BT+2GSenM0n+GDDP7AlfSaE5p8FnnLRzNu3F/ZI+
BHeVG5L6/kYr+8FXi9x8FkxEq60/MXRHcnTsiHbc//q5YPbsPmr8IjQVDRat
DQkNL8b3TXISrDsVKHwQiFbUgMdqfV7YvECresH7OkQ7D63C+ZrJnxk6zq7g
T6EM1zN4g61XwwmYhM/LiwIvLnstmBaPdf9sMHW27a64zQHzV4NfOQbxrQpJ
/3vAK9Na3C9oSf6JAwztk9o7XBxN8nuB80578+8/w/2UbgLrT+lCZzuT/h8F
C+bfZLlxSf/vgE+cGQwLKcH59Qz4/HTTG1PJ+aMsBhlaxpZqG/swj4QGH+Ja
JHrz8XkUEeDvje23Gr9gXXUYHCUrssmtJPlvg32qf1gG7CT5u8AdWlut6Ag5
/+O+MPSylsvPbaNIfnfwUEY6W+6PTlwL9tU1tbjNJfkzwJfm2QzxevD+upvg
yIRKryQ3rHPegOcd98i/FkD6zx1i6Iw60cntAzhe6QqO3GlSfbAarQ4HRy3c
lJN1nfT/IJjvGhlWEkH6Xw4WN1S5ash6kg5w92UxqzaHvP+jvzI0nTjK0jWY
nP9Z4DFll45y3fH90ISCo48Pf2kZQ75/+8H21hy9710czysFX704dM8zmnz/
WsEzLw+WORqcpf8DhEEJig==
            "]]}}}, {{}, {}}}, {
       DisplayFunction -> Identity, DisplayFunction -> Identity, 
        DisplayFunction -> Identity, AspectRatio -> NCache[
          Rational[1, 4], 0.25], Axes -> {False, False}, 
        AxesLabel -> {None, None}, AxesOrigin -> {3.8804832*^9, 0}, 
        DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
        FrameLabel -> {{None, None}, {None, None}}, 
        FrameTicks -> {{Automatic, Automatic}, {
           Charting`DateTicksFunction[
           Automatic, DateTicksFormat -> {Automatic}], 
           Charting`DateTicksFunction[
           Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}},
         GridLines -> {None, None}, GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.4]], 
        Method -> {
         "NoShowPlotTheme" -> Automatic, "AxisPadding" -> Scaled[0.02], 
          "DefaultBoundaryStyle" -> Automatic, 
          "DefaultGraphicsInteraction" -> {
           "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
            "Effects" -> {
             "Highlight" -> {"ratio" -> 2}, 
              "HighlightPoint" -> {"ratio" -> 2}, 
              "Droplines" -> {
               "freeformCursorMode" -> True, 
                "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
          "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.922526, 0.385626, 0.209179], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.528488, 0.470624, 0.701351], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.772079, 0.431554, 0.102387], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.363898, 0.618501, 0.782349], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[1, 0.75, 0], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.647624, 0.37816, 0.614037], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.571589, 0.586483, 0.], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.915, 0.3325, 0.2125], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[
             0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
             AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
          "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
          Scaled[0.05], "AllowMicroRanges" -> {True, False}, 
          "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
          "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), "CopiedValueFunction" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& )}}, 
        PlotRange -> {{3.8804832*^9, 3.8906784*^9}, {0, 26.925581}}, 
        PlotRangeClipping -> True, PlotRangePadding -> {{
           Scaled[0.02], 
           Scaled[0.02]}, {
           Scaled[0.02], 
           Scaled[0.05]}}, Ticks -> {{}, Automatic}}], 
      FormBox[
       FormBox[
        TemplateBox[{"\"Low\"", "\"High\""}, "LineLegend", 
         DisplayFunction -> (FormBox[
           StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                   "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxDividers -> {
                 "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
                GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False], TraditionalForm]& ), 
         InterpretationFunction :> (RowBox[{"LineLegend", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                  ",", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
              RowBox[{"{", 
                RowBox[{#, ",", #2}], "}"}], ",", 
              RowBox[{"LegendMarkers", "\[Rule]", 
                RowBox[{"{", 
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
              ",", 
              RowBox[{"Joined", "\[Rule]", 
                RowBox[{"{", 
                  RowBox[{"True", ",", "True"}], "}"}]}], ",", 
              RowBox[{"LabelStyle", "\[Rule]", 
                RowBox[{"{", "}"}]}], ",", 
              RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
         Editable -> True], TraditionalForm], TraditionalForm]},
     "Legended",
     DisplayFunction->(GridBox[{{
         TagBox[
          ItemBox[
           PaneBox[
            TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
            BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
          "SkipImageSizeLevel"]}, {
         ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
       GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
       AutoDelete -> False, GridBoxItemSize -> Automatic, 
       BaselinePosition -> {1, 1}]& ),
     Editable->True,
     InterpretationFunction->(RowBox[{"Legended", "[", 
        RowBox[{#, ",", 
          RowBox[{"Placed", "[", 
            RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]}], ",", 
   RowBox[{"\<\"DOT-USD\"\>", "\[Rule]", 
    TemplateBox[{
      GraphicsBox[{{}, {{{}, {}, {
           Hue[0.67, 0.6, 0.6], 
           Directive[
            PointSize[0.009166666666666668], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJw11AlQU0cYB/AMFCxKIXIKAsFoQAVKRmigyvXE4gBFgxWhIhBBOSQKKILE
KtGWUNqKzwZpLFeU0aroEBHqbQNqRZGKWuhhKpdS0UeJ4TZi++XbaWYymd98
b3fz3/ftzkvOWrPZiMVi5cPX8AsfftYgQ62kI87V9s4OAYuOgNf9KnKU3UfT
N8C3RxyEWTK0egjs7NIymaFBa+1fMJTtmRyBczPadTn4qumewaEatFAM7mwb
9j1C5peWg+upJIm+H61Sg82NPIrtzNA9L8CCIPn0yCjbYLbtS4a6Y5KmndCj
Q4LBLc1PbtIB+Hx2Blg0sGyyZD5aKQenPOyO7I1Gd1wDx87ct6HvOZr1HBz2
7kFB6Rwrg/lWDENVxNTUnfVHiwLAre3ZxkHBaDoV/K+kyGRCjlbT4IF4Ttfc
nWjtZXCzi/WidoE15n8GVuVMXwlKQQsthxgqvGbdA856tPRDcEDxkrW3Fthg
/hTwrt1sI10TuucAeNRXRI8escX8F8Ez3I8lxXvbY/4+MOOTtufuUTvMb/4P
Q+kX5P++YhytFIAPKZSyrH3oDhF4nnFB3lQ5mvW1oW4pEdRZ4Hz8pv/H583B
/N3gd4yqwiskaNpsmKFKEsPOaR6i1T7gdnnmzE3laG0C2NTKJvhnT7Trl+Bw
7y0TdUIHzN9gcKVttHUUWqoBG3klNAuS0SpTLUN1nU6wfrgF3cMHW0QoMvRp
OB87HvysUJc/fBIdUgQOP/ZdtKcfOrserJD1zk/+E8cr/wC76D/1/IjriPmN
XzHU8Yiya8c3zMX874O9qLCQovlY58eBJ9rcPWSPcbxoP1jlBDs2jqbPgJtq
/Vc6V+Hz6i6wVbrq1IiC5GfpGKqW894P96pIfg9wZdRKll8dWhgDjk3UBU/t
RksLwe0u6SayM7j/qlPg4u6oCwwf6z2PwG7bmx3enCX534IPPGLHTH6C/ydk
4QhDyVoHX04tRWevAZel3+nPKHHC/J+BvX3EZWNt6I4TYE5E49NXvs6Y/wG4
Zum6RYFyrPP1YA+x6UXXCtwfEW+UoeT9qwZFzlinV4NPNGWI601I/gKw+c64
3vJCXF9bC+4dtj/Pm4V111/AhuUazdHCSbAxz8RO7UveP3eMoTxTQv30JI/q
Y/CSuz7exdMkfx74dGdsrIkE94d9FOx3c1d7nSPp/zYwJ5JzWVmNzh4Dn2/Y
0xpfilZyxuH+Gi1OrTZHd4SD9fJJjZkb6f9ccH/LPtqTj+eLXw0+3Jkb+ICc
P1EruOjFQF+WB9ZpHdiys2yT83W02mkC+s2GU0MP4XzaMLBDfUFMGo+8/xxw
qtXY/tWhuL6wAlyap9FeCUdLb4HtnjzjXvfB51XDYKmhvSnS/w6TcP41y2O5
5PywV4AdtosDQ+NI/28D8y8OlL51J/2vAPPuNU57PCb5W8BJId6aS2ysdzDg
vL/iDyl6sM6yn2KoIO6JFVZbyfmnwM1OgXuz5GhRJtjuC11QqR2aPgxmr7dM
cluKVv8E3vg6MTQ7gPT/IJj7dmPkQTeS3+Y13GezFizcKyb9HwRe7GLfye0j
/Z8O3pCTs3YbuU9U34Idb1Qqo/aS938VrNAsbOiSkvx/g9PlN9yr4kj/z9Yz
VGTrjMAKW9L/y8BzTD0vfXUYxys3g3XU/dTOfJL/IJh7YGaleAeadRnsNUNy
cuvnaP5T8H2vXJ4Rj5x/izdw3n5cXMKMkPvPH5yvXFWQuwPr6mTwB8mpNbf9
sb+134AVvmEvT35P+v8C+MJwdOG1FtL/veDfMiVCIdT/A4Zv71w=
            "]]}, {
           Hue[0.9060679774997897, 0.6, 0.6], 
           Directive[
            PointSize[0.009166666666666668], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJwt1AlQU1cUBuBokUFARGQJAhKgKItiVAyLInkoNOxxwSi4RBzUFiqpIGil
JkRpKSCG0rJIh6VQFxSIUJai0bDoiBvbCAp0xIVR8QFhqwiR9niumclkvnk3
N/d/58+zCo/eGjGXwWDEw/vTJ7zY0W9pqmBe0Y1zmQZcsDAXzFb1nayLRcua
wEztJ3o+5mjlEHiBc0FMrSNaZTJIU9PaHWne44s+meUFbppQ/Ng/heZHgXkz
lsIyP1wvyQJncf3oniC0XAm+1tfxDY/G9f2D4FHf5QYBEWh9o3c0xXp3+bFA
gOZ6gtWu520cz6FFX4PjXOv94n9CF2aCfSXnQ2uMcf82BXidOCCy0w7NeAO+
q/NWpV+DZhvQNNWQelPq/Dn/BnBd/ILpjvsk/0FwUf3fU72PSH4ZOKpinsKF
sxjz14Plgp0iT64h5h8Ac64pBbG9eJ2/cIimWkq1XEyT8LrEDby1htdzdhYt
PwDucXd9knfJCPOfBR8NTHzwSGqK+evA8rKC2SoOE/O/AK+ebzKmFYQW6Q7T
VHi9/hXPSnQhB3z81BbpbCO6TQgeGvVy37DdBPOngq9r23teNsb92dVgrV3G
AeoGtPAZeHD3Fj+tO2jZ/BGa6jRwLM5YZYb514LHLdTNc5qXYP49YL2b7FwH
OzQrGWyvyXNOXIPmV4IX1m5qCo9FS/rAvR8dlPF5aLmmiqbKJV4eP5D9+tng
jsYII04mWj8MzHnjHy3eiOfhJoG9DzqJTtBoUQW4uVW8cG8knq/wKfhMt9O3
rlHmmP+LUZgf732M9ho0wwksvXpxx76zuJ69E8xeOZjZZ4UWSsFif8as/W20
7Co42uehoOU9yd8FFuUclkm70SrGGE19bFDGjKzG87AcwdkvjZLzv0TzQ8B5
A5XtbmK0RAyWdZ/2HR3F+cgvg/eXmFTPzMPr/Z3gP4vNHywTkfyz4GILF/WR
HjTXbhx8gpGqTrHA/FvBguWH7IYPowsTwEn7Bl8Hhlhi/gvgO6lJVkfdl2L+
dnC7nHmszAPNngF/VBguddbB7wttJ2hqzgVd8zYpWhYMtqjgTpSk4f1TngB/
PxPTLssg8y8Gr48+UGUzQOb/CJygLRnVXYL3hz8FNh3IzW7aS+ZvPUlTp6ez
3PbsIPMPALeXe90LdiDzjwN7/x5U+TiE9L8InCEsza12Jv2/D05I3FXEcyH9
nwRrdve1/2dN+m/5L03VLLa1ytAk/fcF8/hqZkw26X8sOH5xQueEPZqdDw4M
lLqUbDHG/HfBLsldKZxatGwMrG8bOna8FNcrzd/TVKzNCocXJbi/ygecr2Oj
uLSS5P8OHF7ASMlIIvPPA/u77aMVybhechvctbOxh5lK8o+A1+2faWG2kvym
UzRVrVaG5H+e/2awlbtGusY06f8RcNkfns7jzaT/OWB++tzNDWnowkbw0HXr
qWel6DYafNFGknc7DM0w+UBTL/m3dMK24XnYFFiLVf1zZiRaGAl+Kr9QaReF
lv0GZh4f9tgdjlbeAvf7P6eqzHA/1Vtw3VztyQkr0n/DaXg+m/0lsCR9528E
O05vWhtcTvp/GLx94KSPNTm//BeweeshruID6f8N8Lsdrb4jZiT/a/C2+AgT
3SDS/0UzNLXCKf1eYAnJvx585npVXK83yR8BfrUK/tA0mf85cHp5xz/HNEn+
erCyfFnwLg/y/HsFFkcu9/MaI88/PTVNuQ3/qtf1jDz/XMFftVyJ0c3B31eG
g7dVhGncCSX//zTwpVTDe42H0KxaMLv+htvuk6T/z8Ebnj5MO7XdjPs/Teb4
yg==
            "]]}}}, {{}, {}}}, {
       DisplayFunction -> Identity, DisplayFunction -> Identity, 
        DisplayFunction -> Identity, AspectRatio -> NCache[
          Rational[1, 4], 0.25], Axes -> {False, False}, 
        AxesLabel -> {None, None}, 
        AxesOrigin -> {3.8804832*^9, 4.039540166666677}, DisplayFunction :> 
        Identity, Frame -> {{True, True}, {True, True}}, 
        FrameLabel -> {{None, None}, {None, None}}, 
        FrameTicks -> {{Automatic, Automatic}, {
           Charting`DateTicksFunction[
           Automatic, DateTicksFormat -> {Automatic}], 
           Charting`DateTicksFunction[
           Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}},
         GridLines -> {None, None}, GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.4]], 
        Method -> {
         "NoShowPlotTheme" -> Automatic, "AxisPadding" -> Scaled[0.02], 
          "DefaultBoundaryStyle" -> Automatic, 
          "DefaultGraphicsInteraction" -> {
           "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
            "Effects" -> {
             "Highlight" -> {"ratio" -> 2}, 
              "HighlightPoint" -> {"ratio" -> 2}, 
              "Droplines" -> {
               "freeformCursorMode" -> True, 
                "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
          "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.922526, 0.385626, 0.209179], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.528488, 0.470624, 0.701351], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.772079, 0.431554, 0.102387], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.363898, 0.618501, 0.782349], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[1, 0.75, 0], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.647624, 0.37816, 0.614037], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.571589, 0.586483, 0.], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.915, 0.3325, 0.2125], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[
             0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
             AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
          "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
          Scaled[0.05], "AllowMicroRanges" -> {True, False}, 
          "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
          "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), "CopiedValueFunction" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& )}}, 
        PlotRange -> {{3.8804832*^9, 3.8906784*^9}, {4.039540166666677, 
         7.833305}}, PlotRangeClipping -> True, PlotRangePadding -> {{
           Scaled[0.02], 
           Scaled[0.02]}, {
           Scaled[0.05], 
           Scaled[0.05]}}, Ticks -> {{}, Automatic}}], 
      FormBox[
       FormBox[
        TemplateBox[{"\"Low\"", "\"High\""}, "LineLegend", 
         DisplayFunction -> (FormBox[
           StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                   "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxDividers -> {
                 "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
                GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False], TraditionalForm]& ), 
         InterpretationFunction :> (RowBox[{"LineLegend", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                  ",", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
              RowBox[{"{", 
                RowBox[{#, ",", #2}], "}"}], ",", 
              RowBox[{"LegendMarkers", "\[Rule]", 
                RowBox[{"{", 
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
              ",", 
              RowBox[{"Joined", "\[Rule]", 
                RowBox[{"{", 
                  RowBox[{"True", ",", "True"}], "}"}]}], ",", 
              RowBox[{"LabelStyle", "\[Rule]", 
                RowBox[{"{", "}"}]}], ",", 
              RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
         Editable -> True], TraditionalForm], TraditionalForm]},
     "Legended",
     DisplayFunction->(GridBox[{{
         TagBox[
          ItemBox[
           PaneBox[
            TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
            BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
          "SkipImageSizeLevel"]}, {
         ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
       GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
       AutoDelete -> False, GridBoxItemSize -> Automatic, 
       BaselinePosition -> {1, 1}]& ),
     Editable->True,
     InterpretationFunction->(RowBox[{"Legended", "[", 
        RowBox[{#, ",", 
          RowBox[{"Placed", "[", 
            RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]}], ",", 
   RowBox[{"\<\"LTC-USD\"\>", "\[Rule]", 
    TemplateBox[{
      GraphicsBox[{{}, {{{}, {}, {
           Hue[0.67, 0.6, 0.6], 
           Directive[
            PointSize[0.009166666666666668], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJwl1AlQU0cYB/Cg9UCUUqvGVksSBKUCNhWN2mLyHlW02EoCKihKAg544BGt
I+NRXkilihzNWEBRm0PrbWukCIpKopWCXKJVUaghqagkfcitaBD68W1mMpnf
7Nt9+89+3wriNofHD+JwOEnwHfiFj3CznaU/O/XeLW9tGAVW5IETXjfFGuZI
B6z5EyzKmR/LFaDNLeDErvWqeyvRbVwHSz+bP9laJ0Xzg8FZQ1LpvDi0dAM4
yORLMwGyAatywXuKhgn4fThuNIN/iR9nePQj2uoAa96oqDW70B5j/2Npr950
/efZaEoCXlBOaVd1oJXrwN+NDpUPD8P19T+DhwSeVGRmoWuvg6OUEmtKZviA
Oc3goQtnpHidRQtHsyy9hfOuhNmJVgSBpw46aiml0JoE8K8RkeJKB9qsAefX
95ocNnRbMdhvjD15cWIE5n8Gfir62Bzdg5a+38LSn9KMYcGIJZh/DrhCGaRz
KUQbV4O3jq+SC5xoayb4xA/djHv6Usx/GTy+QKO6y6Cpf8Fn0sS8+IVo5ciX
LL2wtP8TGYXWi8BFrTLmuhHXq1WA/wr3lrumoTnp4MV+qdS0GrTwEnjJLC7T
8OEyzN8Irrm1TbDMhOtpXFtZumtvgnZlM9ocCN4u6zKXnUe3rQJnc/NUcrI/
/j6wd0sIr7MCLc0Hl++m9IG5aNU/YD/u1P4VVrRxaBvUg262KjkB328VgsU1
M2KdcrRHNNjnxS3P+lo0lQquurTWpV4VifkvgItYj36jLgrzPwbnxbmrs9To
2sHtLO1YdY1XZEBzpoHHXwzjlFbjfGEU2N99TfLMerRCDY65WmAz9qE158Fu
3r7JGdE43/wQfKg3rO9lMe6njdPB0vuOlmgv1KH5fuA/WvdbmWCcL10Kzih+
aDn1HMdVDPjw8AnaGBHaeAYsNj41UcdI/r/BtmDPG5mVON+jD3xzvX/sxmJ8
P+XbCfMn+ZlGnkMrw8Eb33XpZtaQ/LvBPkPGmbMjSP6T4HsnHZ6Pr+B6nLtg
0fLjnsc8SX4nWHKKL5kwjOT36WLpyOiLJnYzyR8GTr3HDa4pwP2Zd4DnanN5
l2+T/MfBoffdxNVf4PP8GvBlaG+5hOTvAc9KoxXPotAqr26WfuL6Sv5iK9r4
DTjHLYcJOIC2bgePWJdJTxlGzt8A9g91vXF2MDn/SvDyfe4pk2RoZTc41Pd7
QdNtUv+8VyytTzPa7EHo2q/Bi55HWZbuJfW/DTw9KUDAe0n6Xwsetf+5i38o
3heKcnD3o1yXNefI/dcB9pu5Sz/WHcfNE1+z9G+G+zHzrpH+DwFX5U9Jqe4g
/b8FHDBZxKuz47j0CHiiIyk2cRSOq0rBgRErmEUGtLEVfFhe7aIuIP3/UQ9L
+/q3q/LPoT3mgaeLq2IKD+Lz1CbwmN8X2HZuQisPgQsmNhsKe9H6m+CB685F
TfKz4AcVe+SOJPy/ONw3LG1pXi3mH0ELabD8sJfZXkL6PxHc8Pq0KcYNrckB
Z1VNYoRkPbMJHJOarVsSQs7fDl4R4pib84D0/5i3cF9uOd2Y6iT9Lwbv2ttg
iF1N6n8tuMfSqL9eSOr/ALjxrdFy+gSp/2vgjM5ZBo9Ocv4vwHfUUktZCzn/
D5wsXVintkzIIuf/JbhBOEJdRtbXx4Ov+sxRRK5F1/4E/qp8Rz9vOclfDN4g
KKdd1SR/E7g9YZQlktSnwr2XpY8mHjK03yH5Z4OvPP02Od1J6j8OvMjLya9k
8Pm2DHBB+fYSHelXfhGYWSfTNdlJ/dvA8oM2yZPkKOp/OKocIQ==
            "]]}, {
           Hue[0.9060679774997897, 0.6, 0.6], 
           Directive[
            PointSize[0.009166666666666668], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJwt1AlQE2cUB/CFeoFHI5JiNUJCK9iCdq1TqqKS7SBKRYkc1UAlCdQi6ghW
AbUCicdAgQwRi9WiJBF0ioLiAXg1hOKBldYgQnEqEBg8wAUWBAGxoS/vIzOZ
zG929/u+f957K4qMDdpsS1FUInytv/ChYztYxitnpcIpSSIGy0+A/3HoYx4W
ojVVYFFNV0S3Dm3sAl/IDYrwOIvmnDpZJvW0WFutRAu/Avv1hBiXb1hvtWQ7
2HbKA21sKVp5DNzYKxNOKkOXGMFT1x/2qVqLNneCzxSk6uv/xPV4/Fcsc3C7
1LCAj9fFPmDDwnHUvWvouBjwU4fr5in1aN1RsHa3a2UIF2S16Xfw8sdlCkf7
YKupl2DvrPRR7xg07cCyDNOjFlGT0fJlYI3RJdnCQ2u+BzteSlOkuqGNGrBk
6RH5uW1o7gZ4Zo1MtOtRCOZ/Bi74KVHpfhYteb+LZRragqnMWaGYfwm4Q5VV
mX4AXRIFLi7gt0ieoc1qsM2ilsrAwm8w/zVwfFg50yVAi9vAC6T8VjcvdNyU
bpYRlB/XznZH67zA96Ivp+RNRZvk4CtXXp6yn43rUxnguif3zfMu4HW6FOwZ
2agIqEfLW8AbxPq8FXvRGrselnnckCYXuG7A/IvAf/3c0OJwF69zm8Cz0r2b
21+ghWngdfavnaMT0JLL4OnqbmGCH1r51Or0Yl3MVnTJBI5loHqW5E0bMT8N
fnjzko5+g/vxwsGPira79I2ixYfB/h4GPZcsxfwXwU2vCgyee9C6J2Bf82pd
pTPa9F4vy4zUSLU/rERTC8BJx15UNl3B/eiNYHX989HQBLT8ANj0S7Pl26/x
fk0RuIzXrjukQhsbwNKMQBu6Ee/nqL6xfj2A5xN6gBvrpqWsLUZLQsHPohJV
2Xq0MgV8MP2crOMcuqQQ7PH5UqFdL9pcB26ZaauMuor78SzgL2RzXW46h2H+
ea9Z5s6uMqUpkuQPApc8pyoF0ST/frC6q1Q3uIrkPwvOz15qs1aL56VqwVEm
O/3Bz0j+EbA97ZliaMD95XP7Wca16tPmaju8rgkEZ43aMspqUv+9/WP1kqK5
fHC3/PYKm2aS/29wXX5hXs0IyT8EHrrLowSDJL/rAMvEzj/auudHXL8kAFyz
f6LPzlRS/wTwR/8OJ28l5+HpB8bm7SLp/wfghtu2stpXpP8HwGa6Vjg+j/S/
yxuWmWtb75PmSfrfH3x0zmzVHh3p/93grfz/9CdoNJ0HPqP3E91fSOa/Gnz9
ywrFaRW+PzR94ODwTuFFZzL/gkGWmUa/nvPuOs435wfuWj1wSjaB9P9OcPua
38xcDK4vyQWHpayhLIP4vPIOeMciftsROZn/HrCHY0fyuiEy/x8OQf82TRSW
/orm+YJF94uaW53R4h3gMOsAVOP+ccfBV6sTDFo7kv8PcNKy/qbik/j/mVhw
08cTVDkcmnIaZhl+7HfOw0lomgHPn+xmmVdI6r8NLOCGFYei0Zoc8IyTb8V9
Ybi+sQJ8S+yvGr+Y1L8D7LBuckS/D6m/41uW6YzPMG5Uk/lf8XbsvAmk/lvA
gxcY2b5c0v/ZYP2qzLzwRtL/t8CTwlSi8/tI/V9Ynz91Un+tnMz/9BHod8tD
heETdJw3OCk+VPfBE5J/MzjA4p4y+IjUPws8cGOlvMiApm6AFdCujmqSvx28
rGCmsHYxmf9p71gms9FdGXme5F8MblsSLt5ymvR/JLjKT1pxgrw/uEywk+qS
QRWIFpaDvbLHtdon4vxJWsG+Q05M1Ayp+H9K3Rwt
            "]]}}}, {{}, {}}}, {
       DisplayFunction -> Identity, DisplayFunction -> Identity, 
        DisplayFunction -> Identity, AspectRatio -> NCache[
          Rational[1, 4], 0.25], Axes -> {False, False}, 
        AxesLabel -> {None, None}, 
        AxesOrigin -> {3.8804832*^9, 60.94412622222236}, DisplayFunction :> 
        Identity, Frame -> {{True, True}, {True, True}}, 
        FrameLabel -> {{None, None}, {None, None}}, 
        FrameTicks -> {{Automatic, Automatic}, {
           Charting`DateTicksFunction[
           Automatic, DateTicksFormat -> {Automatic}], 
           Charting`DateTicksFunction[
           Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}},
         GridLines -> {None, None}, GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.4]], 
        Method -> {
         "NoShowPlotTheme" -> Automatic, "AxisPadding" -> Scaled[0.02], 
          "DefaultBoundaryStyle" -> Automatic, 
          "DefaultGraphicsInteraction" -> {
           "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
            "Effects" -> {
             "Highlight" -> {"ratio" -> 2}, 
              "HighlightPoint" -> {"ratio" -> 2}, 
              "Droplines" -> {
               "freeformCursorMode" -> True, 
                "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
          "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.922526, 0.385626, 0.209179], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.528488, 0.470624, 0.701351], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.772079, 0.431554, 0.102387], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.363898, 0.618501, 0.782349], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[1, 0.75, 0], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.647624, 0.37816, 0.614037], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.571589, 0.586483, 0.], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.915, 0.3325, 0.2125], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[
             0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
             AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
          "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
          Scaled[0.05], "AllowMicroRanges" -> {True, False}, 
          "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
          "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), "CopiedValueFunction" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& )}}, 
        PlotRange -> {{3.8804832*^9, 3.8906784*^9}, {60.94412622222236, 
         104.480171}}, PlotRangeClipping -> True, PlotRangePadding -> {{
           Scaled[0.02], 
           Scaled[0.02]}, {
           Scaled[0.05], 
           Scaled[0.05]}}, Ticks -> {{}, Automatic}}], 
      FormBox[
       FormBox[
        TemplateBox[{"\"Low\"", "\"High\""}, "LineLegend", 
         DisplayFunction -> (FormBox[
           StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                   "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxDividers -> {
                 "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
                GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False], TraditionalForm]& ), 
         InterpretationFunction :> (RowBox[{"LineLegend", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                  ",", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
              RowBox[{"{", 
                RowBox[{#, ",", #2}], "}"}], ",", 
              RowBox[{"LegendMarkers", "\[Rule]", 
                RowBox[{"{", 
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
              ",", 
              RowBox[{"Joined", "\[Rule]", 
                RowBox[{"{", 
                  RowBox[{"True", ",", "True"}], "}"}]}], ",", 
              RowBox[{"LabelStyle", "\[Rule]", 
                RowBox[{"{", "}"}]}], ",", 
              RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
         Editable -> True], TraditionalForm], TraditionalForm]},
     "Legended",
     DisplayFunction->(GridBox[{{
         TagBox[
          ItemBox[
           PaneBox[
            TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
            BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
          "SkipImageSizeLevel"]}, {
         ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
       GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
       AutoDelete -> False, GridBoxItemSize -> Automatic, 
       BaselinePosition -> {1, 1}]& ),
     Editable->True,
     InterpretationFunction->(RowBox[{"Legended", "[", 
        RowBox[{#, ",", 
          RowBox[{"Placed", "[", 
            RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]}], ",", 
   RowBox[{"\<\"AVAX-USD\"\>", "\[Rule]", 
    TemplateBox[{
      GraphicsBox[{{}, {{{}, {}, {
           Hue[0.67, 0.6, 0.6], 
           Directive[
            PointSize[0.009166666666666668], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJwt1As0VHkcB/C7KtKWaBvVcpg8o5ibyo4RO9dGiEwP1ClMWhmPE9mkzhY2
dAqbQfQSUzZz2h5m1W5YraE0tdp2OqWH02M8hmovBhUa2v35/XfOmTPnc373
/7/3+7+/3yyMTlofY0BRVBp8J3/hQye9YRlFiqSwr8FBCBafBG/S+mij1jhO
WnoTvCB8q2WJHuvKPjCzKr69ZT/WdfPeskxOZMacig1org+4s2ejGzUXLUoE
L3JsD/V3QmeWgqnubONKYoUS/PpQFfvuG9xf8xYc27+w4/tY+0mbcv5hmeq0
jIbwYLTwa3AwXZZw4hd0chzYqeaxKD4cLSsGO8u97Hv3o9U3wGFmO91+XoL7
U6/BpT7c4/x6ND2HZZnFTZ3JPUn4POKV4JtlsmATFdalO8ATHLdww1CsK6Xg
Y4mpHvZ8kr8e7F1TF19uuwjza8HC8fERjQtaNLuPZSJGm8YenUVneoCtJnhP
zrW4YP7tYLOjmz/YzXfF/D+Cmyy90pO6eJi/Fnx5bPC4+Swa83eC24wlNol8
dPLMfpaZniJqDrqIlrmDU6uLP9bk43q1GJxWvve+eSaaygMnf1761uA+mv4V
HCBprZvbhevFr8DVNpVTijRoqfEAy+RzVpw4tHkp5l8GDhv06ykcwLouAjz2
4QoTdQrNPQxOtDNu5tzD60U1YK+YFREhMnTmc3CM+x07W8flmN9QxzI8t88a
/QRoDQ2OW1fRbZK0DPNvAdvyEqJ/iEULc8BVqzd4nWx1w/zV4GnnJdrId7he
9gxsafvM9pEGrZ4yCOexx40f+AlNuYItzPKz1qhwP3oTuPeVqz61AC0+CJbb
cG6bF6Gll8AjVq4e/Q1o5WNwhbdBxugFzKOjhmBeLnXYjJB83MXgmM4wZuY1
kj8U3M05XH7sDMmfAfaLfHzLgJyf4gLYvniD500x1jUPwS2FRjZ5OrTpJ/AD
61P7Ukowr3DRMMu43PPxlOeQ/OvBsoQoIW8rPp9sP1iy5S9BFzk/dRVYpNpu
6PwVmnoA3nV3l3z3VDwPWg8+H9zmVXOe5Ld/xzJ2Tm+2SUpI/hDw/L5BH4Ed
3k+5DxxmOiVCn0vyV4ItsutetD4j+e+DJ8sGf5L8o2BertXofIrkt3kP+193
eFE6Ha0IAgdm8HKMnEj+PeB1gdPD2v7v/7PgbaE3xtdWooWt4ALRsp9yzUn/
vwfXGv4WqKjFusz6A8usuXe1KOwR6f8A8BF7bf93S3C+qN3gKt8DRZ7ZSzB/
OTj3aPeQdedizH8H7HzLdnBoOdalQ+An7fqNnHq00nKEZZR76OgKLu6v8wN7
XI04O9ud9P8uMJ+uW/etFu8nOg1eO2PYKrYZndkCblfNSLeIx/WKAXDXbZee
3iFcr1kwyjLXqlf6h0ygTVeB9XZpT1eVk/nfCdY4h3DZRJL/BHj2mfK07dvI
/DeDS4ZbXubJ0WoWLOQ9r6Ob0dS8MejPV5ymf3eiaQb890HRS1UHmf8EcHtq
km+0A5n/EnDF5aysG5vRykbw5RAPh7xqMv9vwIXpekGyCXn/cz/C/6v3buaA
NXn/3uDbnHmrtUXk/UvAvq78rEZSVxSBy+SC7h0NJH8DOE41q/H0J5K/Fzzt
5V256hxeLzTTw/MGDFhEXUUne4KfLL1Syyf9KIsBtwhC/4iVoNUFYMHUo1O/
9EdT9eDQpSXpzXFouhu8I07ek9KLFpuMs0yd/KKn+e9oKR98rfW69yVH0v/R
YHfv4onhbLQuH7xX94WR2gjnhXsdfK7t7oLcAayLOsBBCQ+fRhotF/4HZIf+
5g==
            "]]}, {
           Hue[0.9060679774997897, 0.6, 0.6], 
           Directive[
            PointSize[0.009166666666666668], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJw11A1QzGkcwPHtsEUdZTa9SVt6IdImW6hj/3V6cWg5Ec61ylJXs7uGaDEU
yXnp2nRRbaelF2fOKUshrVsqOZluDZu6OrubvaH6x6ZX6rr79Xvmmmmazzz/
/9N+n5d1jRNvEH7GYDAOwO/EX/jhiLtoau2xwNL1U+fxwIICcGH1UWFZn9eE
ZXXgnGdmka0VaHUveMqD1+337qNNdt005desywgpRbNDwAtEHXFHRGh+Mjiw
rHZTyEl02nnwyKyWrAPZ6Eo1+M0YqzE9Cq3vBvOW9BsLv/OcsLVtD03t3XUv
xGXMY8K8leAVN915a21xXJIInjnU6+7WgeOKXHBji39G/H4c16jAljc1zYnT
cX7GW/CqPu8k+Wns5cykaaolkHN3/RrSHwxu7ec2CeWkfxc4cvVB+61VpF8G
jlaNrcul8HlTDfhKDNdib+h87P8b/FdP6f2FKjR/Ri9NOc2obu197ov9y8DB
vrZO/Y4c7I8HF+nl5X+I0Pos8N2zcseETYux/w6YsXHP61mWftjfCS6fFuaR
EoaWWL2jqXvyK8uNbvi8IgC8mallesXhuEYAfuRQV6SgcH7GGfAL70+h/idx
nFMFflyYQ72rQQt0YLV0T+cv23E+2dT3NFU2MpJBR6DV/mDmVylmvu1o03Zw
wO/ZI7aBaPb3YJ9cQ+qK22i+ElxVsjTcOYuL/R3gBGZfunMFupJpoinjrjtm
xS5oPQcc0mXp+sYHbb0NbLjwSfq1wxLsPwHeWhtj7zaMllSA9aqSRxm3ArC/
DZxhMzqZ34rvayb10dTl9yLhqYtoxiLwdIVuWDwHzYkBH2JdDzd8i/MJjoF/
FQ0WDXSjZdfAZx79qWsbR6tbwA/GezpucdEmxgeaCp+tTN+3jPQvAEuvOTgY
Z5L+aLBnQ6PXzgPotKPg6PL844qXuN6VV8Fex0uMWgrH9c/BSVbLXffR/tg/
Di4odipURpH+ef2wfjyVA7cYxyUbwBYpOSFbLHBccRicfKN9d952tKYc3Nc3
tU0aRfqfgbVvtYyyAtI/Co5dFWbunoIWeAzAeiunyc2UpD8KzK93y3Ruxv+n
loITf14fsTib7H8J2OrtiSC7H0h/M/jFkSSv1RdJ/wh4d+h4AWXC3jS3QThv
VZfiippI/xqw1j011FGL1u8H98jkBmYq2voS2FNkW8/T4fnlNYE7JwWNW6ah
JYNgsfeGHcl5aIXLEJy30pLZT5VoTST4xMo6OTeYnP994IpmP/ahaLyPnIvg
bmV+6+GFi7D/MZgqvJGwfBta9mFivlO5o87r8H317GHo/ZEVw2hCm8LAqs6r
4Y5G/LzsPeBFDdFCnRTNl4PpV6frJ9vg82kN4Jx8Rab4Lul/D55vMUf3yofs
v8MITZm/4/30wZ7c/y/BA+IL/9SQ9eKJwHtrFnoGkPsryQcLug6nnqfRiofg
oYPDjYfIempo8GZl/FzrEjTD7iNNXT/6cnezJ7n/FNjvxsc7ARHk/ieBffXC
zCwyLssDn8uLZcY/Jf2/gdvtgwweO3Hc1AU+vXlLO4t8HjbrE025pgSNPnlO
+leAZe2+xdf0ZP8TwN3sCvPcFtJ/DqzZ+W/w58lk/2vB3PxMw9xysv9vwLW8
yPQpfFwPns0oTX3xonoHi1gSBE7zqfhG7EK+/4TgjdEJ7PMq0p8NnlWnNfu/
vwZcaWbT+WSQ9BvBncYjJy/L8H3B9DGa2qb0frhWSb7/loJzYlfWMyeR8x8H
7jFaNThHoU1nwQsSGwJZx9Ds2+BN1TOkTSl4f/gGsPZJRmy3HZf3H4H/B3Q=

            "]]}}}, {{}, {}}}, {
       DisplayFunction -> Identity, DisplayFunction -> Identity, 
        DisplayFunction -> Identity, AspectRatio -> NCache[
          Rational[1, 4], 0.25], Axes -> {False, False}, 
        AxesLabel -> {None, None}, AxesOrigin -> {3.8804832*^9, 0}, 
        DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
        FrameLabel -> {{None, None}, {None, None}}, 
        FrameTicks -> {{Automatic, Automatic}, {
           Charting`DateTicksFunction[
           Automatic, DateTicksFormat -> {Automatic}], 
           Charting`DateTicksFunction[
           Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}},
         GridLines -> {None, None}, GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.4]], 
        Method -> {
         "NoShowPlotTheme" -> Automatic, "AxisPadding" -> Scaled[0.02], 
          "DefaultBoundaryStyle" -> Automatic, 
          "DefaultGraphicsInteraction" -> {
           "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
            "Effects" -> {
             "Highlight" -> {"ratio" -> 2}, 
              "HighlightPoint" -> {"ratio" -> 2}, 
              "Droplines" -> {
               "freeformCursorMode" -> True, 
                "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
          "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.922526, 0.385626, 0.209179], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.528488, 0.470624, 0.701351], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.772079, 0.431554, 0.102387], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.363898, 0.618501, 0.782349], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[1, 0.75, 0], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.647624, 0.37816, 0.614037], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.571589, 0.586483, 0.], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.915, 0.3325, 0.2125], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[
             0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
             AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
          "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
          Scaled[0.05], "AllowMicroRanges" -> {True, False}, 
          "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
          "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), "CopiedValueFunction" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& )}}, 
        PlotRange -> {{3.8804832*^9, 3.8906784*^9}, {0, 22.705151}}, 
        PlotRangeClipping -> True, PlotRangePadding -> {{
           Scaled[0.02], 
           Scaled[0.02]}, {
           Scaled[0.02], 
           Scaled[0.05]}}, Ticks -> {{}, Automatic}}], 
      FormBox[
       FormBox[
        TemplateBox[{"\"Low\"", "\"High\""}, "LineLegend", 
         DisplayFunction -> (FormBox[
           StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                   "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxDividers -> {
                 "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
                GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False], TraditionalForm]& ), 
         InterpretationFunction :> (RowBox[{"LineLegend", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                  ",", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
              RowBox[{"{", 
                RowBox[{#, ",", #2}], "}"}], ",", 
              RowBox[{"LegendMarkers", "\[Rule]", 
                RowBox[{"{", 
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
              ",", 
              RowBox[{"Joined", "\[Rule]", 
                RowBox[{"{", 
                  RowBox[{"True", ",", "True"}], "}"}]}], ",", 
              RowBox[{"LabelStyle", "\[Rule]", 
                RowBox[{"{", "}"}]}], ",", 
              RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
         Editable -> True], TraditionalForm], TraditionalForm]},
     "Legended",
     DisplayFunction->(GridBox[{{
         TagBox[
          ItemBox[
           PaneBox[
            TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
            BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
          "SkipImageSizeLevel"]}, {
         ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
       GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
       AutoDelete -> False, GridBoxItemSize -> Automatic, 
       BaselinePosition -> {1, 1}]& ),
     Editable->True,
     InterpretationFunction->(RowBox[{"Legended", "[", 
        RowBox[{#, ",", 
          RowBox[{"Placed", "[", 
            RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]}], ",", 
   RowBox[{"\<\"SHIB-USD\"\>", "\[Rule]", 
    TemplateBox[{
      GraphicsBox[{{}, {{{}, {}, {
           Hue[0.67, 0.6, 0.6], 
           Directive[
            PointSize[0.009166666666666668], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJxV03+EFGEcx/FHKSI1l3KOaIp+KDKJlLI3W4mIxipKpXHZXEo3p5Q4GhFH
nR51pUSmi0jRiHU5pVFKlEziiLjp2tzt3W777HZ7u90lTfNX72GMl+/zfcbH
83yXtnVksjOEEGfj9983foyOQjHdU8p59TdRKrZ9i5av6KBEq+YxWN9KWydo
9wbtB3Q0RmuLxmGzlXaO0d41OnxOi1HaWFBk/i20PEoHklYDsVsfvu8dHBpO
8n+nrfkl2N1E+0foqCd2pf1bd66RT/I/pc1h2pn7A/Y2xO5bMdXV2zSS5Ldp
cYk2crH35LXOU6sLSf4hWs4pw8H6MvrVIVrvpq0ntPuF+/mzFRwZCuu1A7R5
kXYes9/7TIczK8X0rL6V2cy28ST/2tj9h1P71x0sJfn30fYFWj6ig8EK9lei
CutraGtvFf93z7PuP6CjT1yv/aHNVT9hJ0N7XXR4nxYfaWOatpdPwHL3BM//
HK3u0foH2mrQ7rIa8++iozM1nv9d2nxHOzXaWzLJ+7+TFqcnMS/GHdp+S8sq
HSyuw2pHnfe/k3XrNu2+pv0y+6OWBvNvb3D+T9LOTdp7yf6wyLpo/sX8ado+
TsvrdPCCVgVaXzjF+U/RbjvtX6WjZ7Q2QptN0zz/zbSXpcMrtBigjTxtz/sN
y4100Eary7TeT1tf//NfhI+BMg==
            "]]}, {
           Hue[0.9060679774997897, 0.6, 0.6], 
           Directive[
            PointSize[0.009166666666666668], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJxV0w9kFnEcx/FTikjdUiZKV/RHkUuklGf3VCJK59Eolc7yzKa0m/6J0YkY
NZ1aKZFrESk68VimdEoZJZcYEbvWk/Vsz/X89mzPnz2bdDui93HOy+d3dz73
/d3KprZUepYkSReic+YaHWpbLp/sCjNO5X2QiGzcpe23tBfSon4EVnbS+ina
uk27Hh2M0PKSUVhroM1W2rlJ+69o6RetLsrnkw1PPnYPDA7F/Xfk2b+ZuWfT
oo9WfkYea/nRmalm4/4LQ+TWthC5e4IOuiL3rKl1dNcNx/1f0NoQbc7/DTtb
Is/pWZtO7RqN+xuRD2bl9jPrc3H/q7SaoY1B2p5XgL3NtDhGK520/py2vtHu
XAEHKi0fobUrtPlMoK/zlfZnj/2bp4j7b4zcurxxv3yuEPc/RBuXI/ceTxze
dDSM+z+lvQFaSEW8T9lA6420dYl2H9PBlyKeL/+htXXjWG+maKdjHOv9R7T0
mVaneL+xeoL9D0wg9y7S4iGtfKL1Km2tKnH+++jgPC0/KHH/f6DNEu2sKMP+
3jL3/1nm6v0y/j+jn7ldpL1lFVjsqXD/tzPX79HWO9ot0MHSKv//3bR2mjbv
0M4b2s/TUv0k+ydp4yRt35rE9/FeMxc5WllcY/8EbbXQ7o0a5/+Sloe5Xqub
Yv/ttJOm/eu01EerWdpYMM3+W2mviRbXpjn/Xlr//p//ApWnVg4=
            "]]}}}, {{}, {}}}, {
       DisplayFunction -> Identity, DisplayFunction -> Identity, 
        DisplayFunction -> Identity, AspectRatio -> NCache[
          Rational[1, 4], 0.25], Axes -> {False, False}, 
        AxesLabel -> {None, None}, AxesOrigin -> {3.8804832*^9, 0}, 
        DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
        FrameLabel -> {{None, None}, {None, None}}, 
        FrameTicks -> {{Automatic, Automatic}, {
           Charting`DateTicksFunction[
           Automatic, DateTicksFormat -> {Automatic}], 
           Charting`DateTicksFunction[
           Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}},
         GridLines -> {None, None}, GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.4]], 
        Method -> {
         "NoShowPlotTheme" -> Automatic, "AxisPadding" -> Scaled[0.02], 
          "DefaultBoundaryStyle" -> Automatic, 
          "DefaultGraphicsInteraction" -> {
           "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
            "Effects" -> {
             "Highlight" -> {"ratio" -> 2}, 
              "HighlightPoint" -> {"ratio" -> 2}, 
              "Droplines" -> {
               "freeformCursorMode" -> True, 
                "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
          "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.922526, 0.385626, 0.209179], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.528488, 0.470624, 0.701351], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.772079, 0.431554, 0.102387], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.363898, 0.618501, 0.782349], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[1, 0.75, 0], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.647624, 0.37816, 0.614037], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.571589, 0.586483, 0.], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.915, 0.3325, 0.2125], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[
             0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
             AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
          "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
          Scaled[0.05], "AllowMicroRanges" -> {True, False}, 
          "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
          "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), "CopiedValueFunction" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& )}}, 
        PlotRange -> {{3.8804832*^9, 3.8906784*^9}, {0, 0.000016}}, 
        PlotRangeClipping -> True, PlotRangePadding -> {{
           Scaled[0.02], 
           Scaled[0.02]}, {
           Scaled[0.02], 
           Scaled[0.05]}}, Ticks -> {{}, Automatic}}], 
      FormBox[
       FormBox[
        TemplateBox[{"\"Low\"", "\"High\""}, "LineLegend", 
         DisplayFunction -> (FormBox[
           StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                   "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxDividers -> {
                 "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
                GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False], TraditionalForm]& ), 
         InterpretationFunction :> (RowBox[{"LineLegend", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                  ",", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
              RowBox[{"{", 
                RowBox[{#, ",", #2}], "}"}], ",", 
              RowBox[{"LegendMarkers", "\[Rule]", 
                RowBox[{"{", 
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
              ",", 
              RowBox[{"Joined", "\[Rule]", 
                RowBox[{"{", 
                  RowBox[{"True", ",", "True"}], "}"}]}], ",", 
              RowBox[{"LabelStyle", "\[Rule]", 
                RowBox[{"{", "}"}]}], ",", 
              RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
         Editable -> True], TraditionalForm], TraditionalForm]},
     "Legended",
     DisplayFunction->(GridBox[{{
         TagBox[
          ItemBox[
           PaneBox[
            TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
            BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
          "SkipImageSizeLevel"]}, {
         ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
       GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
       AutoDelete -> False, GridBoxItemSize -> Automatic, 
       BaselinePosition -> {1, 1}]& ),
     Editable->True,
     InterpretationFunction->(RowBox[{"Legended", "[", 
        RowBox[{#, ",", 
          RowBox[{"Placed", "[", 
            RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]}], ",", 
   RowBox[{"\<\"WTRX-USD\"\>", "\[Rule]", 
    TemplateBox[{
      GraphicsBox[{{}, {{{}, {}, {
           Hue[0.67, 0.6, 0.6], 
           Directive[
            PointSize[0.009166666666666668], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJxV1HtUjHkYwPFJxyLKTFu6YBsly1Am41qoty1HB5kdkUuaKapNlxlnbayo
kJUuGtqiLbND1CbMRLuTVhosWzhtZe0mVNSk9LZGVqLL7uN5/jLnzJnzOb95
532/5/n9ZkqoXBI2gsPh7IT3h094CeVdLJNQc/uAS1yJJ1iWCz6sq63a3IdW
3gRPqh3cZsE9/8H6HnDhPocH2hZcN9q8YBlBwAKbxEdovjdYbW17qeIBWhwN
Nhlcc87nITopB6xUOR5KyUNr9eDXgdVBdgHo1hfgk3555+K3ornW3SxTZWZ8
0pGB9vIEf2GQ3p35N1oRCbaYU1O9oRGtzgKH+x+/9VsHuq4S7GXZ1zPVEZ+f
0wk2lBW159P3hZYs3O9UeduqBOpfDC7JElntvFqM/eHgTtfDlx23ncN+JThS
sWnTrmC0sQLcHGjwNkip3wB+9aeTeWwU9Y/vYRnuSFGhjJ4/aRH4mjBXYJuN
z6PdAj40L9s3xOYC9meAM2OTfX3zL2J/OfinW60hTQs02P8MnHvVJPzaAbRi
3D8ss8r1tt79CFo9H+xzlicaWIzX18nAJbvfnZwmQnPSwDUGzzMt19DCn8FD
4aEV3BK8XtYCTq3Wpi6Yg1aOecky8/neQYvi0XoRuF5z4cfhy3i9cTN41+i2
ou1yND8FLBlf32kRit8XXwKPMK4utgxDJz0Gp3aYzOrtRms/MbKMS7bOKX+C
FvuFYPOBJaX+2bjO3QRuzeedrbxO/QfBTXdWDH+eSP0acHegu4PKGa9XPwTH
u33/aY8AXWf6imXuJS6v2jsZzXEFh617qfCYixauB9t2+fYkWKNl+8FjpdJu
iRNaeR7sae+fmydH6/8CP8mpHhlhxPsbOb2w/9e3RbuPwHX+TLBcIAmJnoIW
rwWHqqOkXrPRSYngGUGZN95MR2uLwdO3Po+JjqP+++AGE79GXRaaOwzmO8fF
yHVor+mvWeY0Y6byvohWSMDpfomzD44qxf49YOHy92Wpw9RfCF5T6qZxssB1
Tj046GJC9DEHtHAAPDtm4SzzQep3/hfm49Hcruuk/tXgdtcbVoYG6v8WHDHN
tnbePbSxADwhuXfpkQ7qrwWncANrm+3w98X94GR1wVqXLup3fMMylTd76rS2
uK5dCRaYuI2x6aX+OPBG3rz65wXUfwqs2mtgdqdS/11w5JCLSX8R9b8BWx1v
s05R0fwd+limjBNTsiGC+v3Ap4ONkf7BNP8d4PTH9x9MTsPzJlSBJ4V8ySvK
wvMoqwZnBJuL7behlb1gFRu+zNMe97d+0luW0WuOTh0dSP3LwI/3uRvqM6h/
O/is1Y54vy00/zxwl/TYHauvqf8W+Ez00bKJe2n+L8FRSQ3iAiX12/WzzKPC
XUEBadTvAzaL0OXUKKg/tv+j/ag4AWZmbLxicwJ71DfAKyW5oRb76fyz4EOt
5el59tRv845lNKUrAuTmtP8Z8O2qP8oVfJp/FLhY9FZprKTznw1ue7pkVA6d
B30V+Glwru6FO/V3gU2ZpHGTPajf6j3L3LzynZ39aupfCl7TPbTMI5b6vwKL
0n9lytZR/zGwwGNI7Sqh/qtgzQle82fJ1P8cHFD80PSCnvp5AzAP2X/fxDZR
vwd4pyVv2LeO5h8G1nt33FHTel0muMW+UXD9GfVXgPubW9SV76m/HSwt+31s
l5H6LQZZxq0hrWmI/j+UC8ETTjWa/ZBD/aHguX3OE8f/Qv3p4D0JtlMW0/34
OvDmwmnXJ9J5ET8FP3piukNaq/X8HzddPes=
            "]]}, {
           Hue[0.9060679774997897, 0.6, 0.6], 
           Directive[
            PointSize[0.009166666666666668], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJxV1HlQE2ccxvFwiQpyVSaCFBHBgi1ORFBRICwI03KMqY6W1oNwqRCB4EFr
pYIURAQkUIscYrGkagEhMiLKYBuh1lgtDSqOdKwEPBBdNOIBCtI+/t6/mplM
5jPv7rv7zfvuzo5JWRlvKBAIvsT33S8+opRBnjPoTbqzxL1eDEvLYaVP0/AV
KVnRAReemZfHf0tWD8GVl6JFGTlkvfARzzlFBZrkCslOgXB0UkGV3oYs2QJb
2N4dj3AjZ5bCjp8ebT03WvfOKjVsXFi+/LyOrHsEV2VfEwZ2kq1sH/PcBc2V
ikg2HiCGa6uiE8Pep/nkCfD9uP41nDm5+jvYWKM99W0oWXseFgZbppuvIQse
wr//OMjHyckiG57n3NcVtb9k9yf1hUubzFPr8+l6io1wQ7fjq0ADsloBj3b8
lWG5gaxvhVtH5JdTj7P++3Cu1zx50zTWbznEc2Prb1WcbGP9PvBP8co7q3xO
Un8s/CaqIdhM20D9hbApnzh8sFtF/WfhULNDq2+ZkwP64fIs785jc8hy8yc8
l6VxjmgzIlcvgusdvohb1ttI/VJ4sOx5wTeXaX5BPizb6GGifEvjomY48ZdQ
/zQhnS/thXf4+4YprMmKKU+xnnYzW3tmkdULYe/Yru1pnmT9eviUbrfaiF3f
aR883+fJQYubNL+kCW6Jyejx20njmbfhD/4p1ZhsIqsm6XluZtZdz+REsk4E
T0TtuPcxG7daC1dt4sMWObL+HNh9smPvHW/W3wjXtkw6E6pi/T3w/sjfVB1l
ZK3RM57Tr3xUklpAFsyHp76KGjj2J1kUCSe+3lPnu4f1Z8HO+V7PLPSsvx5e
WDhXGCs9Rf034cm1IY2T3Mh6wTDPJSTnqOzDWP+HcHa0uqQukixZDZtVlEba
FbL+DFjpcHWumt2v6me40IU7aziV5tNdh1ON/MUFVk3UPwFvLh5KF3uTA9ye
89zijmmj4yKyfCVcU98bHi4kV6fDohvROWv9ydpj8IZqpdqwjCzogldxwd2N
28miMfj8jD/y0mzJUtcXPOe114erdCArVsDaGPeSRmOyeif8xMV5PL+a9dfA
285dkOSy85064eSIVo9iM7JkFHYJnHPr7AQdn+n8kucEDXGXQpxoXBUOjzvM
8uicQdalwUOZj/fb9dHxVkfhwzUHDtQVkwOuwLd3v467KCfLX8I+N56239xC
rp71iufC0rYY9+8gaz+BZw+8zTgsIgu2w1knxgTKRWTRETg4xNQlupeeD6kG
rugq2rvqAVkxDNsscC15GM/2v8MInsfOPL/TRaw/BBa1tvmsqyM7pcJSR8/7
QRKypBIeCxjuPGrO+i/C9kqd+71Qsuop3G5j6Va5la2/3SjPiRVt29yCWP/y
0f/NF5AMG8i6G6YksP4yuKZkqUFENutvhxfs6kn7257183DWxb6rjQ/Y/he+
xvvxs52G0cfZ/udgryOT+30Ps/0vg7Vzc1csLWb7/3tYvFV2LSmP9f8KLy2W
1pY3s+d/EB65WiLwZnaa/obn1sROkcXybP/7w6a73gva6sn6N8N+WTPd17qw
/hJYI164z5Idr2uDJ7oWJ9hPZ/0DsHZaRM+gKeu3HsP7JN3F1Y/9n/Jl8LPN
d/c1j7LnPx7WHJJc6DNh/UVwdoa110Ybtv6tsOtXQfa2S9j634OTTswYSAkk
Sy3GeS7fPrxDb01WLIE9TL8+kdTB+mPg6Z/L3JqFbP0L4I9aTtvbjLD+Fthv
d8r1H96y/j44+IXs8fF/VeL/AHHOMEo=
            "]]}}}, {{}, {}}}, {
       DisplayFunction -> Identity, DisplayFunction -> Identity, 
        DisplayFunction -> Identity, AspectRatio -> NCache[
          Rational[1, 4], 0.25], Axes -> {False, False}, 
        AxesLabel -> {None, None}, 
        AxesOrigin -> {3.8804832*^9, 0.04902344444444478}, DisplayFunction :> 
        Identity, Frame -> {{True, True}, {True, True}}, 
        FrameLabel -> {{None, None}, {None, None}}, 
        FrameTicks -> {{Automatic, Automatic}, {
           Charting`DateTicksFunction[
           Automatic, DateTicksFormat -> {Automatic}], 
           Charting`DateTicksFunction[
           Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}},
         GridLines -> {None, None}, GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.4]], 
        Method -> {
         "NoShowPlotTheme" -> Automatic, "AxisPadding" -> Scaled[0.02], 
          "DefaultBoundaryStyle" -> Automatic, 
          "DefaultGraphicsInteraction" -> {
           "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
            "Effects" -> {
             "Highlight" -> {"ratio" -> 2}, 
              "HighlightPoint" -> {"ratio" -> 2}, 
              "Droplines" -> {
               "freeformCursorMode" -> True, 
                "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
          "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.922526, 0.385626, 0.209179], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.528488, 0.470624, 0.701351], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.772079, 0.431554, 0.102387], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.363898, 0.618501, 0.782349], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[1, 0.75, 0], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.647624, 0.37816, 0.614037], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.571589, 0.586483, 0.], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.915, 0.3325, 0.2125], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[
             0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
             AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
          "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
          Scaled[0.05], "AllowMicroRanges" -> {True, False}, 
          "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
          "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), "CopiedValueFunction" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& )}}, 
        PlotRange -> {{3.8804832*^9, 3.8906784*^9}, {0.04902344444444478, 
         0.072632}}, PlotRangeClipping -> True, PlotRangePadding -> {{
           Scaled[0.02], 
           Scaled[0.02]}, {
           Scaled[0.05], 
           Scaled[0.05]}}, Ticks -> {{}, Automatic}}], 
      FormBox[
       FormBox[
        TemplateBox[{"\"Low\"", "\"High\""}, "LineLegend", 
         DisplayFunction -> (FormBox[
           StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                   "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxDividers -> {
                 "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
                GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False], TraditionalForm]& ), 
         InterpretationFunction :> (RowBox[{"LineLegend", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                  ",", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
              RowBox[{"{", 
                RowBox[{#, ",", #2}], "}"}], ",", 
              RowBox[{"LegendMarkers", "\[Rule]", 
                RowBox[{"{", 
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
              ",", 
              RowBox[{"Joined", "\[Rule]", 
                RowBox[{"{", 
                  RowBox[{"True", ",", "True"}], "}"}]}], ",", 
              RowBox[{"LabelStyle", "\[Rule]", 
                RowBox[{"{", "}"}]}], ",", 
              RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
         Editable -> True], TraditionalForm], TraditionalForm]},
     "Legended",
     DisplayFunction->(GridBox[{{
         TagBox[
          ItemBox[
           PaneBox[
            TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
            BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
          "SkipImageSizeLevel"]}, {
         ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
       GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
       AutoDelete -> False, GridBoxItemSize -> Automatic, 
       BaselinePosition -> {1, 1}]& ),
     Editable->True,
     InterpretationFunction->(RowBox[{"Legended", "[", 
        RowBox[{#, ",", 
          RowBox[{"Placed", "[", 
            RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]}], ",", 
   RowBox[{"\<\"BUSD-USD\"\>", "\[Rule]", 
    TemplateBox[{
      GraphicsBox[{{}, {{{}, {}, {
           Hue[0.67, 0.6, 0.6], 
           Directive[
            PointSize[0.009166666666666668], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJxV1HtQlFUYBvDFNS4pikqiYrLijQmqRZQiVPZjVcBwWBeVmxrgIDiJrqaC
aLkiizJoLDAgCEOgRIQYG8VgQriYJuWl5ZJp3haVVPjQdbkssGI98Z5/2Jmd
nd+8e857nu+c882O3iGPGSMQCBLw/f8XH/GOZzzX1GoUhgy+8IEj8+GHY3Qu
G4dGrP4FnuToVlhKdW03rGpx8L1hHrHBoZPnyh8X3pKSRb6wjSz46k0aL9sG
K5btqZSTlbnwsq4Z71qRNVp43YPBFTZkfSfc85k0eC/Z7q0unjuycO3ltWSJ
DzyQJnxqGh6xYis8L9yYGP56xMXZcGtK94LNr0as+xm2UCUNWZMFT+GDQZXB
HbRe8WSe59oK65vGUj1yCdze4v5kOtXVW2CL+DNhsVTXquHi6Zes9pIN52H/
xuCmHFqfqIMf9fxkE7t5LlY5rjqGnp/SC3a/vrsqm+XfDB+ZoZr7A8t/HA64
7bz1A5b/HFzh9madC8v/EE6+UptgS1aMf85zx1Szdw2Riz3hS9JpPsdp/bpI
+KK5YkM5y58OFzi2TskdoPw18OYVtmVR5MgH8P0rzTPDaL1qmxc8dyrKvTOc
5tN6wF55q5VRVDdshN1W2TRWsPxH4c7Ea5IY6ierhn9aZyfcSOOVd+GqE2XW
Cpbf0sBzfpk1qXKq68VwXU1g6iOa3y4CdmkZLkym+SQqOGjDlyEilr8KXtgh
lS1m+W/D4atys2VknfAlz3WpC9otWf734LSkxm+8aH5xKLwmyOmQD9v/ZLh0
W+aPjnS+1JXw4VP7BOls/2/C8d+dfHKU7b/AiOc7JWk4gCxyhbOuHvS/QONl
6+CzQV7z01n+g3B8aHCYfT/l/xaOzftbbkXr0bfC6fHy5lD6v91rWBfVUC8g
S1x6eM4hoK75CvVTyOE5sVFB3uTiA/Biw+kZ/Wz/y+DGR3fqLGk9gmbYvrnq
7Fd0X8RmuNfT01tO9ch5vTz3hjbR0pblD4IPhY+fVUbW7oONlnmDE2i84TSc
ct6/xI3lvwFbi2rSsqm/bKB31PNQOvfxXPPc70vvkjWB8D3fEGcZWb8Xlnwc
ojlO59GuBD5jdU1axvb/Kjywc5Hfeuqv6INvZqw2zmH336l/1P7oAuCMctm9
DWz/d8N9W9oO5JDFRfAdz2PJ+peUvwk2Zf0a9/aflN8IJ7xv+m2NwDCSf6aJ
57x3lXqIjZR/JXxiV8Ot/TRetBMuf+QuzCHLCmDrPZm+YZRHedk0ar81L+DE
Te94/tNH+acP8NzJrkUtcnb+l8OHwkr8TT2Ufzv8eYRmrYOB8ufBFlMH+6Q8
5b8Ip1Zu7yvspfw8nJs0NcXYQPkdBnlOHxjoEE39xBw84Nh9rt1E+T+FDzwf
a66ifuoc+K8G5aZzZO0F2L3m6wlGul+GZ7C8LX+/P+UT2Q/xnLa6pdSe+suW
wZM9zEtWsvdfHDxtnPRxL/XXZMH2++OcXGm8vh6O7NA532H5n8Am4axpEqpL
Jpl5LkeZlzKO6gpvuP664wIVuTjGPOq+6DLg05l/uBbRegXn4YrltyN+Z/f/
MfxRhCRuKbv/E17xXG1tRJaQ7qf6Q3jiFw8FQ+z8R8Ntn1Rp9Oz8H4PL/IKX
5v9L+WvhaG3WmVD2/muHi+Z73F+P/v8BGPCQww==
            "]]}, {
           Hue[0.9060679774997897, 0.6, 0.6], 
           Directive[
            PointSize[0.009166666666666668], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJxV1X1Q03UcB/DJQKVDHEMFzQpMTwXFlYCaiPtBCIrFwAQEkQkCjnkycEKa
gGg8eOJJCCqQgFfxcPkwnkpJYgcpGmVLkaNLcxoW4G8yHlQevd75+f6z3e12
r/vs+/3t/ft8vr85RiUExZgJBIIUvP//xEuS0MtzD6xW6YeExvWwvAg+9tmy
1B6z185rhT0/NdzJorrWAEd6WWTbmb+20a6P53xsl0TZUN3BC87QbLkwj+qy
PXBS9ke7/qH9Dp+GFbmdgfeortHCXcvNolNpvb4Pnh1SmBpCddHspzz3yc3C
g3PI0vWwQpCQYW7x2ioFvCrQf58z1ctPwaHCgqx5VNc1wcP2T4rO0P6CHlj8
MnRMR3WJmOe5Iif7wg5Lyu8BO/icu5pN++XFwqWLS+ssyNo8uKnaL7OG1hsb
4agY18EDZIcnsNDr6aN2ln+mgefeD/Pdaks+vAZ2d7z4Xg/LHw07N1vdyCHr
T8A/Kxepz7D8V+AiP4X7Sfr90sdw1WTnxwVUV1k947mFZ+Njl9P1y93h07oI
cRzLL4efWYr/fMDyH4etJUNvTdB6SQM806/lx3Nk+UPY/JVx6CF9P8+yn+fW
+QV84c3yr4TTZXZLC1j+CDjrTePoTqo75MANld1fdtF6WS3cI7Zuuk4+fB+e
6nLS7V2yZqqR5+qFl5xjWX6J0bT/4bDe141/yfqfCddFpjQOsfyXYa5kvmcv
6/8f8P78iy6VZJ1wgOeS3bvL5pIFLvDc/FPHwln/Q+Frt7MmVrL5PwJ/7Z6Y
1MzyXxgwOQ/aTliqDWtQko2CQZ570v9XYDTZwRl229G40Yos2wp/LspbcZ7N
fzq8u2bWrRCyphqOCFBHjEyh/Hfh5BZ/VR9dX/QKnvi7KT6Gvi9dMoT7k7Dr
7VGqq4LgYr6scgq5/BD8S11+8CGyrgKOl8xo9WX5f4c70pSLN9F+knFY2eHt
2sjyLxrmucsafZqW5Q+Apa5D3cUs/wH42/2Pk66x/F/B19WOwems/7fhmDWW
36xg8z8Cn7VvH/Zn87/gOc8d1Q8YIlj/N8MWc7QFGez8J8PjIcHFBbS/6Dzc
5vdiuhub/3Z4RFm7YR3r/3M4tdfwmw/L/84LntshjvPpYP3fCO/bJN3cQv0W
qOF4e88FFWz+S+ELP3k4K6guvwnnb2tqNYgo/yAszR4dNFtG+ee/xHkrltoc
t6f8G2B/i9lbm8WUPxFe+nSV7V3aT1YCZ6Zczeln+a/DbeLOG130vNH0w5ei
Bkpa3qD8c0d4rqRtpySd1os+hC+Hm98Ym0r598JOwmn1avb8Ozticr3ylhGT
86Hj4aqgumlhNF8Cu1GTeZVwcGS6uGwt1eVK2CNze3UcOa8Q3mWWdmIhWdsM
7+HF98Lpfht7R03mz2HWGOYjwvbOPHb+PeHq+CNV4wLKvxvOubKm0IqsyYcb
VNsyfyXrr8HtmxWTy+l6on9htfeW5DGy1GYcz0fX4u25ZNVa2ElVO+M+uTxm
3OT3607CgzU/SDey/I1wn4fTq/7plL8b/uBW8JktdD/k1hM8tzqjt34vm//V
cE9WBT/M/v+i4M7ECZmC/f/lwt4hC2STLP/3cECvfLKM5X8Ef9dct+4g/B9L
VCWo
            "]]}}}, {{}, {}}}, {
       DisplayFunction -> Identity, DisplayFunction -> Identity, 
        DisplayFunction -> Identity, AspectRatio -> NCache[
          Rational[1, 4], 0.25], Axes -> {False, False}, 
        AxesLabel -> {None, None}, 
        AxesOrigin -> {3.8804832*^9, 0.9910208888888914}, DisplayFunction :> 
        Identity, Frame -> {{True, True}, {True, True}}, 
        FrameLabel -> {{None, None}, {None, None}}, 
        FrameTicks -> {{Automatic, Automatic}, {
           Charting`DateTicksFunction[
           Automatic, DateTicksFormat -> {Automatic}], 
           Charting`DateTicksFunction[
           Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}},
         GridLines -> {None, None}, GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.4]], 
        Method -> {
         "NoShowPlotTheme" -> Automatic, "AxisPadding" -> Scaled[0.02], 
          "DefaultBoundaryStyle" -> Automatic, 
          "DefaultGraphicsInteraction" -> {
           "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
            "Effects" -> {
             "Highlight" -> {"ratio" -> 2}, 
              "HighlightPoint" -> {"ratio" -> 2}, 
              "Droplines" -> {
               "freeformCursorMode" -> True, 
                "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
          "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.922526, 0.385626, 0.209179], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.528488, 0.470624, 0.701351], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.772079, 0.431554, 0.102387], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.363898, 0.618501, 0.782349], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[1, 0.75, 0], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.647624, 0.37816, 0.614037], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.571589, 0.586483, 0.], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.915, 0.3325, 0.2125], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[
             0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
             AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
          "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
          Scaled[0.05], "AllowMicroRanges" -> {True, False}, 
          "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
          "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), "CopiedValueFunction" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& )}}, 
        PlotRange -> {{3.8804832*^9, 3.8906784*^9}, {0.9910208888888914, 
         1.010745}}, PlotRangeClipping -> True, PlotRangePadding -> {{
           Scaled[0.02], 
           Scaled[0.02]}, {
           Scaled[0.05], 
           Scaled[0.05]}}, Ticks -> {{}, Automatic}}], 
      FormBox[
       FormBox[
        TemplateBox[{"\"Low\"", "\"High\""}, "LineLegend", 
         DisplayFunction -> (FormBox[
           StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                   "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxDividers -> {
                 "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
                GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False], TraditionalForm]& ), 
         InterpretationFunction :> (RowBox[{"LineLegend", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                  ",", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
              RowBox[{"{", 
                RowBox[{#, ",", #2}], "}"}], ",", 
              RowBox[{"LegendMarkers", "\[Rule]", 
                RowBox[{"{", 
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
              ",", 
              RowBox[{"Joined", "\[Rule]", 
                RowBox[{"{", 
                  RowBox[{"True", ",", "True"}], "}"}]}], ",", 
              RowBox[{"LabelStyle", "\[Rule]", 
                RowBox[{"{", "}"}]}], ",", 
              RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
         Editable -> True], TraditionalForm], TraditionalForm]},
     "Legended",
     DisplayFunction->(GridBox[{{
         TagBox[
          ItemBox[
           PaneBox[
            TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
            BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
          "SkipImageSizeLevel"]}, {
         ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
       GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
       AutoDelete -> False, GridBoxItemSize -> Automatic, 
       BaselinePosition -> {1, 1}]& ),
     Editable->True,
     InterpretationFunction->(RowBox[{"Legended", "[", 
        RowBox[{#, ",", 
          RowBox[{"Placed", "[", 
            RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]}], ",", 
   RowBox[{"\<\"TRX-USD\"\>", "\[Rule]", 
    TemplateBox[{
      GraphicsBox[{{}, {{{}, {}, {
           Hue[0.67, 0.6, 0.6], 
           Directive[
            PointSize[0.009166666666666668], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJxV1H9QzHkcx/G9hPGj5EdInK1IPyY2FKVf34TLjzTdRUOdVVeu0dWGiSiW
K6JilSilNnWOShZbCNdKdCXpLh01lS2OdN+0UuwJ3av356/bmZ2dx3z3s599
fj+fz9ckMMInWEcgEOzEe+gTL1HEa56LDigXLwordIXFGXBzUoOBr5Ysuwtv
a7GcUTRIVnXDL/2PFNb8RtZM6eK5jUsv3E4oJQvdYe2XEd2NVWTvMDjHcZ2l
cwNZehJ+mjk1JfUwWaGCD01uqvvwLVndBTduSI+P8iIbGP7Dc8IM/TPZO8lu
rrDdY4tZGY1kSSgclD5RWd1OlqfCWS093pM6yfW34aUS//tr9IqGLOiEM1YV
lGaq6bpoAs9z6x959hhvYv1O8NTY4aH3z16g/hA426w3YGVAAfXL4PHfJX+v
503WlMEPgvO27z3C+v+G+wzzjRLPsf5x3TxXsMzDNnoYzS91gFtsqr+6eZqs
CIJXXpetkJhdpP5k+Oetbzr33Sim/uuwmep1wK2Zl6i/A+6zt1/iE0uWjH3D
c55npOYVB8lye7jI96Z5vh2NrxfDypmWpnetyIJE2Cz+iqa/hCwqgTsXyNuS
TtN48TN4he5z9Z+2ZNmoHvyfw65HHLeTVQtg0wLNll1XabwmAC6+GV2wNJws
TIBtzPqza0Lp+95X4MbiUaHJHFnaMjS+zXEwqomsGKHB/LmlenlCBfWLYPOk
kOABGV032AiPHJvicvEs64+HT7W7trrtZ/2XYJ2yeVtKrWm8vAl22LNF6etJ
rh/2lufq2jd0b55HFsyF7V1SP79bSBb5wSaOukd1p5HFB+A9ticmdluRZUXw
tWUZevOryaq/4PCwqPyPdTS/RtDLc5qJI+t7BshCa9h/uG19CZvP2xeuaKuU
Za0mS/fBUZHGemobsuIC7BI1xcJSwfob4LaaCWeCJ1+m/i/wL/PvTdedQXaz
eIf1yF9b2DmOLPGBneRhNYZtZHkMXNqbMlj9jFx/Dva1Tdtb0UQW/AFLMhqC
bS+TRQPwqUStV+1usnh2H/Znc8U7H3Zdtha+0dFxvsWDrIqGc9fo5+wwJWvy
4CZudnGQP1lYB3+tMi3fm0D21sIGG3cvbEwlS037ee6kssN4dA5ZsRpOsPpk
1FZEVkfBryLcTXT0WX8uLMramp77lu6P2wP45QlpetwY1t8Pe//qVDae3S/5
zPc8Zx3X6FfRzNbfE14n7bGPyGLrvwNWOF+d5baGzpsoG348xuVhdSKdR/Hv
sPsuZWTlBrKsFzZxal4caEP7WzX9A56Xx0dp7VLo9zTL4S6Taa0cTxZGwv0h
j2PSYtj6Z8KbYp36Wi+y9b8H50ucRz/JY+vfA8+oGpe2vJatv5EWzyf5wYjN
rWQDD/hRXsfg0fOsPxwuWaSt+KGALEmHIwK/8TIPpx55Bbwz3sXv/kF2/nk4
K8nq7nVj1j/lX547MXluocKI7X8OtlQWDVS5s/2/FT4eKwu+U8nOfxpce2XO
/ocObP+Xw11XhxVbh7D+13DLe+euS+tZ/6SPPPdi1Xm15gDrd4EdAm1chqtY
/4/wg6Htncv6U+CGuO45Qex+qW/BdyKNFtnVs/5XsG9cJgpY//gBnkvO8Lit
bmD9S+DAkJwqi0fs/AfDyzTlafxTtv7HYIVOzLXo56y/DDZ6qfvTNi3rfzHw
v/nE+p/wfz1aslaOYOd/Mfzig/3npmOsPxD2CjTwc1Cy/iT4Ye3Qi/Vfg/OE
u2L2PGH97bDymOEn+0qF63/sNEl/
            "]]}, {
           Hue[0.9060679774997897, 0.6, 0.6], 
           Directive[
            PointSize[0.009166666666666668], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJxV1H8w1Hkcx/GNw+Ww6PwqI1GopC0lKj++Boe6bHVdP3BtnR/VhXWpraaL
3DhcbW1LlKZO467RJbu5UVru/ChzFae9LqqhYqeG9JWliDjdy/vz1+3Mzs5j
vvv9fj7P2fdnZ21PWRdvIBAIZHhPfuIlSnnJc1xoqyotoCwQlpyBp+za9XjL
VrLiJqx0WVymk5Pr+uARx03HFUfIertengtd5RTVJCQ7B8NPitKiXezI4t3w
3JgTDUMe5IwC+Lhrm269gKyugw9eLLRvent50p29cK+zyiRPR7a0ecVzG7I7
zJZ1koMC4XY77ScyL7pfuhNePKU2TOlMLs6DPczuLimKIWt/h6+1ey15uJMs
6IFzIl0Thg+QRdY8zz2v+XBimhvrXwnfL9s9c7CA1lMkwJ43fmxMMSXXKeCe
bKuGEjlZr4H/rNLpSjtY/wt4lbL7fYAj6xf28dwKx9hfql+xfj/Ycna/413x
Fer/GjZfahqRMFRO/XK4ecA0JOqumvqr4HVH8pI6LchBOthAszDx2nyy1Ow1
7vfZ62TzQUX9PrBVyrn0ap6slcDBlfW5PQ/p+YKjcNsHv+ZCO7pfVAnL3TN9
he5kyTO4fdrsa9UmZMXU/v+tV+cNS2MXudb4k/Wx8FGHrj7uY7JzDuxjGKNY
0ETriyvgAlWT/qdkup7RAed/fqOhOoasNtbznG3yaHjkQXKnCB5rWRip3cr6
o+EFXFhQlivrz4L3JLrZtyxl/SpY4LT2guYGufgxPFpS6v1OQdYaDvDcMFdg
NC2dLPCCTx4eWy5tYf2bYOvc4CYNuy7JhJ3WSJZfaWf9ZbDRsyXf7au7Sv1t
cJXKsPuYB1kvGMR5sC/zbd3C+ufDrSZKmUU8WbwBtt6hvvSmlPWnwzJrq4lQ
Leu/BBfMOr43dQY9r/MfeE+8OEnqUkH9E/BGF/G/34eTgzze8FzgSfeIh6vJ
0nVwyGimrbWIXHwIbjWqaVavJWsvwkm+nubjpWTB3/CMR/PqdVKyaAxeZWSz
ofY+rS+Z85bnDstnc1UGdF0RBY9mL/Av6mX9B+D91ytCEs+w/hL4fOXkASM7
t8BpsSP1ow/I4hH42/WGf3V3kDNchnjONXFb1Ipxsno1fK/9ER8+xPr3wV+a
bTQJYt+3vACb5V3KXBtBDmqCbRTDgXVbyNIheJFxW+q4mFw8c5jncs+uvyNg
1kbAEVlXs5xNyII0eLOD/NBXA+z3Pw8Phlh2d31E50NyG04WPdiWFU1WDMJx
Lwrr7U+y+Xd8x3MTcceEvxWy/jA4jNOPDJez/lS4XGPRmh/H+s/CJRsN83+Y
zvob4ZVPn1/vYdfV/bB86/45d/awfocRnI/I/cGqQNYfArf4LLvo7sn6kyet
a2yw9GP9p+GoaNfMVCnrb4AdlHm50Uasn4e1bfX1T2+x+bcb5bmMB25rXstY
PwfPqRBWeJ5m8/8NvEzcee4QO4+KU/By4ziVjJ2PulpY8e7XU1Nr2fl/CdP4
adj8f/qe524HeucIeTb/AbD3k1c//8H2n7ED/sxg8h+L9Sth82cNmoHX7PzX
wEXGoW8Etqy/G7bNOZ8fYc76rcaw37TCW5utWP8KmBNWJtmz3uJ42H/eRH+O
Kes/Aaeke01fzNYTaOBG/4KANI4seg67XXbpiPuCzb/FOObfNzxnkD1P4QvL
EjK7Ym6y/u1wTPnh3cqZ7Pc/Bvv1zfVzH2b91+Gj01ff1LP9ibvgRnl08z3s
/z+N0i/S
            "]]}}}, {{}, {}}}, {
       DisplayFunction -> Identity, DisplayFunction -> Identity, 
        DisplayFunction -> Identity, AspectRatio -> NCache[
          Rational[1, 4], 0.25], Axes -> {False, False}, 
        AxesLabel -> {None, None}, 
        AxesOrigin -> {3.8804832*^9, 0.048802166666667014`}, DisplayFunction :> 
        Identity, Frame -> {{True, True}, {True, True}}, 
        FrameLabel -> {{None, None}, {None, None}}, 
        FrameTicks -> {{Automatic, Automatic}, {
           Charting`DateTicksFunction[
           Automatic, DateTicksFormat -> {Automatic}], 
           Charting`DateTicksFunction[
           Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}},
         GridLines -> {None, None}, GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.4]], 
        Method -> {
         "NoShowPlotTheme" -> Automatic, "AxisPadding" -> Scaled[0.02], 
          "DefaultBoundaryStyle" -> Automatic, 
          "DefaultGraphicsInteraction" -> {
           "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
            "Effects" -> {
             "Highlight" -> {"ratio" -> 2}, 
              "HighlightPoint" -> {"ratio" -> 2}, 
              "Droplines" -> {
               "freeformCursorMode" -> True, 
                "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
          "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.922526, 0.385626, 0.209179], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.528488, 0.470624, 0.701351], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.772079, 0.431554, 0.102387], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.363898, 0.618501, 0.782349], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[1, 0.75, 0], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.647624, 0.37816, 0.614037], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.571589, 0.586483, 0.], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.915, 0.3325, 0.2125], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[
             0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
             AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
          "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
          Scaled[0.05], "AllowMicroRanges" -> {True, False}, 
          "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
          "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), "CopiedValueFunction" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& )}}, 
        PlotRange -> {{3.8804832*^9, 3.8906784*^9}, {0.048802166666667014`, 
         0.072891}}, PlotRangeClipping -> True, PlotRangePadding -> {{
           Scaled[0.02], 
           Scaled[0.02]}, {
           Scaled[0.05], 
           Scaled[0.05]}}, Ticks -> {{}, Automatic}}], 
      FormBox[
       FormBox[
        TemplateBox[{"\"Low\"", "\"High\""}, "LineLegend", 
         DisplayFunction -> (FormBox[
           StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                   "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxDividers -> {
                 "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
                GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False], TraditionalForm]& ), 
         InterpretationFunction :> (RowBox[{"LineLegend", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                  ",", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
              RowBox[{"{", 
                RowBox[{#, ",", #2}], "}"}], ",", 
              RowBox[{"LegendMarkers", "\[Rule]", 
                RowBox[{"{", 
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
              ",", 
              RowBox[{"Joined", "\[Rule]", 
                RowBox[{"{", 
                  RowBox[{"True", ",", "True"}], "}"}]}], ",", 
              RowBox[{"LabelStyle", "\[Rule]", 
                RowBox[{"{", "}"}]}], ",", 
              RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
         Editable -> True], TraditionalForm], TraditionalForm]},
     "Legended",
     DisplayFunction->(GridBox[{{
         TagBox[
          ItemBox[
           PaneBox[
            TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
            BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
          "SkipImageSizeLevel"]}, {
         ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
       GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
       AutoDelete -> False, GridBoxItemSize -> Automatic, 
       BaselinePosition -> {1, 1}]& ),
     Editable->True,
     InterpretationFunction->(RowBox[{"Legended", "[", 
        RowBox[{#, ",", 
          RowBox[{"Placed", "[", 
            RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]}], ",", 
   RowBox[{"\<\"DAI-USD\"\>", "\[Rule]", 
    TemplateBox[{
      GraphicsBox[{{}, {{{}, {}, {
           Hue[0.67, 0.6, 0.6], 
           Directive[
            PointSize[0.009166666666666668], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJxV1XtQVFUcB/ANTG0xecQjFWUtSQFXliLFJNgrimgqC8mIOtqOwmaYclFA
8blIkpnEhgMhjrLgKIuwSAyWEOaqEZQTLvJoFAJUYIW9wIK8YaCv+9t/YIZh
PnPuPef3/Z1zLgt3RwaHm/F4vMP4ff0XP6LIDo75je/imzvY4wtLL8Lx08qT
PYaMVjyAU4rWPj7Qb7SmCz5VtlW9cdhog0MnxyQMhZRIRowWrIaPx2/LCqD3
JV/Dzc3KO6P0vDwN/oJvmbGTxgs1sGv+FknQgNEtnbDq+iI9S+tZ2ek5xpdN
XWxF9Yl94Y7L/Ns6Wo/9Cn67RahQ0vzKC/DBxOc/rKBx7R34S7lFUTiZ9xIO
jazl19D6IhuOY5yn5XW2kaXesO2xvU5uNJ9CBvPlvbPmjlJ+BfxHev9QsCl/
KSy39pTZUP2CNjjBc091NNUrsezimELHheZxZPlKeOMLh13r+yj/Hlh8Nqzy
Z1P+JPj5hc2L0jsp/214UOwmCqNx8XP4gWtTpTe9z87q5pg1DR4xW2l+5XLY
Vqe6+oLe10rh/PP+PjepXt73sDl/oN+aLLoF33M6OXHMQPmbYTveizme1H/F
Wz0cUxEWNfljB+X/CF428cviAI7y74TNektP3uum/GfhGRmPShqoXkkR/N2j
y9JJsrwRFi6SRse9ovzTDRyzsm57+hmqv0UEq7xml22n+ax2wKvOHaqt7qX8
ZwxT+snehPer3W2eUj+UT+DMC00rfqdxrXkvxyzNbItjaX95y+AF12yuaPWU
PxSui33neA3llZ6GM1K7/JpoPkU+XCC73HuC1tfUw36T0xzcqL8GXh/238V8
RjG9L3Drm3J/JCHweF7FiTxT/lOwKqkzWkDrF+bCsZqY8vPU/5Ya2KzPeQtL
+2M1AUfp7ge403riJa84psReKG4gs8HwgqCs0hLT+T8Ox6wa+zuB6tFehzf4
V92/Qv3gVcMH96ve1fVQ/jG4a+nRHDPqt9S5n2MqU4/af2PKHwg/zIy0SKP1
NHFwTmxirpDyGK7CqqCAD/Mor6AKtlFeT1Ob9n8Y1ieLZoXSfPL3BjgmtS76
02oaL9wIt3674X2Zaf9j4TFv/7j2NsqfBb8Z4XEk3XT/H8LZFp072ikfOwBb
szNDIkzn32mQY264YcOpn9r18K51jkXx9DwvGlYPzeu6/YzyX4F1n1e4XtNR
/ko4xUed7VvMGfP3wcsPBURkhXUb8zsOcUyS9lGtPo3y+8NMgL0ovoHyR8Hl
c5cdDPyX8l+Cm5s+fvkZ9VteDnvWT1QNvqT8PXCxt2V31VPKP2eYY2b+ZfYB
S+fDag28fP4bjUubKP8B2GJJbc26FsqfDveGZ8/MpfWV94ennG8tB78+/ofr
Kb/DCMfIrM+plXSfRQx8w+9A4jzT/d8H300XbrOj/ihSYbMn+v+cqH7NXTj2
9Qeanjd0wJGZIbINtJ7AdhTnc8s1YQHdF4kPrN5cJWkky/fCE/yLbgl0ngpT
4CR8no6QW8rgRpf5+ZP0fbDSwZ8wlxx9qF6x9Rj2/1b2P1F0XtlVcHJrn9Nj
qk8ZDqetFvzkRedNmwz3b8qYvpbm45XC+pzJ/BGqR9QKzxPOOKrqovyzxznG
fd/u+Ju0Pwqv8Sn/nzS74RGP9gLnVsp/Hg5cYB+xieYX/Ao3/Slbd4PqkTyD
C9mU9mTU/z8FMIy1
            "]]}, {
           Hue[0.9060679774997897, 0.6, 0.6], 
           Directive[
            PointSize[0.009166666666666668], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJxV1H1Uk1UcB/AB8ibI0OQ1kjnFxAiWkjF5fTBNlELFBWkeFyExRZ2YiOHL
QDSOgk0Nk5PICEUsyoUQL0EsPAFK4UBRMErMN6AHNyHIBLGv/O4/7Jydnc+5
u/d5vvd3f3d6zJaV600FAsEOfJ//4iPZ0sNzO266Ts40MwbD8hz4SGvCtE9N
xqy+CK9eZqJ4RuO6PnjpRC+VJ9no1MtzueGdczLo/6JQ+O4N4fc/m455eQJ8
ya3px14aVx2Hi11c7nrTuFYHf5SzaPYP5K5eOGJ7429KWt/e4W+e+7YmQpZP
80OC4dgkx5pIslIBK2TLFlwma47B1c0HRubRfH0NrAqbE/krjQu6YY2rzx8z
LcYsmcLznMuzoDt1NC4PgL+QtdsqWf44OFoZ3JVK1qlhk4jVFcX0vsYq2CEq
e3fUBMp/DzYdUHu6s/zCPp5rj836JIOep5LCqVeEM9ItKf+HcLM0eZavNeXP
gg+8F//A14byV8DTe67OeUJ5Qv6CVbYv+RfR85S2D3lua9R5cQGNa+bDeUmP
N5bQ8/RyWOohmnWb3kdwCL7u32k3idaXlMHfrH2h1ZXV/xY8N9FxqJSstjbw
XMO1tR3mrP7z4DM3z955jdV/LSy0KSvcSXlEGYZx52V5CTxh1Dhwi6zqhFVt
R2bk0n5qLYw8t8ekRvmA1V8Cb8tzM88g26+BV3XFvljB8u+HzfrsPC2sKP95
2CWwXJ9N1nTA0kkr9gez+ps94rl65+iGR2SBN3wvZbHYl9aXRMORM9dZn6b9
lKfBTtezdrxF+6cuho1TE8+cMqf81+H2RS1m7iy/oJ/n0u3VPvm0nugVuPq+
LLeN1V8GnxU71DuSVXvhhiVDVq/TfO05eINzkLiQnt91Fd50X30tlM6D/Sjs
bOFVeZCeHzJ7gOeOd3tdsCIrV8LFJksXZtH6ml2wt3tYmJDlL4SrTnVXGVn+
FvjPxoB+S7JkGBa4VycpWP09/uG50/O3Jtay+kfAHxxMVIzQ+rqd8HDTw0sX
2fkvgD0C8m/ksfPfDKO5UrNZ/R+Pn68SD6I/prytyaD314bDsxqtipQsfxKc
smGwTUbnwz4fjiqVNm+i+SFN8JqUvK9DaX3lIFy7+Kjofdb/7kM8FyifNvce
yx8GXyiN3FbJ+v9j+GTRmUoHVv9TQ+PuG3kjbLgTf7h4xDCWvx8W7T5WyLWM
Wef2L8/pYzyPnqf3NS6G150Id8icSPm3woI3DjnZsPxfwlUHXFwj6P+qX+DQ
3qShbNb/BrjINyYuj9zl8pjnpuzTXc6n/bF/E/bQSi2v0PyQzTBun7o4AeU/
AS8pMH35d7KmDvbPDNvrQ/P1PNzRY7n9COt/p/94ruRkeqsTy8/BvauxoWT5
RriiO/bc4Cjlz4aTyzpzrKkfdLXwSlt1vCmtb+yBw+IG7copr2jqE+z3VWGv
mMaXB8FN4Yqnr7L7Px7OyV1kWEXvqz36ZFy/dlXDCwIN9Wms/x/A1it+0uxn
+ScPYz/MHXWfs/vff3jcedash6OfX9g0rv8MbhN/daKa1b8KfmdXWYEf7bfk
LuyX2lO6mdXfbmTcfab2g1PabcwTyLoYeODYhrzDZGMm7LxQ2vId6/9yOHnP
irRR1v+34Xdntz49Cf8PMaUcGw==
            "]]}}}, {{}, {}}}, {
       DisplayFunction -> Identity, DisplayFunction -> Identity, 
        DisplayFunction -> Identity, AspectRatio -> NCache[
          Rational[1, 4], 0.25], Axes -> {False, False}, 
        AxesLabel -> {None, None}, 
        AxesOrigin -> {3.8804832*^9, 0.8911289444444467}, DisplayFunction :> 
        Identity, Frame -> {{True, True}, {True, True}}, 
        FrameLabel -> {{None, None}, {None, None}}, 
        FrameTicks -> {{Automatic, Automatic}, {
           Charting`DateTicksFunction[
           Automatic, DateTicksFormat -> {Automatic}], 
           Charting`DateTicksFunction[
           Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}},
         GridLines -> {None, None}, GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.4]], 
        Method -> {
         "NoShowPlotTheme" -> Automatic, "AxisPadding" -> Scaled[0.02], 
          "DefaultBoundaryStyle" -> Automatic, 
          "DefaultGraphicsInteraction" -> {
           "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
            "Effects" -> {
             "Highlight" -> {"ratio" -> 2}, 
              "HighlightPoint" -> {"ratio" -> 2}, 
              "Droplines" -> {
               "freeformCursorMode" -> True, 
                "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
          "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.922526, 0.385626, 0.209179], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.528488, 0.470624, 0.701351], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.772079, 0.431554, 0.102387], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.363898, 0.618501, 0.782349], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[1, 0.75, 0], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.647624, 0.37816, 0.614037], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.571589, 0.586483, 0.], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.915, 0.3325, 0.2125], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[
             0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
             AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
          "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
          Scaled[0.05], "AllowMicroRanges" -> {True, False}, 
          "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
          "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), "CopiedValueFunction" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& )}}, 
        PlotRange -> {{3.8804832*^9, 3.8906784*^9}, {0.8911289444444467, 
         1.002736}}, PlotRangeClipping -> True, PlotRangePadding -> {{
           Scaled[0.02], 
           Scaled[0.02]}, {
           Scaled[0.05], 
           Scaled[0.05]}}, Ticks -> {{}, Automatic}}], 
      FormBox[
       FormBox[
        TemplateBox[{"\"Low\"", "\"High\""}, "LineLegend", 
         DisplayFunction -> (FormBox[
           StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                   "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxDividers -> {
                 "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
                GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False], TraditionalForm]& ), 
         InterpretationFunction :> (RowBox[{"LineLegend", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                  ",", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
              RowBox[{"{", 
                RowBox[{#, ",", #2}], "}"}], ",", 
              RowBox[{"LegendMarkers", "\[Rule]", 
                RowBox[{"{", 
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
              ",", 
              RowBox[{"Joined", "\[Rule]", 
                RowBox[{"{", 
                  RowBox[{"True", ",", "True"}], "}"}]}], ",", 
              RowBox[{"LabelStyle", "\[Rule]", 
                RowBox[{"{", "}"}]}], ",", 
              RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
         Editable -> True], TraditionalForm], TraditionalForm]},
     "Legended",
     DisplayFunction->(GridBox[{{
         TagBox[
          ItemBox[
           PaneBox[
            TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
            BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
          "SkipImageSizeLevel"]}, {
         ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
       GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
       AutoDelete -> False, GridBoxItemSize -> Automatic, 
       BaselinePosition -> {1, 1}]& ),
     Editable->True,
     InterpretationFunction->(RowBox[{"Legended", "[", 
        RowBox[{#, ",", 
          RowBox[{"Placed", "[", 
            RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]}], ",", 
   RowBox[{"\<\"WBTC-USD\"\>", "\[Rule]", 
    TemplateBox[{
      GraphicsBox[{{}, {{{}, {}, {
           Hue[0.67, 0.6, 0.6], 
           Directive[
            PointSize[0.009166666666666668], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJw10wtsU2UYBuCzeUmIbLZzpCMwVg0kKDKOLOMizLaEOPCSNUtcGAuhAlPI
kHVxgBvEVhSjQbLCRGUoKcxARKYdCRlhIFViREnksCEoTjZQLutOu15Ou64t
07P3/V1Cliffd77/e/9/PL6mvrI2W5Kkrfq/8d/6j1w/qNouNP1bdOBBxarb
sV/3ntiYRVsBe87rHm90zYb9QWFTDRw2Bdhf/SpsXhJgfY4dtm/UXT8xy3+D
dfcnuhe8Lw18Mx/2+QM8vyQHHgiIeUkjbJg0xO/bU5fGbbUMsf55PurODaIe
mQR7W4c4r3carJzVXf3G2OryEli6p7u/INu9uQyW81R+313N/IuFpQrmf024
dDvze1Tm2+Ri/tMqzzvUwfy3Vc7vOcf8jwa5b90g8y8Msr9m12XkXxvkvEJb
D/LvFk5V9SL/KdFfWHgF+W8FuU//fNg5McT7vPcm7J0n/NN9fK84Qsy/bwbq
0q4Q5+XWwfLJEOdZor8hf3+I50+4BnsmDKu2o3uzvNXGq8hfIlyqoR5eNcz+
8p9h8wfDzFtViX77CeHDebC7T3xf9ALsezjM+2pdCw/I/zsHNtQIVz0NW3eG
Oc/yIuz8VtTX3YK9f4SZN94NKw9EWL/TBUvFEe6bvRSWV0S4z7EpsGOH8Fs8
z3Nc9Gu0/2qE93f8WeaXorw/Xwb3aZ4V5X6zDKjbXxGuN8NuV5Tf71TR7/sq
yv0aC1Af6BX1L1tgw1iUeXLyryH/zBj7l2vMXxnj+cZ+1L3bYzyv6SysHBH1
tpWwdFl8//IXsJyOcX7mMdgxQ2P+gumwp0Lj31NNA/M3aeyvK4fD7RrndX8I
m3/VeP4jh/n+SVEve4fv/0Sc8xJv8/1finNeVgfff0uc+27rYP5Dcc6beRS2
XoyL+/kedsZF/yD//rxFCe7/sQtWlic4v3guLDUmeP7NTvz/kA8m+L5txbDj
QoLztWbYExX9t8dg/9QR9nc18v2fH+F5ynu4L3PDCPMuc8H2A6K/+WvY/aNw
wcrfkX94hPMfkq8j/+Qk876+DDYsTTLfyXbYuinJ/c5fgp2fJXl+axns/UHU
130KK6qYd3c3LJlGud/9Nli2jbJ/Wg/sqBP1d02wZ98o72/HdNh/TvR3HoHD
g6PcL0/+E/nzU8wzNRe2P5dif84x2L1e2LgE9u1NcX/bReY/k+L5pimoG+6K
eRV22GpMcx/tSdi5KM3+X56BvbVpzvtuMay0CDtKYem06D/YAsv/pLmPRe1D
/twM32fLU38h/4IM63/Pgf1rMrzP/Rvh8EcZzg/sgc1dwrXNsP1mhvfT0Nln
/Q9a1yne
            "]]}, {
           Hue[0.9060679774997897, 0.6, 0.6], 
           Directive[
            PointSize[0.009166666666666668], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJwtlA1sU2UYhS8QNQiBiiBMSZgkJhqIa5QSJsR1RlGUhGaIQha0KWxRcVtR
LFsyXeccGTpjN3QqUyz4NxVdQ5xOovQqGpcs0U72w3CTbkh0Xbvetbttaevq
5Zy3SdM8Oe/POd93b291VJWUzVUU5aDxvfprfMxVE+HilvhsUUVLwGqw/V2D
qxbOUbtrwJ6zot9zAKxGDL64Yq77fRdYWx6iXv0cOP++EPuHKsG2Zw3+tHWO
98c6sLtN9MomsE81eFfF7JOdW8HBkMEbDinB2vVg07JJ1u+ygK1Fk5y3n+x8
epJ+WgrA3iOT7C/YAQ78IHzHY2DlX+l/9BDYvCQs/pnXvinMfZs9zF8ueh5Z
9YS5r7mT+U8bfHXutgTzX5b65gV9yL84wvrLLrC70OCemtyqhvo/kH9PhPkt
e88h/+uib3ylH/m7hV21YOt4hP7aB8DOhVPctz0E9q6fYt7e6waQ3z7F/UeP
Q1dem+I8+02DyN8l9etOgu0XRb/kAnvmR+nvuwawerew7VWwtlv4C9MQ8jdF
6e+lj6HbTkW5vzoAdo9EeV5H2sC+azX2H34E/UGzxjzjBWBTqcZ5j7+Hemuj
Rn9rzdCdnRr9D7eCvcMa55esBAfmTfO+LfPAyp3Tsm+I+XeKvs7D/C9Pc57m
Z/6T0/S/5zzzD4r+4vPMr8Tob0sZzjt/TYz7i0rBth0xzv+6Eeyuk/q7doN9
n8U4f5MfHDwXY/43u5h/NsZ9HQfPI//tcfavLgY7S+Lct8IC9tbGmS/L+sAn
cZ7X0n1gpU/4qzqwORPn/t/HsM9+2wzn+XWwZ9sM5y1oAqs1M/RT3cH8H84w
3zM38v5/E93yANiWknnOWd7/ap164mHovq0659/M+w66dObLhVFvOi76R2M4
H2uvTr8vmKA7dZ3zLfPB3lUJ9j+R4/O/RfjwGbByICH38xDYfCwhfi/h/bP3
JDi//RTeF08swf3+NtSrK5OcV34GfrXNSdYXtg4j//4k6xtrcL629iTP+9cG
sPuXJPdV/XcB+aPSX3rNn8ifl2J/XhfYdL+woxtsrUxxnu4DO99J0c+SRSPI
/1OKz8/RNPRAOMW89d+AleVXeF8P3gI2F1/h/BP1YPs+4dxesOctqR8fgV/V
L3x2ELo2IfWFDuzPX5rmPt8EdNu9aeof0J/7qTT96UPQfa1p5ln8M/N/L1zU
x/z/CPdcj37rDRn2177N/Bsz8rxUg71lGfq7UMf8b2Tk/6KX+U+LHslhnvnv
DP32fzmK/IuyrF/zOdizQbh/AKw6hCvK/0L+5izvb9ko9Pxvs7xfRwhsG8vS
34mOUev/GYQ3oA==
            "]]}}}, {{}, {}}}, {
       DisplayFunction -> Identity, DisplayFunction -> Identity, 
        DisplayFunction -> Identity, AspectRatio -> NCache[
          Rational[1, 4], 0.25], Axes -> {False, False}, 
        AxesLabel -> {None, None}, 
        AxesOrigin -> {3.8804832*^9, 15553.477864722256`}, DisplayFunction :> 
        Identity, Frame -> {{True, True}, {True, True}}, 
        FrameLabel -> {{None, None}, {None, None}}, 
        FrameTicks -> {{Automatic, Automatic}, {
           Charting`DateTicksFunction[
           Automatic, DateTicksFormat -> {Automatic}], 
           Charting`DateTicksFunction[
           Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}},
         GridLines -> {None, None}, GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.4]], 
        Method -> {
         "NoShowPlotTheme" -> Automatic, "AxisPadding" -> Scaled[0.02], 
          "DefaultBoundaryStyle" -> Automatic, 
          "DefaultGraphicsInteraction" -> {
           "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
            "Effects" -> {
             "Highlight" -> {"ratio" -> 2}, 
              "HighlightPoint" -> {"ratio" -> 2}, 
              "Droplines" -> {
               "freeformCursorMode" -> True, 
                "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
          "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.922526, 0.385626, 0.209179], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.528488, 0.470624, 0.701351], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.772079, 0.431554, 0.102387], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.363898, 0.618501, 0.782349], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[1, 0.75, 0], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.647624, 0.37816, 0.614037], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.571589, 0.586483, 0.], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.915, 0.3325, 0.2125], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[
             0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
             AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
          "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
          Scaled[0.05], "AllowMicroRanges" -> {True, False}, 
          "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
          "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), "CopiedValueFunction" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& )}}, 
        PlotRange -> {{3.8804832*^9, 3.8906784*^9}, {15553.477864722256`, 
         31129.705078}}, PlotRangeClipping -> True, PlotRangePadding -> {{
           Scaled[0.02], 
           Scaled[0.02]}, {
           Scaled[0.05], 
           Scaled[0.05]}}, Ticks -> {{}, Automatic}}], 
      FormBox[
       FormBox[
        TemplateBox[{"\"Low\"", "\"High\""}, "LineLegend", 
         DisplayFunction -> (FormBox[
           StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                   "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxDividers -> {
                 "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
                GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False], TraditionalForm]& ), 
         InterpretationFunction :> (RowBox[{"LineLegend", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                  ",", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
              RowBox[{"{", 
                RowBox[{#, ",", #2}], "}"}], ",", 
              RowBox[{"LegendMarkers", "\[Rule]", 
                RowBox[{"{", 
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
              ",", 
              RowBox[{"Joined", "\[Rule]", 
                RowBox[{"{", 
                  RowBox[{"True", ",", "True"}], "}"}]}], ",", 
              RowBox[{"LabelStyle", "\[Rule]", 
                RowBox[{"{", "}"}]}], ",", 
              RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
         Editable -> True], TraditionalForm], TraditionalForm]},
     "Legended",
     DisplayFunction->(GridBox[{{
         TagBox[
          ItemBox[
           PaneBox[
            TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
            BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
          "SkipImageSizeLevel"]}, {
         ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
       GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
       AutoDelete -> False, GridBoxItemSize -> Automatic, 
       BaselinePosition -> {1, 1}]& ),
     Editable->True,
     InterpretationFunction->(RowBox[{"Legended", "[", 
        RowBox[{#, ",", 
          RowBox[{"Placed", "[", 
            RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]}], ",", 
   RowBox[{"\<\"LINK-USD\"\>", "\[Rule]", 
    TemplateBox[{
      GraphicsBox[{{}, {{{}, {}, {
           Hue[0.67, 0.6, 0.6], 
           Directive[
            PointSize[0.009166666666666668], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJw11AtMU2cUB/CqG0rkUauIVZSi4lCMFEERYdILzI2tlmLQIWOj8lZeNTM8
NpAqVgRRq0ZRFCiiVQwKIh2P8agdZh0d0ImAGlTwVZCLFJWJIHWH82VNmuaX
c9p+/3vOvXZhiVsjpzMYjGR4T33Ci5s4QFNCN2FvgY01Dyw6B94xNh6cl4+W
/QF+bxJ6li9Fq4bAq80/Xj3UgDZYv6KpLQ8DHy07j+Z4g1nZ3tq6IrQwDpx+
Oo1eo0NLzoCHbVqEVpnoChV483Cg6sui+VPufQXeLXS1FNmhmVaDNKVZ8WFO
k9pqyjwvsDEi1/LWFbR4F3jB6XumMSzsl58CS3+78N2er9C6BrCKx+T4fI9m
9INtlOp3DUloLoumqawJzXW/LLTIE9yZd7kg3wMtiwLnNg2ZsrRolQxce7lT
VmNN8teBXwZXMeJ/J/lfgPvuOuvZsxdgfsshmurgv99YaouWuIMXD5jl1l9A
V4SDHQ/vv5Fux8b8R8EWB45tV0YsxPw1U3XW3HuGdDTvKXik4OxoWD/2i81e
09SDCkWlQxzW5evBIdqIDYWhWNeJwM0zkz5aB6EZR8DXorq28urQXCW4bG9y
gXnqIsz/BHy/7t6sST5aZjpMUwHj3prUdrTKBawU75C2yvD/DD+CL7GPKG65
oDmHwTdvq/3yE7FfWAlOUHh7sj6hJT3ggw3Zdu7nbDC/iYGmpgmGn05eRfdy
wbGSu8ISIfYzfwDfuRNQm52D5knBvuvsd2R14P+Jy8E6Q5T542j8vvwB2CN7
1qelDmjdjBGa8vFkOfnnoRlrwI7zBvYJivH3uEFgTsaugCJXkv8AWNMqnrHJ
n+QvA1e18HdNTpL8XeDII5ce9ZegDYw3/19vNMcRXOXeFq9OJ/m3gUs0wT6l
k3heSQb4ov3xKy/0eP0rSsFmPx9Y7+6J9d4OcE1KSvv+UTJ/I9hrm9QkjI3n
5zm8pakYvevsqgn8ffFWsLHzWWPnwiWYPw3czOtulCTYYn4FmL9+SdxNDzTj
HzDbxr68zRn7uRNg62g4wfbFmN/+HU25MrVRFrVYl/mD9YrWDeYBWFelgtc+
i7/c3YXnMZSAu9eyj+l9sM5pA4dZDoV/Xo514Rh44qbfvubjaMnSUZr6qd62
OvQGmT8f7BK7kjPUROafBJasSugJM5L8xVP9o5JUzTuy/1rwNJcnt/3JfopH
wU7OZwbygtBy23/h+k/32V7dgv06PzAVcWLFY2c0Yy+4KTyFjqbw/uMWgsvc
dksHtOT5pwEfzUtgZTKwLnsD/sxoePskE62yeU9Ty03VVsIanJ9hM3jVxpPa
jKtk//eAfXOmsbaosC48D9557ZxyHoPM/w74Ydl4SLwUXTEM5hUXbppejufv
ZY/RVNGfDu319WT/fcGWK02+cR0h+58AXp3fJjDJI/nPglt60pbVfU32Xw0W
eWYeMqaS/afBI/WBcX+fJ/tv/YGmvhC8TnYYJ/tPgbUPFSkhvlgXxYLd1BeX
CtzI/p8Gi/rnlOjnk/1vAlf91XdK0Ez2fwB8YijNax2ZJ2feOE2NV+UYdTSZ
/yZwUdJYbGUX7ockBjzTNKBR/oLM/yS41mWumf5bMv968MpBt7kdpM7UT9UT
lYIQC/w+b84EPD+YMqfik1gXe4AnXhpf7ckg+SPBOR6Pn1fHkPzHwSlpv3bL
/Un+OrCDXze/kTx/uM/BmuXLonc6kf23+EhTi7qbBl2ysC7bAJ7xS1+b9DZa
FQb2ymUuie/BfkMuOPh+h0XGUbxfONVgueLM9VEl3m/CPnB0aKqssNKW9x+5
uwQw
            "]]}, {
           Hue[0.9060679774997897, 0.6, 0.6], 
           Directive[
            PointSize[0.009166666666666668], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJwt1AlQU1cUBuDnUmwmjIIVA5JApDIgIAahEAkNeSouUxFw6SioxKCOCBpU
Fq2oUVRcagmyFAUhLq1LRVMVEdD2WXVYpDQoUFEIAamAPiRgYlEQeji3mclk
vrnLy3/PPW+qQrl0w2iKopLgO/ILH5Gyi6UP8DNFTzfaysDyU+Bqt1iLO0K0
+gG4asuAg5mHZrrBEW+OH7ztgTbyXrP0nvCgfZsaeCMWzgFHWV592d+LDo0F
j708STLFBeerssFD3LGjZvmgtQy4fk5le10+zje8BucwhWW7nk8esZXNG5YW
FkdKV+1HywLBQaaYNxeV6LhosHbbpzJpClqTAeYV11L6PrTuHnh9x5bYxDo0
1QnW+NS5TluFzxNNZFna0SNqrp8ELQ8A+0vs+M4tOF+9ETxZtD8iaRmOM2pw
TdwYaeBdtLEUzOxecILTi3mE/4BFJWHrC63tMP+EbpYust9TPW4aWjUb3Oh8
pdgiG62NGrGLSrE+egrmPwEOPvzyg+VKPua/A96qF0+vzrXH/G1gj1LzaYdb
6DjLtyyd6592bPgxWuMLbq0bdzJJj9bJwYKE+NUn+Lg/dRwcXDojnVuD46Ii
8AqR2+Uv5Pg8eQt4/tqGh6Nb0GpOD0vP5u5+3voXmvEGzwvThLSXoI1rwF0u
ec3h89HCI2DrtqpGyRgB5r8B9lV7+ha2o1VN4PicmTOZt2ithZGl0y6FNq+u
RhtEYN6istryq2irCHCg0m3pugDcX3YI7Opm37DcAsfjroPfOi0O82xGaxrB
JeVPUj0XonVjelk6X/Zs+rdr0JQnWJ9kmfZpEPcTrQQn+oUkVMwg+Q+Aj2g2
mzbrSP6r4C1+9/2CJ+B6pgFs5fisN5JyxPxUH+ThpOrbwkh+d7Cgw7d1rR06
dAV42ckEcak/WrUPzLvb6b5wGZ6/9jJYV3slO34e2vAU7Dd83X/7NJJ/CBx5
2onp+hMtc33H0txbkgu2WgfMvxQ8XSqdKlEKMX8yuIPn3DkzGa37Gez4YpbB
oxBN1YLTu5MDv3JAiwbAF8QLBIK/cT+5s4mlL/EzHn0KwXF1CLgrqHuvjRjN
7AJzjh8TnyH1NJ4HL1Gt+/BOgOuFNWAfc2mQfJDUvx+sS65pvnaR1N/JzNIx
fZn18WS+djGYq9DERMrQhkTw0azaig4bkv8s2DUqOefeILn/j8FL8pp6Qsfi
ecaZwUNPzkkrm8n9d3wP9d1ujspoIvd/Efgb/6r7sTfQVDw4oihmTvhN7AdR
Pvhign3dXi72o7wCzDFs7FWko9V9YIe4NV5frsb5DP9fuP82Q5bKbNzPOB98
/nHug6IqUv9t4FfX1SWzdpL654J1a/cEmO7hetUjsG1mtE/J5+T+94CV5jzT
b17k/tv1s/ShzILlA//Xfx44ddA7pV9D6r8VrM53Sj1SRu5/DlhsmjyhpxLP
T/MHmPOR+7XiIFrHgg+W3Ux8kYWmeB/gfdtZT/00CteLaHDF6XToIbQ8Bjz4
Q+uvBeT81VngVzs/O+diQ/r/d3DdGZf8m/Wk/l1gk5ejVSef1H/SRxg/tXth
fz46VAqWwOtJcgCt2gRObPEKeO9N6n8SHGZiyuVFJP9dcLWxYKvGQPJ3gLfr
h8s5UThfZj3A0tduK/Y1BpP8ErCzxf6sue6k/zeAd6ScHe/uQfo/DTz7x7Yr
N4bx/1OlYKuI73zqd5D87eCBxInWQ49I/vGDLO3m+yrh4TaSXwyWNdX/UmGL
z2cUYH1G6qHwFNL/34MNwcWsFQ/7Q1gMrmru6N8Uhg5tBQdWCnzTjwpl/wGB
B/7S
            "]]}}}, {{}, {}}}, {
       DisplayFunction -> Identity, DisplayFunction -> Identity, 
        DisplayFunction -> Identity, AspectRatio -> NCache[
          Rational[1, 4], 0.25], Axes -> {False, False}, 
        AxesLabel -> {None, None}, 
        AxesOrigin -> {3.8804832*^9, 5.25129877777779}, DisplayFunction :> 
        Identity, Frame -> {{True, True}, {True, True}}, 
        FrameLabel -> {{None, None}, {None, None}}, 
        FrameTicks -> {{Automatic, Automatic}, {
           Charting`DateTicksFunction[
           Automatic, DateTicksFormat -> {Automatic}], 
           Charting`DateTicksFunction[
           Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}},
         GridLines -> {None, None}, GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.4]], 
        Method -> {
         "NoShowPlotTheme" -> Automatic, "AxisPadding" -> Scaled[0.02], 
          "DefaultBoundaryStyle" -> Automatic, 
          "DefaultGraphicsInteraction" -> {
           "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
            "Effects" -> {
             "Highlight" -> {"ratio" -> 2}, 
              "HighlightPoint" -> {"ratio" -> 2}, 
              "Droplines" -> {
               "freeformCursorMode" -> True, 
                "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
          "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.922526, 0.385626, 0.209179], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.528488, 0.470624, 0.701351], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.772079, 0.431554, 0.102387], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.363898, 0.618501, 0.782349], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[1, 0.75, 0], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.647624, 0.37816, 0.614037], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.571589, 0.586483, 0.], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.915, 0.3325, 0.2125], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[
             0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
             AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
          "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
          Scaled[0.05], "AllowMicroRanges" -> {True, False}, 
          "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
          "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), "CopiedValueFunction" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& )}}, 
        PlotRange -> {{3.8804832*^9, 3.8906784*^9}, {5.25129877777779, 
         8.338233}}, PlotRangeClipping -> True, PlotRangePadding -> {{
           Scaled[0.02], 
           Scaled[0.02]}, {
           Scaled[0.05], 
           Scaled[0.05]}}, Ticks -> {{}, Automatic}}], 
      FormBox[
       FormBox[
        TemplateBox[{"\"Low\"", "\"High\""}, "LineLegend", 
         DisplayFunction -> (FormBox[
           StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                   "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxDividers -> {
                 "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
                GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False], TraditionalForm]& ), 
         InterpretationFunction :> (RowBox[{"LineLegend", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                  ",", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
              RowBox[{"{", 
                RowBox[{#, ",", #2}], "}"}], ",", 
              RowBox[{"LegendMarkers", "\[Rule]", 
                RowBox[{"{", 
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
              ",", 
              RowBox[{"Joined", "\[Rule]", 
                RowBox[{"{", 
                  RowBox[{"True", ",", "True"}], "}"}]}], ",", 
              RowBox[{"LabelStyle", "\[Rule]", 
                RowBox[{"{", "}"}]}], ",", 
              RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
         Editable -> True], TraditionalForm], TraditionalForm]},
     "Legended",
     DisplayFunction->(GridBox[{{
         TagBox[
          ItemBox[
           PaneBox[
            TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
            BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
          "SkipImageSizeLevel"]}, {
         ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
       GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
       AutoDelete -> False, GridBoxItemSize -> Automatic, 
       BaselinePosition -> {1, 1}]& ),
     Editable->True,
     InterpretationFunction->(RowBox[{"Legended", "[", 
        RowBox[{#, ",", 
          RowBox[{"Placed", "[", 
            RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]}], ",", 
   RowBox[{"\<\"UNI7083-USD\"\>", "\[Rule]", 
    TemplateBox[{
      GraphicsBox[{{}, {{{}, {}, {
           Hue[0.67, 0.6, 0.6], 
           Directive[
            PointSize[0.009166666666666668], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJwt1As0lGkcx/EJbTeLyi2csgrtsWVWJRoxb9GiZJIua8pOahzSRqV0cXCy
Lq2VWU4ltTWtVhxd0E0qJtJSu251UhESWXoxmRWlk/35PzvnzJnzOc+8z7zf
eZ7n/Soo3E+uJRAIovAe+8RLGN7Nc+k6rybPdTcUw7KT8Ddbly8eeU1WVMCF
voLKqnSyqhce3bRwm8tHstqkh+daMpISAirIlsvg4kvzXOw9yJIdcLVAUpma
Qo47DnckRO6fuIdcoIJnl06/Gtg8fcxtPbDGpVgU1kg2MHrLc9EacxuzDrLY
DV49KdmrWEzXR4TCDxeNdxCFkZUZcPvuO1r17H7q7sJBIXt3J1oZjVnwD+zW
MW+D2z6ycBrPc4dKg2/t2EaWucCSlHsV1/TJimD4+wqPvu4sskoB57+V+Hix
69UlcEhGhe1vnsbU3wnHiI5MHC0nS/R7eU7LLsn4eQw5zhkeXbq/t+GGCfVv
hY1bOq1KZ5tSfyrc3bfEfMB+BvUXw6cWr56suUwWt8N/Wa9r8pGQI3T7MH/8
ed/8ELLSEW79+b7OIhear04GKww6pwRMJAtSYH299zaJ/mThddircVXp8/Vm
1N8K107bpuOfTFZM6ue5N/vsh6rryaoFsM1IV6jKkn5PvRl+/Wfm7eMKms8y
GV653qO4epjGJUXwo9s94zQyuj6uGR46ajY9aDW54As1z/VrK17c9yK3CWHj
pAVlWRmsXwrvtz07s6mB9SfAuQLTWuUW1n8Fdj3uGsktNaf+57CVyel7ra3k
Ou13+H6+yLhpjgX1z4efPdaL9bGhceFGeK9LsNIhhvUfhnOWX+h6mcn6L8J3
at/Vt0ez/qfwxwEtPltDvWrBAM/x2A5Pp9L9WNrB0gPVox0/sP51sE9TWVGD
OzkuFm7xP1/+bDddX5AHK43jk0L72fo/hh03OnlpJtDvGXyGE6xnShwHWf9c
Dc/tctLkO7exfj84v6czKoun7yuj4awTFX2iN6w/B3bLTTF86Mf66+HPtrFD
R0tY/whcGbFXcL+X9Vv/y3M7Jsx+P0lG4wpfeFzFQFeTFus/AFu1v/F3ELP1
z4YjG0YeNJay/ho490KaatZR1j8MGzlqb1JcYv1Wgzwn8DvldKufXLAKPhRv
vyrHm63/Pji8RJ40fIL+D4NzcPDYBEKy+BFcdUJy79UxcsQgrJvueul3fbb/
Z73nObHwu7RWO3KdF3ww71lm4xa2/yPhy8rQI8cK6TwKz8A6TndThrLZ+a+C
I8QrNxQsZed/AP5SYrbdsJydf4shntuseqRrvo7Or3oFnB/QsEbPhu3/XfCG
wmGfLdY0LjkFy010L99aS46rhCPdS1fmHWLnvx8OTkwtitlD99s2Y5jnNlrU
fNpew/a/O9zsfeXvByWsfyc857rEwVnO+jNhLc8f2ztaaD5lOfyt2+KFclt2
/vnh//ejL40LTD5gPvuzF01rWD8H/+SZaCGtJcvCYOnck6dffE1WHIPTo/Tk
uQFkVRms3ik/UrOM9XfD5R+eFHqHki0NP/LcWwvtosYU1u8Kr9gc1r/Wmu4n
LgSeuTZKbnKa9afDiVo34qdKyW134CGpaM20dLJBF5y3/XDuCHu+iKeO8NyC
HFnqVWfWL4L3xJ/Ts2tm/XI4PHa+mcMZcl0anJH2crx3AOsvgaWTPUdmycjC
DlgVhSdsCVmm9wnr216l/asRWeEEz5sjizyQTVYFwVOiPW4GZrDz/ws8/o+Q
zkA1W/+b8KDw2hLnq2TJK7joycGy+kBT8X+mePjN
            "]]}, {
           Hue[0.9060679774997897, 0.6, 0.6], 
           Directive[
            PointSize[0.009166666666666668], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJwt1AtMk1cUB/BqWQmIiI7HKChIxmTIWJ2KICL9fKBmIE1RKzqggAoo2nY8
dNJ1tQsMELFBMQLLQIQxHxGG0VWBUR1olYEFLYhDLY8pyAetdii0w+xw7po0
zS/nfve7/3t67+IEEX/vbAaDcRi+M7/w4YhGaGqwRiKSfe/EBQtLwMNOkSFd
YrTyD3CdptYjgdTVY2BDdE9ykBJtdHlFUywda0nlPLTnOvBwpJtuxOg4Y14q
OMeqwF/UgZafAYd9xWBXB+P4OjW4czRyIO0u1vWvZubzHXyeJEU7OI3S1MTj
M7OSUtDcUPCKD+1esu+gxSlgr9QjR6vtcL6KU+D9zyT5hS1obRO4X6ZmMn9B
M4bB1RG6kPpo5xlzFtA0lbh+lYW5Ei1cA/5sxMf6qitauQ/M1itSo/3RaiW4
yhL0wdQWtPEmmHa8xIrvcMH8f4NzN0c0nM1E8+aN0VRR5vmTU2q0PAi8+nBD
bGn9R5g/ERzPl0rX7XDF/CfA96ftNx773Q3zq8D784o7NTVszD8A3r1u7XAv
jRbbjdPUW+v7By0ydEUAmHurNZ/th89rheD0uI5UgQrfxzgOrpRSc2xUOJ5z
Dfy166qV2jU4Xvgc/LI1rzZzmzvmtzHQlNbWLvrpE6yrl4PLLmbtSduINsaA
TX+2xb9rwvk8c8Gs3nppjDPWefXgFIbomFUGWt4Hfnav5u71H9F1LCNNLbtW
bf/mFVrPAScXl3SZLST/brAxZWvsniKSPxscHmUV2FSGdXEt2Gz0o8IYizB/
L5g7yav0nrcQ8zNf09TDd2zFIB/N8Af7t/XsnQxFc3aCTbPp81E9JL8CvKQy
bnfoNFp5GXxmcWGGZCnuh7obHMtRvSg8RPIz3tCUTO8b6dmH/fNcCva7kd8q
MqN528HJR/N+Df8c1y//DjzXXdvlJMV63QWwXYfe4BKFdf1DcG2J9Gp7E8n/
Hnz2bfu0jonv5/qYaEpweoFiO9l/MR9cXtfCvJ+J9Qop2LAz9VR+AO6H9mfw
46V+Kg8xyd8JTtr4aEN5LclvAftqHoRdIfmE3v/QlK38tR3bl/Q/EnxUMnBp
oTfJ/w3Y0UvvcDEd12s8D64a0gWxTpP+d4CzvgyKo0+geZNg3ZpNQw1kvNxr
Au6bKo5Bso/0Pxx8sex481ge6X8m+PT+8sK7BTje4RzYxvmH5c2+uF/cNrDG
VuaWQPZPPAFOuVSkWatCV3i8hXyqWeUe3WjtFnCAoD1twziakQ6+sULWX9yC
54HzE5jtFNjLGifnXwPe8UjIzvHA86p8AxaMlSq7VWi1+zuaChZ35HY9w+eN
YeBdigK5rYDkl4A3Lcr162oh/S8Du57k20ROkvPfCjb7Tj2OqSP9N8yMP+wQ
HHWE9N91Eu6HkW8HDzST/BvAudm7HjaS/wf3EHhIsXzSMkHynwVnW7dfyWoj
+W+DmxuKvVc3kPw0WCNsvdDtRfK7TNGUsjHNZ301rodDgbm3OcJ7GWjhAbBp
qHR2SQjJXwzmX9/85ISM5G8Gzx1gBr93I/lHwKMiG3XoSrSno5mmbg2IXwjS
0Ly14BJdcJ99E1qeDM76Kzz7SDq5/4rM/993W9H6RnBigklyUIN2eAnuu1lW
s3ob6f98C00VCyWBplGsi4PB0jmjdxoS0RV7wRERilVVy9Dak+AAj56c/E5c
P+Mm2HD5aea5T0n/h8AhnRn91gK00P5fmmoz6ccvT5P8gWCVlb6cP4F1dQJ4
3xfuD5K0uB5jAfhars8nIjE5/7+BPy7lzj+uIf3vBz9JtxJf3ezK/Q+rSwNL

            "]]}}}, {{}, {}}}, {
       DisplayFunction -> Identity, DisplayFunction -> Identity, 
        DisplayFunction -> Identity, AspectRatio -> NCache[
          Rational[1, 4], 0.25], Axes -> {False, False}, 
        AxesLabel -> {None, None}, 
        AxesOrigin -> {3.8804832*^9, 4.8163203888889}, DisplayFunction :> 
        Identity, Frame -> {{True, True}, {True, True}}, 
        FrameLabel -> {{None, None}, {None, None}}, 
        FrameTicks -> {{Automatic, Automatic}, {
           Charting`DateTicksFunction[
           Automatic, DateTicksFormat -> {Automatic}], 
           Charting`DateTicksFunction[
           Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}},
         GridLines -> {None, None}, GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.4]], 
        Method -> {
         "NoShowPlotTheme" -> Automatic, "AxisPadding" -> Scaled[0.02], 
          "DefaultBoundaryStyle" -> Automatic, 
          "DefaultGraphicsInteraction" -> {
           "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
            "Effects" -> {
             "Highlight" -> {"ratio" -> 2}, 
              "HighlightPoint" -> {"ratio" -> 2}, 
              "Droplines" -> {
               "freeformCursorMode" -> True, 
                "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
          "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.922526, 0.385626, 0.209179], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.528488, 0.470624, 0.701351], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.772079, 0.431554, 0.102387], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.363898, 0.618501, 0.782349], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[1, 0.75, 0], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.647624, 0.37816, 0.614037], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.571589, 0.586483, 0.], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.915, 0.3325, 0.2125], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[
             0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
             AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
          "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
          Scaled[0.05], "AllowMicroRanges" -> {True, False}, 
          "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
          "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), "CopiedValueFunction" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& )}}, 
        PlotRange -> {{3.8804832*^9, 3.8906784*^9}, {4.8163203888889, 
         7.553263}}, PlotRangeClipping -> True, PlotRangePadding -> {{
           Scaled[0.02], 
           Scaled[0.02]}, {
           Scaled[0.05], 
           Scaled[0.05]}}, Ticks -> {{}, Automatic}}], 
      FormBox[
       FormBox[
        TemplateBox[{"\"Low\"", "\"High\""}, "LineLegend", 
         DisplayFunction -> (FormBox[
           StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                   "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxDividers -> {
                 "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
                GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False], TraditionalForm]& ), 
         InterpretationFunction :> (RowBox[{"LineLegend", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                  ",", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
              RowBox[{"{", 
                RowBox[{#, ",", #2}], "}"}], ",", 
              RowBox[{"LegendMarkers", "\[Rule]", 
                RowBox[{"{", 
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
              ",", 
              RowBox[{"Joined", "\[Rule]", 
                RowBox[{"{", 
                  RowBox[{"True", ",", "True"}], "}"}]}], ",", 
              RowBox[{"LabelStyle", "\[Rule]", 
                RowBox[{"{", "}"}]}], ",", 
              RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
         Editable -> True], TraditionalForm], TraditionalForm]},
     "Legended",
     DisplayFunction->(GridBox[{{
         TagBox[
          ItemBox[
           PaneBox[
            TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
            BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
          "SkipImageSizeLevel"]}, {
         ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
       GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
       AutoDelete -> False, GridBoxItemSize -> Automatic, 
       BaselinePosition -> {1, 1}]& ),
     Editable->True,
     InterpretationFunction->(RowBox[{"Legended", "[", 
        RowBox[{#, ",", 
          RowBox[{"Placed", "[", 
            RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]}], ",", 
   RowBox[{"\<\"ATOM-USD\"\>", "\[Rule]", 
    TemplateBox[{
      GraphicsBox[{{}, {{{}, {}, {
           Hue[0.67, 0.6, 0.6], 
           Directive[
            PointSize[0.009166666666666668], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJwl1AlQU1cUBuCMIojK4kIREEUwgoA1YWlREPIQrWWkRMSNDMoWa2UxUiuC
WlMURQENIBXEiXEpFVxgwCVQKWHHyGhEK4sUghDB+IQQRRaV9uTczGQyX859
97z/3Xfv4oi9QfwpDAYjAb66X/iw9r6hKesEf4O39os54LA8cJOdNLM0Ay2q
BR/Rf56/MRItewf+5eD03j8fojXmapraGH0h4aIcbeOrc9vap1Pvo7kx4C1i
TtsyfVudhb+DrxWKm3380SUycJ528XVLFY5XqsEbalK8kudi3dTsLU25skNT
/zmK5viAO/rZctezaMFP4FNltnuuXEJLssHlsd1XJ+VoRSX4SjhbHZJmpzNj
ANy4zmZHq/0SnVlzaJoSP3NWDDLQYV7g82ljPzR34HjRLnDXas6oagPWZSKw
mtng8mUGWlMBpoYjm0PnMjG/Cuz08uQDVQuaa/KOpjo/rlYX2y/F/CvBQRGt
Hw942mP+SLAkTiLz7EErM8CaE26OgiwHzC8FZxqOuWc1ozmvwOkdXxxlK9CC
WYMw//FD/C5ftOQbsEV8zOo1GuynCAMPrbLSPlmA8zPSwJV12wp2qtGsu+Ai
4SGxj2oZ5u8Gr7HeIlWVoUWGQzTlYVbIuqdAy1zBq9QDUsuH2E8TCu7J5QdO
4aFtUsE57+u70hpxPLcUbMze8b7oBFrYCQ4MHXd+YueI+fU1NOWYkdveb4FW
ssCX2dnXzetwvCkPvGVI4Om2AOucFHBX9smUkHy0oBhcO1TAOyBxxvzt4Iq/
TQwMy9GKqcM0FWM4Lvlx03LM/zXYPW/4XgsP66xtYJeSM70nLdFhyeAy5g3b
Tj+06CY4iqd/8Q8/vF72AnzX3Xa+QRX21zC08L4IBpYvHETbOIFvJEitLV+j
uZvBLFO9JkUPWngU7M3sr1sYj/lKCsGuwfXBE+No5TNwi8X8xO3HcLzpJHjY
WHMt5RnJ7/CepmKnzHp0ifQXBIGrG0aGJvqcMP9hcE37Lb7LPJK/AFzyKjg6
/DHWGU/B6WLegH8wmvVJZ/4E89URnC+M+YGmNl/dOvXcJFoUCG7KSfrqeAdZ
/0RwfF3I4RnT0Zqr4Mj8YLcXZ9A2j8GZ4WZ7o7zJ+o+Bkxhpnyc24vshtB2h
qbeeVQ7UUXTJBrDgTu+J7lC08gA4ICD522sUvp+ml8GxGdMbqgPQnEfgpd0x
P0cWoQUj4O0yvbh/K9GSRR9p6vmswisHp6EV34PzfpOPjT7F/cjYD17i8Gt6
uRWaJQaHT87Icyoj+78JPN6qlY/swrpIC/7ktS7x9TTcT7IFozSVlRSoulOM
1qwDrzzcckqvF/vZ7ANbx7t2CneiufngmjkmDvmlJH89WHprudeKzWT9h8AJ
I44uqwQkv8UYTa2XDWhfe5D97we2+M+7t2Y2yR8HdmnU3k6SYn9BLvj5d0oT
n1G8X0kN2O5Y59rc02T/02D3ncxFf81EM8zHaWpH24VbD/pIfgocNdBGMRdi
PSwabF9t1XJ9Pcmfo6tPqzJik+chqwIXM/uOiQNI/jdgA99SoSFNzr95E9Av
Ub6nwhjrXG+wycy7BYmLyPm3G7yMqXdDTZ5nSRb4Q2x1UGgqXq98AL5jvSmB
b451035wuUWcrH8rmjP7E01ln27o6D5F8nuCpbZsyqib5OeDi3a9COKQ81dx
FmxVaSlxqyPrXwGO8b5tZPaS5O8DR+kFeyT7kfzGn2mKN9isVztO8nuA5dHM
/eePk/WPAJ9zKbxsJMH10KSDc/JaJniO5Py7D96t+6MWze0Br1yzrzH/pgPn
f9oCCu0=
            "]]}, {
           Hue[0.9060679774997897, 0.6, 0.6], 
           Directive[
            PointSize[0.009166666666666668], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJwl1AlQE1cYwPGoDMIYbQimEaUlIBrkSGnEA0HMgsULJeKFKDbGihcmQcAD
EakHKoJGFEWKioP1KLQyKCIgEpXIIeIijmK1JchNFhMRNCXK9ON7mclkfvP2
7eQ/3751lCtDNg5nsVi74Dv0Cx9PZRdDjX40r+KMlZMELDsP/tn6SsVfPLT6
ETj1w/pPBV8dh6zpAetbLhsUZN3I72aoAPVBbgQXLfAHz1oj2TzbCy2NBLvG
rNtwToZOPAtePc0quvQZOl8Dvhf2vtZiL1rXDeY2Zh3c9BDN4ekZymaZ07F1
j9GSOWDr5vrHNi1o1RZw/OgHUXYGdPZpsEAYNO7pwMQh02XgF/MXtfUkOg+Z
1QkekyPYHf8E7cllGIp3QpAuV6JlvuC8mvtuB46g1RFgq5PTT4TeQmvU4KRO
zkzuuEnYXwIe/lE9xaF7Mva3gcOlTeJruWjpNz0M9TkmtlKeK8R+b7Bv3z9/
ut9wwf4N4NfnIn0bB9C6VHBY7+6wBI0r9t8Fs1dmbfVgoyXvwGOOclbVWaJV
7PcMNSi/88sKrynYPx2ccUWstbdA0zJwgHbmfltXvD/rOLhFufdAxU7c71kI
ttH1if7lu2F/09D+skif7eFotbWBoZJXrX4zlqxrpoIDdoijcu/ifmM4uN5R
5UzLcF1wFLyoegd34Ry0tABcK3RLyrVFJ74FD8gNWn4hOt/SyFAOHnXj2l+g
dZ5gcYedOa0HzVkDrrAcJdzSTvoPg0XvfH7Ul3lg/02wf3rmbNpfhP2vwSe3
26nOlqDpER8Y6rr3nlPWAjRLBC4QKXKGHcL9nqHgEacn/PSyAC07ANbrZEq5
Ea3OAwe33b7Wmof7NS/BsXkhcVePoI2sXoay8HZZf7Wf9LuB3YuTtcpk0r8C
zBlpvfS+jvTvB9OjdolSxpL+G2CBtXkn1470N4ALkwfp2uPu2D8IXr6yoX9u
OVri8pGhTMEzpLoLaFUIuDJi3h+GVnR2PJhd45W5lvTRV8ENpsOr0pzRrHpw
W+CpwiQx6TeDy4u6niX0kflP6mOoupQEr6waMv9gsM/1itiUXDL/PWB50mNb
ai2Zfw4452mUwlaEFtSB0+MZkdQVLTWBNWm5oV/O4vOY6NTPUEVxS+KaaHR+
EHhxaUZEyU20bif4V79TwgUGfF45l8Ei3x94EyaiJU/A7FmOMfQ+tKofzA+M
W1q6CZ3t8ImhJqm5pXeEaHoBOPp1Z9alTDx/rBjw3N9tppot8Hx6XgQrL62I
WJiDllWBa+NHzomqQqt7wX57Qq9PS8X9GvvP8H6oXrayIRbvbwwEb526JGD5
B9IfBR5ZcDFsXxnp/w3Ma9008VU/6deChd+akhWpuJ5vABfzM3jJb9E6OxND
Ofrlt5QLyPmfCz4oTp3M15N+BTi241hH5FLSnwFmaavSvAfx/2U/BPtUJjL9
7WiaAQ/xvZL08/9jqO9qpLxlN0g/BY6pC46y7yT928AKfqbeq4D0p4P/jj6f
aVGJ1pSDQ54/orvZeD9jF5j/oqi2azxaMHaAoeYrFpd4PCDvPz9wTfPpJc4m
dOJmsG+QuX3QCa/PTwPXV4fovybguu4eWOvd3Xn3OZrTAU65YORmueL1Ehsz
Q1Xdnp7a44FW+YCjI0r9HW7j9dkbwds2MIfOydD0STDbYpg4xh3NKgEvKDbb
O8SS/lbwK1PQp2dPSP+YL3BeR4Sbh5eQ/plgqzOLix+ayfzlYGXjHZdbzWT+
KeCm8Y2uD3rRgiLw2u+3BVpW47ylzWDWjOP8UW+mSP4H1EgBUA==
            "]]}}}, {{}, {}}}, {
       DisplayFunction -> Identity, DisplayFunction -> Identity, 
        DisplayFunction -> Identity, AspectRatio -> NCache[
          Rational[1, 4], 0.25], Axes -> {False, False}, 
        AxesLabel -> {None, None}, 
        AxesOrigin -> {3.8804832*^9, 8.20093922222224}, DisplayFunction :> 
        Identity, Frame -> {{True, True}, {True, True}}, 
        FrameLabel -> {{None, None}, {None, None}}, 
        FrameTicks -> {{Automatic, Automatic}, {
           Charting`DateTicksFunction[
           Automatic, DateTicksFormat -> {Automatic}], 
           Charting`DateTicksFunction[
           Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}},
         GridLines -> {None, None}, GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.4]], 
        Method -> {
         "NoShowPlotTheme" -> Automatic, "AxisPadding" -> Scaled[0.02], 
          "DefaultBoundaryStyle" -> Automatic, 
          "DefaultGraphicsInteraction" -> {
           "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
            "Effects" -> {
             "Highlight" -> {"ratio" -> 2}, 
              "HighlightPoint" -> {"ratio" -> 2}, 
              "Droplines" -> {
               "freeformCursorMode" -> True, 
                "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
          "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.922526, 0.385626, 0.209179], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.528488, 0.470624, 0.701351], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.772079, 0.431554, 0.102387], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.363898, 0.618501, 0.782349], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[1, 0.75, 0], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.647624, 0.37816, 0.614037], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.571589, 0.586483, 0.], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.915, 0.3325, 0.2125], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[
             0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
             AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
          "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
          Scaled[0.05], "AllowMicroRanges" -> {True, False}, 
          "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
          "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), "CopiedValueFunction" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& )}}, 
        PlotRange -> {{3.8804832*^9, 3.8906784*^9}, {8.20093922222224, 
         15.364429}}, PlotRangeClipping -> True, PlotRangePadding -> {{
           Scaled[0.02], 
           Scaled[0.02]}, {
           Scaled[0.05], 
           Scaled[0.05]}}, Ticks -> {{}, Automatic}}], 
      FormBox[
       FormBox[
        TemplateBox[{"\"Low\"", "\"High\""}, "LineLegend", 
         DisplayFunction -> (FormBox[
           StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                   "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxDividers -> {
                 "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
                GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False], TraditionalForm]& ), 
         InterpretationFunction :> (RowBox[{"LineLegend", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                  ",", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
              RowBox[{"{", 
                RowBox[{#, ",", #2}], "}"}], ",", 
              RowBox[{"LegendMarkers", "\[Rule]", 
                RowBox[{"{", 
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
              ",", 
              RowBox[{"Joined", "\[Rule]", 
                RowBox[{"{", 
                  RowBox[{"True", ",", "True"}], "}"}]}], ",", 
              RowBox[{"LabelStyle", "\[Rule]", 
                RowBox[{"{", "}"}]}], ",", 
              RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
         Editable -> True], TraditionalForm], TraditionalForm]},
     "Legended",
     DisplayFunction->(GridBox[{{
         TagBox[
          ItemBox[
           PaneBox[
            TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
            BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
          "SkipImageSizeLevel"]}, {
         ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
       GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
       AutoDelete -> False, GridBoxItemSize -> Automatic, 
       BaselinePosition -> {1, 1}]& ),
     Editable->True,
     InterpretationFunction->(RowBox[{"Legended", "[", 
        RowBox[{#, ",", 
          RowBox[{"Placed", "[", 
            RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]}], ",", 
   RowBox[{"\<\"OKB-USD\"\>", "\[Rule]", 
    TemplateBox[{
      GraphicsBox[{{}, {{{}, {}, {
           Hue[0.67, 0.6, 0.6], 
           Directive[
            PointSize[0.009166666666666668], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJwl0wlQU1cUBuAAitXRCihFFMMDBcQ1FIuy5yFhERXUcYVgJILYiglFoFSj
EVGoYo07DBCTBoKtCwFqxSgQ4yhl0QapK1gWQQEfEpFNEezJeZnJZL459517
/9zz7KIE66KNGQxGMnwNv/BhCbooMjaF2ZTH+Y4N5mWDx7YltgeFuBksuQue
1Bh6fzgL65oecLTRtLLEIrTeqpsitwUUNz26hib8wPwd1Ta1teiw3WDvwPZb
Zwexn/g8mOvm8aawH63SgPWsnpyR9GUGt3SDB7nmnwUFaDPLtxS57t/sfUF1
aLYvuCLfZWsgx91g4S7wS9PrzS+60LIz4Hi7ky0Bjh4G68rBBdLx8tshXgYz
OsHvHgiyYoM8DWZZUBSp9Lcoz/wL1/O8wH1O82c9iUVLYsACTlTqzBdojQR8
wL2UKxeg9Wqwa/6xtg3X0EQHmO90e1zhz+iwqT0UGeNS/LGMifuJ3cE96hv2
LnZ4HhUf7FYbrUiY5I35T4A5eTfT00J9MH8Z+Loypcp5vi/mbwP7+Nh5CmzR
wsnvIJ/GOOtbNlrmBt4ZZHnv8hV8XscDX/ix4tk+bzTjONjSzSRC0opmXQen
eC3yFbayMX8z+MObxtQCKYn5J/ZS5NqBBXlTi9EaV7D5pTFybgJazwUvf8pa
8WoXmsgAv9jEzC+sQIeVgFlLND4elWhxE9iBcGz1m+mH+U31FCm/uWbOopQV
mJ8FvjvvK2ZzEtbNwsFnV9/U3spAs4+Aa597Kq6+xn7CInC08s+x851Ylz0H
218O93aKw346k/cUKc5lbV+a7I/5F4O1yoeKNnc0azO4eS3fr66Bg/lTwSXT
IlPXP0ZLroCt+LzZVXfQmidg4USNb0ES9tcz+iiys9xlHEOEJhaAf5p8cnSh
H/YP2wC+lzTEeMlHiw+CM9J6R6dcwfWq38F93TYmJROw3tIAttgd8eVaFdps
DFwT+ofIIzMA88/7QJEqI/O2muxAzL8O3PAp3FgfF4z594OZ6Xc+W2rROiU4
9+gl7cUuNKMePMs883DI2yDMPwK+EL/e5IEzmufQD+efuEZEBOJ6SSiYNRi5
v74E99OkgIe/xGvTNuF6vQK8I+GxV6A/ricegs8tdJL3V6PDhsHv+XXckI1o
sf0A1J1fE52r0KpVYKsYeV6DCvu1JIHdtiiYv3HRZnLwqxnVTHkUml0Lbk9f
OSdGhhYOgNXDjVJiAM8nsx2kyBl12+wSzuB96YLB47aqU+M20ve/F7wj3DS3
YCZ9/1LwnqaoA3se4fzw/gYnL7Kz7V+K9yPpAx89UXLA9SJaYzNEkUUO7Yel
W/B5fQB4yS+l9t//ivsT8eAOfvKh0wQ6LAfcnXhcs3kJWnwPvM/iWe5hEVrV
Cx5N7298Wo1usR6myJy94fZW99Fm/uA56p1cxQL6/veAQ2unRnRMQQuzwLPU
z23nWaJlWrBoK+dgrB9aR4FdHEfLpxvj/8Gw+kiRvA6dfWMOnZ8Emw6ZMGco
0bwfwEbNcf8t/wctOQeeoOsdWfYWrakEi+Y6eE92wn76LnDTe8dKTjbWiemf
KNKm+JuLxjJ6/n3A/tqhMdNKev5jwYe4q6UlGWjVabDCMyPP2YKe/9vgRstP
POvZ9Py/AYd41NzZHYlmm49QpHXi1fLQPLTQE0y57hTVnELLosG+8YzRijNo
3UkwZ4py+3Aaff9q8LHZJ1aMSun87WBp6fi0J8H0+//1Z4q8VV+1n03R+ZeD
b5QWeQUZ0e9/FDgjRhqxXkXnzwT3CnSRojGcR+IGuKiLJJ0Xr8T8rWCbnrLW
5FPB7P8BT18Nzg==
            "]]}, {
           Hue[0.9060679774997897, 0.6, 0.6], 
           Directive[
            PointSize[0.009166666666666668], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJwl1AlQE2cUwPHlHC0igdFKxUhQjHSsECoiEkyyQREQJdCiaIBGKR7TCmGq
UC1gOAc5NKKiIEJopxa0SqC1Wiom5ZCqoKAVxIMEAoJ00SBCVAz25W1mMpnf
fPu92f8mX1x2JITHmRMEkQxv0ye8OAnPKVK51d3prMcqAVhSAs5IKOVxH3qb
LG8C5wzevWI1hFaPgl0fJKeFBaD180Yo8oT62QI/PpolBFe6h7vZ8HGe6Fvw
w4rmoU0CtKwYvCrek7+K42OyUg3WG/J7imzR2hFw2odnLYe5aMbc/yjSsNmV
XRW22mQBH5xwv8IYmO5rsnQP2HncLP1OLtdkxXHwDa/7DZvM+SZ3NIDHPDJu
hMTwTCaGwYltdUvTJ/xM5jhQFJnV1XTq8EHcL/EDt4b8GKNfgpbvBOtaT/9V
nIJWy8Gd0Q671g2j9fVgG1e3tIK9aNYg2K4+yz+hHS2yG6XIZ5eWDGR2oWWr
wdu6jLEu5WuwPxa83hRwD+9PWwiOCXoVpdkqwP6r4FrPmsWzPdCCfjB32sbS
zBUtnfWCIidnrPQ/z0IrvMHz87i9A/noDgk4/3B762UmPg8iHyzyspMcsyOx
/zKYXdUnjrQXYr8GXNu43Dko2h/7Z76kSPu8i4o9cbiuXgE2u/74WmI4Wh8N
/vnzlgWWYWhWLrh0hlN5DB8tqgNf+a3GL9AfLXsCfrFNyBtuxflKaz1Fxjkm
Z+5mrsV+DlhaZ/skXYvrDDFYuGivLpSNFmSD+4l3qR8WoqU14DRHF79H8bhf
0QMeMHgbe56iOyzG4H54XG09hSbcwbezb6mKtwdgfyR4rl92VHUJWpIBviou
skgaRMt/BUd8nB095y1a3QWuDhZH6WrReuIVRS6d7OBtvoTzWcvARW0jzHgN
WhQBftDeopm8jpYdAs+fNzvr62y0shpc+wtzunTROuy/D74Z8VnaF0qcz5gG
a8JihW1Lg7HfbZwid3WFCx71hWB/OLjbcZ9w2Hcj9qeAnRrmK7y8N2D/OXB1
pa3a2gdNdILd4sL9nRQ4jzMFVupUAkYgWrLkNUVKxHzjrjC0PBSc0RfVNGs/
Wn0A7LOxgik9GYT9P5lcfld2UIXrrDvgNWciKi4UokVvwGoxixyzQssWTVBk
49T5qCo3tDIE3Db20drQP3CeNgmc9bBEOPQdmlEJNgxsr+xyRAtugys2dzqX
MtHSCbDllgPm2w2B2O88SZEXc5rXFLuiO4LAqkPj/c0b8XkS+8B2P1TKRpvx
eXPKwcvZ3s7dX+L3IfkH7NPN8deNoeWvwDWn7XsX5uL16gUGirRyLOZrjuB8
fQD4gAtzYeMk3g8rEbyi8XEmg8J10RnwnxEMi+iX67G/BVy5vqBczMLrlS/B
qbWG/vxbdP8nbyjS02a0bGch7mesBa8k/00lAtGCeHCPUJ7p8D3Ok54GH2P3
mpWHoBWNYHbTWIr1a+ztoMD7Lax6bx6l++e9hfMYYKnTBtP9JPhTq6cx9wLR
km/A+9LydGojWn4S7OOxKeVyN92vAr9OOGWsb0frn4PFbiVljwrRrDnv4P/o
96avjtugRTwwqyyUecEcLdsNbph25SXr6d9/ETgyUsrX/k2f/2tgYktd7OJm
NGMI7JwlS5m5HPcL7KcoMvaqL9FvjZZywVYar9Skfvr8x4F3n3A3brhDn/+j
4PfMPPNU+vwR9WCtg+xQcCLdPwB2si/I3KCi+2e/p8iDxqCUF1F0vw9YZesZ
M36d7t8BPtc5sGOWL/37LwCX5VQ1VnDxPLKugNnMQYn3FJ43UR84bGLZWbuS
YMH/vr8JYw==
            "]]}}}, {{}, {}}}, {
       DisplayFunction -> Identity, DisplayFunction -> Identity, 
        DisplayFunction -> Identity, AspectRatio -> NCache[
          Rational[1, 4], 0.25], Axes -> {False, False}, 
        AxesLabel -> {None, None}, AxesOrigin -> {3.8804832*^9, 0}, 
        DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
        FrameLabel -> {{None, None}, {None, None}}, 
        FrameTicks -> {{Automatic, Automatic}, {
           Charting`DateTicksFunction[
           Automatic, DateTicksFormat -> {Automatic}], 
           Charting`DateTicksFunction[
           Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}},
         GridLines -> {None, None}, GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.4]], 
        Method -> {
         "NoShowPlotTheme" -> Automatic, "AxisPadding" -> Scaled[0.02], 
          "DefaultBoundaryStyle" -> Automatic, 
          "DefaultGraphicsInteraction" -> {
           "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
            "Effects" -> {
             "Highlight" -> {"ratio" -> 2}, 
              "HighlightPoint" -> {"ratio" -> 2}, 
              "Droplines" -> {
               "freeformCursorMode" -> True, 
                "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
          "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.922526, 0.385626, 0.209179], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.528488, 0.470624, 0.701351], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.772079, 0.431554, 0.102387], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.363898, 0.618501, 0.782349], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[1, 0.75, 0], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.647624, 0.37816, 0.614037], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.571589, 0.586483, 0.], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.915, 0.3325, 0.2125], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[
             0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
             AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
          "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
          Scaled[0.05], "AllowMicroRanges" -> {True, False}, 
          "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
          "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), "CopiedValueFunction" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& )}}, 
        PlotRange -> {{3.8804832*^9, 3.8906784*^9}, {0, 58.460213}}, 
        PlotRangeClipping -> True, PlotRangePadding -> {{
           Scaled[0.02], 
           Scaled[0.02]}, {
           Scaled[0.02], 
           Scaled[0.05]}}, Ticks -> {{}, Automatic}}], 
      FormBox[
       FormBox[
        TemplateBox[{"\"Low\"", "\"High\""}, "LineLegend", 
         DisplayFunction -> (FormBox[
           StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                   "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxDividers -> {
                 "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
                GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False], TraditionalForm]& ), 
         InterpretationFunction :> (RowBox[{"LineLegend", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                  ",", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
              RowBox[{"{", 
                RowBox[{#, ",", #2}], "}"}], ",", 
              RowBox[{"LegendMarkers", "\[Rule]", 
                RowBox[{"{", 
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
              ",", 
              RowBox[{"Joined", "\[Rule]", 
                RowBox[{"{", 
                  RowBox[{"True", ",", "True"}], "}"}]}], ",", 
              RowBox[{"LabelStyle", "\[Rule]", 
                RowBox[{"{", "}"}]}], ",", 
              RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
         Editable -> True], TraditionalForm], TraditionalForm]},
     "Legended",
     DisplayFunction->(GridBox[{{
         TagBox[
          ItemBox[
           PaneBox[
            TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
            BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
          "SkipImageSizeLevel"]}, {
         ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
       GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
       AutoDelete -> False, GridBoxItemSize -> Automatic, 
       BaselinePosition -> {1, 1}]& ),
     Editable->True,
     InterpretationFunction->(RowBox[{"Legended", "[", 
        RowBox[{#, ",", 
          RowBox[{"Placed", "[", 
            RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.890858526713822*^9},
 CellLabel->"Out[109]=",
 CellID->13496327,ExpressionUUID->"7d9c801c-20dc-43cc-9be6-bd0511cc6f70"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Here we plot the volume time series for each crypto-currency for the last 120 \
days:\
\>", "Text",
 CellChangeTimes->{{3.832848250672615*^9, 3.832848262793026*^9}, {
  3.832848341275136*^9, 3.832848342658167*^9}},
 CellID->472067504,ExpressionUUID->"6926151f-b664-4af2-ac14-8775e014f988"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"nDays", "=", "120"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Map", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"dsTemp", "=", 
        RowBox[{"#", "[", 
         RowBox[{"Select", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"AbsoluteTime", "[", "#DateObject", "]"}], ">", 
            RowBox[{"AbsoluteTime", "[", 
             RowBox[{"DatePlus", "[", 
              RowBox[{"Now", ",", 
               RowBox[{"-", 
                RowBox[{"Quantity", "[", 
                 RowBox[{"nDays", ",", "\"\<Days\>\""}], "]"}]}]}], "]"}], 
             "]"}]}], "&"}], "]"}], "]"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"DateListPlot", "[", 
       RowBox[{
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{"Normal", "[", 
          RowBox[{
           RowBox[{"dsTemp", "[", 
            RowBox[{"All", ",", 
             RowBox[{"{", 
              RowBox[{"\"\<DateObject\>\"", ",", "\"\<Volume\>\""}], "}"}]}], 
            "]"}], "[", "Values", "]"}], "]"}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"PlotLabel", "\[Rule]", "\"\<Volume\>\""}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"AspectRatio", "\[Rule]", 
         RowBox[{"1", "/", "4"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], 
     "\[IndentingNewLine]", "]"}], "&"}], ",", "\[IndentingNewLine]", 
   "aCryptoCurrenciesData"}], "\[IndentingNewLine]", "]"}]}], "Input",
 CellChangeTimes->{{3.8328420692741537`*^9, 3.8328422003551283`*^9}, {
  3.8328422898980417`*^9, 3.832842342527631*^9}, {3.8328423953373203`*^9, 
  3.832842428882183*^9}, {3.832843202241749*^9, 3.832843205310986*^9}, {
  3.832846598150277*^9, 3.8328466030742702`*^9}, {3.832846635984754*^9, 
  3.832846736099024*^9}, {3.8328467716407223`*^9, 3.832846818508429*^9}, {
  3.83284685719313*^9, 3.8328468842449217`*^9}, {3.833105624553925*^9, 
  3.83310562579109*^9}},
 CellLabel->"In[110]:=",
 CellID->1233947710,ExpressionUUID->"4fa8a4c3-f5de-4413-9b70-5ecdc0a6ee4f"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"BTC-USD\"\>", "\[Rule]", 
    GraphicsBox[{{}, {{}, {}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJwl1Q9MlHUcx/EHQT2Q4LDjjwJxCNphs53g8JyHnYiCi/S4BTFLdhEQTgbU
JAktT9LtRiInGqH98dRICkpGBogxn0kRFdMrnUKanQaKhnLIHzFR4nk/t91u
r/2e5/f7fb7f3/NceGaBKXuaIAhbp77S79RHW3B7YKUgfNqcEeUfP2XzQVwr
trXMkmxrx47R4cM+ksW7uH+xrdxbsivwDtf/cmjBNMnqeKwcWtw0XbIxD5uP
R0bOkGypwsUhpalPSW4QseAYqfeV7LyDdeU3R7wkK/3/lezq/ayO6w0vYFFY
NeghuXATVof56Nwk2/fj7pg6K+s52rBu2c4+T8lCP8595K/xk6ydPSBZm7J0
J+NmPVakjXezvi0Hm1Xmtglpn6ING50R0eR1tWLrqW3pzKfuwxqn8Db7Nfre
lRwU+2II45ZluL6iP0lN/jfwuOHXpcHkL8fvbzLNn0f+Fnw1Zc5D7jfcwFbf
i8NB5Pe+x357i5ICyR+LNZ43h5jPYcaqnOXfPU3+D7H+huGPueT/Hm+xXo59
hvx/4+49k7OYz+Y5KNkys7yR9cQYnLy36GPs2ogvLhjbH0J+K869HL2HcWMj
zrpy5RjzWa7i7va6NzlfDTNckvM8U8rmkF+LxY6UNKx8FfcWjiVwPg27saGu
s0fOfwJ3Wjb8FUr+HvzawuBl3O9wH6Jfvjnh9EN4Hi+5sE03m/zpWDdp0gaQ
vxRfrQ01cb+tXh7PdjvC/sVLOEvRn0q9XMJ96v/zk6Vcr34OizUrt/K8GFNx
0IZr1Ury78D6xfVrWK/hK3wg5U+5n84LeInKbmB+5ROsyby9jvNg0AxLzv9x
fXwE+U043d0vkTz27Tjo2vku9uv4Eo/4hE/Sb+F3nNuqCqZe2kf45O44Nf0z
zx8hT1lwJratxxavzeNy/9/F/SF5j6mn6xh27Dst8Pyqz+HquDNz6ZdxHNeG
uqs5f5Z5o9Rno2pczp+MHR47Jti/8x2scJ1dzXrKI9h6IqOL593wG9bYvM4p
yD+KJy6ZoqivPWxMcsO9kzGs71iLlZsjHqvIvwXXT7ckkk/7OV5RGZRPfc2d
WDxUFiznv489Sr9O4HkSQx5Qj6oexbPkX4M1i0oKosj/Fj6QuPDlSPJ/grsy
ksvCyP8T/rZp12HubxjE8/btOsr7wDlnXHJscHFVOPkTsPqfkh7mM+Tj7e81
n+f6wmqsGOgNYH77WZw1cnAv9XUMYDFNG009hcCHnI9TH9ylftqVWAxv6ZHf
f5uxxrfSRT1tH2GPi64KLJ7BnbfqV9FP1208EeDWR33Vqv8kt0wmNPK+Mq7A
uap18fTPkouLAzqu835uqMT60KOxcv9/wOkF+mL+X5S3sK1sUTvny+D3iHo0
v97BfguXY+tpw3Lmt2fL4/pdRfwfOCqwrqTmG9YTWnHxS0mj8vu/F3vHJbWx
vtlngvoUPchg3KbDX3Rmr5XzZ+KQV2zy+Xbtwcro9jjmVzdjRdHxoZnkv441
Tb41yvj/Ae8he94=
         "]]}}, {{}, {}}},
     AspectRatio->NCache[
       Rational[1, 4], 0.25],
     Axes->{False, False},
     AxesLabel->{None, None},
     AxesOrigin->{3.8804832*^9, 0},
     DisplayFunction->Identity,
     Frame->{{True, True}, {True, True}},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->FrontEndValueCache[{{Automatic, Automatic}, {
         Charting`DateTicksFunction[
         Automatic, DateTicksFormat -> {Automatic}], 
         Charting`DateTicksFunction[
         Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> 
          None]}}, {{Automatic, Automatic}, {{{3.8788416*^9, 
           FormBox[
            StyleBox["\"Dec\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.88152*^9, 
           FormBox[
            StyleBox["\"Jan\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.8841984*^9, 
           FormBox[
            StyleBox["\"Feb\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.8866176*^9, 
           FormBox[
            StyleBox["\"Mar\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.889296*^9, 
           FormBox[
            StyleBox["\"Apr\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.891888*^9, 
           FormBox[
            StyleBox["\"May\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}}, {{3.8788416*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.88152*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.8841984*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.8866176*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.889296*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.891888*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}}}}],
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     Method->{
      "NoShowPlotTheme" -> Automatic, "AxisPadding" -> Scaled[0.02], 
       "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.647624, 0.37816, 0.614037], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.571589, 0.586483, 0.], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.915, 0.3325, 0.2125], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
          AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
       "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
       Scaled[0.05], "AllowMicroRanges" -> {True, False}, 
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}},
     PlotLabel->FormBox["\"Volume\"", TraditionalForm],
     PlotRange->{{3.8804832*^9, 3.8906784*^9}, {0, 5.4622230164*^10}},
     PlotRangeClipping->True,
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{{}, Automatic}]}], ",", 
   RowBox[{"\<\"ETH-USD\"\>", "\[Rule]", 
    GraphicsBox[{{}, {{}, {}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJwl1Q9MVVUcwPHLHxFR4FWEOHU9mzY3XLtbDV5F9iDyD4k+WaVJ2ZWgybR4
NhQcVHdoyV5Cd5hCEewVact0vOjf25vmJTF5I+UyN7M/zodl/IcXKj7kT3G/
h43dffY795zz+53fPW9JXlFOQbgkSSUz/+Zz5k8u6htMn3lkZfaEZp6S8hF2
pzftGDGtncWeeMupm6b1ITF+dmfEqOng/H7TVueU9pdpawbW1yxVhkw7dmJp
0cLiXvOpHhHjfxwvGzbt0XFw0+t1zBfox+qWT/zELfcPsJ+zNanY/pTwnty3
/jHtLMR6YmR3t2n3IWzPbIhjXeM0Vk58uLrPtNSLjU2+P+6Ylu8dZNyzFwz2
q6Rhtf6ki/1orwmfbF1EfrqGrdu2xPSTv0/Efavapsj/BnYsTfTeJv/4IdPO
5pfeYz31MeHyzvNRGWb+r2L7mRXuSfKvwsGcmrZ5ZtzixXLjz2nj5H9dvJ97
6e3/yH/eMPupK9zA++4UXFdRuzbCfN9QsFr6+RjrS++L8S3+c7wvf4fl4h2q
ZI5XruFAyfdhzKfNGWE/00f90+T/CJaVjXtx8GVslyZPs561EmsVBauY39GC
jdikTMarfwpXdzRSH09UkPNR2/NZPyBje4W2IIz8c7HnmLWS/rS/iy1ho2nM
52zG29PLj7O++zdsfBVfRNyI+JfzPVDfxnrSw1ieZVygnvJmHLiSfR4rFdh9
M7Of89ROYM+RkgSsX8bWZ1o+Zr2gNEq+B15ZQ77WZKyOFF6lfxzPY+fhjC6+
H/Ud7PBG7yI/z5d4+X7X4zhwCbtLXV+Ek/80VooeOj7btH35TdPedckZxJ05
2NMbs/sW51+O5bbWQfIxjmFD97VwnlKXiDv9K6m3PIEDm35dzPrKslumbdVX
/MS1Dbg05dE6rO/Fntja+6hnsAmrBxtewNaL2JFTFLpL/iFs7PJVi/5/8Dbj
O2K/Zj+edTjQPqAwPrAH28ayykT+n2Lnau+LQc6/Q4zPzvqW+jpvY0tksov6
uh8YY71EV6XIfy12NIZrzC8V49J9gQbylRuxnp1WS32VdvH+Z5H+ueQ/ii1S
Vd4s8l90x3RosPPpWM5/FfZWHV4QR//vwtH7lzUzn6Mey3E14rzVc7h3IGgj
7hnBy9sHUumnwIIQ/dpxNUH0fyZOcl97M5LzfwNbYhfHYGcdtu+8bmc+909Y
Xp+/j7gxiG3Rc5/D0vxx6t96o4nvSU7Hnt1lMdRH2SHi1eGT9LN2eFx8DylJ
WD+D9fGSSPYX7MNX8qTFnJc14S73z9GzMcQdK7HSMOcb+lPdju0X9yXRD54a
HN1TOSb6/xQOFa/fSj0sPXjN5Vobtt8zwXxd+e3i+38C6wNRS9ifuwAbw+PN
9IfxwYT4vfqlRdx/PmHbQKq4//4W822bqhT3X9yk6c05Gyuol2bDScm/b6W+
eh6uS3Tlct7Bg1jLXREU9/8PWHU/uRM7ukV84WgoLON/WTq81g==
         "]]}}, {{}, {}}},
     AspectRatio->NCache[
       Rational[1, 4], 0.25],
     Axes->{False, False},
     AxesLabel->{None, None},
     AxesOrigin->{3.8804832*^9, 0},
     DisplayFunction->Identity,
     Frame->{{True, True}, {True, True}},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->FrontEndValueCache[{{Automatic, Automatic}, {
         Charting`DateTicksFunction[
         Automatic, DateTicksFormat -> {Automatic}], 
         Charting`DateTicksFunction[
         Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> 
          None]}}, {{Automatic, Automatic}, {{{3.8788416*^9, 
           FormBox[
            StyleBox["\"Dec\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.88152*^9, 
           FormBox[
            StyleBox["\"Jan\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.8841984*^9, 
           FormBox[
            StyleBox["\"Feb\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.8866176*^9, 
           FormBox[
            StyleBox["\"Mar\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.889296*^9, 
           FormBox[
            StyleBox["\"Apr\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.891888*^9, 
           FormBox[
            StyleBox["\"May\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}}, {{3.8788416*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.88152*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.8841984*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.8866176*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.889296*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.891888*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}}}}],
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     Method->{
      "NoShowPlotTheme" -> Automatic, "AxisPadding" -> Scaled[0.02], 
       "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.647624, 0.37816, 0.614037], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.571589, 0.586483, 0.], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.915, 0.3325, 0.2125], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
          AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
       "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
       Scaled[0.05], "AllowMicroRanges" -> {True, False}, 
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}},
     PlotLabel->FormBox["\"Volume\"", TraditionalForm],
     PlotRange->{{3.8804832*^9, 3.8906784*^9}, {0, 1.6298099411*^10}},
     PlotRangeClipping->True,
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{{}, Automatic}]}], ",", 
   RowBox[{"\<\"USDT-USD\"\>", "\[Rule]", 
    GraphicsBox[{{}, {{}, {}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJwl1AtMU1ccx/ErYypuY7U8fA4uUBAHkqpoBAEBmRNBV9kjGOZyx8QoMu10
E1lMbBxzMzrWAJM6cRYlCA6lMmENVqnKCJModSxYosmqcfEFWJ52srh5v7dJ
03xyes///M7/nhOSuy0rz0sQhMIXX/n3xUe77WFfiiDs2p9TMD31haXDuLaz
cOFU2cYr2Lwy36KWbe/HCcmeWYy7pz2SvUnTd/Zl2WIq7lg5+PMrsnUFePqM
iEfYcAhbe61v87zFju0JOU1+sl2PsMrZtopxVcBj2a5F1504eRnu8F0X4CNb
vxkbLzaFUN9cht1Xz+3wle24gNPKUsZVsoUHuHJLq/c02Vp1n+zq8pMTyCcl
4A17vEewcSN+cEqsZX67ETsP3zhFHncLrq9+Nu8N8v+NPQtuxgaS//V+8kbd
uUE9QxzOzHi8Loz8n+AF6gyzSP7vcOOSfV5zyW/F9g3pT2eR/y7ebttxkf/r
Xx1gPddifYLIvxgbq/bdCiW/hE3qoRj6KxzAhl1ZRcHkb1J8qMjJ/6W/8Huj
1SbmM/o8kZ0c11BAPftCvPXTW/Oxez32XJi1gufFb/HQaUsK47pGLHoZw7Dh
NtZVZGSxP5aJbvZ7sH8563Fp8dXeqboQ8ufgJXXaVPY3+Ws8UGoOYFzfgK3F
x1ZpyN+Lo9uGQxh3vDQo+17kkS7qCTHYtHPt0tnkz8bZrR/fZX5pr+JKn2Xk
MdbjGu/gOGzvwaWa46sjyC8MyS6om2ignhiF/+w5nxBA/vexqnmyh/qGPTg/
dlKQ0v86nNT12jXmd3XjHxdYzpNH9RxnVXxkfJP8kcP03xB9P5L8Wbgg/m4d
ecy78c4p9lVK/2tw8eY1p5lPuIHrv+kKCyf/OG7e67ORcSl8hP7e7nyq5H8H
N8av2avkL8Ir488e4H12n8Bty3OLyStex7U11knsp86DNccOd/P+GkJH2Z/g
P2rptyUTm07mOmeSfyeeUnGzTOl/FS5wieHK+e/EmT2edqwfxbZlzT6sxxw8
JnskMPED6jvSse3dydFY+BxHzinMY/+1P+HMkdW/cN6kDpw0FpMeQ/4hHL34
Ugn9ts9+KrtzMHtMS/4VeLRDs3k++T/DY9WmsHnkP4JPJfWUs9+G3/DuiRO6
osn/BOtVxnjmd83wyP7SsUfplyoNj+VXSawveSs+nuaXOIf8JtxiXX0Umy/j
501Hv1D634cjugfuY2HaP7IPbpvynz/5U3Dt85JR7l9pCxbzTyyiX8YfsH9U
7NYZ5G/F7ra1veyn+yFu9zOlcb5F/2eyz90MusLzuiQcGdf8FfepYRPWXGro
pJ6lFE+fq65Uzr8Nu2LGz/A+qO5jqWR7jnL/TR3nfjqzSeQ86ZfiB7bm33kf
zHnY5VD1c987vsdOR00e9YUWLGk83syvvYerg9WhnB/J91/uo/XDEjYuwZXt
M23Ynout5R+G0x/3QawX3wpkPeKvuD7vcoty/9/BwlhiTFDq/zZ1i8I=
         "]]}}, {{}, {}}},
     AspectRatio->NCache[
       Rational[1, 4], 0.25],
     Axes->{False, False},
     AxesLabel->{None, None},
     AxesOrigin->{3.8804832*^9, 0},
     DisplayFunction->Identity,
     Frame->{{True, True}, {True, True}},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->FrontEndValueCache[{{Automatic, Automatic}, {
         Charting`DateTicksFunction[
         Automatic, DateTicksFormat -> {Automatic}], 
         Charting`DateTicksFunction[
         Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> 
          None]}}, {{Automatic, Automatic}, {{{3.8788416*^9, 
           FormBox[
            StyleBox["\"Dec\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.88152*^9, 
           FormBox[
            StyleBox["\"Jan\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.8841984*^9, 
           FormBox[
            StyleBox["\"Feb\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.8866176*^9, 
           FormBox[
            StyleBox["\"Mar\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.889296*^9, 
           FormBox[
            StyleBox["\"Apr\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.891888*^9, 
           FormBox[
            StyleBox["\"May\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}}, {{3.8788416*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.88152*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.8841984*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.8866176*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.889296*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.891888*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}}}}],
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     Method->{
      "NoShowPlotTheme" -> Automatic, "AxisPadding" -> Scaled[0.02], 
       "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.647624, 0.37816, 0.614037], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.571589, 0.586483, 0.], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.915, 0.3325, 0.2125], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
          AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
       "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
       Scaled[0.05], "AllowMicroRanges" -> {True, False}, 
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}},
     PlotLabel->FormBox["\"Volume\"", TraditionalForm],
     PlotRange->{{3.8804832*^9, 3.8906784*^9}, {0, 7.4778462453*^10}},
     PlotRangeClipping->True,
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{{}, Automatic}]}], ",", 
   RowBox[{"\<\"BNB-USD\"\>", "\[Rule]", 
    GraphicsBox[{{}, {{}, {}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJwl1A9MlGUcB/B32vSooJPFTtTJJZEoS09YjPKwg5jDTfNG2T+VXRaFf8pT
yxPHuicWSml1SjI5qp1zszWi3pR/XShv/Iv/XWOB5a1OQA7w6O5QlNRhvN/v
bbdnn/3e53mf7/N73/exHXtz8uZIkmSb/avj7M+wdyyQIUnio13+5tlRspTD
UkLhiQZ1dDTTGscaRR2VCTpwelWdOoZ047CsccvqqM+k7+laflRH8x7avPp9
1EUZ3Zr/AubLCj3YU1evjr5xWht5qhpjzHX444Vvw6Zn6Xf+fvG8Olp30q8O
VWB9Vyn9WWlOjTp6LtKHbfZadZRGYeH4w9uk2hAdQD22yYr1LUbacWwU+3G8
Rc+xl1xAfgcdlbX5IvK76aPB135F/mt0Xdl8nJ/5kQk4v6znZ+R/GhYPJRzH
ectv0IrzEs7X9ymsjIdTPMhfz/mbitpQNw3y+qkr4V+Q/+F/UQ9bShuRPxUW
T2as6EB+C+v7c2t/Qv5jtG3fLdzfUENP7hRtyP8P3Zr1INZ3RAThiYAG6ysp
sDj5/IFO5N/OemfyCNbTl9CfLI/Dfs3n6RM3R3Aewkt/bxzDfuR5Iay3sr8X
832GEPNU9aA/2q10mjEK520q5vX9X1hQt/7AenSNrgv5/2S9sqCK+eeGUV/8
RLYb+VfB4nJkE/O/wnr34cXIZymiq2MXwY7v6Nxnqi8hfz/nr9+Tgn6HpEnU
exUL9qdPog82tuF5Mm+h7zdGYj1hh8XGqeo+5P+W9fzEBubvow+1DMPaGXrp
l4O9yJ94A55bPtqC/Dn09ZeH8Hy5Cuk3W+JxP885eu0Hibhe+h0W+1dmob+G
u3S9fzv6ZUm4ietrl6/m+7+ZjlhYASsF9OXRD/H+hc7Sfa6vYH0vrbuix/tj
nqbXFOpxHmLZFLzIehTvo7yRLj8bA/sO0jZbP/qlPUNf6Dbie2LqoqN3Pw5b
p+js9E2Y74q7BfekrYM9G2jPnXns/3v0gWvx6Kfha1g0679h/nbWnd6n2P9J
2risi/mX3FZtSnK58X6G1sNS6HUPnjf9Plgkyx04X3MF6zkzAfRbtNK7DH/h
eZWDdGaD3I78sdPMJyJakT+LLtm6Bf0zvTvN73WqBs+H9TQ9nBCD9V1N9Eim
GXk8Ac4fiAri+ZB0/8HbHEk4D0MGrUk/h++lZTd9ZGkp1necolNri5i/kZ5e
0gGHxmDhTK9BXv2jd1AvmLnP/q+jQ0NOfv/y6WAoF/eXT8Lipd/Gkc/XwHpY
k4j1tH66Kr4SNi24C68InkF/rGvpG8l27MeVRxc8cAT383xO2/0K87th0bnN
i/MxDLPuHajH98wSdQ9Wnotm/jRavpqH/Sk7YDF/YEE3ch1n3dnUjn7p6+i4
Yj/6a75KZ1cWd2T8D+GlqzM=
         "]]}}, {{}, {}}},
     AspectRatio->NCache[
       Rational[1, 4], 0.25],
     Axes->{False, False},
     AxesLabel->{None, None},
     AxesOrigin->{3.8804832*^9, 0},
     DisplayFunction->Identity,
     Frame->{{True, True}, {True, True}},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->FrontEndValueCache[{{Automatic, Automatic}, {
         Charting`DateTicksFunction[
         Automatic, DateTicksFormat -> {Automatic}], 
         Charting`DateTicksFunction[
         Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> 
          None]}}, {{Automatic, Automatic}, {{{3.8788416*^9, 
           FormBox[
            StyleBox["\"Dec\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.88152*^9, 
           FormBox[
            StyleBox["\"Jan\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.8841984*^9, 
           FormBox[
            StyleBox["\"Feb\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.8866176*^9, 
           FormBox[
            StyleBox["\"Mar\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.889296*^9, 
           FormBox[
            StyleBox["\"Apr\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.891888*^9, 
           FormBox[
            StyleBox["\"May\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}}, {{3.8788416*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.88152*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.8841984*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.8866176*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.889296*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.891888*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}}}}],
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     Method->{
      "NoShowPlotTheme" -> Automatic, "AxisPadding" -> Scaled[0.02], 
       "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.647624, 0.37816, 0.614037], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.571589, 0.586483, 0.], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.915, 0.3325, 0.2125], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
          AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
       "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
       Scaled[0.05], "AllowMicroRanges" -> {True, False}, 
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}},
     PlotLabel->FormBox["\"Volume\"", TraditionalForm],
     PlotRange->{{3.8804832*^9, 3.8906784*^9}, {0, 1.337194824*^9}},
     PlotRangeClipping->True,
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{{}, Automatic}]}], ",", 
   RowBox[{"\<\"USDC-USD\"\>", "\[Rule]", 
    GraphicsBox[{{}, {{}, {}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJwt1A1MVWUcx/HjFVAbwdVSyJe8uWUhWLe13G04PTLUXFY3nCWl6yQiGRiX
iRhGcdPRmOS8QzEUwksUymZCrBZqyhGzEYhewQiUlwOIwFXkQrwZqHG+T2zs
2Yf/c/7P83vOc3hmc3xEtEGSpF0Tv/o48WOO77m7QpLUA3kBHROjpBzB0pu1
xmZ9dFzE8vCjQzd1q71i/pB3YJNuT4Cb+Z1frK7WR1MYts/qdlzXbY37v56e
+pc+2g9j2RK+qlF3iYqV1ORdmm7NLeoxbdGsb5x5h365Gw2sJy/H0onmq3X6
aNsmvPBs4zV9dB4UfvDda3/ro+sclg2TOukndYv6/t232/TRPOMu/dcaH7WQ
fylW2i9nU3dsFfWfWmLopzqw7JNVeIP8Z7Bk3LnoDvk7Rf3Cx0c4T6t/L/V2
Y+st8r+K1ZDsKf3kj8JyytKFbvLvx87z6w0e+pZhU9LPBfST27H99aqjneT3
vUf/tH0Bt8m/BMtrPRv7yK9grb5sVhf5M7AzyFnUQ/5fxPyEOR3sX2nFyrJa
327yT+ujv1K2m/nqy9g0Xvs9+/Vswlp/5eA98qdj9YR7Nc9bS7GS+6GH+fYm
Ya/eqeQp8fGQxzHyBPvXzFjZUp/BfOP72LTE7UddTsPa9pRz7MdWLOYPv7SP
vM5G0c9SlUndNbmfvGGTd7ST/wWsGIrrOD/zBmwyxM3kfJQ9WLtyOY3zcJwU
80P9GtiPWi/m+2z4kffjkQZYb3vyJvH+g4UTuqawnnU9lmMNNdieim1xQZsG
yF+EpT8Px7N/rQ6rff6V2PgQKyPRnkHyP/8P/T6NSuX+2CKwFuD/BvfLmYKl
Gfmj5HEVYntguMp5SNew8u3yDt6XeQw7LLZI8ijPDpLPfcpC3fEWlnNPl7Mf
NRkreaVerOcpwOrxilPkM13BWvU774r3Pyrq0duC2Y99wRD9q5K2cF4la7F6
rDVb3P8krNSk5rO+MV/UG7/6kv8PcrV43pJ9k+/TNoS1jESDuP/zh3n+90sH
6edag1Xr7DXsR0rEzhjvaZyTOU/43IL3xslfiU8WpTcGhun5B3B607oMg251
7ojuE4vj5kzS7VmF5cC9cx+QPwGb1ye8OEb+HGz8o/n4EPkvYXtUROR98vdh
14B5HvdBe2qUff0QMlXkD8dK1l6F+fIn2NlZcYP5tmzsOt8wf4T8FcLrLrYM
k/8u1rwtTu6PFHAfZ0U+zvmbV2BniH8O56PEivqinTXcB0eW8NliX/H+y7H9
YaK4r54ebDz8dCj7MT35L/2s/Zns37oM2xu0t/ne7R+Junfpdb6/kkxcUhVS
wHrab1h9ZeVjIn8XlpKCprOePH2M5z+7GsvfbaFY7dyTTz9nNJYGgw3cD9cB
LH8wO5j1pTNifuHRxeL938LKjkOf01/xG+f85p3OFvktWP3m2AWsbsaylPDc
KPm/xspKrxzum+lXrJWv2dpL/jZsywyb+L7+A4vF2wY=
         "]]}}, {{}, {}}},
     AspectRatio->NCache[
       Rational[1, 4], 0.25],
     Axes->{False, False},
     AxesLabel->{None, None},
     AxesOrigin->{3.8804832*^9, 0},
     DisplayFunction->Identity,
     Frame->{{True, True}, {True, True}},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->FrontEndValueCache[{{Automatic, Automatic}, {
         Charting`DateTicksFunction[
         Automatic, DateTicksFormat -> {Automatic}], 
         Charting`DateTicksFunction[
         Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> 
          None]}}, {{Automatic, Automatic}, {{{3.8788416*^9, 
           FormBox[
            StyleBox["\"Dec\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.88152*^9, 
           FormBox[
            StyleBox["\"Jan\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.8841984*^9, 
           FormBox[
            StyleBox["\"Feb\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.8866176*^9, 
           FormBox[
            StyleBox["\"Mar\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.889296*^9, 
           FormBox[
            StyleBox["\"Apr\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.891888*^9, 
           FormBox[
            StyleBox["\"May\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}}, {{3.8788416*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.88152*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.8841984*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.8866176*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.889296*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.891888*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}}}}],
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     Method->{
      "NoShowPlotTheme" -> Automatic, "AxisPadding" -> Scaled[0.02], 
       "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.647624, 0.37816, 0.614037], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.571589, 0.586483, 0.], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.915, 0.3325, 0.2125], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
          AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
       "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
       Scaled[0.05], "AllowMicroRanges" -> {True, False}, 
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}},
     PlotLabel->FormBox["\"Volume\"", TraditionalForm],
     PlotRange->{{3.8804832*^9, 3.8906784*^9}, {0, 2.6682206827*^10}},
     PlotRangeClipping->True,
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{{}, Automatic}]}], ",", 
   RowBox[{"\<\"XRP-USD\"\>", "\[Rule]", 
    GraphicsBox[{{}, {{}, {}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJwl1Q9ME1ccB/C3LWqcRKubAsY/tyZOxQ3rnCCi8yCsxgGhk7CyoeYCaKiy
UYlTcUYvI7B/GDumMARNGcFtgGv9M3UIelK0iIAVZzewzq6BWRjCCRQpbHPc
92diXj75vXu/9333erySmrVp2/OMsb0T/5Vx4p8mq6cvijFxkqvp1sTIhBKY
jUSE3FBGk418xLujURmlx+QvyyOuKaMc2Asb0/6oUkYumjz4duw5ZdRlwmK4
yW5XLBaRSw6NNSu2SjRfe2PSTWV095Ijt9pQV83+Gy55MAX9+fXkn2xB59HX
QF55NumMMpq/gcV/c67dVeyoJ6uD3mhSzLxk4bMh7Eczqw/Pd74j25B/LXlB
eiDl304O9cvII5nI5w/WXUH+WnLYvKX3kL+b/GFhHPrpZjxGv5TmRCfyR5BP
FWvbkT+NfDUsrxX5D5PNl+7/hvyXYDZbfwHr8R6Yf9NZjX7GgH7Up71+uA35
w8jB8fPRzyHA4vsB+Q7k/4rq9SrDbeT/mequnB48LzykusoWg/MxTR2A82bk
PkD+leTYp53Yv7wFlho8e7A+9zksWqQivD/dWZq/bk009i+6yNXp7+H8rJNl
zF9V5ZGQXwOzJTv2Y31VCtUr1hzH/vg8ssPXjP0bLeSmmWdwfuYO8olELe6T
44UnWK/bJeC+slBY1JcW4/1qkqm+LFnfgvyfkjc+i0Y/Uw15Vv9OrCc56fns
oddwvjIbRL1r36vIyy0jG/ZPqUX+JPLi+A/qkf8QObizHedl/ZEcWbYX/dx3
ydmeYeRT/QeLEd+13EH+JUMwn+vBfo2bYKZutWN98wGqLyixXEf+U1S360J/
Rf47sLT4i2z014yTnXFlsLBoGPOjMvT4HpgSYDEv34B+Ug7VndzHeF9yBXlL
YRLycm00f2z+BuxfN0qeamnH+xHVPsxfeGEF1rfGkQNDwnE/3HtgKWPfE+RV
lcNirqUI/fhbNP8HUY37Y/TBfOTyBMw3LxzB85UXp9H930h2Ol90If9umJ88
XNeB/CfJR385id+T0DRC929VIvZvGiT7MjNxPtK8p3DvZh7Py1ryzZxG9ON2
kdOCqih/KSw+C6nE90u8Tg5fpEHdOkD2b+6g71/wKPa7em4t5Y+BWfq959Cf
/wgWYi+rB5D/W9g9+vC0F/kbYE46NteN/H0wn9pdjO8hC/RjvTm7E+4jfxTZ
17+e3v9OWGgt0Hch/zHYXZry9SPkvwpz9pqD/cjf46fvkfUlzOdeHoMNxe04
b91bMHs3Jgb9xAxYKr8SivOyFsKi5vua35G/jur5jUn0+39Ezl77F+4vP3Mc
68W7ArBfYyR5l/Y4ztO8jZyVnIvfu+MILE4/kYH7w2rJbB2P+6fpovmnvX6c
tzD9H9RjK630/leTy7zn6P6nkpdWt+D7LBfArEIex98P7iLVCxpvNyD/n1Q/
8ImxLep/dmO+tw==
         "]]}}, {{}, {}}},
     AspectRatio->NCache[
       Rational[1, 4], 0.25],
     Axes->{False, False},
     AxesLabel->{None, None},
     AxesOrigin->{3.8804832*^9, 0},
     DisplayFunction->Identity,
     Frame->{{True, True}, {True, True}},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->FrontEndValueCache[{{Automatic, Automatic}, {
         Charting`DateTicksFunction[
         Automatic, DateTicksFormat -> {Automatic}], 
         Charting`DateTicksFunction[
         Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> 
          None]}}, {{Automatic, Automatic}, {{{3.8788416*^9, 
           FormBox[
            StyleBox["\"Dec\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.88152*^9, 
           FormBox[
            StyleBox["\"Jan\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.8841984*^9, 
           FormBox[
            StyleBox["\"Feb\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.8866176*^9, 
           FormBox[
            StyleBox["\"Mar\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.889296*^9, 
           FormBox[
            StyleBox["\"Apr\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.891888*^9, 
           FormBox[
            StyleBox["\"May\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}}, {{3.8788416*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.88152*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.8841984*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.8866176*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.889296*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.891888*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}}}}],
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     Method->{
      "NoShowPlotTheme" -> Automatic, "AxisPadding" -> Scaled[0.02], 
       "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.647624, 0.37816, 0.614037], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.571589, 0.586483, 0.], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.915, 0.3325, 0.2125], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
          AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
       "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
       Scaled[0.05], "AllowMicroRanges" -> {True, False}, 
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}},
     PlotLabel->FormBox["\"Volume\"", TraditionalForm],
     PlotRange->{{3.8804832*^9, 3.8906784*^9}, {0, 4.178958939*^9}},
     PlotRangeClipping->True,
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{{}, Automatic}]}], ",", 
   RowBox[{"\<\"ADA-USD\"\>", "\[Rule]", 
    GraphicsBox[{{}, {{}, {}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJwl1Q9Qk2UcB/A3OTCLchRlhZ2IVnbp2sk/OT0dKhRosMjMoPA9lIWnl5Mg
gvNkeYJ1aLwnqdjIG1NRbMuBkIogrxt/OotuZiF13g1RK2EwxEBitOL9fne3
+93nfu/e5/k+z/u8m5u1PS17miAIBVNfpU59NNvveuKnalDNmhqlikfomATx
lFIlJ633dhxXqjxI+zvfOqHU4Vn9cI7r64NKDV9J99RpqpSq20bnNagsSjUe
otP9h44p1S7Tv2dOYrzefvrpy+W1SlU9NQDnvhuC67Ur6F2vqauVathCh34x
3aRUcwWduM6P8Vwt9IH5KbDwF50R83qdUjVPeDifVz3IJy6jq87mn0V+Pb3Q
1YPxZYl2WnTnkL+JDjxd+iPy36HfkJznkX/mIBxxOBX3M8bRRTeOtyD/Jtpu
vdKI/Ptho3XO6g7kP89+0Ng76Gv76AJ9O8Y3BA/BtzJOIY85hr6T/PlF5Bfp
+iPB3yJ/GZ0y1IH7aRppZ8gCB/K7YePw/QBYmuFFf2hbVivyR9Kl0V3fIf/7
dOSAGfMJ/4z+KMHWjPz1tD9yD8Yz3qBvtz0P24OGYU98BdanV0OLeztxP1UG
HZXUiTzaErqlMAzrZzhDt87IlZH/N7rcVIn5uQLuwYsf/fIM8qvp6NG1Dci/
gb4+ng+Lu+m6vJfwe8lKm9oTMF+5m+6o8iPfsDACO5aloR/+Cm3e2Hga+d+m
JxxOK/IX0/95fcxfSz/Slo379V6jnRW7YZWfXvdLEfJpF9yHX7Y8hufLkEaH
Ncj1GHcnnWyvRR5XDS01ZyGPcJW2VYdhfTU+ek26G33xhb9htTcTz5OUSn8S
dALXy4W0L7bLjvzHaGugA+c3/Ce6aeulb5B/nO6OszB/xCjcd1JE376WXn8z
yob8H9PNJSbufzXdv6Ia51P7A909dydsGKUj1g9gvc1zxuAN6iWYnyuJnvZB
MfIIefR7hUVNyH+U/vfaQ1hv8XvakbQLfWmE9iTpsT7y7Ac838/lO5E/ETZ+
NXHhMvLvYF+VI8E6E32lcjP2w9hO3ys4iv2ze+k3c2/x/D87Ds9reBjzV62m
yxZG4nxoP6RXbd7RhvyVsHG22tyJ/A72x3yDF5DfQ9vkGDwfwqx/4GcSo/F+
1cTTPZtisX7iVnqmJgDXSwfpruRgjC+30umT8/n836UDX0zl+Q+dwHzi3ALW
R7d8gu/bikU8/zl0SkQf9sN+gLb0ZeN909tMRxVP5/7/Saszn8R8tCE+ni8p
GutjWEqPxV7H/5c5mw4eWYTn0VVOD+ntJ5G/iU7Z8gDvQ81t2r2qDPstPj4J
b9yzmOd/CW0L/fUS8mfRy5eWtiP/Pti4smQv9/8c+5/+sR+/192kf77qvhj/
P/lXmN8=
         "]]}}, {{}, {}}},
     AspectRatio->NCache[
       Rational[1, 4], 0.25],
     Axes->{False, False},
     AxesLabel->{None, None},
     AxesOrigin->{3.8804832*^9, 0},
     DisplayFunction->Identity,
     Frame->{{True, True}, {True, True}},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->FrontEndValueCache[{{Automatic, Automatic}, {
         Charting`DateTicksFunction[
         Automatic, DateTicksFormat -> {Automatic}], 
         Charting`DateTicksFunction[
         Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> 
          None]}}, {{Automatic, Automatic}, {{{3.8788416*^9, 
           FormBox[
            StyleBox["\"Dec\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.88152*^9, 
           FormBox[
            StyleBox["\"Jan\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.8841984*^9, 
           FormBox[
            StyleBox["\"Feb\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.8866176*^9, 
           FormBox[
            StyleBox["\"Mar\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.889296*^9, 
           FormBox[
            StyleBox["\"Apr\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.891888*^9, 
           FormBox[
            StyleBox["\"May\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}}, {{3.8788416*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.88152*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.8841984*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.8866176*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.889296*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.891888*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}}}}],
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     Method->{
      "NoShowPlotTheme" -> Automatic, "AxisPadding" -> Scaled[0.02], 
       "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.647624, 0.37816, 0.614037], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.571589, 0.586483, 0.], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.915, 0.3325, 0.2125], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
          AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
       "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
       Scaled[0.05], "AllowMicroRanges" -> {True, False}, 
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}},
     PlotLabel->FormBox["\"Volume\"", TraditionalForm],
     PlotRange->{{3.8804832*^9, 3.8906784*^9}, {0, 9.57174794*^8}},
     PlotRangeClipping->True,
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{{}, Automatic}]}], ",", 
   RowBox[{"\<\"DOGE-USD\"\>", "\[Rule]", 
    GraphicsBox[{{}, {{}, {}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJwl1AtQVFUcBvAbBMmM2KaJ2hJtKJMT1qxiGsEsiykT2rAbTmGathkU9nBx
fJRTxE0Hy9TaNEVHwyXeAu3yWF4BXl6lEbSOSYGEuw0JbBC7CEpIFPf7dmbn
P785955zvvO4j243xid5CYLw3sxfrjM/tXFwKHqm1vUE1srVcIZeNt1VIVdT
M53WW9woV2mYzuhurZKre4EL9lpUki1X1Ro6q/PZGrnq36EjXcUlchVP0ccz
dKVytUq00nayXq4OF716bNoqV8X8v+ANXvehP20UXbg7Cu+n7KBnrw/Ik6v5
BK32UVfL1V5P2+P70J8wQH/Zthf51HOH4FecG9G/IZJOCNlQhvxv0NNethzk
N9GfJSUgj7sWFuM0uy4j/59sH+9+DXn09w/D+VdFrJcYTr/wrqIV+V+HxVNh
i7G+jmOw9Lg22Y781Xx+8+Fe9Kf9g35VvEdC/tl/w7GJv9qQfxUsPVwWh/ft
BrZP+YQgr3CETs9NxX6rbXTQ/ATMx3ADFstWWX5Afr8RtIcH2ZqRPwwWwz+3
YHz3Vra/rAyFVZ/S2TXPcf/L6E7Db8zfQ0dmLkF/Vl83xx+O+w751bBYumkv
xldsYbuU/28n8qfTH6ceQb4UC12evwTPm7v4/qTXZszH7u2BNVmen5H/Sbqg
cvf3yL8JFu71U2J9DQfoJ9THGpC/mI6yZmB+Uiftfzj5EvILo/Ct5e14XhVK
N5x5COdD/yLdONGA9RbTYLH4vx0Y31rI9t5vUrFejqtsNw9E4Dwppmlh8UZY
u/QWz1d5AfpLiaf3NVZhfc0f0svOBmI+9jz6o1lX8LxwhT73U3sd8t+lI5zt
mI8hZIznpdLD+6+j39S14n1pP11k7cb9cGfTFTe9LyB/B/1M8DUL8k/QLV8t
rET+4HH4/R5/tFufp13pTrzv2AeLa/rt2D9FFtsrrt/A89o2eltXdSHyj9PZ
8xJxv82P3IY1YUbMzx5LH8oLLUf+PfRbw6svIn8mnXtoC9bDcIk+7WhGXtMo
fXPlNsxfCryD+a318+b5j6Hrz+/EeVbtgoWRxjT0rz9LB51LwfhiKz34iQfj
WUdo//O/Y78ciybgmpEVWH/FWjonNRHfM+1OWhdgb0L+07C4Yl5RC/I30S/1
TKHdPsTnB/tycT6EBf/A10sX4vupjqZXTsYWIf/b9OiAB+fRdJI2xnyA9ZUu
0rfH+H13D9Jbv1VjfVQPTsKzMo/Ceg0sVjR1tCF/Mts9OTbYepy+vGeOC/nr
YK1y+dx+5O+HpQMFP/L+P3AX/VnSfa8hfwT9dccJ3A9zEiw8lRTD8/8Ffcc3
APdXqKWDnRqe/z764P5Q7v+cKdjZosT+mp6mlx58DPdd2k6XxPp0IP9R2tiQ
j/5VVbTuQg2+53onLK53rPsl+n/nRKj4
         "]]}}, {{}, {}}},
     AspectRatio->NCache[
       Rational[1, 4], 0.25],
     Axes->{False, False},
     AxesLabel->{None, None},
     AxesOrigin->{3.8804832*^9, 0},
     DisplayFunction->Identity,
     Frame->{{True, True}, {True, True}},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->FrontEndValueCache[{{Automatic, Automatic}, {
         Charting`DateTicksFunction[
         Automatic, DateTicksFormat -> {Automatic}], 
         Charting`DateTicksFunction[
         Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> 
          None]}}, {{Automatic, Automatic}, {{{3.8788416*^9, 
           FormBox[
            StyleBox["\"Dec\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.88152*^9, 
           FormBox[
            StyleBox["\"Jan\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.8841984*^9, 
           FormBox[
            StyleBox["\"Feb\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.8866176*^9, 
           FormBox[
            StyleBox["\"Mar\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.889296*^9, 
           FormBox[
            StyleBox["\"Apr\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.891888*^9, 
           FormBox[
            StyleBox["\"May\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}}, {{3.8788416*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.88152*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.8841984*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.8866176*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.889296*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.891888*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}}}}],
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     Method->{
      "NoShowPlotTheme" -> Automatic, "AxisPadding" -> Scaled[0.02], 
       "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.647624, 0.37816, 0.614037], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.571589, 0.586483, 0.], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.915, 0.3325, 0.2125], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
          AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
       "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
       Scaled[0.05], "AllowMicroRanges" -> {True, False}, 
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}},
     PlotLabel->FormBox["\"Volume\"", TraditionalForm],
     PlotRange->{{3.8804832*^9, 3.8906784*^9}, {0, 3.497240136*^9}},
     PlotRangeClipping->True,
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{{}, Automatic}]}], ",", 
   RowBox[{"\<\"STETH-USD\"\>", "\[Rule]", 
    GraphicsBox[{{}, {{}, {}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJwt1Q1MVWUYB/BDEeVqds0UdWwdxZRl02NtpQvtQOiGol7JDzDQEw5D5OPi
N/nByS5FS8cRQrzi7IqLsFEeGE2nOI86NjadnjtL+3KdTKcIcm+KoMJcnP//
ZWPPfuf9ep73fc+543OK03OfkSRpy9C/G4f+lOLO7qShGIyzNrlRC9B61bYl
bjTOi/byvblutO7RRsf5bW6MxN6F1fk1y90oJ9P65bg0N3oLhAN9SxH30VLv
gtVuNC0x/rvh69zo3KWteV3o7xnVxfVvX0S7+j492Npw0I2+tbS0c8589Kum
1abwCjfap4Wj3s1Evzu0NRi9yo3KK93Mzz66APUn0taJaVmocw39QuFIHc8N
WkoILUT9J2mloXoz6r9Fq2eex3jvy/dgJ7oC+6vPpA3/BOyfuVq0/5iTg7iH
rpj4SznqP0HLUt4GzHuDDo4eV4r6X+phvuHxWD/4Du0NGOhva7T6Z7KBvL+m
5WYP9lP5mZZaGnG+2t+0E0nMQ57DwnB90rF2rPM27bENrB/Jpq2CFqwnV9D6
B2N3II8WWnv61cd4/hedMc/EfpoxEeaXfQP3wVFo7cWUEqzzEd1UOLkW/cpF
e2UM8vMdo2V/Vj7q/512rk1Dffaz/3H+mxdRnzSVlgpWob+SQVvXT+F+aLvo
xi7/l6i/iTYSO5GPdVX47Jwy1C/dhyPfpn6OPKbQxh9hP+pfSvvePLAT9ZfR
2iYF52UepfVQ4jLkfYVWtvpZ/1NaXtiMetWEB8z/WnM25k2n1elFH6L+7bSV
moH7bTfQTnk99kMKifazIZyPMiDaJ4XWI6/Xezn/1IAPdSyinelj1mJcqWiv
fIz7HTlCqyMP4n7Ll2j5Xwf3w/tItO+tRX99wkOOvxBaifrTaGtc0SdYZzOt
lsWvQf2HhdMcfA/UC7R+JAvfF99D4RS+38HX+jh/Tz72006lrUV92C9po/BP
w7BfyiHaifoe+6110Oqs4iDqv0+3jplVjXFx/fCkZYdaUP9cOmPx6M9Qdwlt
17yB8/bW0cr6xXjf9XY6eG7uF6g/LMZfT8Z4Z+wj8f7W4X54UujWq/FVyKuI
9pROxn779ov+5vINnJdWLsWi3e4WLvkU5ynFPub9PNe/Bc+TaCu+DuerraOd
zFu4D0YNra58rhD9ztBS5q/FqL9TuGki9ld+9Qnrqw0gH+9s2pnRiPPU82j9
hzb0N6voRisT3wOnjdbqY2DP7Sfi/d29FXHEAOuJTsf8vvdo9cAO/P4Ec2kz
+y3sn11J/9ZxZxfyPElr+ds1zHNTeEo33gdt+CCcYK7A+Rgz6N6Z3+xD/Tl0
JLkd73dkN60mtBWh/uO0MhDF8/+H9vT3bEz6Hx+dbvI=
         "]]}}, {{}, {}}},
     AspectRatio->NCache[
       Rational[1, 4], 0.25],
     Axes->{False, False},
     AxesLabel->{None, None},
     AxesOrigin->{3.8804832*^9, 0},
     DisplayFunction->Identity,
     Frame->{{True, True}, {True, True}},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->FrontEndValueCache[{{Automatic, Automatic}, {
         Charting`DateTicksFunction[
         Automatic, DateTicksFormat -> {Automatic}], 
         Charting`DateTicksFunction[
         Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> 
          None]}}, {{Automatic, Automatic}, {{{3.8788416*^9, 
           FormBox[
            StyleBox["\"Dec\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.88152*^9, 
           FormBox[
            StyleBox["\"Jan\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.8841984*^9, 
           FormBox[
            StyleBox["\"Feb\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.8866176*^9, 
           FormBox[
            StyleBox["\"Mar\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.889296*^9, 
           FormBox[
            StyleBox["\"Apr\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.891888*^9, 
           FormBox[
            StyleBox["\"May\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}}, {{3.8788416*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.88152*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.8841984*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.8866176*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.889296*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.891888*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}}}}],
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     Method->{
      "NoShowPlotTheme" -> Automatic, "AxisPadding" -> Scaled[0.02], 
       "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.647624, 0.37816, 0.614037], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.571589, 0.586483, 0.], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.915, 0.3325, 0.2125], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
          AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
       "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
       Scaled[0.05], "AllowMicroRanges" -> {True, False}, 
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}},
     PlotLabel->FormBox["\"Volume\"", TraditionalForm],
     PlotRange->{{3.8804832*^9, 3.8906784*^9}, {0, 7.27614276*^8}},
     PlotRangeClipping->True,
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{{}, Automatic}]}], ",", 
   RowBox[{"\<\"HEX-USD\"\>", "\[Rule]", 
    GraphicsBox[{{}, {{}, {}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJwtlQ1MVXUYxk+1SbSKG4NhTcetzZYx7baG5XB6cJRgpNdrfARqh4vXIEou
8jXK8EQ22bS6ymxyLTsq2Zg17nQMhawznR+bLm/TMpvNEx+BdMmriKJXJM/z
vGzs5Xef933P+7z//z087a30+B5UFKX+/q8d7/+4Kq9EMu0/JspftaPWKnwi
ssCOgWPC24ty7GiOkPVNQXA0ZZi8sxv1zoVkZf7gXDu63xOeNZiLvC8lv2HI
Y8eQKfr0m6vsaA2T1YmKIjs6kv8Fm+lT8vD5ArLSXrzcjv5ysj43b6EdjRbR
OybRP3xE9ML+bHw+JPrG4cV2dCVGqH/kexv+55HV4TMa/K8R/UL2m5gjQFYe
W7QM/rslf2pBPvwPkLU9Bah3J4yw/m7b65yT7JzsKYf/UtEj+96C/8+Eb/yE
eschsvpDEnS1V+qb06H7H/2P+YdD8GvMIZuJq4vhXyO7n1eqMfdm0XdcQD9X
p9Sn9aFeu0xWXz6J/Qfir5KzovT/Ell5oGUJ/K8UfebZPM4l+hsWzsd9gKzX
Hl2KeEn06c9iH6EpUXLfOO6H5SKbQ8mYx1Es+te9bjznU+FgPO6Lv0N4bLQM
/i9KfVesCv4fusb5EnwbkDebrHc2+uC/kKz91vsuYpPkX6uHHvie7Dw32Ii+
v5P9zdPWw79ync9P+mcd8tLI2rrJCvjPE71kM/rpG8jGQPtq+G8nW4nb3kE8
J/ztAPId96RfSs8azPXcKOe3sryYw0M273Vg/8Z6ssvbWgv/+8hGIPY+5vhV
8jtzsB9XTPSsI3i+NuMG5/UtxvMCS8lmyUQlYgNZ12tK4X+v6OWda+H/F3K4
4Kk6+B8nqyV/4nz0Z8bIteEP4D+X7NwUh/msOuEVHpyHYzdZOX4b+1RPCzfE
YT/+MemnX14JH6k3OV8wH/XhHHL0q2Q/6mrIoZkvgl27yNbBTzCfdkry/8pu
gv/r5PDFUpyvOe0Wv09p+8HR18iBeXE1mLuKHM3vwn7dO8nWj0XYl36c7By9
Az+hq8KNiXgfWE+Os/93W/F9dWSRlepU3Bd1LdnRGLcR/neQD32e2wz/R8kP
O2a0YO4I+fyeP7aiT8ptnrd+qx7+M8nu9ku4z1oFOdDm+xBxO7ksOOtj+P9Z
dPUbzBe9Qrbm5GN/zqQ75PND8OueT1YfCSJfLxM9YQvyQ9vIRrrHyz2R9WX9
K+BzkKy0LsL7SH0iRn1JFe6LP4Ns9tfivA0fWY29gPdx+AvRB86iXukmK/Fn
cF9c/WTjZBv6aY/fZX3dSAl8vkLWqzNQb3pFz0wFR7eIbjTh/4ezS/SMnkL4
/5usne7zZv4PFrFsLg==
         "]]}}, {{}, {}}},
     AspectRatio->NCache[
       Rational[1, 4], 0.25],
     Axes->{False, False},
     AxesLabel->{None, None},
     AxesOrigin->{3.8804832*^9, 0},
     DisplayFunction->Identity,
     Frame->{{True, True}, {True, True}},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->FrontEndValueCache[{{Automatic, Automatic}, {
         Charting`DateTicksFunction[
         Automatic, DateTicksFormat -> {Automatic}], 
         Charting`DateTicksFunction[
         Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> 
          None]}}, {{Automatic, Automatic}, {{{3.8788416*^9, 
           FormBox[
            StyleBox["\"Dec\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.88152*^9, 
           FormBox[
            StyleBox["\"Jan\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.8841984*^9, 
           FormBox[
            StyleBox["\"Feb\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.8866176*^9, 
           FormBox[
            StyleBox["\"Mar\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.889296*^9, 
           FormBox[
            StyleBox["\"Apr\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.891888*^9, 
           FormBox[
            StyleBox["\"May\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}}, {{3.8788416*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.88152*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.8841984*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.8866176*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.889296*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.891888*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}}}}],
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     Method->{
      "NoShowPlotTheme" -> Automatic, "AxisPadding" -> Scaled[0.02], 
       "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.647624, 0.37816, 0.614037], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.571589, 0.586483, 0.], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.915, 0.3325, 0.2125], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
          AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
       "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
       Scaled[0.05], "AllowMicroRanges" -> {True, False}, 
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}},
     PlotLabel->FormBox["\"Volume\"", TraditionalForm],
     PlotRange->{{3.8804832*^9, 3.8906784*^9}, {0, 8.029901*^7}},
     PlotRangeClipping->True,
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{{}, Automatic}]}], ",", 
   RowBox[{"\<\"MATIC-USD\"\>", "\[Rule]", 
    GraphicsBox[{{}, {{}, {}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJwt1Q1MlHUcB/CHcHZtrM4XYFTmwbrBbLYTlJTKDmMqeOgJGrRi3UTb+dJx
6IVTenmGsSRtnDpfsHDHeDF84zwBj5eL63jNELmYNIvq0Ag8eTnIC0OifL5f
2dh/H37/l+f7//+fh/AtWSnbnhAEYe+jX6l99KPKujscL/3puf1XpFZXRHea
0iqk1txMz7w1dlZqnSO0SdZVKrW+UC+sPjZwUmoVq+ihiHe/llrtLnrW6/tL
pFY8Qcs7m8ql1uqka+eov5Faj5cu2/1JGfoF34MNI5sqsc4bdIchG/Mbt9N9
hswiqbUco+/nxOF5ux20TWnEfMIQHZartEmtau4wrG9PQ3/da/S5Pyewnvl9
ekeXA3mdZjpWrzuH/PW0zd7agPwD9O3/7lxE/mdG4PBls7GeuAIWr+955Tvk
z2S9IPNoLfJ/Se+tj7yO/Ha6cdxrR/7bHK+JPNCC/EGjqDva7PXIHwuLJud6
J/LrWI8NqMX5CofooXJ/HfLX0Knemibk/502zBORx/zUGLy0eDPWd8bQqrMb
vkX+DHr6XjnzH6Qn+1Lw/FobLLYlLOlC/j7WoweKXcg/24e6+1QL7FHBQka0
H/sjf4dODBlj/nzaV/lsM/JX0VvH3R3If4v+NaQF+9MdOA73NlQgn/DyOPfP
7sL+qNJZf/JfBfZPl8e6JWQZ1jdfYP2XjLhO5O+lw4TJH/EcwgT6n88IQz7F
S7AQdNyP+bSb6bVR0VhP/JSWx2jakL+S4/N1ftjTw/qHJ9ZiP+QzsLM4fBHW
U0f9hfrgvJ09yJ8Ci1r93Hbk/4iOPWhoRf4Kuv/Nq5hPcNOm9w6jv+oh55PV
FaC/TnkfTiq9if0yb4DF6UQ9xjv3sT4VHNGI/KW0pbcM56PoYv/ROx8gr/YB
67mn1+C+iBF+eHWVzIH8GvqI+wXe/xw6O7AM4+Ul9Kyff8L9Vf9Af5+fgPfJ
6KcvVoeibln4N/f/WhrW606ExUNDzZhPMNGfDXpxP1Rn2H9+ZMA15O9gfevC
JOyHeYL1fdky2Pn8JHw+aCXug2/1JO/3hdO474rsx/UbB7C/2q/ooo8H8X6I
rXTMoiQ8j3WMVisXwJ6wB/CuHaN4P+UJ9BpVIe672kBHK7PQ33gKFvPyUnFf
LS7W2/XJGN89TB+pvIXzEkL/gRuUNn7/4mnLnnQr8u+kV2xcjPM0H6fXbVpV
jfxN9BKvtwb579IbA/thxfwpuP/t7Zhfu3Lq8fvnwP8TUU9P3EjG99V6lE51
u3B+nkbaGydgPfkg3bE8iuc/5yG/178F4/trfJX+4sWT+H5bttEzrlwL8hfS
Ln0B/t8I9bSmLgfjVX/QstHCS8j/9DSsCNgNm5fTPfr0y8i/BRa9Bg3eB99h
1peWLMDzKq7SjaU3q5C/n7Ymf14d/z/nOqJt
         "]]}}, {{}, {}}},
     AspectRatio->NCache[
       Rational[1, 4], 0.25],
     Axes->{False, False},
     AxesLabel->{None, None},
     AxesOrigin->{3.8804832*^9, 0},
     DisplayFunction->Identity,
     Frame->{{True, True}, {True, True}},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->FrontEndValueCache[{{Automatic, Automatic}, {
         Charting`DateTicksFunction[
         Automatic, DateTicksFormat -> {Automatic}], 
         Charting`DateTicksFunction[
         Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> 
          None]}}, {{Automatic, Automatic}, {{{3.8788416*^9, 
           FormBox[
            StyleBox["\"Dec\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.88152*^9, 
           FormBox[
            StyleBox["\"Jan\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.8841984*^9, 
           FormBox[
            StyleBox["\"Feb\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.8866176*^9, 
           FormBox[
            StyleBox["\"Mar\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.889296*^9, 
           FormBox[
            StyleBox["\"Apr\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.891888*^9, 
           FormBox[
            StyleBox["\"May\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}}, {{3.8788416*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.88152*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.8841984*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.8866176*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.889296*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.891888*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}}}}],
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     Method->{
      "NoShowPlotTheme" -> Automatic, "AxisPadding" -> Scaled[0.02], 
       "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.647624, 0.37816, 0.614037], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.571589, 0.586483, 0.], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.915, 0.3325, 0.2125], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
          AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
       "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
       Scaled[0.05], "AllowMicroRanges" -> {True, False}, 
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}},
     PlotLabel->FormBox["\"Volume\"", TraditionalForm],
     PlotRange->{{3.8804832*^9, 3.8906784*^9}, {0, 1.303138204*^9}},
     PlotRangeClipping->True,
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{{}, Automatic}]}], ",", 
   RowBox[{"\<\"SOL-USD\"\>", "\[Rule]", 
    GraphicsBox[{{}, {{}, {}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJwt1Q1MlHUcB/BnGYoocQf5ttp8Yt44ZuCtXGgqPpSjdNVdBM2wq1OTFEnO
rc6RmE8NlmbmqUncTCTAjjfnRV0oYDzBxYvkeYwCcVSn2fAU4XgzUlbxfL+y
sd8++z0v/+/v/4fnsU3ZKVseEARh19SvWqd+DNmBgaSpmmXTnVKrxUF7lkwv
U6u9mY6/4EBfuU3ndjSUqDU47ybsszxerlbxGVpjFR1qNWXRea7DJ9UqF9BN
n5+sVKtLodtXBOvV6r8Jy1vdIa14zpxbfN/MkTa1Sqvpd1JDv1GrdRt9WR/j
VGvxUTr54CkF6zoPS+4IsVO1cAOWc0pmwIbIAVg/6MP1lpWwEBLe9QPyZ9B5
r0VVIL+dzm/6sxH56+h9Eat+R/6/+LzKjG6s1xRxG/0PF3U0If9yOtVvvoD8
m+mljoAX+Q/ClomNqQHkPwtLixKaLyP/NVhJK2jrQf7Zg5xn2ZcdyP8ULL+i
T/6V+8J+YesvmKdwAFZGnTr0DW5eP6wN+w35/6APP+/Ceuwzh+Cds7VYr/Ik
nZ45inxBMz03zIJ5ivtgIXN3NPPXsH/XlO5B/j72Pyt94jzyTw/Cqzv6fMhv
gKW5bTGwZgP7Y7mbMT8pH5bnN6ZdRP4z7CcaX8Z6i3vp8v4lzcg/bRjeUBr3
LfLH01nrV/2I/OvpnBpfHfJ/RHtqS/E+ezVt2tWN/Va66dNjzZhnUBiB3ZF7
8T5xMd0S3nsG96XRVVEe3C/vpZe9XYF5uCpg2RnubUf+LnpO33MtyP8vnVht
wfwl/ShcFWfE+q0psBBrfuR75M9lf3tVEebj+5r9o+casd9CJ/sZzi9wXgz3
6KjjDjzfohuDh2Y9i+fbjbBQqZUwDyWH/QdtRvy9BEvZn5EVhfeLXto4+UYD
8k/c7/cMfIf80eNwTbkTdr1A65zLsT9+G30rNBbnQ/MVLU6rO438HfSdyBMu
5B+n68vGapB/4R14Ye3+WuRfC8uaNz/A+oV32Vcu5mC+hiK68K3on5G/jfZe
82B/7CO8vz/dj/1VHv2b89zzIs57MBlWimw9OK/iTvbrk1/l+T9OtxfpcL7k
n+gY7TGsxzVEi7v34zz5F0zAe95Lwfw0a2D5yrb5eJ+0g/3M/KVYv7WQ1l3a
iPNT3ESHXD/E/38DdMJ/L8HCvH/gS1fXYH6GJFpaGVKF/Ntp3eJsN/Ifo5/u
PIv9UhrpWYEj2O9ggB4VYrFe8eG7nO+6UNxvSqTj+4bwfZC30oMVZrzPdYRe
p9dgPv4G+sqBBOynpp9ued2M8yFp78EpNz7G98O6grZW2/C9Kt5Ce8Pi8D3w
Hbp/fYYB3yuhjvYtOIf7DddhuSBdh/2zPDQJl/UOY972ZZPcr7AT2B9lE/u2
oAPzDn7K/ie2Ep7/Wnp8Rxe+Z6arvP79+LzWpP8BSKGjcQ==
         "]]}}, {{}, {}}},
     AspectRatio->NCache[
       Rational[1, 4], 0.25],
     Axes->{False, False},
     AxesLabel->{None, None},
     AxesOrigin->{3.8804832*^9, 0},
     DisplayFunction->Identity,
     Frame->{{True, True}, {True, True}},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->FrontEndValueCache[{{Automatic, Automatic}, {
         Charting`DateTicksFunction[
         Automatic, DateTicksFormat -> {Automatic}], 
         Charting`DateTicksFunction[
         Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> 
          None]}}, {{Automatic, Automatic}, {{{3.8788416*^9, 
           FormBox[
            StyleBox["\"Dec\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.88152*^9, 
           FormBox[
            StyleBox["\"Jan\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.8841984*^9, 
           FormBox[
            StyleBox["\"Feb\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.8866176*^9, 
           FormBox[
            StyleBox["\"Mar\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.889296*^9, 
           FormBox[
            StyleBox["\"Apr\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.891888*^9, 
           FormBox[
            StyleBox["\"May\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}}, {{3.8788416*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.88152*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.8841984*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.8866176*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.889296*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.891888*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}}}}],
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     Method->{
      "NoShowPlotTheme" -> Automatic, "AxisPadding" -> Scaled[0.02], 
       "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.647624, 0.37816, 0.614037], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.571589, 0.586483, 0.], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.915, 0.3325, 0.2125], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
          AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
       "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
       Scaled[0.05], "AllowMicroRanges" -> {True, False}, 
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}},
     PlotLabel->FormBox["\"Volume\"", TraditionalForm],
     PlotRange->{{3.8804832*^9, 3.8906784*^9}, {0, 3.399684035*^9}},
     PlotRangeClipping->True,
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{{}, Automatic}]}], ",", 
   RowBox[{"\<\"DOT-USD\"\>", "\[Rule]", 
    GraphicsBox[{{}, {{}, {}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJwt1Q9MlGUcB/B3/mFkLs86giaLk2QyNX3DZRSiL41R5zRvLO0SnScEAyTu
SEopoxvpNIS6wWEHit0hCoeHvOdAThK7RDY2y661GjKyK9CE8DwVCqEw3u8X
NvbbZ8/D8zzf58/L4nRjauYsQRD2Tv8qdfpHNA6NJE3XvNhEu1IN1bSrz1Kr
VEsX7a9Y8pVSvXdm+t/2HVdqMHwYtt26dEipmlfp1p0TVqXq8uj4vn6bUs1H
6dHnSjG+7KXlq1mnMc8w7QmtqFGqKuwveLu0+UulSuvpXvH1SqWacmjvsgOY
z15Jr41Pw/i+Tjp70SD+XrhNR86fQh7xyRH2/3D3MeRfS6tWBJg/ix4tqLFg
Hgu9orm8Gvk76NJAWzPy36Q1afUYX7fgDvdvXXId8r9Mh4S7ncidQW/7dfgU
+pXD5v3uZV1Yh4ft1j16N/L/QQ+lJJxD/vkBuP1pdyvyr6G3dxrbkd9A2/+z
1iP/EVr/fsoZ5G+jF7bmtCH/b/TEp5+1IP9jd+FrizO+Rv7V9KLMp7Ce4A76
h/JerEdzmFa596Fdd46Ojnge+2Pup4c9kzhvOSQI5z+qw3r8Iq0JuNBflUbH
7rQ1IP9BuiR3AOsztdDaTv155LxOz83ou4D8s+/BW6MOYb+FlbT+rbcxvqin
550vw/yGEvqyLUpGfhf9XZX2LPL/QsfaCy4hv3Afjrt5Hf01y2lrRi3ek24L
va/Igf03f0I/7vBgv2QnPasoFHn8P9GGd/PQrpqiu++F4zyl2Ae4H4cTq7qR
P/UB8ziWIq99Px02uAntvtP02aYRnJ/w44xr12A8cZK+oo7xYN6YUd6nijO4
T5bN9EBpAvp7i+jCpT0u5D9JBxPym5D/Gp2nKcZ+6cbpqddu8fyjx+CNBx+i
Xd5Ih7S143z8H9BVMdW4PyoHHWd04X1IV+m+sXmwaYxOHvge98ke9Tffe9jn
mM+npbveiMZ+CoX0t+9shcUT9LYBNe6PoYd+MZ3tlvu0/+MInK838h/4SGIv
9iOYQhcLZlhTQHeVROA96Y7RcesbcL/M3fSBN19CPvku7fTOxfj+Z8bhjovG
RuRPpp/VJWN/pXx6yd5i2GSjQ4RVyGu/TDedGsf++Ebo3F052B8h/CEsZbfi
eycmzbiwEd8zw256g/aEA/mraHnPbNxn7zczbq47ifxDtD+QiPk06gnery27
8F5162j1ewLGM2fTqbYb+B7KFXSgoYDv/yJ9ZU4Z8/9J56oXYP3Swkl4cHUl
/t6UQPcf/Rnj2zPp+h0t+P/k+4IOPR6J77HQQecHtOgvDtKNzhrMZ3jiX96n
Hj/ms8TTWZuK0e5Np603JNyPYBkteZYjr6adfuWjR9gP3e+064UYZ9L/MUCM
ww==
         "]]}}, {{}, {}}},
     AspectRatio->NCache[
       Rational[1, 4], 0.25],
     Axes->{False, False},
     AxesLabel->{None, None},
     AxesOrigin->{3.8804832*^9, 0},
     DisplayFunction->Identity,
     Frame->{{True, True}, {True, True}},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->FrontEndValueCache[{{Automatic, Automatic}, {
         Charting`DateTicksFunction[
         Automatic, DateTicksFormat -> {Automatic}], 
         Charting`DateTicksFunction[
         Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> 
          None]}}, {{Automatic, Automatic}, {{{3.8788416*^9, 
           FormBox[
            StyleBox["\"Dec\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.88152*^9, 
           FormBox[
            StyleBox["\"Jan\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.8841984*^9, 
           FormBox[
            StyleBox["\"Feb\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.8866176*^9, 
           FormBox[
            StyleBox["\"Mar\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.889296*^9, 
           FormBox[
            StyleBox["\"Apr\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.891888*^9, 
           FormBox[
            StyleBox["\"May\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}}, {{3.8788416*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.88152*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.8841984*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.8866176*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.889296*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.891888*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}}}}],
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     Method->{
      "NoShowPlotTheme" -> Automatic, "AxisPadding" -> Scaled[0.02], 
       "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.647624, 0.37816, 0.614037], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.571589, 0.586483, 0.], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.915, 0.3325, 0.2125], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
          AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
       "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
       Scaled[0.05], "AllowMicroRanges" -> {True, False}, 
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}},
     PlotLabel->FormBox["\"Volume\"", TraditionalForm],
     PlotRange->{{3.8804832*^9, 3.8906784*^9}, {0, 7.24204305*^8}},
     PlotRangeClipping->True,
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{{}, Automatic}]}], ",", 
   RowBox[{"\<\"LTC-USD\"\>", "\[Rule]", 
    GraphicsBox[{{}, {{}, {}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJwl1Q1MlHUcB/AnWPQyyzNKYGY8Z9CLIt4kmGnZgSSWTi6UpRbjsqGeR945
Lxy96AOLpJS6JCuntXMpdo3iBhIICg9vRSJwiFFsLDmXnhyHPKInXkcvPN8v
G/vvs9//ef7/7//lOe1mS1ZemCAIu6f/1Xb6T2cZ8adOt3ErQk1qazxM5xW/
8ZPa2tvoz2tv16qtPEb7OjOq1VaJ8sGzl6efUFsxjb58OFijtoZ8ejJpRaPa
Sl/QiwdXNqitS6bzSzNQH/bR1sR5p9RW88goPNWfjffpX6AHfdcwH6uJLvN8
iP6Oclgqav6jXbX7LOsFy1pltRWusV4XXNKiWveQH/WFs9tOI/9zsFQSfg/6
27ewbo6/gPFlO/1n3xWsj9LA/vEvppxD/iusGz31eN4wcwyOKDK3If+zdNOr
eV3I/yYsrdYe70D+MtYf7zJdQP56uvNqHOarv8z+q7wJeJ91xnX4GcvHyOtI
gYVV5pSfkd9I/yNNYH2F/bQ2Ir8V+Wv5fGJCMp43XmJ9YWBDM/LfN456+rlo
1OUkWKgQ1+G8KDn0WM8W9BdL6WNDJWeRv5pua+3G+kpDdEzMzHrkj1Dw/h+d
Ob3Ir6PbbZcwf81rsPDlK7ZfkL+E/u2ouxv5q+jG+XrmH+Tzc5/Oxnq5w2+g
7u8+hPGERPpAxzDWQ7eBnvv2HNhYDEu7MsuwH/ZK1gt+qMJ6yQOsH1/r7UR+
YYL5g0HUxQV0Tc27GM+QTUcVenFepb30zqAB83U56fkJjZjvcD9d7HFgfM2/
9MnRKVj/1E2Mb5K+hq1ZsJAWdxLjO96jxffNOH/uCvrmwXDMV+ijXzc5Mb4u
xPcNzBjFeTLG30I9TJeE/bNn0slz7sV+y4X0wN4q5FO+pcXIftwHsYduyZCx
34Y7dGjdNvSX5gVgw8VenBfXGrrYGXYG+QtgKS15B+ajOcZ6tWUW1k/fRdtj
b+A+WgO09rEKzNcRe5v74e1g/pdo5foQ6oINlu5q+YD5v6GVjeM9yN/J/hMP
aNwYZ4KObrqI8yg/OgnfvzYT/ZWV9J7cl3n/d9JN0VxvwxFY6n3iScxH6mB9
TeEi7JdrnPXPggr3P+YO6ne37MH3UZMOSyeOLOX938H65Ck/3mf9il4fe/U8
8reyf0mkBffJ7Wd9V9bAr8gfFYRzKqxYD10qvXH/YthopstLbfz+HaL3NZTD
cjO9dEEcrIzQb62vxPzEh/+Gn6+6hfkblsPSptObmH8b64GpXNh1kK78qBL7
MXyG/v58LO6jxkvvs2mZf1YI7tvqq0P+ZXTgk604X448Wty+COfD/SltFpz4
vRIa6G5TFs6f7q8Qv6eTkTz/D06h/t32EZ7/JbRDuxuWN8PS0f9KsZ7KAdZX
50ZifLGO9rhHcF4MHvr3onfaU/8HIhurDQ==
         "]]}}, {{}, {}}},
     AspectRatio->NCache[
       Rational[1, 4], 0.25],
     Axes->{False, False},
     AxesLabel->{None, None},
     AxesOrigin->{3.8804832*^9, 0},
     DisplayFunction->Identity,
     Frame->{{True, True}, {True, True}},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->FrontEndValueCache[{{Automatic, Automatic}, {
         Charting`DateTicksFunction[
         Automatic, DateTicksFormat -> {Automatic}], 
         Charting`DateTicksFunction[
         Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> 
          None]}}, {{Automatic, Automatic}, {{{3.8788416*^9, 
           FormBox[
            StyleBox["\"Dec\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.88152*^9, 
           FormBox[
            StyleBox["\"Jan\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.8841984*^9, 
           FormBox[
            StyleBox["\"Feb\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.8866176*^9, 
           FormBox[
            StyleBox["\"Mar\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.889296*^9, 
           FormBox[
            StyleBox["\"Apr\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.891888*^9, 
           FormBox[
            StyleBox["\"May\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}}, {{3.8788416*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.88152*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.8841984*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.8866176*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.889296*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.891888*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}}}}],
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     Method->{
      "NoShowPlotTheme" -> Automatic, "AxisPadding" -> Scaled[0.02], 
       "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.647624, 0.37816, 0.614037], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.571589, 0.586483, 0.], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.915, 0.3325, 0.2125], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
          AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
       "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
       Scaled[0.05], "AllowMicroRanges" -> {True, False}, 
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}},
     PlotLabel->FormBox["\"Volume\"", TraditionalForm],
     PlotRange->{{3.8804832*^9, 3.8906784*^9}, {0, 1.235692684*^9}},
     PlotRangeClipping->True,
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{{}, Automatic}]}], ",", 
   RowBox[{"\<\"AVAX-USD\"\>", "\[Rule]", 
    GraphicsBox[{{}, {{}, {}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJwt1Q9Qk2UcB/CZ2ukEHaQSRTW6q0MxW8WZIecGh4LG5U7xjtOsHYqnRTi8
ylDDyWWS8WeniEAoE6YgiixBwTHwlT8dAtoIjCKKTWcCDRygDJG8eL/fdrf7
3eee533f5/s87/O8/rG71sc9I5FI9kz9xTr1U+zqd4ZO1ShZTYFYNbm0sfjq
CbHqG+iYRfdgYZBu838LdvkMwIKj9bBY5WG0zd8D7ep4+vk/xmFdNp3WtRjP
Mwl0/i2DAdcN0NVJEflilS34B/5W2lcoVpWSTqsLyRKrdietKujIFqvhGB31
l/GUWK21dPdgVZFYJX10bEJkiVgV3k44Y9R4GvlD6N/ccoxHv53u2d/G/Ho6
J/gmxu8y0x8+V1uB/Pdob8fh88g/b1C0bt3tD5qR/z3ad08SbNoKS8pnXbmO
/Olsd/ff+Rn5q9muWlxeh3qHbnkjsAb5PYbgEf9YAfmX0Y+rO9Bu1dCRcdtM
yP89vTfz4BXkv0zfvjhkRv5e+t+4fdeQf/YD+N2WErQL79BnvuqwIP8WOjox
AveTp9INYcNoV1+CdfOOrG1E/h462us72PSsC/1nO6VXkV9Be73Z2YD8m+lD
UeYq5D8E6xoDlZgvbTnbm0tSW5H/d7qguB3jtU4fhr8ue535l9JdS7dUIn8M
nRoYhPXSpNDB7t5LyH+BnmuvvIj8v9JKTz+MxyUZgT26BVwvD6SjZWN4P9Qb
aZu9D9frDtAvj4aUIf85+gXVDdjWQccvy0J/2VM6t+LYZeQPGIUnXrqO/tr1
tK3tJ/Q37Ket4Ut+RD1LF0nbsR6Sdjo/PqgW+Z/AurH+OfXI/9pDtK+5+xnz
r6MPDrTgfkIS3dPgvoD8RXTeizOxP+W36NWZFcXIP04fudEN6159BJdmTKK/
KYq27TyB+bJ9SScvP4D9KTtN99gVJ5G/lQ7ydOQi/yN6RtdG7G/DK2Pw3+lK
2LqG7jwnNSL/5/TDp6ZS5D9F75UZkU/TTC903UU+/QidnJaM+Rb83PDbv+zG
fnetpptOxuD9lSfSK5wWzJ/6Bzp4VSfzN9GVq+q5/g/+981p5cjvO87zKTzx
LPKH06nHxzBeVQKdLZ2G+dHm0E3dCXieoZ7eVGlHf6uTzqop4/nn8xheIvWD
FaG0a6QY563mU1qWkYP10R+nI5UWWLhGzz9qwHy6+umhOZPIJ58/AX8T/QnG
r15JG/8szUP+HbThfhjW03SUXvhF7xnkt9C7J31xHsvu0/KPP2J+ryfw9ukT
eL52Bd1oT8d5b4ijA/KG8X2wZtKOlBn4PkjM9KwNM9Ff4aDHvX3wfM3cSdiy
Yx/f/+V0iqOP6x9LF75fiP3mSqOryyKQV15FB5hX4rxR2+nNCzzrQv8D31Gf
Og==
         "]]}}, {{}, {}}},
     AspectRatio->NCache[
       Rational[1, 4], 0.25],
     Axes->{False, False},
     AxesLabel->{None, None},
     AxesOrigin->{3.8804832*^9, 0},
     DisplayFunction->Identity,
     Frame->{{True, True}, {True, True}},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->FrontEndValueCache[{{Automatic, Automatic}, {
         Charting`DateTicksFunction[
         Automatic, DateTicksFormat -> {Automatic}], 
         Charting`DateTicksFunction[
         Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> 
          None]}}, {{Automatic, Automatic}, {{{3.8788416*^9, 
           FormBox[
            StyleBox["\"Dec\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.88152*^9, 
           FormBox[
            StyleBox["\"Jan\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.8841984*^9, 
           FormBox[
            StyleBox["\"Feb\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.8866176*^9, 
           FormBox[
            StyleBox["\"Mar\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.889296*^9, 
           FormBox[
            StyleBox["\"Apr\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.891888*^9, 
           FormBox[
            StyleBox["\"May\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}}, {{3.8788416*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.88152*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.8841984*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.8866176*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.889296*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.891888*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}}}}],
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     Method->{
      "NoShowPlotTheme" -> Automatic, "AxisPadding" -> Scaled[0.02], 
       "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.647624, 0.37816, 0.614037], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.571589, 0.586483, 0.], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.915, 0.3325, 0.2125], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
          AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
       "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
       Scaled[0.05], "AllowMicroRanges" -> {True, False}, 
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}},
     PlotLabel->FormBox["\"Volume\"", TraditionalForm],
     PlotRange->{{3.8804832*^9, 3.8906784*^9}, {0, 1.069929455*^9}},
     PlotRangeClipping->True,
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{{}, Automatic}]}], ",", 
   RowBox[{"\<\"SHIB-USD\"\>", "\[Rule]", 
    GraphicsBox[{{}, {{}, {}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJwt1A1MlHUcB/AHWmy+LC7FsSvUw+02AuZuU4qQ0Z05m9TmxUtjQ9cFykoY
Ho0QJuITIJG8dBOPqSgdHNPUE44XRSDqgZAokIEHTbLG4cuA85CLpBBZxvP9
wsZ++9z/5fl////n/wQmHY456C0IwpHlf7ku/2kOT7t1y1V8kHFOroaztJ/t
9mm5mn6iM/cHVspVmqFzX+49JVePvwsu1kWekKtqJ+3cFVMqV33aSrtj6Gs8
p5KODE6okKtdoqfKDlVhnIvOyrlVI1fFhsdwQOGsWa7ad+iEcnW5XI2f0frh
tSflaqmgLY4JrH+oc8WjfnieMEUvWTdifs06N7zFsqcB+SNp1ZFYtJtS6IWf
t15AfhPtPu91Hvnb6Vx1bCvGPaK9/fpvYl2+M7CpXo/5xbfpfQ/H0d+eTCur
664jfxltea+wC/lv0s0ZTvTX3qdvtIRgfuPaJ3y+w3EN496EpY7h7lHkN7C9
sfZ3jBdK6N6v1sOa63TQprZO5B+nsz8+ewPrXjULnzQnYv3SNrp/Z6od+ffT
R8WoRuQvpkdsHVeQv4kurH96Cfn/oO2qDc2oPh7YdXsK/Z0aOnv7NOZTJNLd
97RNyH+Cjpl1o93YQB9L3Ssh/xi9qkBsR/6X/pIt+tulMeTfCgvbC1oHkD+B
7WEdB7Dfhny2Z1ujsR8mG30pXMR+SL/RYb7KH5BfmGP7oWr0V4XQPnHhyKeP
p81njC3If5wu7/PBedsv002dm9Hf6aCTc8uwfsV/sJg4Xof1aYP+Rrsu/Rnm
M8bQoVmjNuTPpcM9LzqQ/yI9c1/E/MIw/fpICcZrntMVwQM4T4P6KWyT8tqQ
fy/9blUE9lvKoe9ErP8O+a1076agy8g/SIv5Vpy3foG2rPGqw+9b5mHPC5UV
+T+g9y3eRX9nFt0z8S3Wo6ihe6/+WYv8/bTGPFKN/PP04mvxuK+Wzf/AdT1P
riL/Hjo22IT7ImTSXy6ugTXV9IdjobgPhj767mNfPN80R0cELGE+KeBfOH2+
G+M9u2l1/Da8D6oMOlT5BebTV9GnI/JwP8Vb9PuuHOynfZbO7nkL5+FULsD5
bcdwnopd9J0CNfpr0+nJRx/hPI1n6HNFn2O8pZte5y3iPIbctFZ7D/sr+D/j
/XRlWpBfRxcnSfi+GVLpyV92M7+ZThlpwP5KP9IHfo3j+U/TUWLeReT3W4T7
3ujCeeuj6KMbvXB/xE/pwSuJ9ch/io4LPI774/yezmx9gPuhmFzpH63Efmhf
fQ4XlTTi+cYddFqaFu+D5SA9EGLE93noG7qlYhD5hHY6ZU7F7/9DOjKhBu+j
4ZUluPYTb6zfFE5HhyXDUhI95rMD3yNPKb26qxTvh6qVNs5X8v5P0JVFyc26
/wEejJek
         "]]}}, {{}, {}}},
     AspectRatio->NCache[
       Rational[1, 4], 0.25],
     Axes->{False, False},
     AxesLabel->{None, None},
     AxesOrigin->{3.8804832*^9, 0},
     DisplayFunction->Identity,
     Frame->{{True, True}, {True, True}},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->FrontEndValueCache[{{Automatic, Automatic}, {
         Charting`DateTicksFunction[
         Automatic, DateTicksFormat -> {Automatic}], 
         Charting`DateTicksFunction[
         Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> 
          None]}}, {{Automatic, Automatic}, {{{3.8788416*^9, 
           FormBox[
            StyleBox["\"Dec\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.88152*^9, 
           FormBox[
            StyleBox["\"Jan\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.8841984*^9, 
           FormBox[
            StyleBox["\"Feb\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.8866176*^9, 
           FormBox[
            StyleBox["\"Mar\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.889296*^9, 
           FormBox[
            StyleBox["\"Apr\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.891888*^9, 
           FormBox[
            StyleBox["\"May\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}}, {{3.8788416*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.88152*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.8841984*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.8866176*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.889296*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.891888*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}}}}],
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     Method->{
      "NoShowPlotTheme" -> Automatic, "AxisPadding" -> Scaled[0.02], 
       "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.647624, 0.37816, 0.614037], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.571589, 0.586483, 0.], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.915, 0.3325, 0.2125], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
          AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
       "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
       Scaled[0.05], "AllowMicroRanges" -> {True, False}, 
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}},
     PlotLabel->FormBox["\"Volume\"", TraditionalForm],
     PlotRange->{{3.8804832*^9, 3.8906784*^9}, {0, 1.728233566*^9}},
     PlotRangeClipping->True,
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{{}, Automatic}]}], ",", 
   RowBox[{"\<\"WTRX-USD\"\>", "\[Rule]", 
    GraphicsBox[{{}, {{}, {}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJw11QtMU1cYB/ArRqfLdEV5qZ1W4gNlSAfTWRBtWe3mI9IQdW447VAXCQtW
xekytt0ZZkbE7MZtTLNHajQ+EGOjQYyZ4YqsYXG6CgsJi0rVqRVQSy3DDTPn
/X9/ScjHj+/c0/u/55zbicUbCtfFKYqy9emvUZ/+WDfc7XEYf+xYkm5Uz156
0vh8o2rn6azyLKPq9+hAX4ZRI8ldYuVUklEt+XTaaNj9AX3CNtWoag39TedE
o/p1uuwS5g910QdcrxnVlNgt/u2q1aj2ebQpb7xRvSW01jLUqL6v6Yq06UYN
nqX9+eNQw/SnVZjfOqpH/N1h2DOH7qt6C/nfp2uTZiG/RlfEXkX+M+JQ0QUP
8t9iP3M+5nO/eE/c4cxGfhudmDob+dfQjScxPrRLbF/98SrkP81+amIe/n+D
bn6C670v3OfzKsF6+GbRRyvRD3rosk8moe6ku4ZNQ/56OrEpF/k76ce/z0T+
4Q/EL5lfQf5suvRX5Im8S4ev2pD/Szo1mIn8J+juhgLkv0IfCWC9/UMj4rwO
fF7ISn9eOwf5i+imbfh8+xf0oBjsPU7fqMfz8XXQBfnYL8HBveL1i3E/ygw6
dmge8q+gd1zGfJ7t9Agznp9WJ1ajzvnI3/7MFxcivxKV8TVtGG9Jp31JU5B/
GR147mVc95lYjU/A+fIfedbvfB352+iqteib/uP4hzEn8qc95PqV2JG/kLZV
I6+vQqzanjiQ/yD7e1fDymX2A9swv3WA/dKBHOSfHBO7/8B+1Aro2Aqsr/4R
HbiI5x3ZL1a333Qh/yX23zyE+d2P6HI/3i9qap84RZ2B/IvpHyqwPqEPxapr
FfKZ9rHf8s5k5L9AN2u43ttHh/styD/hb/HuMM5DcAFtPj9d7kOsVm1chPw/
ifWUqBv5W8T2t38sRP4ox7f34vnp5n7pVxYuR36XWM+Nw/WWjWI1pxr7xf09
3Rsv+/8XsdL+BubzP6DDW7AfQ2Meif/MQj6Tk66px3mzl9FxzTgv3j1iPaN/
GfI30TfLlyJ/D8ff3ozzrST/I67bhPWzOuick5jfU0p3tuP9pn1L71mL94Xe
SLvOYb0id+khZlxvSfiX79M67Cf3XLp6C867up7O6pb1302PaMD+Cv1MOxow
n+kO3ZqC/WOPHxBHx2I9vbn07VZ8n/jW0ZXP430f/Io2ZSagnqG1ufg+sv5F
71yJ9fCMfCye8B7uV5tN19ZgvF5MR47hPEeqaZ8zBfkb6JXZY5D/Oj3u2kzH
/wUGMTI=
         "]]}}, {{}, {}}},
     AspectRatio->NCache[
       Rational[1, 4], 0.25],
     Axes->{False, False},
     AxesLabel->{None, None},
     AxesOrigin->{3.8804832*^9, 0},
     DisplayFunction->Identity,
     Frame->{{True, True}, {True, True}},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->FrontEndValueCache[{{Automatic, Automatic}, {
         Charting`DateTicksFunction[
         Automatic, DateTicksFormat -> {Automatic}], 
         Charting`DateTicksFunction[
         Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> 
          None]}}, {{Automatic, Automatic}, {{{3.8788416*^9, 
           FormBox[
            StyleBox["\"Dec\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.88152*^9, 
           FormBox[
            StyleBox["\"Jan\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.8841984*^9, 
           FormBox[
            StyleBox["\"Feb\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.8866176*^9, 
           FormBox[
            StyleBox["\"Mar\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.889296*^9, 
           FormBox[
            StyleBox["\"Apr\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.891888*^9, 
           FormBox[
            StyleBox["\"May\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}}, {{3.8788416*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.88152*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.8841984*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.8866176*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.889296*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.891888*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}}}}],
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     Method->{
      "NoShowPlotTheme" -> Automatic, "AxisPadding" -> Scaled[0.02], 
       "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.647624, 0.37816, 0.614037], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.571589, 0.586483, 0.], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.915, 0.3325, 0.2125], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
          AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
       "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
       Scaled[0.05], "AllowMicroRanges" -> {True, False}, 
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}},
     PlotLabel->FormBox["\"Volume\"", TraditionalForm],
     PlotRange->{{3.8804832*^9, 3.8906784*^9}, {0, 8.805087*^6}},
     PlotRangeClipping->True,
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{{}, Automatic}]}], ",", 
   RowBox[{"\<\"BUSD-USD\"\>", "\[Rule]", 
    GraphicsBox[{{}, {{}, {}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJwl1Q1MVWUYB/DXe7uOSyXnGgxN6p7YSpzVjrpYBti5eMMaGCcUgiHbEcIg
XFw2VnNo3DI242MeUwujj0MMF5vFHeNrTMYZLOKqsOtoiRVyIJEPL3C5fHiD
xHj/Lxs7++0578fzPO9573PZhSm5BkLIx+v/9Ln+JxROeW2EuGr7yxbXn0S+
BKt+fuI+tdID61uzTs9SazOwVr4pmT6JL3yaPsXifcnD1Hw8LL+RUHiXWjrO
4jdyKsapnV/BeiB9wEft0mDSWBK5QJ/6NOzJ8N9BnAu7j/kuq5Nz1OLrsPb4
WjDmd+TDYvO5Bp1aPQ+r2e+MTFF7Opl/8Q7MUJNJNl/BefcStbDZSy09LWVi
PTkW1rNai7Af5RhMir9IGkX+Cuzc9qJ+D/l3wFpdpbaK/MdhcflaIuaXQmYw
vpqLCiD/vfDQmP2nx+Jp/jmwPFx/aAO1XgXr+4+kmqm5dli92PM+5hfH4ChT
QTehcccTs9RcaLD3EfKPhgM5xiIjjXtkWPLqIsaTClju3HgQcaEFHvLEV5mo
5RHYVV+6hvkV8xy10vDDqoFa2wNviSxZwX59WXB7+28zyIc/A4v25JfwvtQE
p/eWpsDOv1m8qiJoGf3f6MP67rLtiOsCHDXbdRz74zJh7lKdeQ35l8F959J6
sb6jERZbrbewf/U27Ar6Novlb5xH/TZcn3+A/F+G9YP3mlEvIR3mX0n/EfnK
n8Fc0zER45Ur8OS7xkSW/x8webbmcBDyJ35qn/WDKbzP74TF0LQM9FtKhV2D
c2Gs/6Vw4OvlUxjvaoA5PlRh+Q/C6aF5rF7cGtwXd9qC98WoBerq+poM1NuR
AotXbFacN/UkLF0zTazg/F+G+QMmJ/IjN2HOVOmHhVXYddRuZ/k/v4h6td3Z
g/ooyYusniW7HuL8n2Ae/1Scx/mvg0m0ORrfDz8AO8IfxbDzH2Dvj/xZju/J
GbmEeo3lRaAfriSYjysMwfv6R7DoHngK63G1MNld89oE+n+d+ZnwAL5vxxLs
CYvNx/qqdRnf44VpE+4zz1uwEPbm7370v5jZNN6Pfgjfw/LNvZGot9wHK5Zg
N86b4mfzfWPJwHnVIh7gvC7t4NBvXwLz1V37Wf+L4DyvdTPqKdXAnoXPrcjX
+SvsOtG2HefXNQcLzTeOIl99awD1UVtasT/ODiudmg1x8UNY6ko8jLijGnbW
nfEhX7UbJvbRBPTH4w2w7yMuaBr5h/8Lv7e0DfexYIPlfnflP7j/CmA1rSeb
3f8XYfJJ09uot9bFxt/KPYK4b4rF67W/YD50BeNPld/G/Sjtg+WQnRzuT2ce
7Ow4aRlD/7+EtYgdIxivX2XjL3QbMJ6bYHYntbD+W1ax/nc5BuzXEQOTQ7E/
jyD/XJjP7H2I+T1nYdlgkbA+6WDj1/uP+YW7LL4loxbry5v+g4deMOL3QnkV
1rJTh1n+2TDfaDbgvPkqYWfM7ifxe8S3sfH5Z0uxP2mUvd8zaJuy/Q9tKbw1

         "]]}}, {{}, {}}},
     AspectRatio->NCache[
       Rational[1, 4], 0.25],
     Axes->{False, False},
     AxesLabel->{None, None},
     AxesOrigin->{3.8804832*^9, 0},
     DisplayFunction->Identity,
     Frame->{{True, True}, {True, True}},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->FrontEndValueCache[{{Automatic, Automatic}, {
         Charting`DateTicksFunction[
         Automatic, DateTicksFormat -> {Automatic}], 
         Charting`DateTicksFunction[
         Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> 
          None]}}, {{Automatic, Automatic}, {{{3.8788416*^9, 
           FormBox[
            StyleBox["\"Dec\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.88152*^9, 
           FormBox[
            StyleBox["\"Jan\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.8841984*^9, 
           FormBox[
            StyleBox["\"Feb\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.8866176*^9, 
           FormBox[
            StyleBox["\"Mar\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.889296*^9, 
           FormBox[
            StyleBox["\"Apr\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.891888*^9, 
           FormBox[
            StyleBox["\"May\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}}, {{3.8788416*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.88152*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.8841984*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.8866176*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.889296*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.891888*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}}}}],
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     Method->{
      "NoShowPlotTheme" -> Automatic, "AxisPadding" -> Scaled[0.02], 
       "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.647624, 0.37816, 0.614037], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.571589, 0.586483, 0.], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.915, 0.3325, 0.2125], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
          AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
       "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
       Scaled[0.05], "AllowMicroRanges" -> {True, False}, 
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}},
     PlotLabel->FormBox["\"Volume\"", TraditionalForm],
     PlotRange->{{3.8804832*^9, 3.8906784*^9}, {0, 1.3600786556*^10}},
     PlotRangeClipping->True,
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{{}, Automatic}]}], ",", 
   RowBox[{"\<\"TRX-USD\"\>", "\[Rule]", 
    GraphicsBox[{{}, {{}, {}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJwt1Q9MlGUcB/C3KLLN0VUmtvI62sRrarwgeQSGB9E1k+SiJLfMvdiOYDo4
6GahLm/+Ya5/3ADBBPElg/D/dYjc6LLrqAsx9TAwdVdepMV/LuIQvWLxfr+x
sd8+e573fd7v+/ze52I2FGWb7hYE4d2Zf6XO/IlFA8NpM9USF9GkVOlTOlO1
RlaqrYOumjAdUqp7hC7b1d2g1GD0ILwrS7dPqZp0elZJYL9SjZvoQOXFWqVa
q+m+wQJcb3fT/hIH7h8YpHvUs2HVI0Pw6sL5sH4F7dcdrVequYAWEvprlCpX
0r7d5Xh+39e0dpl4EPP6ackwr1Gp4kPDzBs+D0vL6XcWDnmRP4/2V5fZkd9G
9yTPbUb+dnoycfVp5L9Je2/nfoH8D4zAiQn3HEb+Z2nXzp5jyP8Wveny+RPI
/zFszU8PuJHfyfFOb9dJ5O+j99S1HEf+2aOwwbQT95eX0Rr7XZjvk+jvFq36
HPk/pLddiMTzia30pZtRmC9dp7vUk8hnu3+M67d7jiD/Ujp/neEo8r9Ji2UG
jGv20BpvDfrJ6KD7pCUtyO+nnU/Zcb09Mgg/vOXil8gv0pt7kzFf9QYtd+vw
/vW76UzTD7D5JH1WXOfEvKv/e6sL1/si/uL8QhnvW3iaHnb8gv0S19I5xzcy
/w66vOXVNuQ/Ri8Q2jzIf5l2Pb+2A/mFcXh6Vu4p5F5EJ1/9nfnX0Dm6Mti6
nZ6bV+9A/sP0ksQK5An8RL8do21F/mm6av1neB699m+4f+koxs3ZtOXWfXif
8ja6bk4s7GuiD47YkFfopv3xj2F9MUwfiWvH+5EWTMAnnL3oJ1sWHfVBN+wu
pSvGmtn/h+jOgrPIp7lAt4dj0A/GKdoa34D51idD8Ps523E/eyY9L8aP8cBm
emL5SuyHqoGu0I3i+9Sfoz01n+A8MIfoK1visL78xCTPm4EirO9bSftDC7Ge
YKG7Tj3zFfLX07lbr51B/k46MvsS+sk2TjdmtGF/3Y/fwvcZq/agH4IGWBhI
qXUhfzEttYYw31hLF10LY3+t39PF0z+i3+1jdNVQB/IGHp2CY53zsX+qDHrq
QCPOB30hXZr6HPt/H2zdm1COfpQ9dM4rqd8i/zDn/5phwfcgRN+Gk+Kz8D7E
NHr8igPngbSRfq2wF/1g20un39vC/f+G/kOuw3hwgN5R3Ivn08y5wzwveLn/
qfT+iETYmk+vVxuxX/YK+o78L8YDLtr9+grm/5NefPpnPJ/+wTBcsvhFzDen
0Oob13G+ySba/3IS+sNXTmeHYuCZxoTfaz6HfhNv0F3jHnwPUtQ/nF9qwX7Y
kugzKZXI695A+6odOH+DH9F5Hi3ur2mjXVr+/hh/o1+KNjSl/Qe0BZjW
         "]]}}, {{}, {}}},
     AspectRatio->NCache[
       Rational[1, 4], 0.25],
     Axes->{False, False},
     AxesLabel->{None, None},
     AxesOrigin->{3.8804832*^9, 0},
     DisplayFunction->Identity,
     Frame->{{True, True}, {True, True}},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->FrontEndValueCache[{{Automatic, Automatic}, {
         Charting`DateTicksFunction[
         Automatic, DateTicksFormat -> {Automatic}], 
         Charting`DateTicksFunction[
         Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> 
          None]}}, {{Automatic, Automatic}, {{{3.8788416*^9, 
           FormBox[
            StyleBox["\"Dec\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.88152*^9, 
           FormBox[
            StyleBox["\"Jan\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.8841984*^9, 
           FormBox[
            StyleBox["\"Feb\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.8866176*^9, 
           FormBox[
            StyleBox["\"Mar\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.889296*^9, 
           FormBox[
            StyleBox["\"Apr\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.891888*^9, 
           FormBox[
            StyleBox["\"May\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}}, {{3.8788416*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.88152*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.8841984*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.8866176*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.889296*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.891888*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}}}}],
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     Method->{
      "NoShowPlotTheme" -> Automatic, "AxisPadding" -> Scaled[0.02], 
       "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.647624, 0.37816, 0.614037], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.571589, 0.586483, 0.], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.915, 0.3325, 0.2125], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
          AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
       "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
       Scaled[0.05], "AllowMicroRanges" -> {True, False}, 
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}},
     PlotLabel->FormBox["\"Volume\"", TraditionalForm],
     PlotRange->{{3.8804832*^9, 3.8906784*^9}, {0, 7.69019622*^8}},
     PlotRangeClipping->True,
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{{}, Automatic}]}], ",", 
   RowBox[{"\<\"DAI-USD\"\>", "\[Rule]", 
    GraphicsBox[{{}, {{}, {}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJwt1Q9MlGUcB/DXbNTBZadilHPeycDRjNuV5NDM7spVCOLFxjz/0RtqaTk8
TibQ0A7DP1OE60D+yHEdoPiHCw7E5SDz1Wqx/rhrmLPG1lsDkvMVjyuJ1Fy8
3y9s7LfPnnuf5/k+z+/eW5C7M2vrI4IgFE7+q3Xyz7RzRLFM1pS96a1qFevp
srKbn6rV9RWtaPXNapVu02J2m0+t4bgQ/PjawxVqNbxKP11cWqtW6w46JSfn
uFqdNXT08msn1BqQ6GbNrk61yiE6oagH6+nm3ILNHZFG1Ffoaw9tNWq1b6eL
mj6uVquvilZmpxxTa/Ai7UnTYz/CTdqdOdKkVtMsBfYpF/3ItZyuTjY2IP+7
tFgxXoX8Lnq9J575e2jPOxvPIP8QnbGotA75n7wNl3jXYj3nUtq6UteG/Jvp
bs2508h/lB6MG8R+dBfo4cL9Lcj/By15Nbgvu3YUtsXOx/O+JXRwQupAFekf
6r7E+sIROqfx55PIf54enlaF58Xf6FFnBc7fpbkD9+V7MC4tpn1Z+bi/8CY6
Ut7G/Ifo1uS8U8jZRce7U/F55wCd6vF4kD8qDLu6E3GesokWt1Xhed0G+kr2
AezfvJ+OH+jCfPYOeniNzPy/0MtKD2I8OH0MDhhbvMhvpLccbEM/mGz0CYcD
84v76GXpHub301dvleO8pOu0NpKG+wsLEfbr4tUYNyyibzSOoz+t2XRB5VtY
z/kR/eH80Hns6wydGRWD+5b7aSVm7lnkf0gLqxbgPs1Jf8Ghvs525M+ildxN
9chfQp9WknGewVY6Yj6EfhF+osvHpuF8TffpX2d/C4uJf/P7+ew85HOtoffN
mmD+YroobjrOM9xCe2YmIZ/hKr3jtQH0q3WCLsl8g/0ffxfea3wb+wlk0BlH
NJhf3k2v/y4A65roN5PqP0H+72nDRg3Ws9+lx18+gLw+/Tj7YXsU1g+m0f7D
1zEuFNCxJ3d/hvxe2OnYU/s18vfB4ejN6WPIH4GlyxpXP/LP+wdeV9sQRP7X
YeFs4o1L2Fc+3X/0QS/yN9DOzgvnUL+hn7D81438d2jjU+/j/OVnJnjfM5KY
f+WUQ/3oB3MeXVC9Af1ur6NLepdgPt8VOmHpFnwfgwqdl9/L+4/7F5abF+L9
aLLQZSMOnKf4AZ3wYgXOz3WMNtfkwdIlOvp5G99/I7TVEMLvhSH2Ht837aPo
D+sKOmOVjPWc22jJUOxGfjc9972F6A/5Czp29B7m1/1Jayu7MJ955n2+n4d2
4ffE/hJd5xhi/2+dGg88hvFgJe3XF6J/hB5aq7+M+UyD9HOGGJy3OOMB3y8v
JGI/rlRaslnwPpFyaevvc5i/nJbbf3Qh/+e0/9E9bn5uaty3wmv5H3PthUo=

         "]]}}, {{}, {}}},
     AspectRatio->NCache[
       Rational[1, 4], 0.25],
     Axes->{False, False},
     AxesLabel->{None, None},
     AxesOrigin->{3.8804832*^9, 0},
     DisplayFunction->Identity,
     Frame->{{True, True}, {True, True}},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->FrontEndValueCache[{{Automatic, Automatic}, {
         Charting`DateTicksFunction[
         Automatic, DateTicksFormat -> {Automatic}], 
         Charting`DateTicksFunction[
         Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> 
          None]}}, {{Automatic, Automatic}, {{{3.8788416*^9, 
           FormBox[
            StyleBox["\"Dec\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.88152*^9, 
           FormBox[
            StyleBox["\"Jan\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.8841984*^9, 
           FormBox[
            StyleBox["\"Feb\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.8866176*^9, 
           FormBox[
            StyleBox["\"Mar\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.889296*^9, 
           FormBox[
            StyleBox["\"Apr\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.891888*^9, 
           FormBox[
            StyleBox["\"May\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}}, {{3.8788416*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.88152*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.8841984*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.8866176*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.889296*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.891888*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}}}}],
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     Method->{
      "NoShowPlotTheme" -> Automatic, "AxisPadding" -> Scaled[0.02], 
       "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.647624, 0.37816, 0.614037], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.571589, 0.586483, 0.], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.915, 0.3325, 0.2125], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
          AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
       "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
       Scaled[0.05], "AllowMicroRanges" -> {True, False}, 
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}},
     PlotLabel->FormBox["\"Volume\"", TraditionalForm],
     PlotRange->{{3.8804832*^9, 3.8906784*^9}, {0, 4.642451631*^9}},
     PlotRangeClipping->True,
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{{}, Automatic}]}], ",", 
   RowBox[{"\<\"WBTC-USD\"\>", "\[Rule]", 
    GraphicsBox[{{}, {{}, {}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJwt1A1MlHUcB/AHbc2y6WmmtLF5oDkji4vK0Sg9mCUuF5dl4UvthKEYxF3h
dFrYmdCuccgTCDuRzofXJE+8sHg5SB+ju1EinUW8bGedF5TI6V0EeoTLeL7f
2NhvHx6e//P7/v+/54lON2zKnCUIwr6ZX6XO/GgMo4GkmZq11V+rVP0xOu3c
QJFSxS561evBcqXKN+g5XYVmpYaWXIeFwz15SlUn0yev7PhEqbocWh5Yd1ip
pgo6IXilQqkOmbaOD32qVN91uq3XUqhU1UNjsN4Sf0ip2rW0byguX6nG3bTq
0aUHlSqV0XLGoQKler6hhTV3DqBeo3NaC0SlahYGeN1xdz+e89z/rlqF/sWd
tDqi9D2sK9LaDvf7yO+kl9cm1+D/Rui0d3TYH938G7D9vLcU+Z+lbza4G5A/
g443PPM5chXTEWMHm5GrjZbnteN+rZ8Wks5KyP/ATbjuiAHnI62may6xH4+e
NssLcL9QRPdN1x9H/q/pie7NJ5H/N7ozsa0S+e8LwnvmjlShj6doX3lfI/K/
SacOrXYgv5metasF/ema6R7nMtjkpetMcWXIf2+I89J4qRrramht5q/oX7WN
FmzWo/h7IR11ug/9Gc/Qtq5dmF9piB4sX25D/tl/8bxf/vgY1nmCThurxvxp
0mh7wiDy6T+i1Z4s5rfT+pJlnyF/P711/P5TyC+Mw5Eadz3ue4x+LavrBPJv
pnUX7mK/TR/S/rfy65C/kd6ZXIL+fT/T3RnRXyD/v7R55Kcm5F/5N/xLXjH2
27iJDqxvx35JH9CWyN/Rj6eBtu5+CesJl+nFHVvQv2aa7h9YjOv6Rybgt7v9
mAcxlU5Z4cZ8yvvpo5W5mN9QLT0xdZH5e+nYlQ5YF6aHb21HXlPMJNwU52L+
jXTyijDPfy/d54/C+qpqWvR5rch/ka5q6uT8T9Lejmicn7T0FvejZgvW82yg
fT9exv4Le+in48+cRn4b/UN+8Evk74ZNdtsbbjx3nNdTyorwPspRt3F93/Nq
GflfpLeFcy4g/7uwkFnf3or8x2nplUjsh8lFJwYbncgfpDcaWr5Cnw+H4XDo
1bPIv47O3hsDa3PpHbFe9Gu00s1rr6I/6Vv6u3sknKcnQP9R7MTzhSVT/P5O
tR9B/iR6cDKV859Nx55KxzyJ5XRPvovzf57eXuLGvIZG6UUtj8PqRf/wfa48
wPd/DR22PIjvuymLVk/MxffIUUr33x7GPPg6ae+T53C/6k+6IJfWLpjmvLm+
x/trTKTnbLAVI38mfe2F+cjnKaGNoyfwvRGc9EKXC/OhGaZj8orsyD/vDt/n
2Q7Mn5hAD66XsX9yOl0XjsB5hSx0ipiN+VK30j2BSHxvdFdpc2JvRdJ/m6ya
fA==
         "]]}}, {{}, {}}},
     AspectRatio->NCache[
       Rational[1, 4], 0.25],
     Axes->{False, False},
     AxesLabel->{None, None},
     AxesOrigin->{3.8804832*^9, 0},
     DisplayFunction->Identity,
     Frame->{{True, True}, {True, True}},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->FrontEndValueCache[{{Automatic, Automatic}, {
         Charting`DateTicksFunction[
         Automatic, DateTicksFormat -> {Automatic}], 
         Charting`DateTicksFunction[
         Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> 
          None]}}, {{Automatic, Automatic}, {{{3.8788416*^9, 
           FormBox[
            StyleBox["\"Dec\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.88152*^9, 
           FormBox[
            StyleBox["\"Jan\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.8841984*^9, 
           FormBox[
            StyleBox["\"Feb\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.8866176*^9, 
           FormBox[
            StyleBox["\"Mar\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.889296*^9, 
           FormBox[
            StyleBox["\"Apr\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.891888*^9, 
           FormBox[
            StyleBox["\"May\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}}, {{3.8788416*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.88152*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.8841984*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.8866176*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.889296*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.891888*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}}}}],
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     Method->{
      "NoShowPlotTheme" -> Automatic, "AxisPadding" -> Scaled[0.02], 
       "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.647624, 0.37816, 0.614037], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.571589, 0.586483, 0.], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.915, 0.3325, 0.2125], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
          AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
       "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
       Scaled[0.05], "AllowMicroRanges" -> {True, False}, 
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}},
     PlotLabel->FormBox["\"Volume\"", TraditionalForm],
     PlotRange->{{3.8804832*^9, 3.8906784*^9}, {0, 7.49682009*^8}},
     PlotRangeClipping->True,
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{{}, Automatic}]}], ",", 
   RowBox[{"\<\"LINK-USD\"\>", "\[Rule]", 
    GraphicsBox[{{}, {{}, {}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJwt1QtQVFUcBvAbltBYsctkQsOMq5FP1J0YH00+liyFVoYbk7jDw9kgzcTB
60Q62mqbk4qD1bqMRmm4SsHiA28oLC4uXCXNwtGljGTEhE0LcZEFYkUgi/t9
McP85+f/cs/5zjn3OCFrfcqqEEEQNo38qnXkR7/+rj9+pD7n6nOq1fwlHWtv
P6xWWwMd4Rz4Rq1KFx05semIWgPjOvn8rs++UqvuVdowo9ahVnEdfTC1qFit
1v30vJCn8feyQrsLLKVqbeuk01KjytSqGXsPXvmDEX3DIno4Zy7mJ71Hh+0O
xfiOQjp/bO63avV66OaOWljooL+/vhN59RF+eOO9P0uQfz59LYK2raaVvTLy
KDZ6y6KfMH7ATdt3aE8j/x06JTi3HPnDu+Cjaemw9WV6Zn84npezaU3gzEnk
/xS2TiubdQ7/XsO+xZ/pQn4fvW9PASw9dR8Wvd1VyD+HXvN1rhv5zXRwmfYo
8hfQ0aYbFchfRbuNs6qR/xYd0nMC77c92c35+66ir8TRVefPVSJ/Jt3buIT5
8+ls/y08L1bSmRdzapC/lZabLSdQRwfg9mo73temp5OCZliTTidsjsb8DTvo
q62H0JdO0g+0YzC+o4WuatkiI/+oHli6uQDrL8yk3zJFH0N+E50ne9E3b6cH
/zmF/bAdp5/vW4HxlGbYUJQseZFf6EX/C99trLduOu34NxLnS1xOB969chz5
P6KXfpCI/ZLL6d/TajDftl/+70e9jjyaR3RMu68O+af0wXWXxQvIlULfdM74
EeNaYOvaLgXnx1vKvlM7WUH+JrrPsxT7oR+it70dXov8L/4Nr5sgNCB/Mj1p
dkY98m+mE14o5P6X0CuTtMinu0J3vd/0HfIP0JdKY/G8dWI/3LPLg768jL6+
YJDnfyNdn1HC/IfpmNAG7I+hkY7M+w33gdRPiw9343w4xgdh67V8nG9vIr3Y
MgbjC3n0ncIzsL6Y7nwUhvHMl2jj2sdgWy9d4ajB/JToB7DJeBHfR2AJnVXh
xvrpNtDiWTv64gH6smsUzpv1Ar0/mI7vQ+6mYzwunv+oAfiTd07j+9C8Rn+Y
GudB/lx6au6vOD9SEa1xbsV+O87T0xcfOoX8fnp0z0GstzDuIde7IxT3qz6e
fklbyfsvh06ZtBXzte2ji3unYP2VenoorAHvC9yl55c5cX51zw7Cc1oTsX7i
QvqNbB/uX+saeue2j7F/sp2OSyjG+9rO0s1/HGH+v+jgwuXoG7RDvK+GJ2P+
0it0xBOP4352rKIz6mYfQP7P6djy1bDgpn0tBvx/pr9N5zdux3zMzwzDQvKb
eL9tHp2waTzWQ8mib5h+xvcT2ENXD2mxfzoXbdxwH+shttNJrVJt/H9rNpmD

         "]]}}, {{}, {}}},
     AspectRatio->NCache[
       Rational[1, 4], 0.25],
     Axes->{False, False},
     AxesLabel->{None, None},
     AxesOrigin->{3.8804832*^9, 0},
     DisplayFunction->Identity,
     Frame->{{True, True}, {True, True}},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->FrontEndValueCache[{{Automatic, Automatic}, {
         Charting`DateTicksFunction[
         Automatic, DateTicksFormat -> {Automatic}], 
         Charting`DateTicksFunction[
         Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> 
          None]}}, {{Automatic, Automatic}, {{{3.8788416*^9, 
           FormBox[
            StyleBox["\"Dec\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.88152*^9, 
           FormBox[
            StyleBox["\"Jan\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.8841984*^9, 
           FormBox[
            StyleBox["\"Feb\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.8866176*^9, 
           FormBox[
            StyleBox["\"Mar\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.889296*^9, 
           FormBox[
            StyleBox["\"Apr\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.891888*^9, 
           FormBox[
            StyleBox["\"May\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}}, {{3.8788416*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.88152*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.8841984*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.8866176*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.889296*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.891888*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}}}}],
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     Method->{
      "NoShowPlotTheme" -> Automatic, "AxisPadding" -> Scaled[0.02], 
       "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.647624, 0.37816, 0.614037], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.571589, 0.586483, 0.], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.915, 0.3325, 0.2125], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
          AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
       "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
       Scaled[0.05], "AllowMicroRanges" -> {True, False}, 
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}},
     PlotLabel->FormBox["\"Volume\"", TraditionalForm],
     PlotRange->{{3.8804832*^9, 3.8906784*^9}, {0, 1.103183457*^9}},
     PlotRangeClipping->True,
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{{}, Automatic}]}], ",", 
   RowBox[{"\<\"UNI7083-USD\"\>", "\[Rule]", 
    GraphicsBox[{{}, {{}, {}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJwt1Q1MlGUAB/A3ZQwas1cmk8yPN5OBY7GXWQyL9ChCYjrYRetmp3unR0A1
edsIYuQ8DRXtjDdARcHjDDM/bnrRjAuvuhHErbCdfVLaJGdL6ID3FOSAwrj/
/9jYs989zz3P83++7tFt5cbieYIgVM39h8u5P7l8KJA9V97e8mBduFSO0b6y
l2vDpfY1rc8uRL13hBaiUw/g88XDsLu2ck+4lJ6lC78s34/yDTqUvnNfuLQe
oaVdN9G/y0ur1csOhcvB4Uh9qAjjiQn/cD6XJbQ3rKf9egLGU8tobePIznDp
aKTr3GMa2n1BSx2X0Z9wmw7kn2sIl3J8gOPPMzJ/Fq2k/wxrr9JyWQ3G82qR
+lMlmI/eRRc+/9RRjPMXbRq99AE+f2gENmfEYTzrWno03uRA/u20L9bejPyH
6MCNCifyu+mBdXnHkf8mndLUZse840a5Pw3d+L4jg84qSj+H/AqtrshpRP73
6KK0a4eR6xItqDltyHWDbto6dQr5Y8dgezC3HfnX0J6+5BMYdwudWfBrK/LX
0Vm591uQv4MusrdgftbrdOnMFayHK1rn/j2+gfllOipGRj7xFTpveTPmb9hL
x+1YgvmqF2lZ3XcB+X+jf0qUP0b++UHY1tmO+Qhp9PLNw1h/2URHrVqKPMoe
2nffhDyak15UcgHtvb/Q+SYr9kcX7vC8VX+L/qVUOrG/5H3kf4nWf99tQ/5d
dM/kMbR3nY203195BPl/pD1d8dhvcTZSn1/1IfKn3OX5WtvH/EZazX7gI+R/
hza29mI9/KdpS9802gtXaZvTDsszke8fjMZ4StI4bFitNiF/Ab0qUIB6bzXt
XfIpzrfeTg+eeQbvgfQ9bR6bxv0rDNF6byz2z7pyAna9+BnyujbSMdeS6tFP
JT1+fi/uk3iSLh1fg/4N39ED2x/D+OoE7cx8F3asuMf9u/cJ+ve/QFss9Tjv
QgXdWjnN82+nPW9NYb8VH91z9rWTyH+HHk8qwfn0Lp2E066ex33Qc+kfGmpg
6U3acuIRnv8WuqJtCvOz9tL9T0ShP9cYfavjP6zv4MMh7k/MJtSLOfSZrXex
HoYddL/tOVhtpms9bt7/blrsScZ6+wP09WA31kNYPMX3uLz4IPJn08KyOrzP
yuu0aciN86odphMnv0G99yu6dXg99lcfoq2hz3GfpUXTfA/mq3z/1tFicAD7
Zy2lY1JFvK+uBtraaUb7QQ9tqlmA/sW/aV9BCmxYOMPfq9njmJ/6NK1lmPH7
4SimFeMfOE/+etpdtRsWumhhIoHv/y3aORnE+MqCf2HHhgNYPy2TTjGvxvp5
t9ErkxWcD91Gm5+0oL3USb99xYP2hX/SeUdPN2b/D1Gshaw=
         "]]}}, {{}, {}}},
     AspectRatio->NCache[
       Rational[1, 4], 0.25],
     Axes->{False, False},
     AxesLabel->{None, None},
     AxesOrigin->{3.8804832*^9, 0},
     DisplayFunction->Identity,
     Frame->{{True, True}, {True, True}},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->FrontEndValueCache[{{Automatic, Automatic}, {
         Charting`DateTicksFunction[
         Automatic, DateTicksFormat -> {Automatic}], 
         Charting`DateTicksFunction[
         Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> 
          None]}}, {{Automatic, Automatic}, {{{3.8788416*^9, 
           FormBox[
            StyleBox["\"Dec\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.88152*^9, 
           FormBox[
            StyleBox["\"Jan\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.8841984*^9, 
           FormBox[
            StyleBox["\"Feb\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.8866176*^9, 
           FormBox[
            StyleBox["\"Mar\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.889296*^9, 
           FormBox[
            StyleBox["\"Apr\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.891888*^9, 
           FormBox[
            StyleBox["\"May\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}}, {{3.8788416*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.88152*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.8841984*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.8866176*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.889296*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.891888*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}}}}],
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     Method->{
      "NoShowPlotTheme" -> Automatic, "AxisPadding" -> Scaled[0.02], 
       "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.647624, 0.37816, 0.614037], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.571589, 0.586483, 0.], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.915, 0.3325, 0.2125], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
          AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
       "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
       Scaled[0.05], "AllowMicroRanges" -> {True, False}, 
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}},
     PlotLabel->FormBox["\"Volume\"", TraditionalForm],
     PlotRange->{{3.8804832*^9, 3.8906784*^9}, {0, 2.58133545*^8}},
     PlotRangeClipping->True,
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{{}, Automatic}]}], ",", 
   RowBox[{"\<\"ATOM-USD\"\>", "\[Rule]", 
    GraphicsBox[{{}, {{}, {}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJwt1Q9MlGUcB/BXZDmV9GKI5GidDPNUxm7ltDLtpVHT7VY3InUV8538CdTk
rVxQmr2Wihknb4h2lwWHIKIdeoIkI8J3lJOV5SnIcJicdEWeh7yiKMHF4v1+
Y2O/fXje93mf7/OPuevz07IjBEEomPg16sSPNf9mKGWiXrjx8kGjSi468sHZ
MqOqP9KnY4oPGFUboC3OrFKj6rODtOXZL4xqfoG2hqtUo9o30eKr0/G8cpDe
tNSB73k12tYZ7zKqP0gL2/Nh06xb8Nr+5XhefJ6W5PYSo8p5tHswz4G6n45b
GOE2qu8H2jk1uwr9/k3vrdQqMc7oELxHL2b+5+j0M9fwfTWHHinainyaSpsz
L36F/M2098rQCfz9T9r+9ov4vn3mAJzc64eVZ2j3pPpjeC+TjguUVCO/g1Z6
Wk8jfxN9fdFqtIt9dHnZ1Vrkj7oNl3ZMQ7t7CS2en3cU+SV6p9T+DfJ/Tr/b
OgXvWxvp7et6vkX+Xvr4Cncd8k8dZH+/ZtUg/1N0kpiB+dQz6N3Tt51E/j30
X+Yr6M9eT3dFxWA8yjU6qDmOIP9DOpx66zz691vp1y/VYXymN+jwpwsOYxy7
6Ib5nmbkP0lvqNlxCvmv0t0jf2A9fJPv8P3QYay3kEx/5xrFeKxr6UDBVsyf
9Amte5uOI7+HlpKLkE/rov8VCuvxnDAEb0n3YbzmRXRi10dfI/9rdFNdN+Zf
+Zi2Re9FXu8xWmy8z/wddHxbEDaN086edOQRLXfhvhk/oV1Oo1VTEtbDvY1O
HPZg/n019JufPYbnhUt0UmYD5t86Ro8PhTG/0rx7sKfsOsarvkLbHv4d86d9
QNtXllcgfxW9eNWaL5H/N7q2uw/nxz5Ca44GnBclYZjtM1ejf6+NLmzsdyL/
+/+370ooR/5K2r7sHO4T8RfaJk/B9+RhOsbi3o/8j9/n+QpkoD/fKjocGYX1
ELbQWmwA82MtpytyC7zI306r+6JxPtUhetrdCMyvFv8AvudaivXWX6J3BkM4
r+Z36FGXiv1hP0QXRnI9lXP0+Bwz13+QTo+LxPf9j47wPuqOxf40pdInFlZg
vcTN9BNyJ8YjO+kne1rRn7uNblmcxvsvRJuK8jCfwux/4M7lc3HfWVPogFiN
+03aSIu7J/H+O0C3rEzEemtn6c3z67Af9Zv0heqjOD/mmFE457023n8raMsO
M95XcmmnP8D1L6WXbOzH/vK30Mq+ObCpn779lg6Lj4zx/r1Ti/7lZfTlyxdh
dzade4j/L3wldGpRAf6fCc20P2sM+9EaoONjT2F+pBlh7qc1s9CuPk0nDHTg
fGjr6Q9zfsb9qBfT8oZG5DOfoWsTerEe9ht07veeqpT/AKWfkiU=
         "]]}}, {{}, {}}},
     AspectRatio->NCache[
       Rational[1, 4], 0.25],
     Axes->{False, False},
     AxesLabel->{None, None},
     AxesOrigin->{3.8804832*^9, 0},
     DisplayFunction->Identity,
     Frame->{{True, True}, {True, True}},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->FrontEndValueCache[{{Automatic, Automatic}, {
         Charting`DateTicksFunction[
         Automatic, DateTicksFormat -> {Automatic}], 
         Charting`DateTicksFunction[
         Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> 
          None]}}, {{Automatic, Automatic}, {{{3.8788416*^9, 
           FormBox[
            StyleBox["\"Dec\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.88152*^9, 
           FormBox[
            StyleBox["\"Jan\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.8841984*^9, 
           FormBox[
            StyleBox["\"Feb\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.8866176*^9, 
           FormBox[
            StyleBox["\"Mar\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.889296*^9, 
           FormBox[
            StyleBox["\"Apr\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.891888*^9, 
           FormBox[
            StyleBox["\"May\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}}, {{3.8788416*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.88152*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.8841984*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.8866176*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.889296*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.891888*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}}}}],
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     Method->{
      "NoShowPlotTheme" -> Automatic, "AxisPadding" -> Scaled[0.02], 
       "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.647624, 0.37816, 0.614037], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.571589, 0.586483, 0.], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.915, 0.3325, 0.2125], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
          AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
       "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
       Scaled[0.05], "AllowMicroRanges" -> {True, False}, 
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}},
     PlotLabel->FormBox["\"Volume\"", TraditionalForm],
     PlotRange->{{3.8804832*^9, 3.8906784*^9}, {0, 4.47489971*^8}},
     PlotRangeClipping->True,
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{{}, Automatic}]}], ",", 
   RowBox[{"\<\"OKB-USD\"\>", "\[Rule]", 
    GraphicsBox[{{}, {{}, {}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJwt1QtM1VYYB/BmOpHM6PWxyRiLZYuiczNNIBvGiUWNwcyNqsGAe6TDMSEy
qcB4+Kww5fqCKw7FIKT4xGh270h0hKA2Go1PUmNU2GZWdUxRwHInPsAs4/7/
vcnNya/n8X3f6WkbnZ6zKOM1QRAKB/+hdvAn5XR2JQ625u32H0Otupd27p1c
FWp952jN9uZiXDctPxjIxrjxj2Dx6MnlaGfT+rJyjFeyaXPPnSxc3+32X6vE
+gGTVn9tywm19iO3/+DvK0Kt583H9KklBYg7iw6MGkC+WhZt1X9QGGqNXXTE
/inbcf2UO/5Vy/pQKzyk7Q8/3xBqpTFdsDJ2TRHy+JTWMqLzUP/3tHXCi3xN
H60X+hHfaXbnx9zHeLGDtmui83F9VDcszJ+B/dCn0/pUfzHyWkZ7ihKxnr2D
NjfnrMP1pm53vTKsJ9+jnXcXYz+0ET2cfzAJ8Y2PaeOjVvRbKm2Hf4b4wjZa
7J2C+NIJOklN0FH/X7Rw6PFG1B/+BJY+ubQaecXS1i+HsH/O17R818b+iV7a
WZiLepRGWpuVhfz0P2mjYxriBYY5vD+RuWuQp0SrOzeuRV1f0tazN3B/5U20
ZLUinuanfTFpyNdop5WIZqxnDel19zMP84VptHPuWCnWSXUdW8vzX0Lr1RU/
Yd3jtDokcgvWuUV/19HiwzwhyPovVG1F/VNpa+awTcgjhW4bfgD56Rto8Y6J
9QJHaae8HvPtG3SgIHkb6v+Pjmq8XYc4k/+FLxYH96H+RbR3wcha1L+Wlpfs
rEQeh+l99Z3IV7hOK1e7ylH/AB3/zuUK1DnxKfyw/zCeH18ybUd2YrxZTMen
9SB/5wBtnd6BfMVWOvOrcNSjvKCF5ac3o/73+ri/03XsT2AB3XY5WII4BfTk
sEuwp572jC3D/ZSv0MKkZJxHrY/2Vms4T8aEZ9yf2eHIx5pPq1IF6hPy6cAP
r3tRfx3dkK0jX/UiLQoTUJ8v6M6Xt+I8mFHP4Z8VfRfqn0eLsWHYX3EV7fRE
YH2lhm6I03He9PO0mV5ShjyeuPOvl/H+v/0CHv6PhHo8c2krKR/x5ZW0vfoP
nCetmm6aU4f9Ms66/YWleN9ZXbRRO5fvv/Ev2f9WGM67lEhr85bifaGuoAMN
5xHfV0VbjVfxvJtn3PGqjOfT6aTVlCg+/+P66RF+fB+UBFquOoLvg55Jm+1G
JuJUuuONXr7/W2hjdNxK1P+A1vv8eP/Kowe43tD76chjBm2nJqiYl0Gb195P
Q94V7vi8ICw0u/0pcfi+SH/T6rgYWB35iv3W029Qf7zrL4Z+y/tGN13geXC2
00X7z9Sg/t/opJln+fzfpVP7b5Ym/g9uDn8O
         "]]}}, {{}, {}}},
     AspectRatio->NCache[
       Rational[1, 4], 0.25],
     Axes->{False, False},
     AxesLabel->{None, None},
     AxesOrigin->{3.8804832*^9, 0},
     DisplayFunction->Identity,
     Frame->{{True, True}, {True, True}},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->FrontEndValueCache[{{Automatic, Automatic}, {
         Charting`DateTicksFunction[
         Automatic, DateTicksFormat -> {Automatic}], 
         Charting`DateTicksFunction[
         Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> 
          None]}}, {{Automatic, Automatic}, {{{3.8788416*^9, 
           FormBox[
            StyleBox["\"Dec\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.88152*^9, 
           FormBox[
            StyleBox["\"Jan\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.8841984*^9, 
           FormBox[
            StyleBox["\"Feb\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.8866176*^9, 
           FormBox[
            StyleBox["\"Mar\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.889296*^9, 
           FormBox[
            StyleBox["\"Apr\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.891888*^9, 
           FormBox[
            StyleBox["\"May\"", 
             Directive[], {}, StripOnInput -> False], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}}, {{3.8788416*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.88152*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.8841984*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.8866176*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.889296*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}, {3.891888*^9, 
           FormBox[
            TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
            Rational[1, 72], 0}, 
           Directive[]}}}}],
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     Method->{
      "NoShowPlotTheme" -> Automatic, "AxisPadding" -> Scaled[0.02], 
       "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.647624, 0.37816, 0.614037], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.571589, 0.586483, 0.], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.915, 0.3325, 0.2125], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
          AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
       "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
       Scaled[0.05], "AllowMicroRanges" -> {True, False}, 
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}},
     PlotLabel->FormBox["\"Volume\"", TraditionalForm],
     PlotRange->{{3.8804832*^9, 3.8906784*^9}, {0, 1.29363079*^8}},
     PlotRangeClipping->True,
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{{}, Automatic}]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.890858529181086*^9},
 CellLabel->"Out[111]=",
 CellID->1346984954,ExpressionUUID->"737a7057-e98b-482f-9444-fddcebdb8a27"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["data.bitcoinity.org", "Section",
 CellChangeTimes->{{3.8328391597914963`*^9, 3.8328391635522337`*^9}, {
  3.8328405888794737`*^9, 3.832840599323996*^9}},
 CellID->709582891,ExpressionUUID->"256d61a5-fb09-4dc6-b313-0678359e2b05"],

Cell[TextData[{
 "In this section we ingest crypto-currency data from ",
 ButtonBox["data.bitcoinity.org",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://data.bitcoinity.org/"], None},
  ButtonNote->"https://data.bitcoinity.org/"],
 ", [DBO1]."
}], "Text",
 CellChangeTimes->{{3.833101415561008*^9, 3.833101477128791*^9}},
 CellID->982957246,ExpressionUUID->"4a1a6cfb-cf88-4068-88a7-470522a2ff19"],

Cell[CellGroupData[{

Cell["Metadata", "Subsection",
 CellChangeTimes->{{3.8331013625838127`*^9, 3.83310136582367*^9}},
 CellID->2118220798,ExpressionUUID->"11e23c77-795d-4004-8edf-1021616593ba"],

Cell["\<\
In this sub-section we assign different metadata elements used in \
data.bitcoinity.org.\
\>", "Text",
 CellChangeTimes->{{3.833101370785183*^9, 3.833101407494431*^9}, {
  3.833101484175753*^9, 3.83310149509866*^9}},
 CellID->2100535667,ExpressionUUID->"5a1d782f-fae6-4436-a08a-855fca45fe75"],

Cell[CellGroupData[{

Cell["\<\
The currencies and exchanges we obtained by examining the output of: \
\>", "Text",
 CellChangeTimes->{{3.833101518218687*^9, 3.833101546400053*^9}},
 CellID->1219282236,ExpressionUUID->"e44db1d9-53fa-4570-81a3-054f7fc2548a"],

Cell["\<\
Import[\"https://data.bitcoinity.org/markets/price/30d/USD?t=l\", \"Plaintext\
\"]\
\>", "Program",
 CellChangeTimes->{{3.833101623624166*^9, 3.833101631689682*^9}, 
   3.8331016895405483`*^9},
 CellLabel->"In[60]:=",
 CellID->1187580778,ExpressionUUID->"008239f8-af87-4f91-8ec3-26267554c263"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Assignments", "Subsubsection",
 CellChangeTimes->{{3.833101672841688*^9, 3.8331016747081127`*^9}},
 CellID->957120628,ExpressionUUID->"79be6e80-bc7c-4f8d-8981-1e24b8c6c0dd"],

Cell[BoxData[
 RowBox[{
  RowBox[{"lsCurrencies", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<all\>\"", ",", "\"\<AED\>\"", ",", "\"\<ARS\>\"", ",", "\"\<AUD\>\"",
      ",", "\"\<BRL\>\"", ",", "\"\<CAD\>\"", ",", "\"\<CHF\>\"", ",", 
     "\"\<CLP\>\"", ",", "\"\<CNY\>\"", ",", "\"\<COP\>\"", ",", 
     "\"\<CZK\>\"", ",", "\"\<DKK\>\"", ",", "\"\<EUR\>\"", ",", 
     "\"\<GBP\>\"", ",", "\"\<HKD\>\"", ",", "\"\<HRK\>\"", ",", 
     "\"\<HUF\>\"", ",", "\"\<IDR\>\"", ",", "\"\<ILS\>\"", ",", 
     "\"\<INR\>\"", ",", "\"\<IRR\>\"", ",", "\"\<JPY\>\"", ",", 
     "\"\<KES\>\"", ",", "\"\<KRW\>\"", ",", "\"\<MXN\>\"", ",", 
     "\"\<MYR\>\"", ",", "\"\<NOK\>\"", ",", "\"\<NZD\>\"", ",", 
     "\"\<PHP\>\"", ",", "\"\<PKR\>\"", ",", "\"\<PLN\>\"", ",", 
     "\"\<RON\>\"", ",", "\"\<RUB\>\"", ",", "\"\<RUR\>\"", ",", 
     "\"\<SAR\>\"", ",", "\"\<SEK\>\"", ",", "\"\<SGD\>\"", ",", 
     "\"\<THB\>\"", ",", "\"\<TRY\>\"", ",", "\"\<UAH\>\"", ",", 
     "\"\<USD\>\"", ",", "\"\<VEF\>\"", ",", "\"\<XAU\>\"", ",", 
     "\"\<ZAR\>\""}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.833100649961091*^9, 3.833100674885697*^9}, {
  3.833101243760289*^9, 3.833101257517253*^9}, {3.83310526349262*^9, 
  3.8331052636038923`*^9}},
 CellLabel->"In[112]:=",
 CellID->1673878766,ExpressionUUID->"4b854713-9c7b-4e1a-b0d0-b4008434d234"],

Cell[BoxData[
 RowBox[{
  RowBox[{"lsExchanges", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<all\>\"", ",", "\"\<bit-x\>\"", ",", "\"\<bit2c\>\"", ",", 
     "\"\<bitbay\>\"", ",", "\"\<bitcoin.co.id\>\"", ",", 
     "\"\<bitcoincentral\>\"", ",", "\"\<bitcoinde\>\"", ",", 
     "\"\<bitcoinsnorway\>\"", ",", "\"\<bitcurex\>\"", ",", 
     "\"\<bitfinex\>\"", ",", "\"\<bitflyer\>\"", ",", "\"\<bithumb\>\"", 
     ",", "\"\<bitmarketpl\>\"", ",", "\"\<bitmex\>\"", ",", 
     "\"\<bitquick\>\"", ",", "\"\<bitso\>\"", ",", "\"\<bitstamp\>\"", ",", 
     "\"\<btcchina\>\"", ",", "\"\<btce\>\"", ",", "\"\<btcmarkets\>\"", ",", 
     "\"\<campbx\>\"", ",", "\"\<cex.io\>\"", ",", "\"\<clevercoin\>\"", ",", 
     "\"\<coinbase\>\"", ",", "\"\<coinfloor\>\"", ",", "\"\<exmo\>\"", ",", 
     "\"\<gemini\>\"", ",", "\"\<hitbtc\>\"", ",", "\"\<huobi\>\"", ",", 
     "\"\<itbit\>\"", ",", "\"\<korbit\>\"", ",", "\"\<kraken\>\"", ",", 
     "\"\<lakebtc\>\"", ",", "\"\<localbitcoins\>\"", ",", 
     "\"\<mercadobitcoin\>\"", ",", "\"\<okcoin\>\"", ",", "\"\<paymium\>\"", 
     ",", "\"\<quadrigacx\>\"", ",", "\"\<therocktrading\>\"", ",", 
     "\"\<vaultoro\>\"", ",", "\"\<wallofcoins\>\""}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.833100737280159*^9, 3.833100746088057*^9}, {
  3.833101175832028*^9, 3.8331012291588297`*^9}, {3.833105267980448*^9, 
  3.833105268126306*^9}},
 CellLabel->"In[113]:=",
 CellID->844644462,ExpressionUUID->"b2178cb1-1aba-4d39-a7ec-3781e6e6d37a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"lsTimeSpans", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<10m\>\"", ",", "\"\<1h\>\"", ",", "\"\<6h\>\"", ",", "\"\<24h\>\"", 
     ",", "\"\<3d\>\"", ",", "\"\<30d\>\"", ",", "\"\<6m\>\"", ",", 
     "\"\<2y\>\"", ",", "\"\<5y\>\"", ",", "\"\<all\>\""}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.833100535614048*^9, 3.83310059767607*^9}, {
  3.833100646165091*^9, 3.833100646873336*^9}, {3.83310239968671*^9, 
  3.833102400450988*^9}},
 CellLabel->"In[114]:=",
 CellID->1072566164,ExpressionUUID->"b321554e-ae50-430e-83f1-7c17a2d4dc2b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"lsTimeUnit", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<second\>\"", ",", "\"\<minute\>\"", ",", "\"\<hour\>\"", ",", 
     "\"\<day\>\"", ",", "\"\<week\>\"", ",", "\"\<month\>\""}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.833102411759802*^9, 3.833102477907283*^9}},
 CellLabel->"In[115]:=",
 CellID->641785430,ExpressionUUID->"4cc492a1-a734-40df-a667-02ec39e0b1a5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"aDataTypeDescriptions", "=", 
   RowBox[{"Association", "@", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\"\<price\>\"", "\[Rule]", "\"\<Price\>\""}], ",", 
      RowBox[{"\"\<volume\>\"", "\[Rule]", "\"\<Trading Volume\>\""}], ",", 
      RowBox[{"\"\<rank\>\"", "\[Rule]", "\"\<Rank\>\""}], ",", 
      RowBox[{"\"\<bidask_sum\>\"", "\[Rule]", "\"\<Bid/Ask Sum\>\""}], ",", 
      RowBox[{"\"\<spread\>\"", "\[Rule]", "\"\<Bid/Ask Spread\>\""}], ",", 
      RowBox[{"\"\<tradespm\>\"", "\[Rule]", "\"\<Trades Per Minute\>\""}]}], 
     "}"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lsDataTypes", "=", 
   RowBox[{"Keys", "[", "aDataTypeDescriptions", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.833100210767001*^9, 3.833100418847349*^9}, {
   3.833100489946254*^9, 3.833100502883177*^9}, 3.833101503797707*^9, {
   3.833102186302722*^9, 3.833102196575058*^9}, 3.8331052059691687`*^9, {
   3.833105297669982*^9, 3.833105362195712*^9}, 3.8331210758025084`*^9},
 CellLabel->"In[116]:=",
 CellID->1824846776,ExpressionUUID->"0a8dca84-13a0-485d-84f9-fba58579da7f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Getting BTC data", "Subsection",
 CellChangeTimes->{{3.83283932264224*^9, 3.8328393293591957`*^9}, {
  3.833102553453616*^9, 3.8331025543535767`*^9}, {3.833102969476746*^9, 
  3.833102972694467*^9}},
 CellID->1985801425,ExpressionUUID->"6dd403f1-4914-4709-a433-33e72edaeaba"],

Cell[CellGroupData[{

Cell["\<\
Here we make a template string that for CSV data retrieval from \
data.bitcoinity.org:\
\>", "Text",
 CellChangeTimes->{{3.833102557233822*^9, 3.8331025946487722`*^9}},
 CellID->1321191948,ExpressionUUID->"60998898-d82c-474c-bf72-127f36ed41aa"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"stDBOURL", "=", 
  RowBox[{
  "StringTemplate", "[", 
   "\"\<https://data.bitcoinity.org/export_data.csv?currency=`currency`&data_\
type=`dataType`&exchange=`exchange`&r=`timeUnit`&t=l&timespan=`timeSpan`\>\"",
    "]"}]}]], "Input",
 CellChangeTimes->{{3.833101732617642*^9, 3.8331018432131*^9}, {
  3.833101980464767*^9, 3.833101982613488*^9}, {3.833102076105411*^9, 
  3.833102096412363*^9}},
 CellLabel->"In[118]:=",
 CellID->292160056,ExpressionUUID->"39dd952f-2e8e-4123-b77f-1276c49dcd31"],

Cell[BoxData[
 RowBox[{"TemplateObject", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"https://data.bitcoinity.org/export_data.csv?currency=\"\>", 
     ",", 
     RowBox[{"TemplateSlot", "[", "\<\"currency\"\>", "]"}], 
     ",", "\<\"&data_type=\"\>", ",", 
     RowBox[{"TemplateSlot", "[", "\<\"dataType\"\>", "]"}], 
     ",", "\<\"&exchange=\"\>", ",", 
     RowBox[{"TemplateSlot", "[", "\<\"exchange\"\>", "]"}], 
     ",", "\<\"&r=\"\>", ",", 
     RowBox[{"TemplateSlot", "[", "\<\"timeUnit\"\>", "]"}], 
     ",", "\<\"&t=l&timespan=\"\>", ",", 
     RowBox[{"TemplateSlot", "[", "\<\"timeSpan\"\>", "]"}]}], "}"}], ",", 
   RowBox[{"CombinerFunction", "\[Rule]", "StringJoin"}], ",", 
   RowBox[{"InsertionFunction", "\[Rule]", "TextString"}]}], "]"}]], "Output",\

 CellChangeTimes->{3.890858529412025*^9},
 CellLabel->"Out[118]=",
 CellID->3515204,ExpressionUUID->"0a9a643b-2443-4ca8-931a-f82b9e9d65bf"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Here is an association with default values for the string template above:\
\>", "Text",
 CellChangeTimes->{{3.8331026210113707`*^9, 3.833102642229497*^9}},
 CellID->1186444150,ExpressionUUID->"ce4f13f1-f9dd-4747-87ba-3d35e308da5e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"aDBODefaultParameters", "=", 
   RowBox[{"<|", 
    RowBox[{
     RowBox[{"\"\<currency\>\"", "->", "\"\<USD\>\""}], ",", 
     RowBox[{"\"\<dataType\>\"", "->", "\"\<price\>\""}], ",", 
     RowBox[{"\"\<exchange\>\"", "->", "\"\<all\>\""}], ",", 
     RowBox[{"\"\<timeUnit\>\"", "->", "\"\<day\>\""}], ",", 
     RowBox[{"\"\<timeSpan\>\"", "->", "\"\<all\>\""}]}], "|>"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.833102644491002*^9, 3.833102668713118*^9}, 
   3.833102771394503*^9},
 CellLabel->"In[119]:=",
 CellID->1181166655,ExpressionUUID->"94624c74-b7a0-461e-9e9a-2b3b714eb91a"]
}, Open  ]],

Cell[TextData[{
 StyleBox["Remark:",
  FontWeight->"Bold"],
 " The metadata assigned above is used to form valid queries for the query \
string template. "
}], "Text",
 CellChangeTimes->{{3.83310566728406*^9, 3.8331057636187572`*^9}, {
  3.833105799369115*^9, 3.833105799706723*^9}},
 CellID->529137717,ExpressionUUID->"77ef9473-c62b-40f3-aeca-20da148301d0"],

Cell[TextData[{
 StyleBox["Remark:",
  FontWeight->"Bold"],
 " Not all combinations of parameters are \[OpenCurlyDoubleQuote]fully \
respected\[CloseCurlyDoubleQuote] by data.bitcoinity.org. For example, if a \
data request is with time granularity that is too fine over a large time \
span, then the returned data is with coarser granularity."
}], "Text",
 CellChangeTimes->{{3.833102924734487*^9, 3.833102943432694*^9}, {
  3.8331029929785557`*^9, 3.833103043244824*^9}, {3.8331042110120573`*^9, 
  3.8331043731956263`*^9}},
 CellID->487827392,ExpressionUUID->"6e801b1f-54b4-4d42-9d99-bb3fdc88ab21"],

Cell[CellGroupData[{

Cell["Price for a particular currency and exchange pair", "Subsubsection",
 CellChangeTimes->{{3.83310295304014*^9, 3.83310297997337*^9}, {
  3.83310306433889*^9, 3.833103074576743*^9}, {3.833105479886671*^9, 
  3.8331055392191143`*^9}},
 CellID->1969896745,ExpressionUUID->"15d34ce1-95aa-4655-9f48-c07151b34d1f"],

Cell[CellGroupData[{

Cell["\<\
Here we retrieve data by overwriting the parameters for currency, time unit, \
time span, and exchange:\
\>", "Text",
 CellChangeTimes->{{3.833102811737059*^9, 3.833102879576097*^9}, {
  3.833105420138344*^9, 3.833105423185875*^9}},
 CellID->299207416,ExpressionUUID->"dd25997a-f505-440b-b8f2-61ea34723fd5"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"dsBTCPriceData", "=", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ResourceFunction", "[", "\"\<ImportCSVToDataset\>\"", "]"}], "[", 
    RowBox[{"stDBOURL", "[", 
     RowBox[{"Join", "[", 
      RowBox[{"aDBODefaultParameters", ",", 
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"\"\<currency\>\"", "->", "\"\<EUR\>\""}], ",", 
         RowBox[{"\"\<timeUnit\>\"", "->", "\"\<hour\>\""}], ",", 
         RowBox[{"\"\<timeSpan\>\"", "->", "\"\<30d\>\""}], ",", 
         RowBox[{"\"\<exchange\>\"", "->", "\"\<coinbase\>\""}]}], "|>"}]}], 
      "]"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"dsBTCPriceData", "=", 
  RowBox[{"dsBTCPriceData", "[", 
   RowBox[{"All", ",", 
    RowBox[{
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"\"\<Symbol\>\"", "->", "\"\<BTC\>\""}], ",", 
         RowBox[{"\"\<DateObject\>\"", "->", 
          RowBox[{"DateObject", "[", "#Time", "]"}]}]}], "|>"}], ",", "#"}], 
      "]"}], "&"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.833102103804606*^9, 3.8331021752086363`*^9}, {
   3.833102209549994*^9, 3.833102227804294*^9}, {3.833102269925218*^9, 
   3.83310228097305*^9}, {3.83310234432191*^9, 3.833102344435885*^9}, {
   3.833102381381783*^9, 3.833102388300741*^9}, {3.833102504796914*^9, 
   3.833102529198987*^9}, {3.833102598692897*^9, 3.833102617337723*^9}, {
   3.833102676166635*^9, 3.833102699336241*^9}, 3.8331028047972317`*^9, {
   3.833102898793097*^9, 3.8331029328914423`*^9}, {3.8331043810506763`*^9, 
   3.833104384233222*^9}, {3.833104666178309*^9, 3.8331046677966213`*^9}, {
   3.8331054258428793`*^9, 3.8331054321325417`*^9}, {3.83310824702698*^9, 
   3.833108247577664*^9}, {3.8331206677737627`*^9, 3.833120755151285*^9}},
 CellLabel->"In[120]:=",
 CellID->1519823085,ExpressionUUID->"c0fed93a-b4fb-4842-9b40-bd02efd25bc3"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 19, 23, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-20 03:00:00 UTC", "avg" -> 25646.2659007551, "max" -> 
        25827.37, "min" -> 25501.|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 20, 0, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-20 04:00:00 UTC", "avg" -> 25743.2705834684, "max" -> 
        25813.68, "min" -> 25537.03|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 20, 1, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-20 05:00:00 UTC", "avg" -> 25786.2817781155, "max" -> 
        25860.87, "min" -> 25711.94|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 20, 2, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-20 06:00:00 UTC", "avg" -> 25929.2567316693, "max" -> 
        26086., "min" -> 25842.98|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 20, 3, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-20 07:00:00 UTC", "avg" -> 26308.3187298748, "max" -> 
        26591.52, "min" -> 26009.35|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 20, 4, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-20 08:00:00 UTC", "avg" -> 26588.1732250922, "max" -> 
        26794., "min" -> 26394.32|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 20, 5, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-20 09:00:00 UTC", "avg" -> 26554.7728399433, "max" -> 
        26791.91, "min" -> 26373.38|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 20, 6, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-20 10:00:00 UTC", "avg" -> 26385.9474137931, "max" -> 
        26527.79, "min" -> 26240.74|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 20, 7, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-20 11:00:00 UTC", "avg" -> 26419.5285731273, "max" -> 
        26500., "min" -> 26304.78|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 20, 8, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-20 12:00:00 UTC", "avg" -> 26396.238515625, "max" -> 
        26481.46, "min" -> 26313.76|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 20, 9, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-20 13:00:00 UTC", "avg" -> 26130.4215474006, "max" -> 
        26458.77, "min" -> 25939.|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 20, 10, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-20 14:00:00 UTC", "avg" -> 26161.3633615222, "max" -> 
        26322.11, "min" -> 26005.77|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 20, 11, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-20 15:00:00 UTC", "avg" -> 26101.7130385289, "max" -> 
        26287.94, "min" -> 25849.|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 20, 12, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-20 16:00:00 UTC", "avg" -> 25821.5742663963, "max" -> 
        25962.08, "min" -> 25700.07|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 20, 13, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-20 17:00:00 UTC", "avg" -> 25892.1602971311, "max" -> 
        26012.78, "min" -> 25736.4|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 20, 14, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-20 18:00:00 UTC", "avg" -> 26046.0256111646, "max" -> 
        26224.66, "min" -> 25826.27|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 20, 15, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-20 19:00:00 UTC", "avg" -> 26024.2769108911, "max" -> 
        26192.28, "min" -> 25872.11|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 20, 16, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-20 20:00:00 UTC", "avg" -> 26101.1768426501, "max" -> 
        26213.98, "min" -> 25960.14|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 20, 17, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-20 21:00:00 UTC", "avg" -> 26252.4790345528, "max" -> 
        26364.32, "min" -> 26131.6|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 20, 18, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-20 22:00:00 UTC", "avg" -> 26127.7478661844, "max" -> 
        26230., "min" -> 26050.|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 20, 19, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-20 23:00:00 UTC", "avg" -> 25961.8344850065, "max" -> 
        26188.27, "min" -> 25807.06|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 20, 20, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-21 00:00:00 UTC", "avg" -> 26007.97565, "max" -> 
        26147.17, "min" -> 25880.18|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 20, 21, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-21 01:00:00 UTC", "avg" -> 26053.2458156028, "max" -> 
        26130.34, "min" -> 25930.29|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 20, 22, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-21 02:00:00 UTC", "avg" -> 26036.1551190476, "max" -> 
        26097.91, "min" -> 25988.65|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 20, 23, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-21 03:00:00 UTC", "avg" -> 25985.7426046512, "max" -> 
        26039.46, "min" -> 25949.35|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 21, 0, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-21 04:00:00 UTC", "avg" -> 26121.8845454546, "max" -> 
        26179.06, "min" -> 26007.78|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 21, 1, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-21 05:00:00 UTC", "avg" -> 26053.1815236051, "max" -> 
        26135.43, "min" -> 25968.1|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 21, 2, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-21 06:00:00 UTC", "avg" -> 25948.4611162079, "max" -> 
        26013.01, "min" -> 25878.55|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 21, 3, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-21 07:00:00 UTC", "avg" -> 25726.7843577982, "max" -> 
        25930.66, "min" -> 25579.09|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 21, 4, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-21 08:00:00 UTC", "avg" -> 25767.7367507274, "max" -> 
        25867.55, "min" -> 25620.|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 21, 5, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-21 09:00:00 UTC", "avg" -> 25978.781703638, "max" -> 
        26230., "min" -> 25788.36|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 21, 6, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-21 10:00:00 UTC", "avg" -> 26158.8694256348, "max" -> 
        26306.19, "min" -> 26060.02|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 21, 7, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-21 11:00:00 UTC", "avg" -> 26040.3019187817, "max" -> 
        26117.65, "min" -> 25954.12|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 21, 8, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-21 12:00:00 UTC", "avg" -> 26106.4576453202, "max" -> 
        26287.01, "min" -> 25967.85|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 21, 9, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-21 13:00:00 UTC", "avg" -> 26105.5509119497, "max" -> 
        26248.04, "min" -> 25963.27|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 21, 10, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-21 14:00:00 UTC", "avg" -> 25980.3529847908, "max" -> 
        26152.1, "min" -> 25839.67|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 21, 11, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-21 15:00:00 UTC", "avg" -> 26035.5756558773, "max" -> 
        26146.48, "min" -> 25907.9|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 21, 12, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-21 16:00:00 UTC", "avg" -> 26271.9523709536, "max" -> 
        26462., "min" -> 26065.33|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 21, 13, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-21 17:00:00 UTC", "avg" -> 26267.0233036597, "max" -> 
        26454.44, "min" -> 26062.8|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 21, 14, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-21 18:00:00 UTC", "avg" -> 26149.6030020705, "max" -> 
        26248.94, "min" -> 26044.4|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 21, 15, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-21 19:00:00 UTC", "avg" -> 26221.6822494888, "max" -> 
        26295.21, "min" -> 26163.82|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 21, 16, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-21 20:00:00 UTC", "avg" -> 26170.9993129771, "max" -> 
        26267.46, "min" -> 26108.31|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 21, 17, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-21 21:00:00 UTC", "avg" -> 26066.1933716475, "max" -> 
        26162.53, "min" -> 25991.72|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 21, 18, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-21 22:00:00 UTC", "avg" -> 26080.342997416, "max" -> 
        26130.36, "min" -> 26000.|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 21, 19, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-21 23:00:00 UTC", "avg" -> 26128.3564150943, "max" -> 
        26197.73, "min" -> 26055.7|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 21, 20, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-22 00:00:00 UTC", "avg" -> 26135.910651341, "max" -> 
        26175.75, "min" -> 26047.11|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 21, 21, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-22 01:00:00 UTC", "avg" -> 26109.9146478873, "max" -> 
        26166.18, "min" -> 26048.48|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 21, 22, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-22 02:00:00 UTC", "avg" -> 26157.326682243, "max" -> 
        26207.66, "min" -> 26122.97|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 21, 23, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-22 03:00:00 UTC", "avg" -> 26240.1024635037, "max" -> 
        26336.26, "min" -> 26100.11|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 22, 0, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-22 04:00:00 UTC", "avg" -> 26225.9836296296, "max" -> 
        26275.71, "min" -> 26193.35|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 22, 1, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-22 05:00:00 UTC", "avg" -> 26277.9144295302, "max" -> 
        26325.67, "min" -> 26240.6|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 22, 2, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-22 06:00:00 UTC", "avg" -> 26238.4002572347, "max" -> 
        26280.84, "min" -> 26204.01|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 22, 3, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-22 07:00:00 UTC", "avg" -> 26198.2898089172, "max" -> 
        26308.69, "min" -> 26118.31|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 22, 4, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-22 08:00:00 UTC", "avg" -> 26172.6479390681, "max" -> 
        26236.57, "min" -> 26094.53|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 22, 5, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-22 09:00:00 UTC", "avg" -> 26100.9015565345, "max" -> 
        26144.36, "min" -> 26021.1|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 22, 6, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-22 10:00:00 UTC", "avg" -> 26140.1139770867, "max" -> 
        26190.76, "min" -> 26077.41|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 22, 7, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-22 11:00:00 UTC", "avg" -> 26160.2199362041, "max" -> 
        26197.42, "min" -> 26119.15|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 22, 8, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-22 12:00:00 UTC", "avg" -> 26212.5563315218, "max" -> 
        26266.6, "min" -> 26111.51|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 22, 9, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-22 13:00:00 UTC", "avg" -> 26309.174788104, "max" -> 
        26408.49, "min" -> 26193.27|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 22, 10, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-22 14:00:00 UTC", "avg" -> 26506.9300272925, "max" -> 
        26700., "min" -> 26316.63|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 22, 11, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-22 15:00:00 UTC", "avg" -> 26584.1657007687, "max" -> 
        26689.63, "min" -> 26416.13|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 22, 12, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-22 16:00:00 UTC", "avg" -> 26544.3212861137, "max" -> 
        26630.74, "min" -> 26450.|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 22, 13, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-22 17:00:00 UTC", "avg" -> 26404.1221828909, "max" -> 
        26594.28, "min" -> 26278.11|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 22, 14, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-22 18:00:00 UTC", "avg" -> 26188.4387527715, "max" -> 
        26822.83, "min" -> 25701.09|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 22, 15, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-22 19:00:00 UTC", "avg" -> 25174.7761371239, "max" -> 
        25823.65, "min" -> 24580.|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 22, 16, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-22 20:00:00 UTC", "avg" -> 25029.7678815788, "max" -> 
        25305.2, "min" -> 24550.|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 22, 17, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-22 21:00:00 UTC", "avg" -> 25193.2773338545, "max" -> 
        25350.23, "min" -> 25000.|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 22, 18, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-22 22:00:00 UTC", "avg" -> 25047.4664930556, "max" -> 
        25150., "min" -> 24916.73|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 22, 19, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-22 23:00:00 UTC", "avg" -> 25169.9008365508, "max" -> 
        25240.37, "min" -> 25107.9|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 22, 20, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-23 00:00:00 UTC", "avg" -> 25204.6154324735, "max" -> 
        25299.06, "min" -> 25085.2|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 22, 21, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-23 01:00:00 UTC", "avg" -> 25094.7613752456, "max" -> 
        25184.78, "min" -> 24979.1|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 22, 22, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-23 02:00:00 UTC", "avg" -> 25098.3629805014, "max" -> 
        25163.23, "min" -> 24998.79|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 22, 23, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-23 03:00:00 UTC", "avg" -> 25160.8658918919, "max" -> 
        25226.55, "min" -> 25113.86|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 23, 0, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-23 04:00:00 UTC", "avg" -> 25162.4271189979, "max" -> 
        25233.54, "min" -> 25074.63|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 23, 1, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-23 05:00:00 UTC", "avg" -> 25293.2858909853, "max" -> 
        25480.64, "min" -> 25088.91|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 23, 2, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-23 06:00:00 UTC", "avg" -> 25401.6429625668, "max" -> 
        25449.44, "min" -> 25363.6|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 23, 3, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-23 07:00:00 UTC", "avg" -> 25395.442419175, "max" -> 
        25457.21, "min" -> 25325.83|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 23, 4, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-23 08:00:00 UTC", "avg" -> 25434.3149614644, "max" -> 
        25516.8, "min" -> 25385.39|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 23, 5, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-23 09:00:00 UTC", "avg" -> 25437.386043956, "max" -> 
        25473.4, "min" -> 25395.02|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 23, 6, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-23 10:00:00 UTC", "avg" -> 25485.2340917431, "max" -> 
        25527.79, "min" -> 25451.13|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 23, 7, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-23 11:00:00 UTC", "avg" -> 25398.6568733509, "max" -> 
        25480., "min" -> 25333.|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 23, 8, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-23 12:00:00 UTC", "avg" -> 25419.8421566902, "max" -> 
        25482.75, "min" -> 25325.27|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 23, 9, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-23 13:00:00 UTC", "avg" -> 25243.2123629829, "max" -> 
        25358.1, "min" -> 25150.|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 23, 10, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-23 14:00:00 UTC", "avg" -> 25361.4930393996, "max" -> 
        25850.04, "min" -> 25148.|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 23, 11, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-23 15:00:00 UTC", "avg" -> 26198.1051182796, "max" -> 
        26435.46, "min" -> 25728.16|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 23, 12, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-23 16:00:00 UTC", "avg" -> 26206.0908307927, "max" -> 
        26361.92, "min" -> 26100.72|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 23, 13, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-23 17:00:00 UTC", "avg" -> 26073.5247858198, "max" -> 
        26236.09, "min" -> 25939.|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 23, 14, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-23 18:00:00 UTC", "avg" -> 25970.4477509157, "max" -> 
        26160.08, "min" -> 25681.85|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 23, 15, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-23 19:00:00 UTC", "avg" -> 25915.5307157606, "max" -> 
        26296., "min" -> 25674.28|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 23, 16, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-23 20:00:00 UTC", "avg" -> 26078.7893360996, "max" -> 
        26236.29, "min" -> 25981.6|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 23, 17, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-23 21:00:00 UTC", "avg" -> 26054.9529, "max" -> 
        26167.81, "min" -> 25900.|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 23, 18, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-23 22:00:00 UTC", "avg" -> 26055.003047776, "max" -> 
        26164.55, "min" -> 25979.13|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 23, 19, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-23 23:00:00 UTC", "avg" -> 26206.8276695438, "max" -> 
        26300., "min" -> 26078.46|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 23, 20, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-24 00:00:00 UTC", "avg" -> 26165.9059454546, "max" -> 
        26233.32, "min" -> 26073.55|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 23, 21, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-24 01:00:00 UTC", "avg" -> 26111.0465573771, "max" -> 
        26193.46, "min" -> 26016.67|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 23, 22, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-24 02:00:00 UTC", "avg" -> 26124.0757294429, "max" -> 
        26183.72, "min" -> 26033.59|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 23, 23, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-24 03:00:00 UTC", "avg" -> 26095.5660606061, "max" -> 
        26133.52, "min" -> 26053.56|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 24, 0, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-24 04:00:00 UTC", "avg" -> 26078.0079326923, "max" -> 
        26130.9, "min" -> 25989.71|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 24, 1, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-24 05:00:00 UTC", "avg" -> 26100.1641025641, "max" -> 
        26157.58, "min" -> 26009.72|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 24, 2, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-24 06:00:00 UTC", "avg" -> 26142.3595781638, "max" -> 
        26192.58, "min" -> 26092.96|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 24, 3, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-24 07:00:00 UTC", "avg" -> 26118.2855327103, "max" -> 
        26178.46, "min" -> 26034.31|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 24, 4, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-24 08:00:00 UTC", "avg" -> 26111.7093004866, "max" -> 
        26198., "min" -> 25957.84|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 24, 5, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-24 09:00:00 UTC", "avg" -> 26118.0871256584, "max" -> 
        26198.76, "min" -> 26014.61|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 24, 6, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-24 10:00:00 UTC", "avg" -> 26125.2389631107, "max" -> 
        26193.7, "min" -> 26061.45|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 24, 7, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-24 11:00:00 UTC", "avg" -> 25920.0815831664, "max" -> 
        26167.77, "min" -> 25540.|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 24, 8, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-24 12:00:00 UTC", "avg" -> 25993.2313420159, "max" -> 
        26224.66, "min" -> 25697.52|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 24, 9, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-24 13:00:00 UTC", "avg" -> 25893.6056307692, "max" -> 
        26077.03, "min" -> 25751.|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 24, 10, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-24 14:00:00 UTC", "avg" -> 26070.2733602151, "max" -> 
        26274.76, "min" -> 25895.95|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 24, 11, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-24 15:00:00 UTC", "avg" -> 26050.7903956044, "max" -> 
        26128.25, "min" -> 25945.5|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 24, 12, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-24 16:00:00 UTC", "avg" -> 26003.4575071633, "max" -> 
        26091.78, "min" -> 25904.06|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 24, 13, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-24 17:00:00 UTC", "avg" -> 25792.579790063, "max" -> 
        25964.24, "min" -> 25613.09|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 24, 14, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-24 18:00:00 UTC", "avg" -> 25767.352245509, "max" -> 
        25889., "min" -> 25657.51|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 24, 15, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-24 19:00:00 UTC", "avg" -> 25883.6493699515, "max" -> 
        25942.73, "min" -> 25776.21|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 24, 16, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-24 20:00:00 UTC", "avg" -> 25776.978896, "max" -> 
        25938.18, "min" -> 25590.47|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 24, 17, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-24 21:00:00 UTC", "avg" -> 25401.0874377422, "max" -> 
        25712.21, "min" -> 25127.27|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 24, 18, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-24 22:00:00 UTC", "avg" -> 25485.5683715847, "max" -> 
        25546.14, "min" -> 25392.73|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 24, 19, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-24 23:00:00 UTC", "avg" -> 25527.4526585366, "max" -> 
        25624., "min" -> 25415.43|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 24, 20, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-25 00:00:00 UTC", "avg" -> 25611.1260916442, "max" -> 
        25695.39, "min" -> 25542.35|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 24, 21, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-25 01:00:00 UTC", "avg" -> 25615.8818815331, "max" -> 
        25676.69, "min" -> 25549.29|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 24, 22, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-25 02:00:00 UTC", "avg" -> 25670.87835, "max" -> 
        25758.99, "min" -> 25571.77|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 24, 23, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-25 03:00:00 UTC", "avg" -> 25696.9341176471, "max" -> 
        25735.75, "min" -> 25657.23|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 25, 0, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-25 04:00:00 UTC", "avg" -> 25664.4937128713, "max" -> 
        25712.38, "min" -> 25607.15|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 25, 1, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-25 05:00:00 UTC", "avg" -> 25587.9345195729, "max" -> 
        25650.85, "min" -> 25500.|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 25, 2, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-25 06:00:00 UTC", "avg" -> 25596.4476752768, "max" -> 
        25647.44, "min" -> 25525.62|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 25, 3, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-25 07:00:00 UTC", "avg" -> 25633.4478768578, "max" -> 
        25686.7, "min" -> 25589.8|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 25, 4, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-25 08:00:00 UTC", "avg" -> 25555.2673596358, "max" -> 
        25623.57, "min" -> 25472.46|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 25, 5, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-25 09:00:00 UTC", "avg" -> 25533.1692801556, "max" -> 
        25634.65, "min" -> 25440.44|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 25, 6, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-25 10:00:00 UTC", "avg" -> 25593.138587849, "max" -> 
        25662.4, "min" -> 25529.89|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 25, 7, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-25 11:00:00 UTC", "avg" -> 25596.4928301887, "max" -> 
        25634.8, "min" -> 25548.91|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 25, 8, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-25 12:00:00 UTC", "avg" -> 25556.1269794721, "max" -> 
        25604.73, "min" -> 25511.|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 25, 9, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-25 13:00:00 UTC", "avg" -> 25600.126744186, "max" -> 
        25722.71, "min" -> 25491.98|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 25, 10, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-25 14:00:00 UTC", "avg" -> 25682.812967742, "max" -> 
        25748.22, "min" -> 25622.24|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 25, 11, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-25 15:00:00 UTC", "avg" -> 25712.6748335745, "max" -> 
        25863.88, "min" -> 25593.42|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 25, 12, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-25 16:00:00 UTC", "avg" -> 25750.0847978436, "max" -> 
        25805.5, "min" -> 25708.95|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 25, 13, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-25 17:00:00 UTC", "avg" -> 25612.9577777778, "max" -> 
        25744.23, "min" -> 25500.|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 25, 14, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-25 18:00:00 UTC", "avg" -> 25598.3979957356, "max" -> 
        25630., "min" -> 25543.53|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 25, 15, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-25 19:00:00 UTC", "avg" -> 25397.6948179872, "max" -> 
        25555.44, "min" -> 25284.55|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 25, 16, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-25 20:00:00 UTC", "avg" -> 25425.6896976744, "max" -> 
        25538.17, "min" -> 25286.79|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 25, 17, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-25 21:00:00 UTC", "avg" -> 25511.4101822324, "max" -> 
        25559.59, "min" -> 25464.98|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 25, 18, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-25 22:00:00 UTC", "avg" -> 25564.8854444444, "max" -> 
        25625.59, "min" -> 25504.8|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 25, 19, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-25 23:00:00 UTC", "avg" -> 25559.6784186046, "max" -> 
        25593.54, "min" -> 25519.07|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 25, 20, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-26 00:00:00 UTC", "avg" -> 25609.9011158799, "max" -> 
        25709.38, "min" -> 25525.44|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 25, 21, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-26 01:00:00 UTC", "avg" -> 25669.665326087, "max" -> 
        25733., "min" -> 25618.22|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 25, 22, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-26 02:00:00 UTC", "avg" -> 25681.281047619, "max" -> 
        25702.69, "min" -> 25649.57|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 25, 23, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-26 03:00:00 UTC", "avg" -> 25643.8238333333, "max" -> 
        25706.53, "min" -> 25603.99|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 26, 0, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-26 04:00:00 UTC", "avg" -> 25603.7958558558, "max" -> 
        25628.05, "min" -> 25566.5|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 26, 1, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-26 05:00:00 UTC", "avg" -> 25615.1846568627, "max" -> 
        25644.75, "min" -> 25574.68|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 26, 2, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-26 06:00:00 UTC", "avg" -> 25608.7686622074, "max" -> 
        25659.34, "min" -> 25578.58|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 26, 3, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-26 07:00:00 UTC", "avg" -> 25596.2260465116, "max" -> 
        25621.95, "min" -> 25575.23|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 26, 4, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-26 08:00:00 UTC", "avg" -> 25705.6169831223, "max" -> 
        25838.18, "min" -> 25581.6|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 26, 5, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-26 09:00:00 UTC", "avg" -> 25752.5320388349, "max" -> 
        25813.85, "min" -> 25712.1|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 26, 6, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-26 10:00:00 UTC", "avg" -> 25753.088483965, "max" -> 
        25800., "min" -> 25720.|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 26, 7, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-26 11:00:00 UTC", "avg" -> 25832.8356823821, "max" -> 
        25968.32, "min" -> 25731.78|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 26, 8, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-26 12:00:00 UTC", "avg" -> 25956.6344566929, "max" -> 
        26031.92, "min" -> 25901.86|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 26, 9, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-26 13:00:00 UTC", "avg" -> 26061.4705093168, "max" -> 
        26220.95, "min" -> 25927.89|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 26, 10, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-26 14:00:00 UTC", "avg" -> 25982.3153298969, "max" -> 
        26201.78, "min" -> 25769.86|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 26, 11, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-26 15:00:00 UTC", "avg" -> 25874.7943259557, "max" -> 
        25938.46, "min" -> 25803.59|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 26, 12, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-26 16:00:00 UTC", "avg" -> 25851.5115505618, "max" -> 
        25943.47, "min" -> 25716.05|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 26, 13, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-26 17:00:00 UTC", "avg" -> 25854.2974392936, "max" -> 
        25922.9, "min" -> 25752.71|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 26, 14, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-26 18:00:00 UTC", "avg" -> 25890.0906535948, "max" -> 
        25979.07, "min" -> 25838.18|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 26, 15, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-26 19:00:00 UTC", "avg" -> 25871.6086018958, "max" -> 
        25911.87, "min" -> 25841.18|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 26, 16, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-26 20:00:00 UTC", "avg" -> 25846.1699805825, "max" -> 
        25941.77, "min" -> 25740.27|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 26, 17, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-26 21:00:00 UTC", "avg" -> 25830.9969168901, "max" -> 
        25894.3, "min" -> 25798.48|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 26, 18, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-26 22:00:00 UTC", "avg" -> 25972.9593685756, "max" -> 
        26086.23, "min" -> 25866.15|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 26, 19, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-26 23:00:00 UTC", "avg" -> 26058.5454093098, "max" -> 
        26136.96, "min" -> 25969.|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 26, 20, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-27 00:00:00 UTC", "avg" -> 25989.8656851312, "max" -> 
        26049.74, "min" -> 25953.53|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 26, 21, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-27 01:00:00 UTC", "avg" -> 25928.5607990315, "max" -> 
        26049.7, "min" -> 25861.88|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 26, 22, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-27 02:00:00 UTC", "avg" -> 25886.7871474359, "max" -> 
        25919.96, "min" -> 25827.3|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 26, 23, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-27 03:00:00 UTC", "avg" -> 25904.5302469136, "max" -> 
        25943.35, "min" -> 25861.5|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 27, 0, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-27 04:00:00 UTC", "avg" -> 25931.4183261803, "max" -> 
        25958.44, "min" -> 25896.15|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 27, 1, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-27 05:00:00 UTC", "avg" -> 25858.2912587413, "max" -> 
        25950.9, "min" -> 25728.16|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 27, 2, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-27 06:00:00 UTC", "avg" -> 25809.3485714286, "max" -> 
        25867.73, "min" -> 25729.69|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 27, 3, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-27 07:00:00 UTC", "avg" -> 25863.0264785553, "max" -> 
        25899.33, "min" -> 25789.52|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 27, 4, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-27 08:00:00 UTC", "avg" -> 25855.4416528926, "max" -> 
        25902.09, "min" -> 25825.23|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 27, 5, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-27 09:00:00 UTC", "avg" -> 25941.8851119403, "max" -> 
        26005., "min" -> 25862.35|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 27, 6, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-27 10:00:00 UTC", "avg" -> 25942.5353004622, "max" -> 
        25979.66, "min" -> 25901.61|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 27, 7, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-27 11:00:00 UTC", "avg" -> 25931.5356118144, "max" -> 
        26000., "min" -> 25859.35|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 27, 8, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-27 12:00:00 UTC", "avg" -> 25829.4346776859, "max" -> 
        25937.1, "min" -> 25722.41|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 27, 9, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-27 13:00:00 UTC", "avg" -> 25752.9877689595, "max" -> 
        25826.96, "min" -> 25650.66|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 27, 10, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-27 14:00:00 UTC", "avg" -> 25398.5933807339, "max" -> 
        25730.7, "min" -> 25028.9|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 27, 11, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-27 15:00:00 UTC", "avg" -> 24910.730746114, "max" -> 
        25090.96, "min" -> 24626.72|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 27, 12, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-27 16:00:00 UTC", "avg" -> 25198.4811953727, "max" -> 
        25341.12, "min" -> 24925.65|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 27, 13, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-27 17:00:00 UTC", "avg" -> 25093.6128286853, "max" -> 
        25248.91, "min" -> 24970.|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 27, 14, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-27 18:00:00 UTC", "avg" -> 25102.4128018224, "max" -> 
        25203.73, "min" -> 24984.13|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 27, 15, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-27 19:00:00 UTC", "avg" -> 25070.5742752562, "max" -> 
        25150.99, "min" -> 24970.|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 27, 16, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-27 20:00:00 UTC", "avg" -> 25006.6880507131, "max" -> 
        25068.28, "min" -> 24910.14|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 27, 17, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-27 21:00:00 UTC", "avg" -> 25132.4406633907, "max" -> 
        25200., "min" -> 25024.89|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 27, 18, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-27 22:00:00 UTC", "avg" -> 25164.787237569, "max" -> 
        25246.79, "min" -> 25102.|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 27, 19, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-27 23:00:00 UTC", "avg" -> 25127.017810219, "max" -> 
        25170.06, "min" -> 25074.7|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 27, 20, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-28 00:00:00 UTC", "avg" -> 25048.9581081081, "max" -> 
        25160.13, "min" -> 24933.68|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 27, 21, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-28 01:00:00 UTC", "avg" -> 24958.1328685897, "max" -> 
        25156.41, "min" -> 24809.91|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 27, 22, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-28 02:00:00 UTC", "avg" -> 25006.7515813953, "max" -> 
        25072.5, "min" -> 24958.59|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 27, 23, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-28 03:00:00 UTC", "avg" -> 24963.1647058824, "max" -> 
        25028.2, "min" -> 24899.06|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 28, 0, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-28 04:00:00 UTC", "avg" -> 24936.843359375, "max" -> 
        24989.16, "min" -> 24892.69|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 28, 1, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-28 05:00:00 UTC", "avg" -> 24932.9941793893, "max" -> 
        24987.74, "min" -> 24883.91|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 28, 2, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-28 06:00:00 UTC", "avg" -> 25039.6396016771, "max" -> 
        25106.79, "min" -> 24968.86|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 28, 3, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-28 07:00:00 UTC", "avg" -> 25013.1889889197, "max" -> 
        25086.8, "min" -> 24906.9|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 28, 4, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-28 08:00:00 UTC", "avg" -> 24952.2070723104, "max" -> 
        25016.64, "min" -> 24910.73|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 28, 5, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-28 09:00:00 UTC", "avg" -> 24922.4436267072, "max" -> 
        25025.51, "min" -> 24818.6|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 28, 6, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-28 10:00:00 UTC", "avg" -> 24758.4134477211, "max" -> 
        24921.24, "min" -> 24632.93|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 28, 7, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-28 11:00:00 UTC", "avg" -> 24901.7846059364, "max" -> 
        25087.34, "min" -> 24711.|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 28, 8, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-28 12:00:00 UTC", "avg" -> 24938.5953571428, "max" -> 
        25125., "min" -> 24792.82|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 28, 9, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-28 13:00:00 UTC", "avg" -> 24875.4850055127, "max" -> 
        24985.03, "min" -> 24799.|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 28, 10, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-28 14:00:00 UTC", "avg" -> 24909.9023215985, "max" -> 
        24974.79, "min" -> 24818.23|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 28, 11, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-28 15:00:00 UTC", "avg" -> 24911.8679622132, "max" -> 
        24982.37, "min" -> 24857.04|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 28, 12, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-28 16:00:00 UTC", "avg" -> 24849.8951, "max" -> 
        24923.4, "min" -> 24785.98|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 28, 13, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-28 17:00:00 UTC", "avg" -> 24773.4805466238, "max" -> 
        24840.17, "min" -> 24686.8|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 28, 14, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-28 18:00:00 UTC", "avg" -> 25033.3081792716, "max" -> 
        25272.38, "min" -> 24775.08|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 28, 15, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-28 19:00:00 UTC", "avg" -> 25219.6787965921, "max" -> 
        25373.49, "min" -> 25063.03|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 28, 16, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-28 20:00:00 UTC", "avg" -> 25220.3742003854, "max" -> 
        25354.54, "min" -> 25128.29|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 28, 17, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-28 21:00:00 UTC", "avg" -> 25117.0699828767, "max" -> 
        25216.37, "min" -> 25000.|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 28, 18, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-28 22:00:00 UTC", "avg" -> 25087.2434825871, "max" -> 
        25122.96, "min" -> 25040.51|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 28, 19, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-28 23:00:00 UTC", "avg" -> 25164.4684100419, "max" -> 
        25207.86, "min" -> 25116.42|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 28, 20, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-29 00:00:00 UTC", "avg" -> 25178.6821523179, "max" -> 
        25225.09, "min" -> 25148.7|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 28, 21, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-29 01:00:00 UTC", "avg" -> 25260.1477680525, "max" -> 
        25345.65, "min" -> 25162.57|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 28, 22, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-29 02:00:00 UTC", "avg" -> 25244.9309137056, "max" -> 
        25307.58, "min" -> 25189.54|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 28, 23, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-29 03:00:00 UTC", "avg" -> 25272.1920289855, "max" -> 
        25307.41, "min" -> 25233.94|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 29, 0, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-29 04:00:00 UTC", "avg" -> 25404.308832853, "max" -> 
        25475.05, "min" -> 25261.22|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 29, 1, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-29 05:00:00 UTC", "avg" -> 25458.170409836, "max" -> 
        25519.21, "min" -> 25398.42|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 29, 2, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-29 06:00:00 UTC", "avg" -> 25782.3998048452, "max" -> 
        26008., "min" -> 25395.39|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 29, 3, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-29 07:00:00 UTC", "avg" -> 25928.509494863, "max" -> 
        25997., "min" -> 25851.1|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 29, 4, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-29 08:00:00 UTC", "avg" -> 26222.2516675661, "max" -> 
        26432.7, "min" -> 25886.2|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 29, 5, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-29 09:00:00 UTC", "avg" -> 26223.7443619909, "max" -> 
        26352.01, "min" -> 26062.8|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 29, 6, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-29 10:00:00 UTC", "avg" -> 26115.5633754741, "max" -> 
        26190.47, "min" -> 26003.84|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 29, 7, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-29 11:00:00 UTC", "avg" -> 26062.6819326241, "max" -> 
        26133.62, "min" -> 26020.51|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 29, 8, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-29 12:00:00 UTC", "avg" -> 26118.9242451874, "max" -> 
        26225., "min" -> 26041.1|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 29, 9, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-29 13:00:00 UTC", "avg" -> 26175.8925031133, "max" -> 
        26231.94, "min" -> 26108.17|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 29, 10, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-29 14:00:00 UTC", "avg" -> 26179.98736713, "max" -> 
        26343.93, "min" -> 26091.21|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 29, 11, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-29 15:00:00 UTC", "avg" -> 26211.9166085578, "max" -> 
        26305.38, "min" -> 26095.42|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 29, 12, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-29 16:00:00 UTC", "avg" -> 26147.6003125, "max" -> 
        26276.03, "min" -> 25986.39|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 29, 13, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-29 17:00:00 UTC", "avg" -> 26067.1825, "max" -> 
        26163.38, "min" -> 26001.85|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 29, 14, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-29 18:00:00 UTC", "avg" -> 26082.0873801917, "max" -> 
        26146.12, "min" -> 26017.51|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 29, 15, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-29 19:00:00 UTC", "avg" -> 26155.7658081472, "max" -> 
        26229.1, "min" -> 26091.46|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 29, 16, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-29 20:00:00 UTC", "avg" -> 26204.8807514451, "max" -> 
        26256.16, "min" -> 26153.1|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 29, 17, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-29 21:00:00 UTC", "avg" -> 26194.2926511628, "max" -> 
        26277., "min" -> 26104.23|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 29, 18, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-29 22:00:00 UTC", "avg" -> 26137.7806860707, "max" -> 
        26203.19, "min" -> 26022.17|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 29, 19, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-29 23:00:00 UTC", "avg" -> 26187.2412893082, "max" -> 
        26240.09, "min" -> 26111.45|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 29, 20, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-30 00:00:00 UTC", "avg" -> 26179.1431578947, "max" -> 
        26251.12, "min" -> 26060.52|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 29, 21, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-30 01:00:00 UTC", "avg" -> 26154.0936842105, "max" -> 
        26198.52, "min" -> 26083.69|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 29, 22, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-30 02:00:00 UTC", "avg" -> 26656.015786485, "max" -> 
        26921.59, "min" -> 26155.13|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 29, 23, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-30 03:00:00 UTC", "avg" -> 26311.9833211457, "max" -> 
        26770.76, "min" -> 25950.|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 30, 0, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-30 04:00:00 UTC", "avg" -> 26388.2304103967, "max" -> 
        26491.2, "min" -> 26264.25|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 30, 1, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-30 05:00:00 UTC", "avg" -> 26350.1472960725, "max" -> 
        26402.63, "min" -> 26279.13|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 30, 2, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-30 06:00:00 UTC", "avg" -> 26398.5691791045, "max" -> 
        26446.7, "min" -> 26361.63|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 30, 3, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-30 07:00:00 UTC", "avg" -> 26438.6881231381, "max" -> 
        26544.55, "min" -> 26377.02|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 30, 4, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-30 08:00:00 UTC", "avg" -> 26390.887924773, "max" -> 
        26491.22, "min" -> 26287.66|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 30, 5, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-30 09:00:00 UTC", "avg" -> 26287.2906549119, "max" -> 
        26331.57, "min" -> 26214.38|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 30, 6, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-30 10:00:00 UTC", "avg" -> 26300.1561616162, "max" -> 
        26362.05, "min" -> 26263.2|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 30, 7, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-30 11:00:00 UTC", "avg" -> 26348.6415145631, "max" -> 
        26406.35, "min" -> 26283.73|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 30, 8, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-30 12:00:00 UTC", "avg" -> 26310.8615080972, "max" -> 
        26358.01, "min" -> 26250.|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 30, 9, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-30 13:00:00 UTC", "avg" -> 26182.8591698113, "max" -> 
        26283.19, "min" -> 26045.|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 30, 10, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-30 14:00:00 UTC", "avg" -> 26038.2350761421, "max" -> 
        26157.58, "min" -> 25921.|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 30, 11, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-30 15:00:00 UTC", "avg" -> 26012.9003204419, "max" -> 
        26128.12, "min" -> 25860.|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 30, 12, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-30 16:00:00 UTC", "avg" -> 25882.0844852283, "max" -> 
        25983.52, "min" -> 25726.03|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 30, 13, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-30 17:00:00 UTC", "avg" -> 25669.2603338762, "max" -> 
        25962.87, "min" -> 25468.16|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 30, 14, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-30 18:00:00 UTC", "avg" -> 25572.9086591607, "max" -> 
        25661.89, "min" -> 25428.|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 30, 15, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-30 19:00:00 UTC", "avg" -> 25680.1900698487, "max" -> 
        25769.93, "min" -> 25600.2|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 30, 16, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-30 20:00:00 UTC", "avg" -> 25720.8747029703, "max" -> 
        25856.03, "min" -> 25598.62|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 30, 17, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-30 21:00:00 UTC", "avg" -> 25801.4796107056, "max" -> 
        25869.2, "min" -> 25714.51|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 30, 18, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-30 22:00:00 UTC", "avg" -> 25739.1731716418, "max" -> 
        25830., "min" -> 25528.18|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 30, 19, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-30 23:00:00 UTC", "avg" -> 25683.79371875, "max" -> 
        25743.6, "min" -> 25564.49|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 30, 20, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-31 00:00:00 UTC", "avg" -> 25816.0125278811, "max" -> 
        25973.44, "min" -> 25619.67|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 30, 21, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-31 01:00:00 UTC", "avg" -> 25887.0700543479, "max" -> 
        26011.71, "min" -> 25772.|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 30, 22, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-31 02:00:00 UTC", "avg" -> 25822.3679679144, "max" -> 
        25867.19, "min" -> 25748.3|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 30, 23, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-31 03:00:00 UTC", "avg" -> 25835.7636725664, "max" -> 
        25906.95, "min" -> 25782.91|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 31, 0, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-31 04:00:00 UTC", "avg" -> 25833.5039194139, "max" -> 
        25888.56, "min" -> 25772.46|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 31, 1, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-31 05:00:00 UTC", "avg" -> 25800.1798352941, "max" -> 
        25888.74, "min" -> 25650.01|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 31, 2, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-31 06:00:00 UTC", "avg" -> 25771.0609534368, "max" -> 
        25802.3, "min" -> 25723.36|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 31, 3, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-31 07:00:00 UTC", "avg" -> 25510.0437676843, "max" -> 
        25775.5, "min" -> 25295.|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 31, 4, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-31 08:00:00 UTC", "avg" -> 25553.2691265823, "max" -> 
        25614.54, "min" -> 25472.35|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 31, 5, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-31 09:00:00 UTC", "avg" -> 25582.1746308725, "max" -> 
        25627.43, "min" -> 25538.66|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 31, 6, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-31 10:00:00 UTC", "avg" -> 25658.7165217391, "max" -> 
        25743.59, "min" -> 25573.15|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 31, 7, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-31 11:00:00 UTC", "avg" -> 25697.8480977312, "max" -> 
        25749., "min" -> 25629.08|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 31, 8, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-31 12:00:00 UTC", "avg" -> 25772.7396777547, "max" -> 
        25899.99, "min" -> 25640.22|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 31, 9, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-31 13:00:00 UTC", "avg" -> 26040.5089288231, "max" -> 
        26246.89, "min" -> 25821.3|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 31, 10, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-31 14:00:00 UTC", "avg" -> 26178.151781889, "max" -> 
        26356.79, "min" -> 26031.2|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 31, 11, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-31 15:00:00 UTC", "avg" -> 26188.3951460221, "max" -> 
        26322.32, "min" -> 26098.8|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 31, 12, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-31 16:00:00 UTC", "avg" -> 26190.0277512777, "max" -> 
        26277.51, "min" -> 26123.72|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 31, 13, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-31 17:00:00 UTC", "avg" -> 26128.7387481591, "max" -> 
        26224.67, "min" -> 26060.1|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 31, 14, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-31 18:00:00 UTC", "avg" -> 26108.8, "max" -> 
        26177.93, "min" -> 26046.92|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 31, 15, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-31 19:00:00 UTC", "avg" -> 26185.9328289474, "max" -> 
        26309.05, "min" -> 26074.32|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 31, 16, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-31 20:00:00 UTC", "avg" -> 26216.5367291667, "max" -> 
        26276.51, "min" -> 26154.86|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 31, 17, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-31 21:00:00 UTC", "avg" -> 26258.9355813953, "max" -> 
        26376.18, "min" -> 26184.94|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 31, 18, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-31 22:00:00 UTC", "avg" -> 26347.19794, "max" -> 
        26414.14, "min" -> 26251.43|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 31, 19, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-31 23:00:00 UTC", "avg" -> 26330.1737123746, "max" -> 
        26379.23, "min" -> 26256.44|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 31, 20, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-01 00:00:00 UTC", "avg" -> 26273.498996139, "max" -> 
        26337.51, "min" -> 26213.7|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 31, 21, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-01 01:00:00 UTC", "avg" -> 26282.310373444, "max" -> 
        26410.26, "min" -> 26215.42|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 31, 22, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-01 02:00:00 UTC", "avg" -> 26426.1639583333, "max" -> 
        26565.8, "min" -> 26256.16|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 31, 23, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-01 03:00:00 UTC", "avg" -> 26329.7503873239, "max" -> 
        26386.63, "min" -> 26286.03|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 1, 0, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-01 04:00:00 UTC", "avg" -> 26360.65, "max" -> 
        26398.68, "min" -> 26312.35|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 1, 1, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-01 05:00:00 UTC", "avg" -> 26341.4905487805, "max" -> 
        26369.7, "min" -> 26309.91|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 1, 2, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-01 06:00:00 UTC", "avg" -> 26247.7935845588, "max" -> 
        26356.91, "min" -> 26160.25|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 1, 3, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-01 07:00:00 UTC", "avg" -> 26212.019375, "max" -> 
        26277.24, "min" -> 26162.71|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 1, 4, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-01 08:00:00 UTC", "avg" -> 26235.344929972, "max" -> 
        26281.28, "min" -> 26197.2|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 1, 5, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-01 09:00:00 UTC", "avg" -> 26235.2093869732, "max" -> 
        26262.7, "min" -> 26210.15|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 1, 6, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-01 10:00:00 UTC", "avg" -> 26228.7933108108, "max" -> 
        26268.78, "min" -> 26189.77|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 1, 7, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-01 11:00:00 UTC", "avg" -> 26236.2811643836, "max" -> 
        26274.74, "min" -> 26176.|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 1, 8, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-01 12:00:00 UTC", "avg" -> 26194.5578514589, "max" -> 
        26231.01, "min" -> 26140.7|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 1, 9, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-01 13:00:00 UTC", "avg" -> 26224.3371009772, "max" -> 
        26247.17, "min" -> 26188.64|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 1, 10, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-01 14:00:00 UTC", "avg" -> 26176.1927548209, "max" -> 
        26229.78, "min" -> 26098.48|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 1, 11, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-01 15:00:00 UTC", "avg" -> 26143.0192813142, "max" -> 
        26209.78, "min" -> 26033.18|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 1, 12, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-01 16:00:00 UTC", "avg" -> 26187.8424434389, "max" -> 
        26234.18, "min" -> 26090.23|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 1, 13, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-01 17:00:00 UTC", "avg" -> 26156.2350617284, "max" -> 
        26182.62, "min" -> 26121.11|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 1, 14, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-01 18:00:00 UTC", "avg" -> 26156.4627683616, "max" -> 
        26182.15, "min" -> 26130.44|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 1, 15, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-01 19:00:00 UTC", "avg" -> 26167.6846153846, "max" -> 
        26181.25, "min" -> 26136.74|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 1, 16, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-01 20:00:00 UTC", "avg" -> 26263.8030349345, "max" -> 
        26361., "min" -> 26174.61|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 1, 17, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-01 21:00:00 UTC", "avg" -> 26287.1891578947, "max" -> 
        26317.98, "min" -> 26234.99|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 1, 18, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-01 22:00:00 UTC", "avg" -> 26310.8242916667, "max" -> 
        26349.03, "min" -> 26278.24|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 1, 19, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-01 23:00:00 UTC", "avg" -> 26304.7333760684, "max" -> 
        26351.1, "min" -> 26251.92|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 1, 20, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-02 00:00:00 UTC", "avg" -> 26243.6342307692, "max" -> 
        26294.75, "min" -> 26168.65|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 1, 21, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-02 01:00:00 UTC", "avg" -> 26200.6577536232, "max" -> 
        26240.27, "min" -> 26170.96|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 1, 22, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-02 02:00:00 UTC", "avg" -> 26215.3198958333, "max" -> 
        26240.09, "min" -> 26184.48|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 1, 23, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-02 03:00:00 UTC", "avg" -> 26260.2302, "max" -> 
        26315.52, "min" -> 26206.95|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 2, 0, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-02 04:00:00 UTC", "avg" -> 26242.0313934426, "max" -> 
        26284.09, "min" -> 26197.5|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 2, 1, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-02 05:00:00 UTC", "avg" -> 26235.1013207547, "max" -> 
        26270., "min" -> 26196.35|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 2, 2, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-02 06:00:00 UTC", "avg" -> 26257.7019678715, "max" -> 
        26285.03, "min" -> 26217.06|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 2, 3, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-02 07:00:00 UTC", "avg" -> 26258.253, "max" -> 
        26277.69, "min" -> 26215.|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 2, 4, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-02 08:00:00 UTC", "avg" -> 26204.4051020408, "max" -> 
        26231.66, "min" -> 26176.|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 2, 5, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-02 09:00:00 UTC", "avg" -> 26208.6862081785, "max" -> 
        26254.34, "min" -> 26175.|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 2, 6, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-02 10:00:00 UTC", "avg" -> 26200.6671523179, "max" -> 
        26229.47, "min" -> 26183.3|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 2, 7, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-02 11:00:00 UTC", "avg" -> 26176.671598513, "max" -> 
        26200., "min" -> 26120.01|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 2, 8, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-02 12:00:00 UTC", "avg" -> 26095.2295114504, "max" -> 
        26174.93, "min" -> 25994.54|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 2, 9, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-02 13:00:00 UTC", "avg" -> 26061.1231559633, "max" -> 
        26154.2, "min" -> 25965.|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 2, 10, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-02 14:00:00 UTC", "avg" -> 26115.1748780488, "max" -> 
        26166.5, "min" -> 26068.3|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 2, 11, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-02 15:00:00 UTC", "avg" -> 25952.6270320856, "max" -> 
        26099.13, "min" -> 25884.41|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 2, 12, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-02 16:00:00 UTC", "avg" -> 25922.1891314031, "max" -> 
        25990.53, "min" -> 25782.26|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 2, 13, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-02 17:00:00 UTC", "avg" -> 26005.2838095238, "max" -> 
        26068.39, "min" -> 25959.87|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 2, 14, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-02 18:00:00 UTC", "avg" -> 26030.7705872193, "max" -> 
        26061.96, "min" -> 26003.88|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 2, 15, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-02 19:00:00 UTC", "avg" -> 25915.1157298137, "max" -> 
        26020.53, "min" -> 25733.|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 2, 16, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-02 20:00:00 UTC", "avg" -> 25867.1710409556, "max" -> 
        25930.51, "min" -> 25788.15|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 2, 17, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-02 21:00:00 UTC", "avg" -> 25919.5448122065, "max" -> 
        25989.78, "min" -> 25832.2|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 2, 18, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-02 22:00:00 UTC", "avg" -> 25840.1181698113, "max" -> 
        25994.16, "min" -> 25750.|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 2, 19, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-02 23:00:00 UTC", "avg" -> 26029.5817175573, "max" -> 
        26114.39, "min" -> 25941.43|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 2, 20, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-03 00:00:00 UTC", "avg" -> 26042.9568803419, "max" -> 
        26092.86, "min" -> 25976.83|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 2, 21, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-03 01:00:00 UTC", "avg" -> 25758.9099216301, "max" -> 
        26040.62, "min" -> 25537.85|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 2, 22, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-03 02:00:00 UTC", "avg" -> 25707.2318128655, "max" -> 
        25772.92, "min" -> 25623.84|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 2, 23, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-03 03:00:00 UTC", "avg" -> 25692.0483268483, "max" -> 
        25751.92, "min" -> 25611.78|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 3, 0, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-03 04:00:00 UTC", "avg" -> 25661.0366043614, "max" -> 
        25740.56, "min" -> 25570.28|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 3, 1, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-03 05:00:00 UTC", "avg" -> 25696.0812873563, "max" -> 
        25747.76, "min" -> 25647.02|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 3, 2, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-03 06:00:00 UTC", "avg" -> 25660.0740247678, "max" -> 
        25716.4, "min" -> 25608.66|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 3, 3, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-03 07:00:00 UTC", "avg" -> 25757.4025285896, "max" -> 
        25819.73, "min" -> 25683.24|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 3, 4, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-03 08:00:00 UTC", "avg" -> 26099.0554525706, "max" -> 
        26265., "min" -> 25819.|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 3, 5, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-03 09:00:00 UTC", "avg" -> 26130.9901925722, "max" -> 
        26185.38, "min" -> 26096.6|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 3, 6, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-03 10:00:00 UTC", "avg" -> 26135.7226272067, "max" -> 
        26253.23, "min" -> 26060.|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 3, 7, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-03 11:00:00 UTC", "avg" -> 26026.0091255814, "max" -> 
        26076.26, "min" -> 25986.|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 3, 8, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-03 12:00:00 UTC", "avg" -> 25929.2165059145, "max" -> 
        26018.67, "min" -> 25845.71|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 3, 9, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-03 13:00:00 UTC", "avg" -> 25950.1659355416, "max" -> 
        26076.99, "min" -> 25889.95|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 3, 10, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-03 14:00:00 UTC", "avg" -> 25881.942788296, "max" -> 
        26012.54, "min" -> 25689.58|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 3, 11, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-03 15:00:00 UTC", "avg" -> 25784.7855684754, "max" -> 
        25851.2, "min" -> 25702.37|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 3, 12, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-03 16:00:00 UTC", "avg" -> 25781.5751781737, "max" -> 
        25859.84, "min" -> 25671.93|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 3, 13, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-03 17:00:00 UTC", "avg" -> 25728.2363295454, "max" -> 
        25820.67, "min" -> 25640.01|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 3, 14, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-03 18:00:00 UTC", "avg" -> 25796.8553333333, "max" -> 
        25920.72, "min" -> 25682.45|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 3, 15, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-03 19:00:00 UTC", "avg" -> 25832.7541047297, "max" -> 
        25932.23, "min" -> 25731.15|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 3, 16, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-03 20:00:00 UTC", "avg" -> 25466.8161559888, "max" -> 
        25779.17, "min" -> 25200.02|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 3, 17, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-03 21:00:00 UTC", "avg" -> 25204.1366382978, "max" -> 
        25486.48, "min" -> 24990.|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 3, 18, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-03 22:00:00 UTC", "avg" -> 25519.1736420722, "max" -> 
        25643.66, "min" -> 25405.48|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 3, 19, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-03 23:00:00 UTC", "avg" -> 25566.1374481328, "max" -> 
        25686.8, "min" -> 25450.45|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 3, 20, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-04 00:00:00 UTC", "avg" -> 25474.1454126213, "max" -> 
        25568.99, "min" -> 25383.92|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 3, 21, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-04 01:00:00 UTC", "avg" -> 25522.3368410042, "max" -> 
        25616.36, "min" -> 25431.81|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 3, 22, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-04 02:00:00 UTC", "avg" -> 25600.5308088235, "max" -> 
        25674.09, "min" -> 25514.9|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 3, 23, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-04 03:00:00 UTC", "avg" -> 25626.2181725888, "max" -> 
        25688.63, "min" -> 25586.46|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 4, 0, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-04 04:00:00 UTC", "avg" -> 25581.1151910828, "max" -> 
        25630.31, "min" -> 25515.51|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 4, 1, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-04 05:00:00 UTC", "avg" -> 25635.5237869822, "max" -> 
        25675.25, "min" -> 25554.53|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 4, 2, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-04 06:00:00 UTC", "avg" -> 25688.8104587156, "max" -> 
        25840.52, "min" -> 25595.94|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 4, 3, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-04 07:00:00 UTC", "avg" -> 25724.6836629667, "max" -> 
        25832.14, "min" -> 25643.03|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 4, 4, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-04 08:00:00 UTC", "avg" -> 25690.5248613377, "max" -> 
        25775.1, "min" -> 25598.7|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 4, 5, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-04 09:00:00 UTC", "avg" -> 25734.7178090767, "max" -> 
        25823.32, "min" -> 25670.62|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 4, 6, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-04 10:00:00 UTC", "avg" -> 25868.4811895425, "max" -> 
        25939., "min" -> 25799.89|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 4, 7, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-04 11:00:00 UTC", "avg" -> 25958.8724197248, "max" -> 
        26060.14, "min" -> 25838.09|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 4, 8, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-04 12:00:00 UTC", "avg" -> 25951.7276833527, "max" -> 
        26040., "min" -> 25900.65|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 4, 9, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-04 13:00:00 UTC", "avg" -> 25931.2560590095, "max" -> 
        26077.83, "min" -> 25753.18|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 4, 10, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-04 14:00:00 UTC", "avg" -> 25749.776232939, "max" -> 
        25832.62, "min" -> 25640.|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 4, 11, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-04 15:00:00 UTC", "avg" -> 25607.4774657534, "max" -> 
        25696.13, "min" -> 25529.|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 4, 12, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-04 16:00:00 UTC", "avg" -> 25611.8185441528, "max" -> 
        25694.68, "min" -> 25560.47|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 4, 13, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-04 17:00:00 UTC", "avg" -> 25738.7867301587, "max" -> 
        25808.53, "min" -> 25666.1|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 4, 14, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-04 18:00:00 UTC", "avg" -> 25742.350733945, "max" -> 
        25826.64, "min" -> 25659.32|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 4, 15, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-04 19:00:00 UTC", "avg" -> 25699.3452389079, "max" -> 
        25758.2, "min" -> 25650.|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 4, 16, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-04 20:00:00 UTC", "avg" -> 25774.065768421, "max" -> 
        25849.28, "min" -> 25728.04|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 4, 17, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-04 21:00:00 UTC", "avg" -> 25774.6452661064, "max" -> 
        25806.47, "min" -> 25721.14|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 4, 18, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-04 22:00:00 UTC", "avg" -> 25771.6235769231, "max" -> 
        25813.59, "min" -> 25717.9|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 4, 19, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-04 23:00:00 UTC", "avg" -> 25690.7961616162, "max" -> 
        25755.36, "min" -> 25628.61|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 4, 20, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-05 00:00:00 UTC", "avg" -> 25999.0175, "max" -> 
        26200., "min" -> 25644.49|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 4, 21, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-05 01:00:00 UTC", "avg" -> 26112.5060160966, "max" -> 
        26217.85, "min" -> 26049.4|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 4, 22, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-05 02:00:00 UTC", "avg" -> 26125.4025701944, "max" -> 
        26250., "min" -> 26023.09|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 4, 23, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-05 03:00:00 UTC", "avg" -> 26006.873968254, "max" -> 
        26080.54, "min" -> 25939.73|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 5, 0, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-05 04:00:00 UTC", "avg" -> 26054.058028169, "max" -> 
        26093.29, "min" -> 26010.|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 5, 1, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-05 05:00:00 UTC", "avg" -> 26069.9153651685, "max" -> 
        26139.34, "min" -> 26009.87|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 5, 2, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-05 06:00:00 UTC", "avg" -> 26084.1403508772, "max" -> 
        26123.36, "min" -> 26040.55|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 5, 3, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-05 07:00:00 UTC", "avg" -> 26015.0476140351, "max" -> 
        26082.36, "min" -> 25961.53|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 5, 4, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-05 08:00:00 UTC", "avg" -> 26089.9127375887, "max" -> 
        26133.69, "min" -> 25997.03|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 5, 5, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-05 09:00:00 UTC", "avg" -> 26069.5903370787, "max" -> 
        26117.31, "min" -> 26041.45|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 5, 6, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-05 10:00:00 UTC", "avg" -> 26052.0730645161, "max" -> 
        26079.99, "min" -> 26028.42|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 5, 7, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-05 11:00:00 UTC", "avg" -> 26079.5807321773, "max" -> 
        26120.01, "min" -> 26043.7|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 5, 8, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-05 12:00:00 UTC", "avg" -> 26056.9573952096, "max" -> 
        26243.41, "min" -> 25847.59|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 5, 9, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-05 13:00:00 UTC", "avg" -> 26009.3671777004, "max" -> 
        26112., "min" -> 25875.53|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 5, 10, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-05 14:00:00 UTC", "avg" -> 25803.3755, "max" -> 
        25998.21, "min" -> 25705.06|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 5, 11, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-05 15:00:00 UTC", "avg" -> 25651.9487352138, "max" -> 
        25779.1, "min" -> 25531.4|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 5, 12, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-05 16:00:00 UTC", "avg" -> 25613.8153169733, "max" -> 
        25711.07, "min" -> 25492.47|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 5, 13, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-05 17:00:00 UTC", "avg" -> 25743.9362580645, "max" -> 
        25810.56, "min" -> 25644.38|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 5, 14, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-05 18:00:00 UTC", "avg" -> 25711.739580292, "max" -> 
        25762.73, "min" -> 25637.81|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 5, 15, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-05 19:00:00 UTC", "avg" -> 25839.1086940749, "max" -> 
        25977.34, "min" -> 25660.84|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 5, 16, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-05 20:00:00 UTC", "avg" -> 25900.7782365591, "max" -> 
        25976.84, "min" -> 25808.93|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 5, 17, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-05 21:00:00 UTC", "avg" -> 25854.088031496, "max" -> 
        25898.78, "min" -> 25812.66|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 5, 18, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-05 22:00:00 UTC", "avg" -> 25828.2465266106, "max" -> 
        25891.5, "min" -> 25790.27|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 5, 19, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-05 23:00:00 UTC", "avg" -> 25837.8535632184, "max" -> 
        25871.42, "min" -> 25806.1|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 5, 20, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-06 00:00:00 UTC", "avg" -> 25742.4551075269, "max" -> 
        25847.75, "min" -> 25635.|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 5, 21, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-06 01:00:00 UTC", "avg" -> 25707.0760507246, "max" -> 
        25798.1, "min" -> 25606.78|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 5, 22, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-06 02:00:00 UTC", "avg" -> 25768.6145652174, "max" -> 
        25807.7, "min" -> 25717.87|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 5, 23, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-06 03:00:00 UTC", "avg" -> 25791.3359558823, "max" -> 
        25855., "min" -> 25747.23|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 6, 0, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-06 04:00:00 UTC", "avg" -> 25816.1104142012, "max" -> 
        25835.9, "min" -> 25776.84|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 6, 1, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-06 05:00:00 UTC", "avg" -> 25756.4692931937, "max" -> 
        25791.79, "min" -> 25681.7|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 6, 2, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-06 06:00:00 UTC", "avg" -> 25739.7429504505, "max" -> 
        25760.3, "min" -> 25708.28|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 6, 3, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-06 07:00:00 UTC", "avg" -> 25684.2254896142, "max" -> 
        25749.22, "min" -> 25585.53|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 6, 4, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-06 08:00:00 UTC", "avg" -> 25616.3521730769, "max" -> 
        25692.18, "min" -> 25544.98|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 6, 5, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-06 09:00:00 UTC", "avg" -> 25677.6391388889, "max" -> 
        25732.08, "min" -> 25599.24|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 6, 6, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-06 10:00:00 UTC", "avg" -> 25541.3121207658, "max" -> 
        25601.09, "min" -> 25429.75|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 6, 7, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-06 11:00:00 UTC", "avg" -> 25605.4183741648, "max" -> 
        25635.41, "min" -> 25567.15|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 6, 8, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-06 12:00:00 UTC", "avg" -> 25641.3185757122, "max" -> 
        25755., "min" -> 25557.06|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 6, 9, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-06 13:00:00 UTC", "avg" -> 25621.0770695553, "max" -> 
        25710.69, "min" -> 25500.|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 6, 10, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-06 14:00:00 UTC", "avg" -> 25622.0292987377, "max" -> 
        25694.67, "min" -> 25592.36|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 6, 11, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-06 15:00:00 UTC", "avg" -> 25731.248129771, "max" -> 
        25817.3, "min" -> 25605.2|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 6, 12, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-06 16:00:00 UTC", "avg" -> 25733.7744354839, "max" -> 
        25779.99, "min" -> 25669.16|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 6, 13, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-06 17:00:00 UTC", "avg" -> 25690.7003940887, "max" -> 
        25719., "min" -> 25646.88|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 6, 14, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-06 18:00:00 UTC", "avg" -> 25665.6529479769, "max" -> 
        25725.17, "min" -> 25600.|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 6, 15, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-06 19:00:00 UTC", "avg" -> 25662.0047512438, "max" -> 
        25707.42, "min" -> 25597.13|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 6, 16, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-06 20:00:00 UTC", "avg" -> 25704.9716666667, "max" -> 
        25767.78, "min" -> 25632.71|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 6, 17, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-06 21:00:00 UTC", "avg" -> 25671.9944027304, "max" -> 
        25711.06, "min" -> 25626.3|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 6, 18, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-06 22:00:00 UTC", "avg" -> 25644.4635955056, "max" -> 
        25690.7, "min" -> 25580.|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 6, 19, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-06 23:00:00 UTC", "avg" -> 25701.9616756757, "max" -> 
        25726.47, "min" -> 25681.7|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 6, 20, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-07 00:00:00 UTC", "avg" -> 25714.227797619, "max" -> 
        25774.33, "min" -> 25669.98|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 6, 21, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-07 01:00:00 UTC", "avg" -> 25741.1291836735, "max" -> 
        25774.85, "min" -> 25710.59|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 6, 22, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-07 02:00:00 UTC", "avg" -> 25681.6449438202, "max" -> 
        25741.33, "min" -> 25599.82|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 6, 23, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-07 03:00:00 UTC", "avg" -> 25685.7445652174, "max" -> 
        25718.32, "min" -> 25652.35|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 7, 0, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-07 04:00:00 UTC", "avg" -> 25704.486870229, "max" -> 
        25740.68, "min" -> 25670.12|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 7, 1, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-07 05:00:00 UTC", "avg" -> 25647.5709426229, "max" -> 
        25701.19, "min" -> 25561.05|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 7, 2, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-07 06:00:00 UTC", "avg" -> 25631.9293454545, "max" -> 
        25673.25, "min" -> 25591.|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 7, 3, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-07 07:00:00 UTC", "avg" -> 25560.7109234234, "max" -> 
        25641.37, "min" -> 25474.76|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 7, 4, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-07 08:00:00 UTC", "avg" -> 25555.2852645503, "max" -> 
        25609.71, "min" -> 25502.33|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 7, 5, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-07 09:00:00 UTC", "avg" -> 25538.6807712766, "max" -> 
        25576., "min" -> 25491.87|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 7, 6, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-07 10:00:00 UTC", "avg" -> 25610.5525400458, "max" -> 
        25647.31, "min" -> 25546.66|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 7, 7, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-07 11:00:00 UTC", "avg" -> 25574.7745679013, "max" -> 
        25619.47, "min" -> 25509.91|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 7, 8, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-07 12:00:00 UTC", "avg" -> 25607.9610866373, "max" -> 
        25680.37, "min" -> 25522.43|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 7, 9, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-07 13:00:00 UTC", "avg" -> 25611.2434986226, "max" -> 
        25650.45, "min" -> 25562.02|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 7, 10, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-07 14:00:00 UTC", "avg" -> 25635.2202272727, "max" -> 
        25678.55, "min" -> 25607.51|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 7, 11, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-07 15:00:00 UTC", "avg" -> 25637.6855128205, "max" -> 
        25662.17, "min" -> 25610.54|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 7, 12, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-07 16:00:00 UTC", "avg" -> 25616.5706415094, "max" -> 
        25657.13, "min" -> 25575.21|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 7, 13, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-07 17:00:00 UTC", "avg" -> 25623.447721519, "max" -> 
        25652.19, "min" -> 25601.87|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 7, 14, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-07 18:00:00 UTC", "avg" -> 25625.363930131, "max" -> 
        25652.9, "min" -> 25591.6|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 7, 15, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-07 19:00:00 UTC", "avg" -> 25614.0894166667, "max" -> 
        25630.67, "min" -> 25585.55|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 7, 16, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-07 20:00:00 UTC", "avg" -> 25612.9260411311, "max" -> 
        25649.23, "min" -> 25578.61|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 7, 17, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-07 21:00:00 UTC", "avg" -> 25606.9922463768, "max" -> 
        25635.69, "min" -> 25583.9|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 7, 18, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-07 22:00:00 UTC", "avg" -> 25629.9236046512, "max" -> 
        25690.23, "min" -> 25590.56|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 7, 19, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-07 23:00:00 UTC", "avg" -> 25631.9734166667, "max" -> 
        25670.18, "min" -> 25599.62|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 7, 20, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-08 00:00:00 UTC", "avg" -> 25602.9677551021, "max" -> 
        25632.66, "min" -> 25572.69|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 7, 21, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-08 01:00:00 UTC", "avg" -> 25616.3825438596, "max" -> 
        25643.66, "min" -> 25594.24|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 7, 22, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-08 02:00:00 UTC", "avg" -> 25640.7415714286, "max" -> 
        25671.46, "min" -> 25618.34|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 7, 23, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-08 03:00:00 UTC", "avg" -> 25712.0535294118, "max" -> 
        25763.63, "min" -> 25651.92|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 8, 0, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-08 04:00:00 UTC", "avg" -> 25717.3039516129, "max" -> 
        25748.87, "min" -> 25686.02|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 8, 1, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-08 05:00:00 UTC", "avg" -> 25761.7726415094, "max" -> 
        25850., "min" -> 25689.33|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 8, 2, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-08 06:00:00 UTC", "avg" -> 25820.9205063291, "max" -> 
        25853.88, "min" -> 25787.51|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 8, 3, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-08 07:00:00 UTC", "avg" -> 25812.6040655738, "max" -> 
        25830.54, "min" -> 25780.66|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 8, 4, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-08 08:00:00 UTC", "avg" -> 25792.6941390729, "max" -> 
        25831.66, "min" -> 25740.6|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 8, 5, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-08 09:00:00 UTC", "avg" -> 25767.8092444444, "max" -> 
        25785.3, "min" -> 25736.61|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 8, 6, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-08 10:00:00 UTC", "avg" -> 25748.9104469274, "max" -> 
        25761.32, "min" -> 25716.97|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 8, 7, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-08 11:00:00 UTC", "avg" -> 25737.1770879121, "max" -> 
        25753.76, "min" -> 25714.38|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 8, 8, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-08 12:00:00 UTC", "avg" -> 25719.65875, "max" -> 
        25749.48, "min" -> 25677.84|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 8, 9, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-08 13:00:00 UTC", "avg" -> 25724.801826087, "max" -> 
        25764.55, "min" -> 25692.1|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 8, 10, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-08 14:00:00 UTC", "avg" -> 25755.7026470588, "max" -> 
        25781.02, "min" -> 25738.62|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 8, 11, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-08 15:00:00 UTC", "avg" -> 25731.2500847458, "max" -> 
        25753.55, "min" -> 25712.5|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 8, 12, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-08 16:00:00 UTC", "avg" -> 25735.5884761905, "max" -> 
        25749.76, "min" -> 25721.|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 8, 13, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-08 17:00:00 UTC", "avg" -> 25709.0430952381, "max" -> 
        25743.68, "min" -> 25628.84|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 8, 14, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-08 18:00:00 UTC", "avg" -> 25658.4027222222, "max" -> 
        25690.23, "min" -> 25607.33|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 8, 15, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-08 19:00:00 UTC", "avg" -> 25657.0734901961, "max" -> 
        25685., "min" -> 25616.31|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 8, 16, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-08 20:00:00 UTC", "avg" -> 25667.6140540541, "max" -> 
        25688.97, "min" -> 25645.05|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 8, 17, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-08 21:00:00 UTC", "avg" -> 25658.5263846154, "max" -> 
        25672.56, "min" -> 25634.44|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 8, 18, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-08 22:00:00 UTC", "avg" -> 25657.4816306954, "max" -> 
        25697.4, "min" -> 25616.18|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 8, 19, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-08 23:00:00 UTC", "avg" -> 25692.2607106599, "max" -> 
        25725.73, "min" -> 25668.64|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 8, 20, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-09 00:00:00 UTC", "avg" -> 25733.7250228311, "max" -> 
        25804.62, "min" -> 25666.66|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 8, 21, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-09 01:00:00 UTC", "avg" -> 25781.1502631579, "max" -> 
        25812.79, "min" -> 25761.74|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 8, 22, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-09 02:00:00 UTC", "avg" -> 25786.9094339623, "max" -> 
        25814.56, "min" -> 25756.72|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 8, 23, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-09 03:00:00 UTC", "avg" -> 25762.5214619883, "max" -> 
        25776.95, "min" -> 25740.23|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 9, 0, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-09 04:00:00 UTC", "avg" -> 25756.0605405405, "max" -> 
        25763.92, "min" -> 25742.44|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 9, 1, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-09 05:00:00 UTC", "avg" -> 25764.6546212121, "max" -> 
        25792.61, "min" -> 25733.7|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 9, 2, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-09 06:00:00 UTC", "avg" -> 25669.0453273138, "max" -> 
        25729.2, "min" -> 25596.52|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 9, 3, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-09 07:00:00 UTC", "avg" -> 25637.6922271714, "max" -> 
        25661.07, "min" -> 25590.45|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 9, 4, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-09 08:00:00 UTC", "avg" -> 25611.6089010989, "max" -> 
        25671.26, "min" -> 25524.13|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 9, 5, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-09 09:00:00 UTC", "avg" -> 25636.2743589744, "max" -> 
        25667.13, "min" -> 25611.4|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 9, 6, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-09 10:00:00 UTC", "avg" -> 25629.5293562232, "max" -> 
        25647.94, "min" -> 25601.1|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 9, 7, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-09 11:00:00 UTC", "avg" -> 25630.5940069687, "max" -> 
        25666.82, "min" -> 25602.59|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 9, 8, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-09 12:00:00 UTC", "avg" -> 25670.2367148015, "max" -> 
        25696.5, "min" -> 25643.59|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 9, 9, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-09 13:00:00 UTC", "avg" -> 25641.3216033755, "max" -> 
        25662.79, "min" -> 25622.8|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 9, 10, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-09 14:00:00 UTC", "avg" -> 25606.2961557789, "max" -> 
        25661.66, "min" -> 25542.76|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 9, 11, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-09 15:00:00 UTC", "avg" -> 25621.2891845493, "max" -> 
        25654.31, "min" -> 25577.41|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 9, 12, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-09 16:00:00 UTC", "avg" -> 25646.5842410715, "max" -> 
        25672., "min" -> 25625.41|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 9, 13, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-09 17:00:00 UTC", "avg" -> 25629.9373207547, "max" -> 
        25661.87, "min" -> 25609.07|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 9, 14, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-09 18:00:00 UTC", "avg" -> 25690.3835888502, "max" -> 
        25766.25, "min" -> 25639.35|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 9, 15, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-09 19:00:00 UTC", "avg" -> 25860.0503253182, "max" -> 
        25945.66, "min" -> 25719.9|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 9, 16, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-09 20:00:00 UTC", "avg" -> 25829.358487395, "max" -> 
        25863.59, "min" -> 25791.31|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 9, 17, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-09 21:00:00 UTC", "avg" -> 25979.2872285251, "max" -> 
        26140., "min" -> 25813.73|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 9, 18, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-09 22:00:00 UTC", "avg" -> 26087.9070477569, "max" -> 
        26199.98, "min" -> 26005.9|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 9, 19, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-09 23:00:00 UTC", "avg" -> 26006.3639642857, "max" -> 
        26076.72, "min" -> 25954.93|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 9, 20, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-10 00:00:00 UTC", "avg" -> 26016.9695053004, "max" -> 
        26080.29, "min" -> 25947.64|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 9, 21, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-10 01:00:00 UTC", "avg" -> 25980.4668421053, "max" -> 
        26051.36, "min" -> 25917.53|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 9, 22, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-10 02:00:00 UTC", "avg" -> 25983.3130674847, "max" -> 
        26024.72, "min" -> 25947.4|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 9, 23, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-10 03:00:00 UTC", "avg" -> 25975.800859375, "max" -> 
        26006.35, "min" -> 25955.82|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 10, 0, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-10 04:00:00 UTC", "avg" -> 25968.9803401361, "max" -> 
        26000., "min" -> 25904.68|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 10, 1, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-10 05:00:00 UTC", "avg" -> 25940.0127956989, "max" -> 
        26000., "min" -> 25900.|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 10, 2, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-10 06:00:00 UTC", "avg" -> 25960.8675700935, "max" -> 
        25979.14, "min" -> 25937.74|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 10, 3, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-10 07:00:00 UTC", "avg" -> 25948.1579831933, "max" -> 
        25972.5, "min" -> 25910.46|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 10, 4, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-10 08:00:00 UTC", "avg" -> 25976.1842857143, "max" -> 
        26023.64, "min" -> 25937.22|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 10, 5, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-10 09:00:00 UTC", "avg" -> 25966.6985672515, "max" -> 
        25991.06, "min" -> 25937.56|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 10, 6, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-10 10:00:00 UTC", "avg" -> 25965.7907507508, "max" -> 
        26002.22, "min" -> 25941.94|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 10, 7, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-10 11:00:00 UTC", "avg" -> 25999.7939548023, "max" -> 
        26028.18, "min" -> 25968.28|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 10, 8, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-10 12:00:00 UTC", "avg" -> 26031.2765994962, "max" -> 
        26071.72, "min" -> 25991.28|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 10, 9, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-10 13:00:00 UTC", "avg" -> 26034.4569197397, "max" -> 
        26091.47, "min" -> 25982.91|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 10, 10, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-10 14:00:00 UTC", "avg" -> 26089.1672037037, "max" -> 
        26162.94, "min" -> 26017.22|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 10, 11, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-10 15:00:00 UTC", "avg" -> 26231.3423678862, "max" -> 
        26359.38, "min" -> 26121.01|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 10, 12, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-10 16:00:00 UTC", "avg" -> 26516.1072271574, "max" -> 
        26877.89, "min" -> 26185.35|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 10, 13, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-10 17:00:00 UTC", "avg" -> 26850.4220477021, "max" -> 
        26996.7, "min" -> 26720.|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 10, 14, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-10 18:00:00 UTC", "avg" -> 26889.9075960171, "max" -> 
        26981.63, "min" -> 26831.21|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 10, 15, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-10 19:00:00 UTC", "avg" -> 26859.7836023392, "max" -> 
        26977.77, "min" -> 26766.96|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 10, 16, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-10 20:00:00 UTC", "avg" -> 26829.8236936937, "max" -> 
        26902.75, "min" -> 26773.67|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 10, 17, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-10 21:00:00 UTC", "avg" -> 26880.5540095087, "max" -> 
        26977.16, "min" -> 26803.67|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 10, 18, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-10 22:00:00 UTC", "avg" -> 27203.1155758807, "max" -> 
        27361., "min" -> 26923.27|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 10, 19, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-10 23:00:00 UTC", "avg" -> 27323.1615327381, "max" -> 
        27409.21, "min" -> 27226.78|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 10, 20, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-11 00:00:00 UTC", "avg" -> 27392.9932821229, "max" -> 
        27562.97, "min" -> 27225.42|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 10, 21, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-11 01:00:00 UTC", "avg" -> 27608.2397428139, "max" -> 
        27852.9, "min" -> 27370.96|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 10, 22, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-11 02:00:00 UTC", "avg" -> 27773.9151327433, "max" -> 
        27933.66, "min" -> 27569.68|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 10, 23, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-11 03:00:00 UTC", "avg" -> 27568.505, "max" -> 
        27656.41, "min" -> 27489.88|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 11, 0, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-11 04:00:00 UTC", "avg" -> 27651.467895717, "max" -> 
        27747.9, "min" -> 27584.42|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 11, 1, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-11 05:00:00 UTC", "avg" -> 27569.2212216405, "max" -> 
        27678.94, "min" -> 27342.97|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 11, 2, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-11 06:00:00 UTC", "avg" -> 27573.4348681541, "max" -> 
        27627.4, "min" -> 27427.|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 11, 3, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-11 07:00:00 UTC", "avg" -> 27616.0124447174, "max" -> 
        27669.71, "min" -> 27571.66|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 11, 4, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-11 08:00:00 UTC", "avg" -> 27596.3197379912, "max" -> 
        27659.99, "min" -> 27555.5|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 11, 5, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-11 09:00:00 UTC", "avg" -> 27535.1589558233, "max" -> 
        27598.52, "min" -> 27484.33|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 11, 6, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-11 10:00:00 UTC", "avg" -> 27564.3186813186, "max" -> 
        27610.96, "min" -> 27508.67|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 11, 7, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-11 11:00:00 UTC", "avg" -> 27579.4727769986, "max" -> 
        27615.25, "min" -> 27547.45|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 11, 8, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-11 12:00:00 UTC", "avg" -> 27588.018268685, "max" -> 
        27678.24, "min" -> 27529.35|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 11, 9, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-11 13:00:00 UTC", "avg" -> 27618.266350365, "max" -> 
        27706.2, "min" -> 27566.8|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 11, 10, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-11 14:00:00 UTC", "avg" -> 27608.9632681564, "max" -> 
        27725.99, "min" -> 27474.25|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 11, 11, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-11 15:00:00 UTC", "avg" -> 27659.4368082192, "max" -> 
        27731.16, "min" -> 27531.36|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 11, 12, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-11 16:00:00 UTC", "avg" -> 27703.6249070632, "max" -> 
        27769.99, "min" -> 27621.6|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 11, 13, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-11 17:00:00 UTC", "avg" -> 27655.1981748466, "max" -> 
        27715.89, "min" -> 27571.18|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 11, 14, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-11 18:00:00 UTC", "avg" -> 27700.4534573643, "max" -> 
        27733.27, "min" -> 27651.41|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 11, 15, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-11 19:00:00 UTC", "avg" -> 27810.0925496476, "max" -> 
        28008.98, "min" -> 27609.21|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 11, 16, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-11 20:00:00 UTC", "avg" -> 27573.2142136855, "max" -> 
        27657.8, "min" -> 27441.04|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 11, 17, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-11 21:00:00 UTC", "avg" -> 27671.2238944723, "max" -> 
        27722.39, "min" -> 27630.34|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 11, 18, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-11 22:00:00 UTC", "avg" -> 27684.8404878049, "max" -> 
        27741.33, "min" -> 27639.|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 11, 19, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-11 23:00:00 UTC", "avg" -> 27698.163902439, "max" -> 
        27741.05, "min" -> 27640.5|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 11, 20, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-12 00:00:00 UTC", "avg" -> 27738.6544660194, "max" -> 
        27819.62, "min" -> 27665.93|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 11, 21, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-12 01:00:00 UTC", "avg" -> 27661.4308333334, "max" -> 
        27748.06, "min" -> 27590.|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 11, 22, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-12 02:00:00 UTC", "avg" -> 27452.863803056, "max" -> 
        27630.77, "min" -> 27329.62|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 11, 23, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-12 03:00:00 UTC", "avg" -> 27425.7258422939, "max" -> 
        27477.45, "min" -> 27349.84|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 12, 0, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-12 04:00:00 UTC", "avg" -> 27426.1316929134, "max" -> 
        27469.1, "min" -> 27384.23|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 12, 1, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-12 05:00:00 UTC", "avg" -> 27411.0988915663, "max" -> 
        27475.16, "min" -> 27358.88|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 12, 2, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-12 06:00:00 UTC", "avg" -> 27396.6014555256, "max" -> 
        27443.78, "min" -> 27341.|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 12, 3, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-12 07:00:00 UTC", "avg" -> 27465.1325577265, "max" -> 
        27547.43, "min" -> 27388.02|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 12, 4, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-12 08:00:00 UTC", "avg" -> 27468.4843945578, "max" -> 
        27513.52, "min" -> 27419.51|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 12, 5, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-12 09:00:00 UTC", "avg" -> 27445.3538161994, "max" -> 
        27498.75, "min" -> 27385.83|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 12, 6, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-12 10:00:00 UTC", "avg" -> 27486.6448764045, "max" -> 
        27519.14, "min" -> 27462.79|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 12, 7, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-12 11:00:00 UTC", "avg" -> 27485.2483123028, "max" -> 
        27520., "min" -> 27460.53|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 12, 8, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-12 12:00:00 UTC", "avg" -> 27625.1005275318, "max" -> 
        27806.98, "min" -> 27432.63|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 12, 9, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-12 13:00:00 UTC", "avg" -> 27498.3786347887, "max" -> 
        27674.91, "min" -> 27361.46|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 12, 10, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-12 14:00:00 UTC", "avg" -> 27450.318583387, "max" -> 
        27550.82, "min" -> 27380.|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 12, 11, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-12 15:00:00 UTC", "avg" -> 27282.9341164241, "max" -> 
        27426.52, "min" -> 27054.48|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 12, 12, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-12 16:00:00 UTC", "avg" -> 27289.2787327824, "max" -> 
        27337.43, "min" -> 27231.6|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 12, 13, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-12 17:00:00 UTC", "avg" -> 27321.279791395, "max" -> 
        27389.1, "min" -> 27228.38|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 12, 14, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-12 18:00:00 UTC", "avg" -> 27278.1702666667, "max" -> 
        27354.15, "min" -> 27172.12|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 12, 15, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-12 19:00:00 UTC", "avg" -> 27190.7615274152, "max" -> 
        27261.82, "min" -> 27087.27|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 12, 16, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-12 20:00:00 UTC", "avg" -> 27188.2174509804, "max" -> 
        27270.67, "min" -> 27104.85|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 12, 17, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-12 21:00:00 UTC", "avg" -> 27258.7192878338, "max" -> 
        27294.82, "min" -> 27227.16|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 12, 18, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-12 22:00:00 UTC", "avg" -> 27229.7565853658, "max" -> 
        27297.41, "min" -> 27121.8|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 12, 19, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-12 23:00:00 UTC", "avg" -> 27204.3251666667, "max" -> 
        27252.75, "min" -> 27149.46|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 12, 20, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-13 00:00:00 UTC", "avg" -> 27274.6546814404, "max" -> 
        27343.69, "min" -> 27192.63|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 12, 21, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-13 01:00:00 UTC", "avg" -> 27318.4768441064, "max" -> 
        27384.25, "min" -> 27261.73|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 12, 22, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-13 02:00:00 UTC", "avg" -> 27398.4467839196, "max" -> 
        27517.96, "min" -> 27298.28|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 12, 23, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-13 03:00:00 UTC", "avg" -> 27404.4089883269, "max" -> 
        27434.01, "min" -> 27364.37|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 13, 0, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-13 04:00:00 UTC", "avg" -> 27383.6204716981, "max" -> 
        27421.86, "min" -> 27360.93|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 13, 1, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-13 05:00:00 UTC", "avg" -> 27407.7823376624, "max" -> 
        27446.86, "min" -> 27370.16|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 13, 2, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-13 06:00:00 UTC", "avg" -> 27391.1198321343, "max" -> 
        27444.47, "min" -> 27333.48|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 13, 3, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-13 07:00:00 UTC", "avg" -> 27354.5529047619, "max" -> 
        27408.4, "min" -> 27328.29|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 13, 4, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-13 08:00:00 UTC", "avg" -> 27376.056460177, "max" -> 
        27500., "min" -> 27296.27|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 13, 5, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-13 09:00:00 UTC", "avg" -> 27470.9787975334, "max" -> 
        27603.2, "min" -> 27379.07|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 13, 6, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-13 10:00:00 UTC", "avg" -> 27430.8771835443, "max" -> 
        27470.2, "min" -> 27381.61|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 13, 7, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-13 11:00:00 UTC", "avg" -> 27428.6526717557, "max" -> 
        27467.51, "min" -> 27400.49|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 13, 8, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-13 12:00:00 UTC", "avg" -> 27416.8606206089, "max" -> 
        27470.95, "min" -> 27336.59|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 13, 9, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-13 13:00:00 UTC", "avg" -> 27391.5368520357, "max" -> 
        27491.83, "min" -> 27295.85|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 13, 10, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-13 14:00:00 UTC", "avg" -> 27464.4066089334, "max" -> 
        27663.91, "min" -> 27300.49|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 13, 11, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-13 15:00:00 UTC", "avg" -> 27557.83761959, "max" -> 
        27718.23, "min" -> 27467.15|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 13, 12, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-13 16:00:00 UTC", "avg" -> 27505.1698899082, "max" -> 
        27601.08, "min" -> 27427.89|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 13, 13, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-13 17:00:00 UTC", "avg" -> 27502.4417510854, "max" -> 
        27565.03, "min" -> 27422.1|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 13, 14, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-13 18:00:00 UTC", "avg" -> 27603.5167732963, "max" -> 
        27665.19, "min" -> 27551.84|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 13, 15, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-13 19:00:00 UTC", "avg" -> 27522.6900396301, "max" -> 
        27596.32, "min" -> 27475.15|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 13, 16, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-13 20:00:00 UTC", "avg" -> 27433.0989228007, "max" -> 
        27503.57, "min" -> 27386.28|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 13, 17, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-13 21:00:00 UTC", "avg" -> 27456.0415512465, "max" -> 
        27494.57, "min" -> 27412.51|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 13, 18, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-13 22:00:00 UTC", "avg" -> 27493.334470339, "max" -> 
        27546.26, "min" -> 27453.22|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 13, 19, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-13 23:00:00 UTC", "avg" -> 27493.0079245283, "max" -> 
        27536.38, "min" -> 27444.06|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 13, 20, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-14 00:00:00 UTC", "avg" -> 27729.997674597, "max" -> 
        27880., "min" -> 27460.68|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 13, 21, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-14 01:00:00 UTC", "avg" -> 27866.0722074789, "max" -> 
        27962.88, "min" -> 27776.46|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 13, 22, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-14 02:00:00 UTC", "avg" -> 27770.4708264463, "max" -> 
        27872.29, "min" -> 27616.14|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 13, 23, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-14 03:00:00 UTC", "avg" -> 27739.5259537572, "max" -> 
        27791.24, "min" -> 27637.94|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 14, 0, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-14 04:00:00 UTC", "avg" -> 27768.8806398105, "max" -> 
        27809.63, "min" -> 27735.56|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 14, 1, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-14 05:00:00 UTC", "avg" -> 27836.0517910448, "max" -> 
        27892.21, "min" -> 27758.62|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 14, 2, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-14 06:00:00 UTC", "avg" -> 27902.9293928571, "max" -> 
        28050.09, "min" -> 27786.25|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 14, 3, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-14 07:00:00 UTC", "avg" -> 27916.0525422139, "max" -> 
        28000.61, "min" -> 27784.61|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 14, 4, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-14 08:00:00 UTC", "avg" -> 27787.5389869282, "max" -> 
        27860.08, "min" -> 27722.27|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 14, 5, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-14 09:00:00 UTC", "avg" -> 27810.9672628305, "max" -> 
        27871.6, "min" -> 27772.46|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 14, 6, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-14 10:00:00 UTC", "avg" -> 27870.9651979346, "max" -> 
        27906.1, "min" -> 27829.25|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 14, 7, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-14 11:00:00 UTC", "avg" -> 27881.9201616379, "max" -> 
        27908.6, "min" -> 27849.69|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 14, 8, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-14 12:00:00 UTC", "avg" -> 27884.8161738003, "max" -> 
        27945., "min" -> 27750.|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 14, 9, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-14 13:00:00 UTC", "avg" -> 27848.9926222537, "max" -> 
        27929.87, "min" -> 27777.82|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 14, 10, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-14 14:00:00 UTC", "avg" -> 27842.3400884956, "max" -> 
        27953.11, "min" -> 27741.13|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 14, 11, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-14 15:00:00 UTC", "avg" -> 27611.2045151034, "max" -> 
        27855.96, "min" -> 27408.2|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 14, 12, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-14 16:00:00 UTC", "avg" -> 27475.2969738031, "max" -> 
        27576.05, "min" -> 27322.65|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 14, 13, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-14 17:00:00 UTC", "avg" -> 27541.2211575179, "max" -> 
        27584.08, "min" -> 27475.55|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 14, 14, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-14 18:00:00 UTC", "avg" -> 27595.2816421569, "max" -> 
        27644.88, "min" -> 27545.05|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 14, 15, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-14 19:00:00 UTC", "avg" -> 27565.0911111111, "max" -> 
        27625.68, "min" -> 27492.82|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 14, 16, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-14 20:00:00 UTC", "avg" -> 27686.8083251834, "max" -> 
        27790.04, "min" -> 27563.6|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 14, 17, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-14 21:00:00 UTC", "avg" -> 27733.2352445652, "max" -> 
        27779.4, "min" -> 27684.3|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 14, 18, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-14 22:00:00 UTC", "avg" -> 27704.5529354839, "max" -> 
        27735.41, "min" -> 27683.65|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 14, 19, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-14 23:00:00 UTC", "avg" -> 27682.8944014084, "max" -> 
        27730.93, "min" -> 27638.42|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 14, 20, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-15 00:00:00 UTC", "avg" -> 27717.4441919192, "max" -> 
        27833.95, "min" -> 27632.5|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 14, 21, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-15 01:00:00 UTC", "avg" -> 27617.9573705179, "max" -> 
        27665.49, "min" -> 27551.17|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 14, 22, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-15 02:00:00 UTC", "avg" -> 27655.0660406091, "max" -> 
        27693.97, "min" -> 27624.52|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 14, 23, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-15 03:00:00 UTC", "avg" -> 27657.3919178082, "max" -> 
        27692.57, "min" -> 27635.82|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 15, 0, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-15 04:00:00 UTC", "avg" -> 27634.7474719101, "max" -> 
        27662.06, "min" -> 27614.38|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 15, 1, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-15 05:00:00 UTC", "avg" -> 27667.8979365079, "max" -> 
        27693.73, "min" -> 27632.21|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 15, 2, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-15 06:00:00 UTC", "avg" -> 27667.6599190283, "max" -> 
        27702.22, "min" -> 27640.26|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 15, 3, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-15 07:00:00 UTC", "avg" -> 27693.1909125475, "max" -> 
        27729.63, "min" -> 27666.55|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 15, 4, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-15 08:00:00 UTC", "avg" -> 27695.6135016835, "max" -> 
        27731.73, "min" -> 27654.92|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 15, 5, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-15 09:00:00 UTC", "avg" -> 27705.6115408805, "max" -> 
        27740.93, "min" -> 27675.69|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 15, 6, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-15 10:00:00 UTC", "avg" -> 27713.06692607, "max" -> 
        27750.86, "min" -> 27688.12|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 15, 7, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-15 11:00:00 UTC", "avg" -> 27691.444537037, "max" -> 
        27719.04, "min" -> 27654.33|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 15, 8, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-15 12:00:00 UTC", "avg" -> 27700.6692307692, "max" -> 
        27734.25, "min" -> 27667.27|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 15, 9, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-15 13:00:00 UTC", "avg" -> 27670.0390740741, "max" -> 
        27727.54, "min" -> 27590.36|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 15, 10, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-15 14:00:00 UTC", "avg" -> 27651.3393253968, "max" -> 
        27671.45, "min" -> 27604.04|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 15, 11, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-15 15:00:00 UTC", "avg" -> 27670.125785124, "max" -> 
        27706.92, "min" -> 27615.17|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 15, 12, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-15 16:00:00 UTC", "avg" -> 27605.3832920354, "max" -> 
        27639.09, "min" -> 27562.71|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 15, 13, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-15 17:00:00 UTC", "avg" -> 27565.1273714286, "max" -> 
        27624.99, "min" -> 27517.53|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 15, 14, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-15 18:00:00 UTC", "avg" -> 27587.8809375, "max" -> 
        27613.54, "min" -> 27548.64|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 15, 15, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-15 19:00:00 UTC", "avg" -> 27600.7030443549, "max" -> 
        27629.71, "min" -> 27531.68|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 15, 16, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-15 20:00:00 UTC", "avg" -> 27595.5626685393, "max" -> 
        27626.65, "min" -> 27555.97|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 15, 17, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-15 21:00:00 UTC", "avg" -> 27571.1191121495, "max" -> 
        27603.68, "min" -> 27537.58|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 15, 18, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-15 22:00:00 UTC", "avg" -> 27617.7729596412, "max" -> 
        27645.45, "min" -> 27550.|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 15, 19, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-15 23:00:00 UTC", "avg" -> 27618.1423369565, "max" -> 
        27651.87, "min" -> 27576.49|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 15, 20, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-16 00:00:00 UTC", "avg" -> 27576.4756626506, "max" -> 
        27598.31, "min" -> 27558.06|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 15, 21, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-16 01:00:00 UTC", "avg" -> 27501.5117571885, "max" -> 
        27563.97, "min" -> 27421.52|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 15, 22, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-16 02:00:00 UTC", "avg" -> 27559.5756589147, "max" -> 
        27581.21, "min" -> 27525.25|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 15, 23, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-16 03:00:00 UTC", "avg" -> 27539.8492792793, "max" -> 
        27559.05, "min" -> 27520.79|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 16, 0, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-16 04:00:00 UTC", "avg" -> 27571.533, "max" -> 
        27598.49, "min" -> 27543.45|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 16, 1, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-16 05:00:00 UTC", "avg" -> 27604.694295302, "max" -> 
        27628.65, "min" -> 27583.86|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 16, 2, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-16 06:00:00 UTC", "avg" -> 27608.9452857143, "max" -> 
        27638.54, "min" -> 27592.74|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 16, 3, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-16 07:00:00 UTC", "avg" -> 27639.7940221402, "max" -> 
        27687.56, "min" -> 27594.38|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 16, 4, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-16 08:00:00 UTC", "avg" -> 27633.6089417989, "max" -> 
        27647.85, "min" -> 27617.3|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 16, 5, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-16 09:00:00 UTC", "avg" -> 27586.4564028777, "max" -> 
        27627.33, "min" -> 27550.|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 16, 6, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-16 10:00:00 UTC", "avg" -> 27561.7648484849, "max" -> 
        27578.13, "min" -> 27545.56|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 16, 7, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-16 11:00:00 UTC", "avg" -> 27557.7325464191, "max" -> 
        27600., "min" -> 27516.13|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 16, 8, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-16 12:00:00 UTC", "avg" -> 27537.0439461883, "max" -> 
        27564.28, "min" -> 27507.7|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 16, 9, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-16 13:00:00 UTC", "avg" -> 27519.9822429906, "max" -> 
        27556.89, "min" -> 27459.31|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 16, 10, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-16 14:00:00 UTC", "avg" -> 27573.1408598726, "max" -> 
        27606.46, "min" -> 27536.42|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 16, 11, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-16 15:00:00 UTC", "avg" -> 27621.0512827226, "max" -> 
        27647., "min" -> 27585.43|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 16, 12, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-16 16:00:00 UTC", "avg" -> 27597.098278481, "max" -> 
        27627.73, "min" -> 27559.69|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 16, 13, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-16 17:00:00 UTC", "avg" -> 27607.8212979351, "max" -> 
        27650., "min" -> 27584.07|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 16, 14, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-16 18:00:00 UTC", "avg" -> 27624.4025, "max" -> 
        27739.4, "min" -> 27585.86|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 16, 15, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-16 19:00:00 UTC", "avg" -> 27717.3329450262, "max" -> 
        27794.43, "min" -> 27561.03|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 16, 16, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-16 20:00:00 UTC", "avg" -> 27605.5659137577, "max" -> 
        27684.23, "min" -> 27484.51|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 16, 17, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-16 21:00:00 UTC", "avg" -> 27608.8876626506, "max" -> 
        27664., "min" -> 27548.68|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 16, 18, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-16 22:00:00 UTC", "avg" -> 27625.8476633663, "max" -> 
        27691.16, "min" -> 27594.3|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 16, 19, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-16 23:00:00 UTC", "avg" -> 27601.9102183406, "max" -> 
        27644.42, "min" -> 27558.57|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 16, 20, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-17 00:00:00 UTC", "avg" -> 27342.7558094435, "max" -> 
        27611.72, "min" -> 27153.12|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 16, 21, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-17 01:00:00 UTC", "avg" -> 27307.877505071, "max" -> 
        27372.85, "min" -> 27127.44|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 16, 22, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-17 02:00:00 UTC", "avg" -> 27339.0083180428, "max" -> 
        27441.99, "min" -> 27272.51|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 16, 23, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-17 03:00:00 UTC", "avg" -> 27349.3151282051, "max" -> 
        27377.95, "min" -> 27298.71|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 17, 0, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-17 04:00:00 UTC", "avg" -> 27308.970882353, "max" -> 
        27339.68, "min" -> 27262.02|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 17, 1, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-17 05:00:00 UTC", "avg" -> 27302.3821754386, "max" -> 
        27338.49, "min" -> 27274.94|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 17, 2, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-17 06:00:00 UTC", "avg" -> 27271.8614626866, "max" -> 
        27327.71, "min" -> 27219.|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 17, 3, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-17 07:00:00 UTC", "avg" -> 27204.3812669684, "max" -> 
        27245.03, "min" -> 27150.|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 17, 4, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-17 08:00:00 UTC", "avg" -> 27217.235, "max" -> 
        27279.2, "min" -> 27137.|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 17, 5, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-17 09:00:00 UTC", "avg" -> 27264.5578654593, "max" -> 
        27301.39, "min" -> 27200.|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 17, 6, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-17 10:00:00 UTC", "avg" -> 27210.9423443983, "max" -> 
        27255.95, "min" -> 27128.35|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 17, 7, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-17 11:00:00 UTC", "avg" -> 26978.8328338368, "max" -> 
        27244.9, "min" -> 26638.48|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 17, 8, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-17 12:00:00 UTC", "avg" -> 26914.4545465116, "max" -> 
        26991.27, "min" -> 26864.31|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 17, 9, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-17 13:00:00 UTC", "avg" -> 26888.4494209809, "max" -> 
        26983.06, "min" -> 26755.|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 17, 10, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-17 14:00:00 UTC", "avg" -> 26947.2298101266, "max" -> 
        27000., "min" -> 26872.6|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 17, 11, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-17 15:00:00 UTC", "avg" -> 26915.6103894298, "max" -> 
        27004.76, "min" -> 26793.51|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 17, 12, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-17 16:00:00 UTC", "avg" -> 26967.5106891496, "max" -> 
        27028.74, "min" -> 26890.96|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 17, 13, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-17 17:00:00 UTC", "avg" -> 27015.8626935483, "max" -> 
        27062.28, "min" -> 26986.43|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 17, 14, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-17 18:00:00 UTC", "avg" -> 27029.6033290323, "max" -> 
        27090.96, "min" -> 26980.1|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 17, 15, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-17 19:00:00 UTC", "avg" -> 27029.8715764706, "max" -> 
        27087.39, "min" -> 26973.29|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 17, 16, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-17 20:00:00 UTC", "avg" -> 26984.4254681648, "max" -> 
        27009.92, "min" -> 26943.03|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 17, 17, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-17 21:00:00 UTC", "avg" -> 26963.1744772118, "max" -> 
        26984.63, "min" -> 26914.|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 17, 18, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-17 22:00:00 UTC", "avg" -> 27007.5250684931, "max" -> 
        27042.8, "min" -> 26963.95|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 17, 19, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-17 23:00:00 UTC", "avg" -> 26983.3154008439, "max" -> 
        27028.22, "min" -> 26922.92|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 17, 20, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-18 00:00:00 UTC", "avg" -> 26893.2296875, "max" -> 
        26972.1, "min" -> 26809.99|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 17, 21, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-18 01:00:00 UTC", "avg" -> 26795.9009833795, "max" -> 
        26918.26, "min" -> 26650.|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 17, 22, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-18 02:00:00 UTC", "avg" -> 26939.6809818182, "max" -> 
        26989.4, "min" -> 26881.5|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 17, 23, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-18 03:00:00 UTC", "avg" -> 26959.7092028985, "max" -> 
        26988.23, "min" -> 26938.53|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 18, 0, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-18 04:00:00 UTC", "avg" -> 26971.4946774193, "max" -> 
        27005.77, "min" -> 26936.32|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 18, 1, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-18 05:00:00 UTC", "avg" -> 27020.4268347339, "max" -> 
        27077., "min" -> 26983.28|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 18, 2, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-18 06:00:00 UTC", "avg" -> 27111.3685907336, "max" -> 
        27199.49, "min" -> 27005.82|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 18, 3, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-18 07:00:00 UTC", "avg" -> 27142.0834891676, "max" -> 
        27184.7, "min" -> 27100.|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 18, 4, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-18 08:00:00 UTC", "avg" -> 27110.6956007394, "max" -> 
        27195.24, "min" -> 27058.56|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 18, 5, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-18 09:00:00 UTC", "avg" -> 27188.3665602322, "max" -> 
        27310.26, "min" -> 27065.91|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 18, 6, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-18 10:00:00 UTC", "avg" -> 27262.2900167224, "max" -> 
        27328.74, "min" -> 27228.14|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 18, 7, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-18 11:00:00 UTC", "avg" -> 27488.6869420784, "max" -> 
        27714.25, "min" -> 27237.03|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 18, 8, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-18 12:00:00 UTC", "avg" -> 27715.9576485788, "max" -> 
        27781.86, "min" -> 27633.28|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 18, 9, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-18 13:00:00 UTC", "avg" -> 27696.4555420219, "max" -> 
        27766.48, "min" -> 27631.87|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 18, 10, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-18 14:00:00 UTC", "avg" -> 27581.3831414268, "max" -> 
        27732.13, "min" -> 27476.57|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 18, 11, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-18 15:00:00 UTC", "avg" -> 27523.9286573427, "max" -> 
        27624.06, "min" -> 27452.9|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 18, 12, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-18 16:00:00 UTC", "avg" -> 27574.3823728814, "max" -> 
        27610.81, "min" -> 27519.|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 18, 13, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-18 17:00:00 UTC", "avg" -> 27523.15323741, "max" -> 
        27592.48, "min" -> 27374.46|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 18, 14, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-18 18:00:00 UTC", "avg" -> 27462.0145565006, "max" -> 
        27600.15, "min" -> 27330.|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 18, 15, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-18 19:00:00 UTC", "avg" -> 27515.2537826087, "max" -> 
        27570.62, "min" -> 27456.25|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 18, 16, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-18 20:00:00 UTC", "avg" -> 27615.5289862543, "max" -> 
        27759., "min" -> 27489.84|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 18, 17, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-18 21:00:00 UTC", "avg" -> 27669.6159160305, "max" -> 
        27750., "min" -> 27600.23|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 18, 18, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-18 22:00:00 UTC", "avg" -> 27652.5436809816, "max" -> 
        27706.22, "min" -> 27613.94|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 18, 19, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-18 23:00:00 UTC", "avg" -> 27663.7776397516, "max" -> 
        27714.52, "min" -> 27623.06|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 18, 20, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-19 00:00:00 UTC", "avg" -> 27648.6190282132, "max" -> 
        27721.95, "min" -> 27602.29|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 18, 21, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-19 01:00:00 UTC", "avg" -> 27601.2333333333, "max" -> 
        27645.41, "min" -> 27540.6|>}, "AllowEmbedding" -> True, 
     "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "Symbol"} -> 
        1, {All, "DateObject"} -> 1, {All, "Time"} -> 1, {All, "avg"} -> 
        1, {All, "max"} -> 1, {All, "min"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "Symbol" -> TypeSystem`PackageScope`AtomShape[31.5], "DateObject" -> 
            TypeSystem`PackageScope`AtomShape[75], "Time" -> 
            TypeSystem`PackageScope`AtomShape[257.6], "avg" -> 
            TypeSystem`PackageScope`AtomShape[60], "max" -> 
            TypeSystem`PackageScope`AtomShape[60], "min" -> 
            TypeSystem`PackageScope`AtomShape[60]|>], 
          DirectedInfinity[1], 6, {All}]], 20, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "Symbol", "DateObject", "Time", "avg", "max", "min"}, {
         TypeSystem`Atom[
          TypeSystem`Enumeration["BTC"]], 
         TypeSystem`Atom[DateObject], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real]}], 719], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "Symbol"} -> 
        1, {All, "DateObject"} -> 1, {All, "Time"} -> 1, {All, "avg"} -> 
        1, {All, "max"} -> 1, {All, "min"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "Symbol" -> TypeSystem`PackageScope`AtomShape[31.5], "DateObject" -> 
            TypeSystem`PackageScope`AtomShape[75], "Time" -> 
            TypeSystem`PackageScope`AtomShape[257.6], "avg" -> 
            TypeSystem`PackageScope`AtomShape[60], "max" -> 
            TypeSystem`PackageScope`AtomShape[60], "min" -> 
            TypeSystem`PackageScope`AtomShape[60]|>], 
          DirectedInfinity[1], 6, {All}]], 20, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "Symbol", "DateObject", "Time", "avg", "max", "min"}, {
         TypeSystem`Atom[
          TypeSystem`Enumeration["BTC"]], 
         TypeSystem`Atom[DateObject], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real]}], 719], "Path" -> {}, "DisplayedRowCount" -> 
     20, "DisplayedColumnCount" -> 6, "DataRowCount" -> 719, 
     "DataColumnCount" -> 6, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Symbol", 
                  Style[
                  "Symbol", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Symbol"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Symbol"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["DateObject", 
                  Style[
                  "DateObject", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "DateObject"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "DateObject"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Time", 
                  Style[
                  "Time", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Time"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Time"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["avg", 
                  Style[
                  "avg", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "avg"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "avg"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["max", 
                  Style[
                  "max", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "max"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "max"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["min", 
                  Style[
                  "min", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "min"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "min"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation["BTC", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Sun 19 Mar 2023 23:00:00\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["DateObject"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2023-03-20 03:00:00 UTC", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Time"]}, "Item", False], "Mouse"], 
              ImageSize -> {{257.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25646.3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["avg"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25827.4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["max"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25501.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["min"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["BTC", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Mon 20 Mar 2023 00:00:00\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["DateObject"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2023-03-20 04:00:00 UTC", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Time"]}, "Item", False], "Mouse"], 
              ImageSize -> {{257.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25743.3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["avg"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25813.7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["max"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25537.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["min"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["BTC", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Mon 20 Mar 2023 01:00:00\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["DateObject"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2023-03-20 05:00:00 UTC", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Time"]}, "Item", False], "Mouse"], 
              ImageSize -> {{257.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25786.3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["avg"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25860.9"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["max"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25711.9"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["min"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["BTC", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Mon 20 Mar 2023 02:00:00\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["DateObject"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2023-03-20 06:00:00 UTC", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Time"]}, "Item", False], "Mouse"], 
              ImageSize -> {{257.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25929.3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["avg"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["26086.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["max"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25843.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["min"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["BTC", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Mon 20 Mar 2023 03:00:00\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["DateObject"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2023-03-20 07:00:00 UTC", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Time"]}, "Item", False], "Mouse"], 
              ImageSize -> {{257.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["26308.3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["avg"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["26591.5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["max"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["26009.4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["min"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["BTC", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Mon 20 Mar 2023 04:00:00\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["DateObject"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2023-03-20 08:00:00 UTC", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Time"]}, "Item", False], "Mouse"], 
              ImageSize -> {{257.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["26588.2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["avg"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["26794.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["max"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["26394.3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["min"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["BTC", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Mon 20 Mar 2023 05:00:00\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["DateObject"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2023-03-20 09:00:00 UTC", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Time"]}, "Item", False], "Mouse"], 
              ImageSize -> {{257.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["26554.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["avg"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["26791.9"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["max"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["26373.4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["min"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["BTC", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Mon 20 Mar 2023 06:00:00\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["DateObject"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2023-03-20 10:00:00 UTC", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Time"]}, "Item", False], "Mouse"], 
              ImageSize -> {{257.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["26385.9"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["avg"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["26527.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["max"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["26240.7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["min"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["BTC", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Mon 20 Mar 2023 07:00:00\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["DateObject"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2023-03-20 11:00:00 UTC", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Time"]}, "Item", False], "Mouse"], 
              ImageSize -> {{257.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["26419.5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["avg"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["26500.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["max"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["26304.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["min"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["BTC", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Mon 20 Mar 2023 08:00:00\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["DateObject"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2023-03-20 12:00:00 UTC", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Time"]}, "Item", False], "Mouse"], 
              ImageSize -> {{257.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["26396.2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["avg"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["26481.5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["max"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["26313.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["min"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["BTC", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Mon 20 Mar 2023 09:00:00\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["DateObject"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2023-03-20 13:00:00 UTC", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Time"]}, "Item", False], "Mouse"], 
              ImageSize -> {{257.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["26130.4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["avg"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["26458.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["max"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25939.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["min"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["BTC", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Mon 20 Mar 2023 10:00:00\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["DateObject"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2023-03-20 14:00:00 UTC", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Time"]}, "Item", False], "Mouse"], 
              ImageSize -> {{257.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["26161.4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["avg"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["26322.1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["max"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["26005.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["min"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["BTC", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Mon 20 Mar 2023 11:00:00\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["DateObject"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2023-03-20 15:00:00 UTC", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Time"]}, "Item", False], "Mouse"], 
              ImageSize -> {{257.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["26101.7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["avg"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["26287.9"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["max"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25849.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["min"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["BTC", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Mon 20 Mar 2023 12:00:00\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["DateObject"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2023-03-20 16:00:00 UTC", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Time"]}, "Item", False], "Mouse"], 
              ImageSize -> {{257.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25821.6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["avg"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25962.1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["max"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25700.1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["min"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["BTC", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Mon 20 Mar 2023 13:00:00\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["DateObject"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2023-03-20 17:00:00 UTC", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Time"]}, "Item", False], "Mouse"], 
              ImageSize -> {{257.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25892.2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["avg"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["26012.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["max"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25736.4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["min"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["BTC", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Mon 20 Mar 2023 14:00:00\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["DateObject"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2023-03-20 18:00:00 UTC", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Time"]}, "Item", False], "Mouse"], 
              ImageSize -> {{257.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["26046.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["avg"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["26224.7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["max"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25826.3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["min"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["BTC", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Mon 20 Mar 2023 15:00:00\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["DateObject"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2023-03-20 19:00:00 UTC", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["Time"]}, "Item", False], "Mouse"], 
              ImageSize -> {{257.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["26024.3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["avg"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["26192.3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["max"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25872.1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["min"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["BTC", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Mon 20 Mar 2023 16:00:00\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["DateObject"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2023-03-20 20:00:00 UTC", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["Time"]}, "Item", False], "Mouse"], 
              ImageSize -> {{257.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["26101.2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["avg"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["26214.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["max"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25960.1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["min"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["BTC", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Mon 20 Mar 2023 17:00:00\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["DateObject"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2023-03-20 21:00:00 UTC", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["Time"]}, "Item", False], "Mouse"], 
              ImageSize -> {{257.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["26252.5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["avg"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["26364.3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["max"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["26131.6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["min"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["BTC", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Mon 20 Mar 2023 18:00:00\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["DateObject"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2023-03-20 22:00:00 UTC", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["Time"]}, "Item", False], "Mouse"], 
              ImageSize -> {{257.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["26127.7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["avg"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["26230.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["max"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["26050.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["min"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[True, 719, 1], {1, 719 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[False, 719, 1], {1, 719 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[719, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[719, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 719, 1], {1, 719 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 719, 1], {1, 719 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
               ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{700., {300.8544921875, 306.1455078125}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{700., {300.8544921875, 306.1455078125}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8908585315960627`*^9},
 CellLabel->"Out[121]=",
 CellID->1097975159,ExpressionUUID->"418bc317-c967-48c1-966e-6d384a4c9feb"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Here is a summary:", "Text",
 CellChangeTimes->{{3.833105145171947*^9, 3.833105149199575*^9}},
 CellID->1496092177,ExpressionUUID->"d7296905-7908-427b-9703-9ac388a75ba8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<RecordsSummary\>\"", "]"}], "[", 
  "dsBTCPriceData", "]"}]], "Input",
 CellChangeTimes->{{3.8331051313032427`*^9, 3.833105138877666*^9}},
 CellLabel->"In[122]:=",
 CellID->2082679763,ExpressionUUID->"035899ee-f043-4ac0-ac75-951e867a6f25"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[GridBox[{
      {
       StyleBox["\<\"1 Symbol\"\>",
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontFamily->"Times",
        FontColor->RGBColor[0, 0, 1]]},
      {
       TagBox[GridBox[{
          {"\<\"BTC\"\>", "719"}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"], ",", 
   TagBox[GridBox[{
      {
       StyleBox["\<\"2 DateObject\"\>",
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontFamily->"Times",
        FontColor->RGBColor[0, 0, 1]]},
      {
       TagBox[GridBox[{
          {"\<\"Min\"\>", 
           TemplateBox[{
             RowBox[{"\"Sun 19 Mar 2023 23:00:00\"", 
               StyleBox[
                RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
                  StyleBox[
                   RowBox[{"-", "4"}], NumberMarks -> False, StripOnInput -> 
                   False]}], FontColor -> GrayLevel[0.5]]}], 
             RowBox[{"DateObject", "[", 
               RowBox[{
                 RowBox[{"{", 
                   
                   RowBox[{
                    "2023", ",", "3", ",", "19", ",", "23", ",", "0", ",", 
                    "0.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", 
                 ",", 
                 RowBox[{"-", "4.`"}]}], "]"}]},
            "DateObject",
            Editable->False]},
          {"\<\"1st Qu\"\>", 
           TemplateBox[{
             RowBox[{"\"Mon 27 Mar 2023 10:15:00\"", 
               StyleBox[
                RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
                  StyleBox[
                   RowBox[{"-", "4"}], NumberMarks -> False, StripOnInput -> 
                   False]}], FontColor -> GrayLevel[0.5]]}], 
             RowBox[{"DateObject", "[", 
               RowBox[{
                 RowBox[{"{", 
                   
                   RowBox[{
                    "2023", ",", "3", ",", "27", ",", "10", ",", "15", ",", 
                    "0.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", 
                 ",", 
                 RowBox[{"-", "4.`"}]}], "]"}]},
            "DateObject",
            Editable->False]},
          {"\<\"Mean\"\>", 
           TemplateBox[{
             RowBox[{"\"Mon 3 Apr 2023 22:00:00\"", 
               StyleBox[
                RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
                  StyleBox[
                   RowBox[{"-", "4"}], NumberMarks -> False, StripOnInput -> 
                   False]}], FontColor -> GrayLevel[0.5]]}], 
             RowBox[{"DateObject", "[", 
               RowBox[{
                 RowBox[{"{", 
                   
                   RowBox[{
                    "2023", ",", "4", ",", "3", ",", "22", ",", "0", ",", 
                    "0.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", 
                 ",", 
                 RowBox[{"-", "4.`"}]}], "]"}]},
            "DateObject",
            Editable->False]},
          {"\<\"Median\"\>", 
           TemplateBox[{
             RowBox[{"\"Mon 3 Apr 2023 22:00:00\"", 
               StyleBox[
                RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
                  StyleBox[
                   RowBox[{"-", "4"}], NumberMarks -> False, StripOnInput -> 
                   False]}], FontColor -> GrayLevel[0.5]]}], 
             RowBox[{"DateObject", "[", 
               RowBox[{
                 RowBox[{"{", 
                   
                   RowBox[{
                    "2023", ",", "4", ",", "3", ",", "22", ",", "0", ",", 
                    "0.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", 
                 ",", 
                 RowBox[{"-", "4.`"}]}], "]"}]},
            "DateObject",
            Editable->False]},
          {"\<\"3rd Qu\"\>", 
           TemplateBox[{
             RowBox[{"\"Tue 11 Apr 2023 09:45:00\"", 
               StyleBox[
                RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
                  StyleBox[
                   RowBox[{"-", "4"}], NumberMarks -> False, StripOnInput -> 
                   False]}], FontColor -> GrayLevel[0.5]]}], 
             RowBox[{"DateObject", "[", 
               RowBox[{
                 RowBox[{"{", 
                   
                   RowBox[{
                    "2023", ",", "4", ",", "11", ",", "9", ",", "45", ",", 
                    "0.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", 
                 ",", 
                 RowBox[{"-", "4.`"}]}], "]"}]},
            "DateObject",
            Editable->False]},
          {"\<\"Max\"\>", 
           TemplateBox[{
             RowBox[{"\"Tue 18 Apr 2023 21:00:00\"", 
               StyleBox[
                RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
                  StyleBox[
                   RowBox[{"-", "4"}], NumberMarks -> False, StripOnInput -> 
                   False]}], FontColor -> GrayLevel[0.5]]}], 
             RowBox[{"DateObject", "[", 
               RowBox[{
                 RowBox[{"{", 
                   
                   RowBox[{
                    "2023", ",", "4", ",", "18", ",", "21", ",", "0", ",", 
                    "0.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", 
                 ",", 
                 RowBox[{"-", "4.`"}]}], "]"}]},
            "DateObject",
            Editable->False]}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"], ",", 
   TagBox[GridBox[{
      {
       StyleBox["\<\"3 Time\"\>",
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontFamily->"Times",
        FontColor->RGBColor[0, 0, 1]]},
      {
       TagBox[GridBox[{
          {"\<\"2023-03-20 03:00:00 UTC\"\>", "1"},
          {"\<\"2023-03-20 04:00:00 UTC\"\>", "1"},
          {"\<\"2023-03-20 05:00:00 UTC\"\>", "1"},
          {"\<\"2023-03-20 06:00:00 UTC\"\>", "1"},
          {"\<\"2023-03-20 07:00:00 UTC\"\>", "1"},
          {"\<\"2023-03-20 08:00:00 UTC\"\>", "1"},
          {"\<\"(Other)\"\>", "713"}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"], ",", 
   TagBox[GridBox[{
      {
       StyleBox["\<\"4 avg\"\>",
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontFamily->"Times",
        FontColor->RGBColor[0, 0, 1]]},
      {
       TagBox[GridBox[{
          {"\<\"Min\"\>", "24758.4134477211`"},
          {"\<\"1st Qu\"\>", "25698.222383025375`"},
          {"\<\"Median\"\>", "26054.058028169`"},
          {"\<\"Mean\"\>", "26285.52964319963`"},
          {"\<\"3rd Qu\"\>", "27019.2857994375`"},
          {"\<\"Max\"\>", "27916.0525422139`"}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"], ",", 
   TagBox[GridBox[{
      {
       StyleBox["\<\"5 max\"\>",
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontFamily->"Times",
        FontColor->RGBColor[0, 0, 1]]},
      {
       TagBox[GridBox[{
          {"\<\"Min\"\>", "24840.17`"},
          {"\<\"1st Qu\"\>", "25761.6725`"},
          {"\<\"Median\"\>", "26152.1`"},
          {"\<\"Mean\"\>", "26369.093671766335`"},
          {"\<\"3rd Qu\"\>", "27084.7925`"},
          {"\<\"Max\"\>", "28050.09`"}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"], ",", 
   TagBox[GridBox[{
      {
       StyleBox["\<\"6 min\"\>",
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontFamily->"Times",
        FontColor->RGBColor[0, 0, 1]]},
      {
       TagBox[GridBox[{
          {"\<\"Min\"\>", "24550.`"},
          {"\<\"1st Qu\"\>", "25622.38`"},
          {"\<\"Median\"\>", "25955.82`"},
          {"\<\"Mean\"\>", "26197.716383866493`"},
          {"\<\"3rd Qu\"\>", "26970.955`"},
          {"\<\"Max\"\>", "27849.69`"}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"]}], "}"}]], "Output",
 CellChangeTimes->{3.8908585318102016`*^9},
 CellLabel->"Out[122]=",
 CellID->341518642,ExpressionUUID->"8c0f045a-007b-4a90-b628-0e7919591230"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Volume data", "Subsubsection",
 CellChangeTimes->{{3.833104397248981*^9, 3.8331044007480927`*^9}},
 CellID->1762814288,ExpressionUUID->"dda96302-35b9-419e-8490-54fae9cb0acf"],

Cell[CellGroupData[{

Cell["\<\
Here we retrieve data by overwriting the parameters for data type, time unit, \
time span, and exchange:\
\>", "Text",
 CellChangeTimes->{{3.833102811737059*^9, 3.833102879576097*^9}, {
  3.833105420138344*^9, 3.833105423185875*^9}, {3.833105564589279*^9, 
  3.8331055679528217`*^9}},
 CellID->935344404,ExpressionUUID->"dedd2245-5822-41f1-8f9f-c1f5809c05cd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Print", "@", 
  RowBox[{"stDBOURL", "[", 
   RowBox[{"Join", "[", 
    RowBox[{"aDBODefaultParameters", ",", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<dataType\>\"", "->", "Volume"}], ",", 
       RowBox[{"\"\<timeUnit\>\"", "->", "\"\<day\>\""}], ",", 
       RowBox[{"\"\<timeSpan\>\"", "->", "\"\<30d\>\""}], ",", 
       RowBox[{"\"\<exchange\>\"", "->", "\"\<coinbase\>\""}]}], "|>"}]}], 
    "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8332087234735737`*^9, 3.833208724508144*^9}},
 CellLabel->"In[123]:=",
 CellID->753101988,ExpressionUUID->"dda70e13-e450-4d80-bbfd-4d1f1ac6bb34"],

Cell[BoxData["\<\"https://data.bitcoinity.org/export_data.csv?currency=USD&\
data_type=Volume&exchange=coinbase&r=day&t=l&timespan=30d\"\>"], "Print",
 CellChangeTimes->{3.890858531835368*^9},
 CellLabel->"During evaluation of In[123]:=",
 CellID->1827511310,ExpressionUUID->"472b70f2-05c2-4449-b791-dc8428eb5ae7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<ImportCSVToDataset\>\"", "]"}], "[", 
  RowBox[{"stDBOURL", "[", 
   RowBox[{"Join", "[", 
    RowBox[{"aDBODefaultParameters", ",", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<dataType\>\"", "->", "Volume"}], ",", 
       RowBox[{"\"\<timeUnit\>\"", "->", "\"\<day\>\""}], ",", 
       RowBox[{"\"\<timeSpan\>\"", "->", "\"\<30d\>\""}], ",", 
       RowBox[{"\"\<exchange\>\"", "->", "\"\<coinbase\>\""}]}], "|>"}]}], 
    "]"}], "]"}], "]"}]], "Input",
 CellLabel->"In[124]:=",
 CellID->116496898,ExpressionUUID->"eb174d1e-5c39-4559-8094-d2b29cb2ff88"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|
       "Time" -> "2023-03-20 00:00:00 UTC", "" -> 22852.9906178095|>, <|
       "Time" -> "2023-03-21 00:00:00 UTC", "" -> 16193.1892488196|>, <|
       "Time" -> "2023-03-22 00:00:00 UTC", "" -> 33862.8650133317|>, <|
       "Time" -> "2023-03-23 00:00:00 UTC", "" -> 26698.2966016498|>, <|
       "Time" -> "2023-03-24 00:00:00 UTC", "" -> 22190.9129262296|>, <|
       "Time" -> "2023-03-25 00:00:00 UTC", "" -> 9655.94945539995|>, <|
       "Time" -> "2023-03-26 00:00:00 UTC", "" -> 9800.6429944099|>, <|
       "Time" -> "2023-03-27 00:00:00 UTC", "" -> 17268.16335715|>, <|
       "Time" -> "2023-03-28 00:00:00 UTC", "" -> 14103.9291911497|>, <|
       "Time" -> "2023-03-29 00:00:00 UTC", "" -> 17710.8595856993|>, <|
       "Time" -> "2023-03-30 00:00:00 UTC", "" -> 20972.4392403699|>, <|
       "Time" -> "2023-03-31 00:00:00 UTC", "" -> 18917.3621470994|>, <|
       "Time" -> "2023-04-01 00:00:00 UTC", "" -> 6988.04239656997|>, <|
       "Time" -> "2023-04-02 00:00:00 UTC", "" -> 6707.97702983996|>, <|
       "Time" -> "2023-04-03 00:00:00 UTC", "" -> 16192.0370214096|>, <|
       "Time" -> "2023-04-04 00:00:00 UTC", "" -> 13261.9502531697|>, <|
       "Time" -> "2023-04-05 00:00:00 UTC", "" -> 15066.7244952896|>, <|
       "Time" -> "2023-04-06 00:00:00 UTC", "" -> 10291.8064609698|>, <|
       "Time" -> "2023-04-07 00:00:00 UTC", "" -> 5847.77200458005|>, <|
       "Time" -> "2023-04-08 00:00:00 UTC", "" -> 3854.33490363003|>, <|
       "Time" -> "2023-04-09 00:00:00 UTC", "" -> 6136.42862289999|>, <|
       "Time" -> "2023-04-10 00:00:00 UTC", "" -> 15752.3041878198|>, <|
       "Time" -> "2023-04-11 00:00:00 UTC", "" -> 18637.2215781193|>, <|
       "Time" -> "2023-04-12 00:00:00 UTC", "" -> 14961.0840321896|>, <|
       "Time" -> "2023-04-13 00:00:00 UTC", "" -> 12505.2727411496|>, <|
       "Time" -> "2023-04-14 00:00:00 UTC", "" -> 19770.2804788191|>, <|
       "Time" -> "2023-04-15 00:00:00 UTC", "" -> 5486.7222394|>, <|
       "Time" -> "2023-04-16 00:00:00 UTC", "" -> 6230.24911461|>, <|
       "Time" -> "2023-04-17 00:00:00 UTC", "" -> 13418.0380445999|>, <|
       "Time" -> "2023-04-18 00:00:00 UTC", "" -> 12649.5221744598|>}, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "Time"} -> 1, {All, ""} -> 
        1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "Time" -> TypeSystem`PackageScope`AtomShape[257.6], "" -> 
            TypeSystem`PackageScope`AtomShape[60]|>], 
          DirectedInfinity[1], 2, {All}]], 20, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Time", ""}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Real]}], 30], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "Time"} -> 1, {All, ""} -> 
        1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "Time" -> TypeSystem`PackageScope`AtomShape[257.6], "" -> 
            TypeSystem`PackageScope`AtomShape[60]|>], 
          DirectedInfinity[1], 2, {All}]], 20, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Time", ""}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Real]}], 30], "Path" -> {}, "DisplayedRowCount" -> 
     20, "DisplayedColumnCount" -> 2, "DataRowCount" -> 30, "DataColumnCount" -> 
     2, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Time", 
                  Style[
                  "Time", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Time"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Time"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["", 
                  Style[
                  "", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, ""}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{All, ""}, 
                "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation["2023-03-20 00:00:00 UTC", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Time"]}, "Item", False], "Mouse"], 
              ImageSize -> {{257.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["22853.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key[""]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["2023-03-21 00:00:00 UTC", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Time"]}, "Item", False], "Mouse"], 
              ImageSize -> {{257.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["16193.2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key[""]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["2023-03-22 00:00:00 UTC", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Time"]}, "Item", False], "Mouse"], 
              ImageSize -> {{257.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["33862.9"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key[""]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["2023-03-23 00:00:00 UTC", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Time"]}, "Item", False], "Mouse"], 
              ImageSize -> {{257.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["26698.3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key[""]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["2023-03-24 00:00:00 UTC", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Time"]}, "Item", False], "Mouse"], 
              ImageSize -> {{257.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["22190.9"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key[""]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["2023-03-25 00:00:00 UTC", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Time"]}, "Item", False], "Mouse"], 
              ImageSize -> {{257.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["9655.95"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key[""]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["2023-03-26 00:00:00 UTC", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Time"]}, "Item", False], "Mouse"], 
              ImageSize -> {{257.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["9800.64"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key[""]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["2023-03-27 00:00:00 UTC", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Time"]}, "Item", False], "Mouse"], 
              ImageSize -> {{257.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["17268.2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key[""]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["2023-03-28 00:00:00 UTC", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Time"]}, "Item", False], "Mouse"], 
              ImageSize -> {{257.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["14103.9"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key[""]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["2023-03-29 00:00:00 UTC", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Time"]}, "Item", False], "Mouse"], 
              ImageSize -> {{257.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["17710.9"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key[""]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["2023-03-30 00:00:00 UTC", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Time"]}, "Item", False], "Mouse"], 
              ImageSize -> {{257.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20972.4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key[""]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["2023-03-31 00:00:00 UTC", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Time"]}, "Item", False], "Mouse"], 
              ImageSize -> {{257.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["18917.4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key[""]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["2023-04-01 00:00:00 UTC", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Time"]}, "Item", False], "Mouse"], 
              ImageSize -> {{257.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6988.04"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key[""]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["2023-04-02 00:00:00 UTC", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Time"]}, "Item", False], "Mouse"], 
              ImageSize -> {{257.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6707.98"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key[""]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["2023-04-03 00:00:00 UTC", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Time"]}, "Item", False], "Mouse"], 
              ImageSize -> {{257.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["16192.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key[""]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["2023-04-04 00:00:00 UTC", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Time"]}, "Item", False], "Mouse"], 
              ImageSize -> {{257.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["13262.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key[""]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["2023-04-05 00:00:00 UTC", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["Time"]}, "Item", False], "Mouse"], 
              ImageSize -> {{257.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["15066.7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key[""]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["2023-04-06 00:00:00 UTC", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["Time"]}, "Item", False], "Mouse"], 
              ImageSize -> {{257.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10291.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key[""]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["2023-04-07 00:00:00 UTC", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["Time"]}, "Item", False], "Mouse"], 
              ImageSize -> {{257.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5847.77"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key[""]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["2023-04-08 00:00:00 UTC", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["Time"]}, "Item", False], "Mouse"], 
              ImageSize -> {{257.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3854.33"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key[""]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[True, 30, 1], {1, 30 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[False, 30, 1], {1, 30 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[30, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[30, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 30, 1], {1, 30 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 30, 1], {1, 30 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
               ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{354., {300.8544921875, 306.1455078125}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{354., {300.8544921875, 306.1455078125}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8908585320726213`*^9},
 CellLabel->"Out[124]=",
 CellID->1671467776,ExpressionUUID->"be8bad32-7c64-4e8b-b155-c3a77a34f7e5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"dsBTCVolumeData", "=", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ResourceFunction", "[", "\"\<ImportCSVToDataset\>\"", "]"}], "[", 
    RowBox[{"stDBOURL", "[", 
     RowBox[{"Join", "[", 
      RowBox[{"aDBODefaultParameters", ",", 
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"\"\<dataType\>\"", "->", "Volume"}], ",", 
         RowBox[{"\"\<timeUnit\>\"", "->", "\"\<day\>\""}], ",", 
         RowBox[{"\"\<timeSpan\>\"", "->", "\"\<30d\>\""}], ",", 
         RowBox[{"\"\<exchange\>\"", "->", "\"\<coinbase\>\""}]}], "|>"}]}], 
      "]"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"dsBTCVolumeData", "=", 
  RowBox[{"dsBTCVolumeData", "[", 
   RowBox[{"All", ",", 
    RowBox[{
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"\"\<Symbol\>\"", "->", "\"\<BTC\>\""}], ",", 
         RowBox[{"\"\<DateObject\>\"", "->", 
          RowBox[{"DateObject", "[", "#Time", "]"}]}]}], "|>"}], ",", "#"}], 
      "]"}], "&"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.833102103804606*^9, 3.8331021752086363`*^9}, {
   3.833102209549994*^9, 3.833102227804294*^9}, {3.833102269925218*^9, 
   3.83310228097305*^9}, {3.83310234432191*^9, 3.833102344435885*^9}, {
   3.833102381381783*^9, 3.833102388300741*^9}, {3.833102504796914*^9, 
   3.833102529198987*^9}, {3.833102598692897*^9, 3.833102617337723*^9}, {
   3.833102676166635*^9, 3.833102699336241*^9}, 3.8331028047972317`*^9, {
   3.833102898793097*^9, 3.8331029328914423`*^9}, {3.8331043810506763`*^9, 
   3.833104421121648*^9}, {3.83310472823422*^9, 3.833104738302588*^9}, {
   3.833120770868443*^9, 3.833120776859579*^9}, {3.8332086719279633`*^9, 
   3.83320867426581*^9}},
 CellLabel->"In[125]:=",
 CellID->1605762269,ExpressionUUID->"5f155342-ea9f-4057-ad17-1d34d72ea500"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 19, 20, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-20 00:00:00 UTC", "" -> 22852.9906178095|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 20, 20, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-21 00:00:00 UTC", "" -> 16193.1892488196|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 21, 20, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-22 00:00:00 UTC", "" -> 33862.8650133317|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 22, 20, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-23 00:00:00 UTC", "" -> 26698.2966016498|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 23, 20, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-24 00:00:00 UTC", "" -> 22190.9129262296|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 24, 20, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-25 00:00:00 UTC", "" -> 9655.94945539995|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 25, 20, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-26 00:00:00 UTC", "" -> 9800.6429944099|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 26, 20, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-27 00:00:00 UTC", "" -> 17268.16335715|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 27, 20, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-28 00:00:00 UTC", "" -> 14103.9291911497|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 28, 20, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-29 00:00:00 UTC", "" -> 17710.8595856993|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 29, 20, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-30 00:00:00 UTC", "" -> 20972.4392403699|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 30, 20, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-03-31 00:00:00 UTC", "" -> 18917.3621470994|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 3, 31, 20, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-01 00:00:00 UTC", "" -> 6988.04239656997|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 1, 20, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-02 00:00:00 UTC", "" -> 6707.97702983996|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 2, 20, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-03 00:00:00 UTC", "" -> 16192.0370214096|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 3, 20, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-04 00:00:00 UTC", "" -> 13261.9502531697|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 4, 20, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-05 00:00:00 UTC", "" -> 15066.7244952896|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 5, 20, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-06 00:00:00 UTC", "" -> 10291.8064609698|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 6, 20, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-07 00:00:00 UTC", "" -> 5847.77200458005|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 7, 20, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-08 00:00:00 UTC", "" -> 3854.33490363003|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 8, 20, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-09 00:00:00 UTC", "" -> 6136.42862289999|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 9, 20, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-10 00:00:00 UTC", "" -> 15752.3041878198|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 10, 20, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-11 00:00:00 UTC", "" -> 18637.2215781193|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 11, 20, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-12 00:00:00 UTC", "" -> 14961.0840321896|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 12, 20, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-13 00:00:00 UTC", "" -> 12505.2727411496|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 13, 20, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-14 00:00:00 UTC", "" -> 19770.2804788191|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 14, 20, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-15 00:00:00 UTC", "" -> 5486.7222394|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 15, 20, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-16 00:00:00 UTC", "" -> 6230.24911461|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 16, 20, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-17 00:00:00 UTC", "" -> 13418.0380445999|>, <|
       "Symbol" -> "BTC", "DateObject" -> 
        DateObject[{2023, 4, 17, 20, 0, 0.}, "Instant", "Gregorian", -4.], 
        "Time" -> "2023-04-18 00:00:00 UTC", "" -> 12649.5221744598|>}, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "Symbol"} -> 
        1, {All, "DateObject"} -> 1, {All, "Time"} -> 1, {All, ""} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "Symbol" -> TypeSystem`PackageScope`AtomShape[31.5], "DateObject" -> 
            TypeSystem`PackageScope`AtomShape[75], "Time" -> 
            TypeSystem`PackageScope`AtomShape[257.6], "" -> 
            TypeSystem`PackageScope`AtomShape[60]|>], 
          DirectedInfinity[1], 4, {All}]], 20, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Symbol", "DateObject", "Time", ""}, {
         TypeSystem`Atom[
          TypeSystem`Enumeration["BTC"]], 
         TypeSystem`Atom[DateObject], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Real]}], 30], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "Symbol"} -> 
        1, {All, "DateObject"} -> 1, {All, "Time"} -> 1, {All, ""} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "Symbol" -> TypeSystem`PackageScope`AtomShape[31.5], "DateObject" -> 
            TypeSystem`PackageScope`AtomShape[75], "Time" -> 
            TypeSystem`PackageScope`AtomShape[257.6], "" -> 
            TypeSystem`PackageScope`AtomShape[60]|>], 
          DirectedInfinity[1], 4, {All}]], 20, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Symbol", "DateObject", "Time", ""}, {
         TypeSystem`Atom[
          TypeSystem`Enumeration["BTC"]], 
         TypeSystem`Atom[DateObject], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Real]}], 30], "Path" -> {}, "DisplayedRowCount" -> 
     20, "DisplayedColumnCount" -> 4, "DataRowCount" -> 30, "DataColumnCount" -> 
     4, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Symbol", 
                  Style[
                  "Symbol", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Symbol"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Symbol"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["DateObject", 
                  Style[
                  "DateObject", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "DateObject"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "DateObject"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Time", 
                  Style[
                  "Time", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Time"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Time"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["", 
                  Style[
                  "", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, ""}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{All, ""}, 
                "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation["BTC", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Sun 19 Mar 2023 20:00:00\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["DateObject"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2023-03-20 00:00:00 UTC", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Time"]}, "Item", False], "Mouse"], 
              ImageSize -> {{257.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["22853.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key[""]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["BTC", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Mon 20 Mar 2023 20:00:00\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["DateObject"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2023-03-21 00:00:00 UTC", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Time"]}, "Item", False], "Mouse"], 
              ImageSize -> {{257.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["16193.2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key[""]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["BTC", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Tue 21 Mar 2023 20:00:00\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["DateObject"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2023-03-22 00:00:00 UTC", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Time"]}, "Item", False], "Mouse"], 
              ImageSize -> {{257.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["33862.9"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key[""]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["BTC", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Wed 22 Mar 2023 20:00:00\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["DateObject"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2023-03-23 00:00:00 UTC", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Time"]}, "Item", False], "Mouse"], 
              ImageSize -> {{257.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["26698.3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key[""]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["BTC", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Thu 23 Mar 2023 20:00:00\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["DateObject"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2023-03-24 00:00:00 UTC", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Time"]}, "Item", False], "Mouse"], 
              ImageSize -> {{257.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["22190.9"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key[""]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["BTC", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Fri 24 Mar 2023 20:00:00\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["DateObject"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2023-03-25 00:00:00 UTC", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Time"]}, "Item", False], "Mouse"], 
              ImageSize -> {{257.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["9655.95"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key[""]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["BTC", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Sat 25 Mar 2023 20:00:00\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["DateObject"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2023-03-26 00:00:00 UTC", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Time"]}, "Item", False], "Mouse"], 
              ImageSize -> {{257.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["9800.64"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key[""]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["BTC", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Sun 26 Mar 2023 20:00:00\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["DateObject"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2023-03-27 00:00:00 UTC", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Time"]}, "Item", False], "Mouse"], 
              ImageSize -> {{257.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["17268.2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key[""]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["BTC", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Mon 27 Mar 2023 20:00:00\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["DateObject"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2023-03-28 00:00:00 UTC", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Time"]}, "Item", False], "Mouse"], 
              ImageSize -> {{257.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["14103.9"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key[""]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["BTC", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Tue 28 Mar 2023 20:00:00\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["DateObject"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2023-03-29 00:00:00 UTC", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Time"]}, "Item", False], "Mouse"], 
              ImageSize -> {{257.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["17710.9"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key[""]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["BTC", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Wed 29 Mar 2023 20:00:00\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["DateObject"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2023-03-30 00:00:00 UTC", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Time"]}, "Item", False], "Mouse"], 
              ImageSize -> {{257.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20972.4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key[""]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["BTC", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Thu 30 Mar 2023 20:00:00\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["DateObject"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2023-03-31 00:00:00 UTC", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Time"]}, "Item", False], "Mouse"], 
              ImageSize -> {{257.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["18917.4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key[""]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["BTC", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Fri 31 Mar 2023 20:00:00\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["DateObject"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2023-04-01 00:00:00 UTC", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Time"]}, "Item", False], "Mouse"], 
              ImageSize -> {{257.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6988.04"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key[""]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["BTC", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Sat 1 Apr 2023 20:00:00\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["DateObject"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2023-04-02 00:00:00 UTC", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Time"]}, "Item", False], "Mouse"], 
              ImageSize -> {{257.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6707.98"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key[""]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["BTC", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Sun 2 Apr 2023 20:00:00\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["DateObject"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2023-04-03 00:00:00 UTC", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Time"]}, "Item", False], "Mouse"], 
              ImageSize -> {{257.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["16192.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key[""]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["BTC", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Mon 3 Apr 2023 20:00:00\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["DateObject"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2023-04-04 00:00:00 UTC", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Time"]}, "Item", False], "Mouse"], 
              ImageSize -> {{257.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["13262.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key[""]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["BTC", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Tue 4 Apr 2023 20:00:00\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["DateObject"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2023-04-05 00:00:00 UTC", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["Time"]}, "Item", False], "Mouse"], 
              ImageSize -> {{257.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["15066.7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key[""]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["BTC", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Wed 5 Apr 2023 20:00:00\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["DateObject"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2023-04-06 00:00:00 UTC", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["Time"]}, "Item", False], "Mouse"], 
              ImageSize -> {{257.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10291.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key[""]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["BTC", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Thu 6 Apr 2023 20:00:00\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["DateObject"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2023-04-07 00:00:00 UTC", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["Time"]}, "Item", False], "Mouse"], 
              ImageSize -> {{257.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5847.77"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key[""]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["BTC", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Fri 7 Apr 2023 20:00:00\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["DateObject"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2023-04-08 00:00:00 UTC", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["Time"]}, "Item", False], "Mouse"], 
              ImageSize -> {{257.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3854.33"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key[""]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[True, 30, 1], {1, 30 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[False, 30, 1], {1, 30 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[30, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[30, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 30, 1], {1, 30 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 30, 1], {1, 30 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
               ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
            SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{565., {300.8544921875, 306.1455078125}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{565., {300.8544921875, 306.1455078125}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.890858532407935*^9},
 CellLabel->"Out[126]=",
 CellID->1125324825,ExpressionUUID->"29173184-b1a8-44cb-8c56-c47d28c236d8"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Here is a summary:", "Text",
 CellChangeTimes->{{3.833105145171947*^9, 3.833105149199575*^9}, {
  3.833120779205359*^9, 3.833120780159995*^9}},
 CellID->619463234,ExpressionUUID->"0f5088ae-18e8-4463-9471-9076af7ce3bd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<RecordsSummary\>\"", "]"}], "[", 
  "dsBTCVolumeData", "]"}]], "Input",
 CellChangeTimes->{{3.8331051313032427`*^9, 3.833105158100326*^9}},
 CellLabel->"In[127]:=",
 CellID->317853182,ExpressionUUID->"f8a0d069-c268-481e-a220-18dd3d018ee2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[GridBox[{
      {
       StyleBox["\<\"1 Symbol\"\>",
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontFamily->"Times",
        FontColor->RGBColor[0, 0, 1]]},
      {
       TagBox[GridBox[{
          {"\<\"BTC\"\>", "30"}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"], ",", 
   TagBox[GridBox[{
      {
       StyleBox["\<\"2 DateObject\"\>",
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontFamily->"Times",
        FontColor->RGBColor[0, 0, 1]]},
      {
       TagBox[GridBox[{
          {"\<\"Min\"\>", 
           TemplateBox[{
             RowBox[{"\"Sun 19 Mar 2023 20:00:00\"", 
               StyleBox[
                RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
                  StyleBox[
                   RowBox[{"-", "4"}], NumberMarks -> False, StripOnInput -> 
                   False]}], FontColor -> GrayLevel[0.5]]}], 
             RowBox[{"DateObject", "[", 
               RowBox[{
                 RowBox[{"{", 
                   
                   RowBox[{
                    "2023", ",", "3", ",", "19", ",", "20", ",", "0", ",", 
                    "0.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", 
                 ",", 
                 RowBox[{"-", "4.`"}]}], "]"}]},
            "DateObject",
            Editable->False]},
          {"\<\"1st Qu\"\>", 
           TemplateBox[{
             RowBox[{"\"Sun 26 Mar 2023 20:00:00\"", 
               StyleBox[
                RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
                  StyleBox[
                   RowBox[{"-", "4"}], NumberMarks -> False, StripOnInput -> 
                   False]}], FontColor -> GrayLevel[0.5]]}], 
             RowBox[{"DateObject", "[", 
               RowBox[{
                 RowBox[{"{", 
                   
                   RowBox[{
                    "2023", ",", "3", ",", "26", ",", "20", ",", "0", ",", 
                    "0.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", 
                 ",", 
                 RowBox[{"-", "4.`"}]}], "]"}]},
            "DateObject",
            Editable->False]},
          {"\<\"Mean\"\>", 
           TemplateBox[{
             RowBox[{"\"Mon 3 Apr 2023 08:00:00\"", 
               StyleBox[
                RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
                  StyleBox[
                   RowBox[{"-", "4"}], NumberMarks -> False, StripOnInput -> 
                   False]}], FontColor -> GrayLevel[0.5]]}], 
             RowBox[{"DateObject", "[", 
               RowBox[{
                 RowBox[{"{", 
                   
                   RowBox[{
                    "2023", ",", "4", ",", "3", ",", "8", ",", "0", ",", 
                    "0.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", 
                 ",", 
                 RowBox[{"-", "4.`"}]}], "]"}]},
            "DateObject",
            Editable->False]},
          {"\<\"Median\"\>", 
           TemplateBox[{
             RowBox[{"\"Mon 3 Apr 2023 08:00:00\"", 
               StyleBox[
                RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
                  StyleBox[
                   RowBox[{"-", "4"}], NumberMarks -> False, StripOnInput -> 
                   False]}], FontColor -> GrayLevel[0.5]]}], 
             RowBox[{"DateObject", "[", 
               RowBox[{
                 RowBox[{"{", 
                   
                   RowBox[{
                    "2023", ",", "4", ",", "3", ",", "8", ",", "0", ",", 
                    "0.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", 
                 ",", 
                 RowBox[{"-", "4.`"}]}], "]"}]},
            "DateObject",
            Editable->False]},
          {"\<\"3rd Qu\"\>", 
           TemplateBox[{
             RowBox[{"\"Mon 10 Apr 2023 20:00:00\"", 
               StyleBox[
                RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
                  StyleBox[
                   RowBox[{"-", "4"}], NumberMarks -> False, StripOnInput -> 
                   False]}], FontColor -> GrayLevel[0.5]]}], 
             RowBox[{"DateObject", "[", 
               RowBox[{
                 RowBox[{"{", 
                   
                   RowBox[{
                    "2023", ",", "4", ",", "10", ",", "20", ",", "0", ",", 
                    "0.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", 
                 ",", 
                 RowBox[{"-", "4.`"}]}], "]"}]},
            "DateObject",
            Editable->False]},
          {"\<\"Max\"\>", 
           TemplateBox[{
             RowBox[{"\"Mon 17 Apr 2023 20:00:00\"", 
               StyleBox[
                RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
                  StyleBox[
                   RowBox[{"-", "4"}], NumberMarks -> False, StripOnInput -> 
                   False]}], FontColor -> GrayLevel[0.5]]}], 
             RowBox[{"DateObject", "[", 
               RowBox[{
                 RowBox[{"{", 
                   
                   RowBox[{
                    "2023", ",", "4", ",", "17", ",", "20", ",", "0", ",", 
                    "0.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", 
                 ",", 
                 RowBox[{"-", "4.`"}]}], "]"}]},
            "DateObject",
            Editable->False]}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"], ",", 
   TagBox[GridBox[{
      {
       StyleBox["\<\"3 Time\"\>",
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontFamily->"Times",
        FontColor->RGBColor[0, 0, 1]]},
      {
       TagBox[GridBox[{
          {"\<\"2023-03-20 00:00:00 UTC\"\>", "1"},
          {"\<\"2023-03-21 00:00:00 UTC\"\>", "1"},
          {"\<\"2023-03-22 00:00:00 UTC\"\>", "1"},
          {"\<\"2023-03-23 00:00:00 UTC\"\>", "1"},
          {"\<\"2023-03-24 00:00:00 UTC\"\>", "1"},
          {"\<\"2023-03-25 00:00:00 UTC\"\>", "1"},
          {"\<\"(Other)\"\>", "24"}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"], ",", 
   TagBox[GridBox[{
      {
       StyleBox["\<\"4 \"\>",
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontFamily->"Times",
        FontColor->RGBColor[0, 0, 1]]},
      {
       TagBox[GridBox[{
          {"\<\"Min\"\>", "3854.33490363003`"},
          {"\<\"1st Qu\"\>", "9655.94945539995`"},
          {"\<\"Mean\"\>", "14466.178938621475`"},
          {"\<\"Median\"\>", "14532.50661166965`"},
          {"\<\"3rd Qu\"\>", "18637.2215781193`"},
          {"\<\"Max\"\>", "33862.8650133317`"}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"]}], "}"}]], "Output",
 CellChangeTimes->{3.8908585325314302`*^9},
 CellLabel->"Out[127]=",
 CellID->445854646,ExpressionUUID->"ed05f6a6-5a0c-4231-a5b3-0964b1c894f6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RecordsSummary", "[", 
  RowBox[{
   RowBox[{"ResourceFunction", "[", "\"\<ImportCSVToDataset\>\"", "]"}], "[", 
   
   RowBox[{"stDBOURL", "[", 
    RowBox[{"Join", "[", 
     RowBox[{"aDBODefaultParameters", ",", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<dataType\>\"", "->", "Volume"}], ",", 
        RowBox[{"\"\<timeUnit\>\"", "->", "\"\<day\>\""}], ",", 
        RowBox[{"\"\<timeSpan\>\"", "->", "\"\<all\>\""}], ",", 
        RowBox[{"\"\<exchange\>\"", "->", "\"\<all\>\""}]}], "|>"}]}], "]"}], 
    "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.83312139438522*^9, 3.833121405304049*^9}},
 CellLabel->"In[128]:=",
 CellID->1366599785,ExpressionUUID->"5205d424-4dc6-43da-8cd8-6018c5c3a513"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[GridBox[{
      {
       StyleBox["\<\"1 Time\"\>",
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontFamily->"Times",
        FontColor->RGBColor[0, 0, 1]]},
      {
       TagBox[GridBox[{
          {"\<\"2010-07-17 00:00:00 UTC\"\>", "1"},
          {"\<\"2010-07-18 00:00:00 UTC\"\>", "1"},
          {"\<\"2010-07-19 00:00:00 UTC\"\>", "1"},
          {"\<\"2010-07-20 00:00:00 UTC\"\>", "1"},
          {"\<\"2010-07-21 00:00:00 UTC\"\>", "1"},
          {"\<\"2010-07-22 00:00:00 UTC\"\>", "1"},
          {"\<\"(Other)\"\>", "4653"}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"], ",", 
   TagBox[GridBox[{
      {
       StyleBox["\<\"2 bit-x\"\>",
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontFamily->"Times",
        FontColor->RGBColor[0, 0, 1]]},
      {
       TagBox[GridBox[{
          {"\<\"\"\>", "2362"},
          {"0.0001`", "6"},
          {"0.0003`", "4"},
          {"0.0006`", "3"},
          {"0.001`", "3"},
          {"0.0013`", "3"},
          {"\<\"(Other)\"\>", "2278"}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"], ",", 
   TagBox[GridBox[{
      {
       StyleBox["\<\"3 bitfinex\"\>",
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontFamily->"Times",
        FontColor->RGBColor[0, 0, 1]]},
      {
       TagBox[GridBox[{
          {"\<\"\"\>", "974"},
          {"242.50160663`", "1"},
          {"282.76841858`", "1"},
          {"323.1009698`", "1"},
          {"334.33400667`", "1"},
          {"356.98025899`", "1"},
          {"\<\"(Other)\"\>", "3680"}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"], ",", 
   TagBox[GridBox[{
      {
       StyleBox["\<\"4 bitstamp\"\>",
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontFamily->"Times",
        FontColor->RGBColor[0, 0, 1]]},
      {
       TagBox[GridBox[{
          {"\<\"\"\>", "455"},
          {"11.`", "2"},
          {"0.25`", "1"},
          {"0.29585799`", "1"},
          {"0.3`", "1"},
          {"0.5`", "1"},
          {"\<\"(Other)\"\>", "4198"}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"], ",", 
   TagBox[GridBox[{
      {
       StyleBox["\<\"5 btce\"\>",
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontFamily->"Times",
        FontColor->RGBColor[0, 0, 1]]},
      {
       TagBox[GridBox[{
          {"\<\"\"\>", "2887"},
          {"1.`", "1"},
          {"10.783681`", "1"},
          {"160.823714`", "1"},
          {"202.69704`", "1"},
          {"310.811387`", "1"},
          {"\<\"(Other)\"\>", "1767"}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"], ",", 
   TagBox[GridBox[{
      {
       StyleBox["\<\"6 coinbase\"\>",
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontFamily->"Times",
        FontColor->RGBColor[0, 0, 1]]},
      {
       TagBox[GridBox[{
          {"\<\"\"\>", "1645"},
          {"0.01`", "1"},
          {"0.015`", "1"},
          {"0.02`", "1"},
          {"0.04`", "1"},
          {"0.05655554`", "1"},
          {"\<\"(Other)\"\>", "3009"}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"], ",", 
   TagBox[GridBox[{
      {
       StyleBox["\<\"7 gemini\"\>",
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontFamily->"Times",
        FontColor->RGBColor[0, 0, 1]]},
      {
       TagBox[GridBox[{
          {"\<\"\"\>", "1910"},
          {"14.4877829431`", "1"},
          {"17.1755864272`", "1"},
          {"31.7547026012`", "1"},
          {"39.3487772944`", "1"},
          {"48.8416727202`", "1"},
          {"\<\"(Other)\"\>", "2744"}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"], ",", 
   TagBox[GridBox[{
      {
       StyleBox["\<\"8 kraken\"\>",
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontFamily->"Times",
        FontColor->RGBColor[0, 0, 1]]},
      {
       TagBox[GridBox[{
          {"\<\"\"\>", "1189"},
          {"0.1`", "3"},
          {"2.`", "2"},
          {"0.00003811`", "1"},
          {"0.00063515`", "1"},
          {"0.00159536`", "1"},
          {"\<\"(Other)\"\>", "3462"}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"], ",", 
   TagBox[GridBox[{
      {
       StyleBox["\<\"9 mtgox\"\>",
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontFamily->"Times",
        FontColor->RGBColor[0, 0, 1]]},
      {
       TagBox[GridBox[{
          {"\<\"\"\>", "3495"},
          {"0.25`", "1"},
          {"0.4`", "1"},
          {"2.`", "1"},
          {"2.1`", "1"},
          {"2.6`", "1"},
          {"\<\"(Other)\"\>", "1159"}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"], ",", 
   TagBox[GridBox[{
      {
       StyleBox["\<\"10 okcoin\"\>",
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontFamily->"Times",
        FontColor->RGBColor[0, 0, 1]]},
      {
       TagBox[GridBox[{
          {"\<\"\"\>", "3484"},
          {"7.68`", "1"},
          {"36.941`", "1"},
          {"81.493`", "1"},
          {"88.934`", "1"},
          {"91.138`", "1"},
          {"\<\"(Other)\"\>", "1170"}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"], ",", 
   TagBox[GridBox[{
      {
       StyleBox["\<\"11 others\"\>",
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontFamily->"Times",
        FontColor->RGBColor[0, 0, 1]]},
      {
       TagBox[GridBox[{
          {"\<\"\"\>", "350"},
          {"1.`", "2"},
          {"1.1`", "1"},
          {"2.35`", "1"},
          {"3.3`", "1"},
          {"4.`", "1"},
          {"\<\"(Other)\"\>", "4303"}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"]}], "}"}]], "Output",
 CellChangeTimes->{3.890858545864468*^9},
 CellLabel->"Out[128]=",
 CellID->908590939,ExpressionUUID->"62b66441-9add-43dc-9a20-eb99118b3649"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plots", "Subsection",
 CellChangeTimes->{{3.833104504734462*^9, 3.833104505521987*^9}},
 CellID->1104981830,ExpressionUUID->"e045c062-4822-4d30-8ac6-fd34f5c5f478"],

Cell[CellGroupData[{

Cell["Price data", "Subsubsection",
 CellChangeTimes->{{3.833104722123827*^9, 3.833104723383444*^9}},
 CellID->2138521201,ExpressionUUID->"b755f914-e6a1-4dc5-abad-c7b8e1196039"],

Cell[CellGroupData[{

Cell["\<\
Here we extract the non-time columns in the tabular price data obtained above \
and plot the corresponding time series:\
\>", "Text",
 CellChangeTimes->{{3.833104759688319*^9, 3.833104810787183*^9}, {
  3.833104920353895*^9, 3.833104930546607*^9}},
 CellID->1839509015,ExpressionUUID->"b7d0aa66-29dc-488e-9b1d-a47e3c048ee7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DateListPlot", "[", 
  RowBox[{
   RowBox[{"Association", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"#", "->", 
       RowBox[{"Normal", "[", 
        RowBox[{
         RowBox[{"dsBTCPriceData", "[", 
          RowBox[{"All", ",", 
           RowBox[{"{", 
            RowBox[{"\"\<DateObject\>\"", ",", "#"}], "}"}]}], "]"}], "[", 
         "Values", "]"}], "]"}]}], "&"}], "/@", 
     RowBox[{"Take", "[", 
      RowBox[{
       RowBox[{"Normal", "[", 
        RowBox[{"Keys", "[", 
         RowBox[{
         "dsBTCPriceData", "\[LeftDoubleBracket]", "1", 
          "\[RightDoubleBracket]"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", 
         RowBox[{"-", "1"}]}], "}"}]}], "]"}]}], "]"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", 
    RowBox[{"1", "/", "4"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
   RowBox[{"PlotLabel", "->", 
    RowBox[{"Row", "[", 
     RowBox[{"{", "\"\<BTC-EUR, coinbase\>\"", "}"}], "]"}]}], ",", 
   RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8331044547078037`*^9, 3.833104527257929*^9}, {
  3.833104561797495*^9, 3.833104705169992*^9}, {3.83310795415493*^9, 
  3.8331080167313023`*^9}, {3.83310825459872*^9, 3.833108256083123*^9}, {
  3.8331083167225523`*^9, 3.8331083595291348`*^9}, {3.833108636250655*^9, 
  3.833108689654666*^9}, {3.833120790804412*^9, 3.833120792716075*^9}, {
  3.83312089438437*^9, 3.8331209135305347`*^9}},
 CellLabel->"In[129]:=",
 CellID->1453432893,ExpressionUUID->"e0ce5a36-12a8-474e-8a83-ed0b23884b70"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, {}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJwt2Xk4VlsbB2CZpzRJkiR1ZMpQkYyRJCSEiBBSJxKVIUqIkiFSxlCGZE5I
QhFlHiMNpPhERRSSkL5nref0xznXfe333Xu9a3h+a23r7U4ZH2VkYGBog/+Q
/8M/A82ZUY2G+EDm61xvd4KXaoGHjVWNOjZQv9wNLlpxjz1KmvrmHvCHbF0X
Q2Nqs71gkT/LHHkfUPPrgT0Khfi4flG/0wcfyZb3eDBGnWgA3utxMvX8c2pr
Q3DnkY1d/c3UwsZgVc7Xu5bUUQ8cINcnUmYTAqnTTcHJ9w01DoZROx4EJxxy
Tj15gVrMgnz+dV2Vw3bqr4fAY58MNDn3UudageMYk9L8T1G7WIP13T+XLjtB
LWsLzn9lb6SH95s4Aj4f4pcplEZdbA+eEOZ8P36J2uMoeK5563H3Q9SKx8Ax
hdxuC0epZ4+DSw+7le93o644AV7j5vWN4yS1rzP4Qeary6dsqXe6gF9ddUj0
CqBmdAW/ll6ZrIfff+4GFr32LWDtQerLZ8CfuUe2FK6j1nEn4xM0KjouTs3p
CeYvdGErtKZu9gL/OJGT/iiU+po3+PCmNOMVLtSG58E9cUt0k3ypl/uCK+Q2
atqjuy6ChYL2xfLZUMf4gwsqQ18POlObXwK/0b87OX+PWiAIvDy19cKzDOre
y2Cev9Gxjlepk4PBV6p/ZzndorYNAdedeDpVeY1aJAx88dxW27Cz1IPh4JWn
ciZXelFnRIDPavi38eH8OH4d/DVCUGc2iFriBrhLN/aq90Xq0ZtgrzSrzyb4
+/NjwJYra66x3qF2jQOnFDRM+iZSb0kA551iuuydRT11C6wZ1J4Uf5u6JAls
XaQUFhVN7XWbzD/nV57iEdRKKeCmzQJFO3A+zaeCZ8Ic9diuUD9NB0/pn1rB
g/PZLwP86/J4woZ4as1MMr/dymT0cH0xZ4Od5K4HlQ9Q1+aAbx99ncA5TR2c
B65KmYzgHaXWvQ/eIPumg62BmvsBWMz/Mq/gDerWQvAqLuXcB9FviCOLwRx1
Mxvd3KiNS8CNvt2VRgnUvKXgYwUsPe/dqbsfg2UsDO6du0kdVw6+O6BmvymJ
+tAT8LSKTVmBP7VgJTjj+nLl2ADqvirw0c4XJ7ZHUd+pJvN35KvpLbTdczBL
MYe+cRH1xlpSHzz1Rf9tpR6qA3+/FGfY20yd2QDWXm8idrOb+kQTqUcPfxSb
v6aWagErjlvOGfyPeqwVPB6kwJndQl3QTsZf6tOnny+pT78EJ34+FNuSQb2t
C6ws/DPc5jn19CvyPBbNsss4/qWvwWw/JduDYqm935L1tWtVzBEPapUe8OjZ
yXuJVtQLveB2FfVf/QbUVX1g0wifwEJP6oCPZHx0DOcrcP1rDYAj9cflqtCs
g6S9eVdnivF59Z/AfemMc+fCqUOGwYxNTbPVOP/1v5D6YVD1hhnrF88IWb+7
zJQGfajbR8F+62b8/fD5UWPEnJl+nDh/Tb6T9bPehCkW5y/fBFjyj4R2lD/1
m0mwet/mo9/weQk/yfq46HkjCK9b/QIfGpPU24/PF/oNHorPVGQxpP44C173
1KDVwI46dZ6sn2v3qh2xfjsskPXzutz3uju1KMPvUY1Jt9fRha7UnxeBmYWb
97x3oM5mAtfX7Vnzjyy1MwvYpFI2tBvrozQbePO8dsQXberv7OCw48oZalLU
hZzgZq+bcbtxvp3lBi9T2GrrgPNHgQf8JMBypvcb9cwSMEfBwLJ6Rvr9smXg
YdVK1xkm6vMrwIIjAwqly6jVVoKV7KLrlfmpGVaBp/v+xK1bSl3ND34hLdk2
N0/vHygA3r2tJEPwL7W2IHhHIVO2FTv9PLsQmDHWSbBjil5vXAfmPHX+le44
ddh6cr/rt/t0FqgNNpD2p1wJWYf3W/oPeN7fRZj9J/VLUbD73RuC7AyY/2Jg
0XdZbMW8mP8SYGnxc7KSgpj/UmDN8QMng/7B/N8MXiehrK+Kvz9RBsy3psYr
Hp9nLQf+1vvJ0xnXn/BW8EjJoo3OXdQD28AOs847332hTlcg4ym1LkfxF7Wj
Ivj7e3mnEWyvmBI46Ht/zjns/6/KYIW+opsnsL9zVcE8m+7PG2H7XdTBM273
H09xYv5rgNUd941P4O+d0ARHMTt1NGH7i7XASTPVcnJ4fw9tcF5DqCcP/h5F
HbBQXcb5YwKY/3vBrEmj3CKimP964N93S7N2o333gdV+dvjIK2H+7wffV/ue
IGaB+W8EZhfsFLQ+g/lvDM46fVj6JubvZRPw5WCV7kItzH8zsP51tScf1TD/
zcHpHWocN9Qx/y3AKhVaLUE6mP+W4ILDppNDuzD/D4OLVKY/hqhi/tuApy6e
b6ncgflvC9Y4q+eoehjz3w4scmZ+OPU05r8DuOGW3THPI5j/juC55PWDG3C/
2HsMHJ1227ZwD+b/v2T+VEWOr9fH/HcCv5fsefEOPy9yEryxeC4taifmvws4
5OqCgdk2zH9XsJZg54NnGpj/p8Hevpxavfh7Jc6S9RGee9fLFPPfHZzbZ6WZ
is73BIfXeuwZwOe5ngPvt6zusMTfu8WH3F//1nZ1HK+p8+BQmcnfd3G+lviS
emIR+jz/ALWXH1gmb7gp+Ra1UgDYsjVa8Rjm3/wlcIWpuVPCJeqnQeDli75V
pftQ+10h49HDwpHrRK15FTyk2LVVMJSaOZSsr/ur7bbcoK4NI/XmXMuGZ1ep
g6+R/s1JN1L1oNaNBPdojPgF21BzR4G1331eXYD3b70Bjg0JCWm0xfyPBifE
x/+WP4T5Hwt+F5N6R90C8z8efOyD8vjnM5j/CeT3zTnw65/E/E8k9Ukxd+di
a8z/ZPDz3UccEs0w/++Q/nH55p6wGfM/hXy+Y07htBHmfxrY7Y2JQAY+3+4u
aX+ECecHXcz/e6S+rUqrPIf9PZQJ/nXkQdgvdGY2ODvAaO85Lcz/XNK+O9rP
rOUw//PB8uHyjw+cxvy/T+qP5jG3kTuY/w/AVlJDE6tSMP+LyPp2j/fWuoL5
/5C0/8/26LaLmP8lpJ4KusyuxfEoLSX5sMUuMyeG2rsMrCjC7s6RQ61SAVbl
XXVT+R71whPwph9bdbnzqasqwYN9X2tWtFEHPCPrK3NhOKSXWqsGXL7kWEz8
Zsz/F+DAg5G3hHH+1teCPfcYr4nE/XRIPbjz3J20cbR+I1hskTnPoB/mfzP4
bnl9eg7Wl/YWsPneV6LlmNdRbeAW2xdCv3E/a9IBFh5mkfsbifnfCa78XpI1
G4f53wUuFQpyGgrG/O8G93vz5jfh/t3qDdiJLy02CPfvQu/AbVIMTD9CMP97
SH/sV7ZWxP1M6nvwwR9NZVE3Mf8/kHr3sHra7TLmfz9ZHw913NqiMP8HwLNl
F8UbsH3Zg+ClS0YXgvD+zkPgrUZ3GRexvyOW/gyObC8fW8D99fcv4NvqXJU8
LzD/R8DX/PVPXi2nPvsN/FbO5WQ6nk8Vxsl8TZHnzO2gnvkONjtZ3VmK3y+b
IOt1yaqElzmY/1PgZN3wBY77mP/T4DWrb/CI4/0ZZsD5PRMij7A91b/BhrZp
8yXXqQPnwPEt57ki8Pyo/QfslfI2eccxzP+/4A3l244H4X6mkWF2VIPXaX+W
IeZfGCP4VpXXJqXfmP/MYPYyAQluzMOlrOBGCZG57ULUL9nAr1f/eGC9BfOf
AxwcoLaySQTznwtsXba3eQK/z78YPPxEo4VBAfOfB6yn/MLnOdb7xKXgaL2G
sFg8n1svB9sPMX78jvknzAtOUdi+0xY9sBL8cNApgAufn74K/K9a1lCNBLXj
arDUb76WANwfiK0h7Smy3mGE+5+vguDrv0Q3h85R5wqR/vh7oSePB/NfGNxV
rLzHA/dfsiJg/8P9ZjKSmP8bwC1bdKOE8Xxc/A/Y3K6p5CrOL49N4MCQ5bqr
8TylKA6+qpdX64+elSD3t8zYI4Pn0wop8FbyD/fHvtJgDxmvIh+cvztlwad1
X1iIJGD+bwEPNkR+LE/H/N8KTg/mzmkuw/yXB0/5CwiFlmD+bwe7+4WP22Ri
/u8AD9wQe38jG/NfCdy7Ss83pBXzXwX8Idyc1RW/b6g2S+t/vPhTzP+dYLMS
0aM2jzH/NcDZ/+NrnEjB/N9F5keaq+oiPK+a7wbripuu6E7G/N8DvpIc59iC
7tUB/ylOeLElCfNfF7xqKG5hGZ6nbfXBDLe6i9JwvYsYgEVml9xYiefxwf3g
WUN+M27s/wwjsPeDYeVneB45fgBcPBD79Sf2p4QpeJHFTq4leN4fNQPnyf5N
Wvvf+d+cjC/Xk/YRPC+5HgIbpI06TN7F/LcC95eIr2nG9Tt1GFzySu5ZMa7P
Ehvw4c2p49IF1F5HwD8zVGI/4/sEJXuw0L1UfokY6nkHcIiN1Lku7K+njuD/
1cWV8+Dz/I6DjdMtGAPw+5onwNNcnOdrsf+YncEVGZzfnHE+1J4En/siKheJ
Dj4F3iIo92011k9dN7DSw1dfJbE+c58h6yn1duF/7Wk9S+azidecBPZnpAfY
rsmwoBXPg8Ze4Nywhv49mA+83uDVRVvlmjA/un3A+jJ668XMqeMugJ/GlwmE
4Xnu0EXwM6dxcWN8HyboDz7Gs8/ogRN1XwBYg0XoeB2ef+8Egu/WmE40alLb
XSbtY97WN7CfemMwuEyQP5JNhXroKphtT6/SUbxfZig4i+uK6hNcryfCyfiO
bVIp20QtFUE+n8LS3Yr787FIsJpvwyqmVdQFUeC6jscHNZdQn74J3jHQtpUF
68O2GLJ+j7ysYMbr07FgRm22Ggu8f2k8eN/34LCa89Tet8Ax2YY2lbj+VZLA
C9KX1cfw/dRCMtjJ41K0H75/rLoDDr2t3LMP8zwgFbxmTUFyCL7v00oHx5Wm
m53H+s6aAb73t0p7C76frb8Htlxb2uaA+4OQLPA/P1mElwhj/ueAT7LUP1GQ
w/zPI/PVZ+cuWay37fnglSZDysV9tF5GFYAFI/KfsuP7HJNCsEnapGDTCDVf
Mbhj52RTMJ7H3jwk8+2Jq8HVj9QJj8DqUS3XokeprR6DD0a9mFmP5yuhclLv
xEOmw1kx/ytI+510bfZgvU59Cs589TioH8+3DlWknitf69vKh/lfDe4zFHkm
ie8/P9eQesJoEpuC17NfkPHwif6etx7zvw7Ms6OtSQjPO9INpN6FPH71CM9b
3xvBzlsOR41hfxc2g78e2G3fjuNxthX8YqQ5zw3PtwrtpP4GNl/rW4T530HG
g4nNfuq/838nOP5Mg0Uh5uX5V+A3Dc6nY/D9utpr8P0xB/7u/87/b8EHqsLk
AzF/qt+BFytw6mehA3vB7dL3Pw9j/mn3kXr4dv9UIf5e9o/gUaNSoWf2mP/9
JI/MrtsJ43oN+x+4s/ZhjQW+fzH4BJYM5R9/hOtz6TBZH/XlJZfw/dLLz+T3
NByM9sb3LTe/kjxRC5hjP4f5Pwr+VLGGuwb3H/xjpP0juie8vTH/x8n4Sa6s
P4rfT/wBbmjky2PG+1tPgvfrPZL4hO+bhH+S9X9tercqnicHpsHVn7ovHnTE
/J8BQ7ljf4P7AcdZMn+HVpTOc1OLzZP+UtskfRbP61//kM//yBiZw/7O/Uvq
xw0d0/E1mP+L5mD9L7yeqlXG/GcCnyu50yqnh/nPDObrMUgNwvNkMSs4OGxV
3RI8H3qwg1lv193xwO8rcoIXG/sIJ+HzZrnAVT1Mfc+x3lQsBl+04DDdhOPn
uwT8ZvU+v1cymP/LwE2PWZex4f6JcQWx0RC7ENaX57zg91x+YeM4ny7zge/+
cXLhWYn5zw+e+sEQwseM+S8AtmzOGD6+AvN/DfiIbcPvAz/o+rq2Ftzlkl57
COev4TrwPrtQexN8H7J8PXhg48MxLRbMfxHwkna2j/7omI3g4QLL/jasL+ai
YJ63FpFuuN4ExMDGZRqduTg/e8XBhfuHGv7F91vJkmAZ8Tf7/LCe2m4m/Wnf
IKOG/SUiQ/rbQi/9L+5fB2XB9T5hOWvx71UZW8DrRPjDLqzG/N8GHvNQuXkN
30dJKIC3x4dq6eB4jG4H97tVa/+L+9X8HeDkvqmMU9h/rsrgJ5X9Yuvw+VtU
wYbfjEMG8XlTamA3y6Pec2yY/zvB1j+fX9w8jed/TXCkWq3GS9x/KmmBdxU8
u57zHc//u8GJo+1WaVgfnu4Bb1IPinqA+3G/veCfl90C/uB4aOqBpdR9otvw
88z7wOfXb+NvxXpYawDWlHD74MSB+W9I7vfLPmgjjr+uMdhdzOteL44Xtwk4
JyFF9yDW21ZTcHM+w+MgXC+RB8HyLJpaymhjC/K8iWm/SmwPryW4O99M0Ad/
f7cV6V8nd/0FdJw1OJC/aPwJ1vdDtuDrqvE+/NgeQTuwDeNndxmcX332YK07
rCeZcLzuHCXr0fPHmQNrMf+PgRNsfp52E8P8/xfcbnvjixKeH4ZOgNnuMWaJ
ymP+O4PVdWudpfB97wkXsn7ksxon8X2vlCvYR7ZGSwnr95gbuPLqcVM9XE8F
Z8AR1T/FvuLzT7uDZQ8LGW3FfNnmCQ61lpwZxfdB015gwTP2i9px/pd6gyU5
47I+4fz3Pk/mw5Xl1ZpYb1R8wS4nt9bG4/lj4SLp7x1Li7XQVf7glbZZ+sO4
PgIugZet3luQgte1gsC24Ryd1mjWK6Se1PjcX4r7l/pg8BrxWkcXfH5ICOnP
w1+S9uJ+QD8MfMFfYlsZ7hd4roE9BVJtUrB/2yPAdi6fPjBhvYm6Dt5vbfhJ
HPvP5AY4Pjh9SBPXI180OF3uzD5nnH9vYsBRhiozQzhfE+LI+P3gj1iG160S
SL0anfl4BOeLUCKYs1WeOQP9MQlc3m0qGoH3T70NZj4gGv1fPXJIAe+w3j4V
hfNRNA3s+uWvvzHO78/p4BdZ2xzu4nrNzgB3yi798998dc4E56uXhsVhPZLO
Just/4oiE74//J4Dtl/r/sMM63thHvh01eSRl/j307P3wZPsyxfPYv4pPAAz
9MrqxWJ+zhSCU37acKsdx/wvBmc/fPJxLb6vPV9C6uc2fY4utFopmDd/j8Yk
vk9lKAN/DB98ooZ/H6ouJ9cX3+1gwPeVgU9If5doXd6Of2/WrgRvCDkqyIn7
FfZnYMb9Zk1c2N7GarJeThx4mGuJ+f8c7MuRdes02qAWHNeyqX0C9wtL68l6
tWkt6sD99MsGcJmulFoS/n33ZhO4UdyzSBfz3awFfGvh0JdXeJ7jbyPjr9fW
y/oJ878d7HW4i/GWIn3fkvgS3JOwmM9bk9q6CzzvHCI6oUQt3A1e9ezoo7Nb
qQdek/HQHzy7YSd1+luSb7ZxR+siqR17SH4eDzdrzKcWew92kB6/rl5F/bUP
rKs2cXDJNHXuR/DCaPB173U9xC4DJD+CRoyER+l12UFw0keGifcM9PrEJ3Bd
m6+YAV4vHibtVenvsvxG7fGF1Itvg00MM9SKI2T8TGM8eCepZ0fJfOcylWr8
H3XFGFlPJtpHeUeofb+DX56d1egbo945Qeq3k6Hkoh/UjFMkjxwHuK7j/Z//
BGv4yGSo4u+5/IvkpUf2VA8jba/Ob/AHOe+F4cXUnHMkH8I/5Tcvom6eB5/h
OM2yFq9fWwCftDQdDRKjNmSYH9U4apT3cB/+vuWM4OU+e01aWej1Libwfavw
RnkO6hgWcNs92wsh3NTmbGAntxcDWXzUAhxg9d8voiyZqHs5wd8Sw3S2t9H7
J3ODY1W2nnWpp7blAXOtzTwZjBZZCq7TVTWpfU49uAy81kjdV/QZdcYKMOex
Th+dl9THV4LZ2I0Z1nVSS6wCGxSNppu1UI/ygzvz7+3Oek2dLwAe07EY3I92
FQRbsnGd0p6l3iIEzjgerhz3jnpqHZjnRo79zVbqkvWkvRqR9eXp1F4bwDKs
1d1GGdRK/5D+kRD4bITzc14UvFs841NIGvVTMdIen/cVBeHUfhLgA4GPvi5G
a0qB73a3secnUzNLgwtYPzm5xlLXyoBb315p471OHSwHnprTH8pKpdbdCo7a
mBSYnEfNLQ9+fnNNXCL2X6sCeJ3teymBGupIRXDvaOvD4SfUxkrgxPmOZRN4
nVcF7O5oklNXSd2tCg6512iXVkIdpw4+9Q9XElMF9SEN8OvjyelPcTwEdxGf
rt1Q2kDdpwV2fWbzQhx9Rxts43Gcd3sttZ0OmD293nIAn7dRl/zec/0sAjje
Q3pguy0Rt9y/UGfuA38ZOfdBt5f6xH6wnHnG7sQeaikjcM2+9uX9U9RjxmQ8
526J536kLjAhv0+/ykS7kfq0GVg+ojaTsZ16mzn4w57pY6ZvqactwOf6X/nv
RJdagkPDh95e5KXz3fswWECI+3agArWKDVhVnUUkWYh6wRYcN7Ejqx/XS5Ud
+ATvMStFvB7gQH6PXaghkwy1liP5/GYpn3J1atbjZP0wv7Ni2kVd/y/Yka3G
d0CEOsSJfN8ydfgJrm/9k+CX11pePNlOzXMKfDbt2/+8lajbXcEcHHIq25Sp
o06DlS+su6K+hdrkLDjmKuPzaFlqPg+weGAtXwvWozeeYJZ/kxd1dlEnnANn
9bptMvhEbeUD1up0Zn05QS10AXy7sKZrN9bDj75kvYTFlxdhfUn1A19WVOfZ
v5LaIYC075Ke/QYeatFAsj6OfVB9zE79OQh85UfaSatl1NlXwCIL13ZfwPrp
fBW8woFR6TnWQ+lQsIqL9EoLrJ/fw8AbnW9235+nny+8Bu663+j5m5lePxtJ
rrOsVfmKVogCz2p+2a7PRT1zA5wTmbhrGF0WDfaxOr/hGLb3fCzYWydQR2sp
tVo8eMJL70wvJzXDLXCzbl6XBNbn6kQy3qGyfgFYfwOTwRf6/B+9wnzSvkPu
x/2eOxivs6eCtxv1XDH/SdvfmEbqt+87UR3s37C783S/cWTmO7XBPfB8Zd6C
FK6HpVngwuFqxkEcn5fZ4OzI4Nt1mH83c8n4PpL0csP+NMsH63lyC15F8xeA
l1ZruAlhnr17AGbdkVJli+svsYi050Lc60Fcr9YPwW7esYemBzH/H5H1yp4r
OIDPGygF/4owPSWFvye9jIzfvYiLKjjfHCtIHqhqdkz8wfx/SuoXy/CMI47f
10rwkRPF8kn4e3OfgXct2TPp+pXapQasYMs54ILtkX1B6kkuU7smtmeiFnyw
eNn7hQ+Y//Xgq8Jvmfb+l/+N4DUm23V2/cb8bwaf6ZTT1f4v/1vAAwr/RE5h
+yvayHqxiqhejfni2wF+fG/GwBTn685Okp9mY9sd8POMr8DhizzbFPH3Pu8m
/fd27U4P/P7lN2Dtk8wa3jh+Ou/AHlHSNgVF1Jy9YH82LvGZbOrm96R9jjrB
VYXU1z6An1xYImnykNqwH5xQMS6iloP5/z9w8EyEe1wWddcgaZ/DNpFfKdQx
Q+CVUXmO/Jg/5p/B6a6qnPtvUgt8BXccWFa84Q517wh4Wb/1/ooozP9vYGY9
0X0PzTH/x0n93am7KkkH8/8Hyf/thjWCuF8cnAAHBMs/bDXE/J8CF3cmLx3G
zx+fBv8JWX//oynm/wwZHwYbhV9HMP9/g5NsfiQ6HsX8nwPr532u80S7/gGb
dPYprTmE+f+X1BfPVIkmE8x/hj/w/P7ShH4bzH9GsDPLFZkuC8x/5j/07ztF
Brsw/1nB+nIlWb8lMP/ZwDE126JHDDD/OcAvw2/afzuA+c8F9vVuyvxghvm/
GPw4RdNojT3m/xLwrZg/Ma/PYf4vBQtMDhwM8sf8Xw4umi4NzMXrurxgE+7H
7qtwP8HNB/bTT42Iuo35vwqs9rlnWvIN5v9qcNWutbp/sD4ZrwH7P47ftBb3
d7xrwR7J9kHm45j/QmBW+XWn5jA/44TB69Y0e8Xh+jgkAhbSSW9twOuCG8n9
7H3H/Dow//8BS/z7W7W9D/N/EzhS/Mu7/l+Y/+JgluWSTsewvm2UBPcY5jSJ
YP0ekiL9G/T2+Q/cX2ZKk/YHiCVvwvp4QhY8NDY2ZgDr4/9nUyun
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxVmntcz9cfx1uuCy1ppFlCSGtJbs1CmUtrCS2WhBaSlpbLaPFLy62lJbfc
0iqNpCVprZG0GK3lMtekNSyX0VqaS99L/L7er9f5gz+2x/NxPp9z3rfzfp3P
+dYr6HOfecZGRkbnDf95+X/DP+8xzfXut6Iscq+5XHczsNlYA/sUWa/9bKjw
xXEcH+4uvHWCgV++GPOl8LQPDbzCInfCrWfClh+pcfvql1ztZeBreyNGagcI
p3gb+KldwMame/L8rMl83uiWsI2PgU0ML8ysEb79Mec/fFU4c6qBMyNGmqwv
EA7+xMAby57Y6Q8K2003cP0UgwP+wg/8DWygh4PmC+cE0B77FOHwWRzvvFXY
KdDAax9OKYreKdz0qYEN3kVZnBAumKP82yO8bB7t67xF2GW+gV+GoyJOWBti
4AEBG8u2rREuDuX6USuFo8Po7x8Lhd3CDbxopMm1k0nCxhHMx421wqcWGdgw
vNcN/qxbwvmyfYQ9vjDwYMO/v8YImyx/1d7KSMYrIU84McrAu3bu3LngK+HJ
Kzl/KeJpHs18GWcIX15l4GDDv7bxwslfMV6p8NdvtVrvmrDVWq6XckW4Zh3Z
FfOlxtH/s98LB8areOwT7p3A/KQnCNd9w/xvRzz3beT64duEQzZx/caNwvZb
GL8N3wjXb2W8HmwXzk2mv2ZFwhE7uP4/WcLOu5jP0B+EH+9mPodmCxfuoT8O
h4Ujv2W92H4rPCKd9nZDfPQZXC8P9VKSyfn9YX/MPsZ3H/wfk2Xgk0/sAnpW
CLfOVvuli+yn0wcN3NMQgBAz4bjv+fyh14Q9DzF+m5rl/Y6HuT9+GCTj5/KZ
/7+Hy3hSgYHPVlZWehVWvWSfQsY38WdhiyKV343CV39if+i2T3jHMVW/BcL+
x9X+2yHc4wTnO7dZuLaU9bo3QzitjPUWlCkcdMrAAS8DfFvY9jTjHVAtfPcM
8zWxRjjrV843+KFw6G/0b/pNYYezqv/8I9xwTsUT8+ddIOeBF19kPtadFB5y
me/HjpJ4Pb2i6vWCcNE15jOqRDjqOuulDerB9Qbj3wb1/LxGrZ8rXFrL+c3x
fOxNxvM/1O/Y2/SvD7htnXr/kHD5Hdafb6pw/D3VT9HfvP42sIchYQ2bhE0f
sn99iv5yoZ7x+gn7a3MD7Z23Qdi3kdwX83Vt4vx70K+q/lP1gXre9UTVOzjg
GesrDO9ba7j+I/hzU/tqf87Qs37clwvPfa7mw/7sZ6TBemaw9/5rGjz/KEo4
u5UG++GNGcJhbfi8m4ewYzsN6jF3qnBjew37ha9wvokG/nXqIby0owb1GNck
9TDMlPMZtZXx5jc4XtVN+GhnDftDF+GVXWjPif7Co97k+429hI26abCfLbFe
maUG9VfYUXiNFeer6SA8vocG8cx5U7i9tQb5r2sjXNFTg3weaC+c0Iu88w1h
7z4a1NMRjJv1ZTwcX4P+96P/31tD/+00qB/TvtB/e9rbjPOBpQP9CRwsXP0u
5zO1FU4ZyPGYdtD/QcqfxxJPm8Ea7J/4RuHbQzTYP3eeCGcOI89DvINdNOwX
z2XcbgTt8XsL+v++yjfimzOS6+V0h/6PZr2kW0H/3RmPVrCvaQzfd0K8C8Zy
/Sum0P/xjP9KxNvFQ9XP+9D/D5m/ZThPFX+k6sUZ+j+R+bIIgP5Pov/az6D/
Uzi/627ovw/tXZQM/fdlfvagXj2mMT+1qGcTP+b7p8nQ/+lc79Qs6P8MDfr3
s4nQ/5ka7MdFeN98NuOx5UPofyDzmYjzX3IQ1x+5Dvo/l/X9eQT0P5j2h4Fr
5vP5lknQ/wWMz1WsF/gZ85MyHfq/UNn/CfQ/nOs34HyzL0KDfnTFE/q/mPlZ
+xH0f6nK/zzo/xca6j/8z12u8jEX+v8l7RmPeDqvoL3HcT5+vFLtNxvof7Qa
j5H6i4xhPCecEB4Ry/VGZAnrVyv7U4RL1qp+AD2NWc/8dl4hPOZrZR+eb72B
9Z6/X/h0ggb6sHqrcFwi67899NUzietbbRLuuJnz2awUPreF/nRcJJy0jc97
zof+b6d9/wZD/3eq9ddA/3ep/rEK+p/C/mcXDv1P1aBfB0ZA/9M436Rp0P90
tZ/wftpela+vof/fMR7uWN92v1p/DvQ/i/HePg/6n816uY75Q3O4n0zGQP9z
VX/Nhf4foj2zz0D/D3P+jDLo/xHO3y0N+v+Dynec8NNCDc53z/YIFxXRn3E4
z0QdpT0LSoVdi1mvd3C+en6c8a4Gl55gPE/ivBL7M9c7i/PM2JOqHoKh/7+o
eM2B/p9mPh1wHokvZ/yNiqH/FewPqTh/mlbSv/nU/7NqPujv5vPcj3p8P/j+
zv6m+wn6f0n1W3xPVF1mvl47AP2/yvEqnHcCqrjeepyHravVfsP8N28wHiaZ
0P8/lD2Yb+6ftKcS/a/fLca7TRr0/zbnP4Pvi+w69rN0nD/C7ir98JTzr+N9
xifPVrjxb8avshb6/5D2Z5VD//9R+/+S8LB/ma8+9dD/Rsb3HN4/2qT0uBD6
/5jPr8b5cNRT+p/8K/S/mfbEHIf+a5S/+N5Yo9O8ch4b30J/2+H80/4F/b01
G/pvpMX4j/geTjDWYn9GUv9ba5HPFfbQ/7Za5s8N+t9Oy++BD6D/r2up3+9B
/ztoYf/dPtD/Tlqez2dC/021/J5CvaaYcbwS/XuWOecv9hK2sdCin/XB+ez2
m1rsz4HgzG5a6hH0M7g77bn5jrDdW1ru31bQ/x707wbOCznWWp4nYG+4Dd93
w3nGqTfXewE9aerDeBWlQ//7cn5n5GdZfy3yuxX3ES4DtOx3qFetvRb9h+fZ
YgcVb5yXox3pzwf4fnRz4vs2eN/Ymc93KIP+D6Y9cb9B/4dq+T2FcY/han18
z5q8R07C92PlCK635BH031XL+j4F/R/F9Q6egf67MT9hpdB/dy31DP4nf8B4
TYK9fuNYP1NQr1YT+H7Od9B/D44P2g/99+T7h3CeD/SivaXoB729Gb8KxL9u
Et9fhPF9UxTvgP5/TPs34PvHfirrfz++d+qnadGPvwbn+jH/k8ER/qoesD+d
Axjf6CPQ/5lcz/0Y9H826/80OPJTvp+H+4wRc7S8H0J/0s/VvtKvSoI5fitf
OCZEjeP+ZUyo2m+IV+swtT7GTy/kfgpD/OM+Z34eID6eizjftr3CHZdo0Z9m
YfzcUs5vhH6atIzxO4b7E59I5i8B9z0WUXw+Dd9rV1ewfspxn7Xjf7Qv/VNh
/1WsV8svhHt8xX7wvyXCtbF8vtcC4bQ1zH8a7rOC1qn8Yj7bOPoXHyR892vO
vyNGOGuDFno8fIVw6DfMf/9wYYeNrKcR6BcNSWQt9n/eZtV/0B8Wb6U9jfh+
GZLM+un+tvDT7ayPhmHCRTtV/eD+Jmo34+O3Wdh1D5/3Rj6ep3J+M3zflqbR
nuwQ4dgM7o/RGB+byf7TG/d/bfcxP5W4jyjfz3w/Qf+OP6D6D+53vA4y/474
HjD9nvaYfgz9z1X7zQH6n8fx1L/k/OGbr+rLBPpfwH5yBN+fVT8oe5vl+V0/
Mh/dWkP/f6J9a82h/8cYH7uu0P9ixn8Lvr8yShjPC3h+bin3Sy9X6H8Z899+
BPT/pNqPyG/2L+zPl+F/2BnOV4rzveOv6n3UY2OF2g+ol/xKLfT2C8R/6TlV
T1hv2AXa394S+v+76p/8/r+k6nsI9P8K18vC98Soa2p/4T7A6Lrqn8hnWTXz
lYrv6TU1jN88fE+Or2V8r/WD/t98dT9X3GI8lu2C/v+l+gnOR953VD1FQv/v
kX2wfy7e53pX8H239YFaLxb6X0/ejvctG1Q/wnmy+l/m82PcL6c8UvqKeM76
j/VvhPlsnrC+qtEfbz9V/mB/Zzazf3yD826wVuUb9WqnZ75P8fu/hevvRfxz
XrCec+2g/6/p4N9UfA86tSIPBTe11iEfh3EeKGir43kD55Fl7XXYL9U4H7mY
cLxxJPS/g473h4Og/510yHc98hn9Bp8vHQ3976xDf9Ggvoy76HhfORD6b6HD
fusC+9d11aE+vNG/PCx1PC+g/kysdLxvxP1H5Vv0b5wR9P9tHeON+5/JPZU9
qCfzXjrelyCel3vT32zMn2xLez5G//Prp2N+kQ8rOzUf+mXNAL7v2RP6/46K
H+5fAt9lvB8NgP4P1PE+GevXOTF+OegX+5zpfyrmCxlCf7dh/9sPY/wLwfXD
OT4V/T33PR3Pb7Av4n3G7x2MO4+k/164L3o8iv5MRj8qdNOhH3yCfhg5Rof6
XGgM/R/L5420+P4fR38u4T6pZALtr0V/jPmQ83WzgP5/RH9TcP/XeiLjvRf3
iae9Gb94nOfjJuvQjzxwP+XpQ/s7doL++7K+3gOfm6ryiX6b9ImO+oT1fKbz
/XrUh8UMjici/lcDGK8NnaH/s1hP9njeP1D3il70CGJ8/sDztXNo733Uc9o8
+j8c9Rw0n/GLQT+0XcDnI7Ff7oZyf2TgeyQrTK0HDg1X9ekI/Y9gvn2xXsMi
HfpPBOo9bwn9m4X1F3/B9/ugHocs10F/3N+F/kdyfA7eL4pS8+H9qJWMz0PU
k2v0q/F7vor+uUE/S79iPYzCeOxq1ksf1NvYtczfdOhN2/WcLxz1Xx7H+PVH
f4mPZ3ycoRdeCZxvL9g0kfXliv16YSPrQYv4bN6kQ3/v7yTsu4XPe+H+q+s2
xnMs6q8qmf5fQH537WC+ys2g/7tYT3rUv3UK3y/A+M09jIcN/Mv4lvbnY/65
6cxvKLjfXvqzBfV8P1PtN8Qrex/jsRzPh2VxPAn5dMxW802D/h9kf7yD++z8
79V866H/hxjv57hPGHaY+XKEnjXn015z6OHRAsbvGu4/Vxaq50Oh/0XsT8m4
nzQ6qtbDfWTZsVd5zXEdzg/l0KfxJ1S88L3d/meO38d5uqJM9U+cnxNOcf1E
zOd9WukF7pvNyjnegPP6xV9Vf8LvKVt/Y/6KcZ8z7SzzW4XvQcvzXD9yNH7/
v8B6cZiJ3/8v8vmQ6cKzLnM/LfITtrlKf/LGCd++xvx4YjzzutovRcLBN9hP
Jp4StvuD9pY8EH5Qq/rd4BsvOeemyvcE4fDbZCtjYac6pb+Wwk13lL/thAvu
cfy6VuZf9rfq921k3OWh0j/Mp62nf+n/yfPFDXz++FPh6Eb6c+GZsFsT39+I
9YwfM34JpsKnnnB8VRfhdc9of4WFsIdGjVsLm+iYj2Yz4Uo97ZnypnDic9bz
KH/hyUZ63g/AfnNjPb+vzIUvt9JTP7sJJ7fh8x+A/drpsd/u2Qtbva5H/bXq
Llxjouffc+jE39SOevgXcEU40FTP+8BLwr3N9PTvsnBdZz3PB5XC+7roeb9z
VzjkTc7/aa2wfTc966lauN6S/pT/KZxrxXGjm8IRPfSIR0l/sdfZmusfbSv8
uKee/eqePF/Yi+ullwtH9qE9M/KFR/RV/pwQ1vfT8/6hULjEjvMt/VY4xl5P
PU4XHuOg1tsv3NqR9vhn4ff/gbTfaQ9+/x+kp14fwe//gzluViLccaie39/w
/9wwPe8bK4STXPToV8vPCPuMIP94VtjCVY/9ZQ2+OpL+dMf+2zFaxfOGsL87
81v5WLjHB+QE5Ld2LNe/eVE4bTzHizEe5MF6e1IlbOtJ/7WtJB93P2K+EjsL
Z03k8+OwXugk1ov7Q2GHKYyPV2t5vsGH8bXA/szzJdfB/sXTyJnXhYf40d4k
1NvT6Xr+nlAnXDRD+T9C5o+ayfEib2HX2Xrqg4vw80A99uv5PsKlQXw+xE44
di7z1Wmk8NhgPb+f5wq3DWF++vsJly+g/22GCsd/xvq7O1zYayF5nZuw6efk
fu7CFyJov5un8ObF3M/Lxwv7LuV6E7yEuy6jfS3or1XL2Q9aNUg8dn2p7GkU
DlhB/1xeCFv/j/vlM/TTm9GMTyzikRHD+rpuIzw3lvmvRv/qt4bvH0P/u7+W
9bPSUTh7PeM7G/kO+5r1G91B2HED82sLbkxgv1qN+spPZH2FY3xpEt9P7CQ8
bLPKF9Zv3sLnG8BHt9G+99EfV25X+wn9cNRO+luG+jXazfgnwb+yFI7fRr9f
k0r/aqA349PYL45CH9pnsD5+aZF4Vuyl/6MR34TvOF8Q9MZ7P/O3EP3Y7ADj
fQDPX8ym/Q+xn7bmqH6N/E3LZX08M5L1LfMYvy3YT9WHGa/n0OOUI1xv4r/Q
/x9YLyf/hv7/SHu/xfu3i2jPANiXeZT2Z8C/4GKu99frsr5dCev5Kex7cIL1
dwX+5PzMfMWhPsNPqv0K/5x+Yb/ojH7RdJp64QL7Cspp/54n0P8Kvl+K9Vwq
Vf6xnvYsx2MQn+Lzqp67Ckf/zvjuthV2u8T3TeGP8RVlH+r31FWlhybQ/yrm
3wrre1Qz3g04X5jUMB7DjglX/sH4roJ+Jv6p9kux8ORbKt/QL/O/VD7Al+vo
/z+HhJPvqv66W9jvvur3e4WtHjB+fgeEax5yXA+9Sv2H8XgP7wf+Sz39fQb0
/xHzexLnxbomFY9Z0P/H7MdOs6H/T2nvwHnQ/2bat2kh9F9D+48vhf7raF/V
Euh/C+MZFSjs/IL1Yucv/NiohfedIdB/4xb+PQzWi2zdwr+P/AT637aFevEh
9L9dC7/f4F/J6y3MNzimQwvPw/BnTKcW9uNF0P83WuDfnxuh/2YtPF8nQP/N
OX4+EfpvodY/CP3vyvGBedD/bpw/CefDpO4t1P9ewj5v0b7Ut4Ut3m7hfSf6
01XrFp7vUO87bMhHUH/+vfm+dRP035b+v479Vtu3hb/P1EP/+9Oe0rdk/qAB
5Bj0S9t3GO9E9Lu7DoxXOuzPcmQ8VuK8GurUwvOSYX/8H+7xmzA=
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxVmntcz9cfx5OWhJaEFktuLa3FsGYt/dKSRksaLWkk5NZaSFpacstlfgkh
La2Ry2KNmLUkubW03G9Js5hL0q9hSd9L7ff1fr3OH/wxez7O53PO+3ber/M5
X73DvwycYWxkZHTB8J+Xfxv++Hs11494+T+eDys9DX9Zehu4wG7l4xFPhC+P
NPD6k88d9T1uvuS0UQZe+XhcQbG7cNDHBo4w/AmKELYZY+C8UXfi00qFq/wM
3MvwQvAJ4Ux/A5967hg6MFt4cgDXe/eAsH2ggYeb39gZnS9891PaVzJeOGeC
gRdb542aN0M44jNlv4ew40Sub/KGcF2IgTO2bdv2Rh/h/aF8f8Mw4ajJBs6J
Hm7ezlt4UJiBQw0Om4UIP5tK/x6sED48jeslRQvHzjDwPIPBp4YID5tp4ECD
Qx18hLWzDNzkGLp+Y6Bw0RzaM2CqcGKkit9nwp5RjMdT+GcczXHTUOHT8ww8
xPBn50jh5AUGHmAw+IxW8uW7kPYZvSbj5ovoX/eBwhVx9L/NAuGUeAPfibfO
WxUsHJDA9ZomCVsl8vlLiMfVJQY24J26D4W3LKU/Gj/h4OUGrh9XYDchRth2
Je09hPWqk1U+vhTOWs18Na4TDlvLeHZZItxnnYF9DQY2IF73/qv8my68e72B
z1VUVNTPE561gf7+hvmdNrFe7ZCv+jTOV7xMOG+Lyv/XwtHpKh9pwoMzyA6o
18ZvWZ9GW4WPbKe9m5YKx33H/H2/WNjte77vM1tYv8PAhuoeHrJIuDiH8TiL
95N2c/4a+O+1l/EfB3tMcrmfHA8Jl+4jm1UIr/5R1edV4dE/0b9VPwh3PMh6
GYn9cT5fxbON1E/qYfW+5sZLDjyixufIuHUB4+kyQfj6ryr/K4TTjzIffkuE
Q47R/9Lpwj2Pcz/kzxa+XUL7FiULZ5+kP3sThMNPM15uScL9StV+PC384DfW
28KjwnvPcv8GlwvP+Z3xO1Eh7HyO85dVCTecV/3jmPCBiyremG/+ZRWP9cJD
r6p4gJuu0T5ze4lnwQ3WlwvqKf7mq/3L/Rbtj7UWbq1mvWywEi65zfGIKcLL
atR6Y4S97yr7Jwub3jPwy3a5HfVUdp/7bVqs8NqH3K9Os4T9HjH/MyKFLR6z
fqdh/1ys53xfYL9tbKA/Uejv459wfDjqu9szVf+Yr/Ifzr9wonDGc+Z3z0zh
0Besj1D0AzuN8u+pxLNGy/hPtZHxHXoVv/7C01v5vv5jYQcjDcbDgoRr22hg
T1v0o9y2GtZ7W+HI1zTYX2EWwi7tNPCnk7PwEzMN/M1qEXvyzTXsf2uEYzpq
WP+oJ1cLDfr9rUvCza9rkL8t8Kewswb1HviPcEIXzve0WdijK+fzhz1G3TXs
B22ET9rQPyPo8wpbDfr1zP8J+/TUIN8LYK+ZHf15s0a4vJcG+t2zUnhdbw32
R1yDsH9fDfcX7LPsz/VKHkH/HWhf6z3hNEcN9Hs99CXISYP6CmmVcRtnDfLj
jvNC1Tuv2p85UIN6v4P4TH6X9vc9KGw/hPHKB98dyvU9bgvnuPL5IbXCEcM0
0I/Tj4Ud3ehvKOJT9yHzmWIC/R/O56d3hP7/h/78awT9H0F7s1/I+8+8mN99
GuHD3hr0m13Q21gf2nce48N8mf8InbD2Y7JpT+j/GBUPO+j/J4zHU/QPz7Ea
9kPsd+NxzFfzOOh/oBp3gv6PZ33fHyzsG8T4tH0T+h/MenjHAfo/kf58A/1O
mUQeg/NcwOesz859of9T6F/Wu9D/MNbnGi/ofzj98cT5JHg6/ZmK84RthAb9
Km4E9H8m7buC81fWbLV/MR42l/O3Hw39/0LzSn+9F8X8RoJ3R9PeqTjfzJqv
9hPmd4pR+xHz1y9k/GYivnmLOH7dE/r/FdfLQH4GLybnol4aE2jfB/Mkv0cS
WV95HYXjkjg++zNht2X0LylcWL+c8TCLEC5e+ep40irme/Wnwl5ryMOihU2+
Uc8vFy5dx/22H3q5OoX5nDtReHQq7Y93E+64kfWya4rw+U3sl6cCoP+bGV/n
scKBW/m+1g/6v43xex/2Xs+gv78GQv8zGf882B+Sxfjudof+Z9O+Dy2g/9+r
ftMb+r+T+3OoK/R/lxp/H/q/h/OnYL4He9kvvHyg/7kcTxwK/d/PejvUA/qf
x/175l3o/0+s1xNfQf8Pcj6rtdD/Q5pXzj9Df6Z+2MdA/4+w/9muEi4oYD6c
cT6IL6Q/ORuF3Ys4f/g24dZjjHdCjnDJcdaT/z7hZSc4f8Y5Ye9TrIdK6I/p
Gca3FN8/ZaVcf90o6H+Z5pXzt1858/8c52eLCuUPzqcXz3E+nyjo/wWub47z
6PhL7Cfn4qH/VzhehfNA5VXalx4G/b/O+WKxXmil0l+cR+yqON8fmK/mllp/
LfT/D+bTIhH6/yfXWwt7He7Q32rYV3uX/aA3/M29x/jWx0H/H3D/lWF+l1q1
n/D99eQR2XK3cP5j9TzOzzH/I88qFnb9m+uNOCnc/IT7pW6fcOEzPp++TTih
kfZW7BL2aKJ/DbnQ/2Zlzw7ov0b1V3zPrNApDhD2aVH1if5m9i/reWkv4XIj
Lfvnn9B/Yy2fvwb9N9HCno7QP0tTLc4Xe/6F/rfTIl/Z0K+09lp+3+L8ENRB
C/3sBb206aTl9yH0tspCrfe2cKalFvXYBee5yVa0r/AdYXtrLc8veP5uV66f
hP6b012L/nMD/TniDc5fcgj630OL+umG809dT86fi/uM/XZa9KuPoddR9lr0
g5HtoP99tNh/FubCz/rS3k/fFz7cn/GqmCsc+xbHDyUIDxvA9xvwfal1oj2m
qMciZ8anEPlMdNHyvgTndc9B9O8X1KfxYC3q130j9H8I438L9ZH8Hsd75kD/
36d9kag38w+4XhW4wk3VA55PcdeyXlCvAR4qfrh/sfLk8/EHof8jGG9LfK9v
+Yj5+hEcPJLr+22G/o9ivNekQ/99tby/2QT9H63qIxX678f3nVdB//216CeO
eP7eWC3PI4j37nGMxxh8f8z6lOMp6CdOExjPUchHfRDjlYn7nLxg1u/AZOh/
CJ/fsx76H8rx41nQ/8/J69EPjkxhfLXIR9xU+jsgRdhtGuNzDKyfTvvskM/i
CPpbhPuEpFmMRxji5zVH5QNsEqmFXn+UIVz6hap/5Hf1l6/Gc/Q8NQ5/Oi5g
vV7ZIHw+hvvLCPFJjdVCn3aECwfG8X1P3AdZx6v9u1D4+mLWhy30Jv1rzpeK
/RyyhP3kBb4Hey7Voh82Qw9uL1Pz9xbOXsH4tcd5LjxZ9Sc34X6r+XwS+seD
Ncz/pAnCe7/hfn4P38dz/sv4xWL/O6/XUv/w/dKQyvp/aix8YCN5A77P5qex
Xk90kPGhW+ivE55v2sp6uIDv+YJtKt6uwvHfcn0H1Kv7dpUf9IPWLOUP9LIk
m/XyxXDhZTvof4KvsHcO/ZvRTdh0N+O7Ffc5ZXsYD11n6P8PKr/oZ377OF8m
7LX4kfE+i/P0xTz62yZT/N94QNk3U3h8Put38gXhbofVfLhPqfxZ7Yezwhm/
sF7/gd6E/sr1fq0TtjtKf7fr8f1fRHtrML6jmPn4vlF4egn3rx7fmw4nOX4C
/tWeoj37oV+5Z5SeIR6Rv7GfNON7xuUs62ElvoeelKv9i++D/ArVX/D9FHNe
5Q/ruV5U9Qs9bL7E/m/XhO//K8x/siX0/xr7/VV873vcUPGFvhnd5P4zRj5O
VtFeX+jdimra9xW+73xus1+9Bf0yq1F6jHotv8PnJ+L+c91f9PcMzk/+95nP
BtxPWT5U9uC+53It47cInFbH/d8X58OgesZ/Ku6HbRrII6ZB//9mPkLxfOZT
1oct9HPyPxyvx7j9c9p3H/V/t4nz3cH9fE6z6n+20H8t/buJ+DvqVfzvQ/9b
2G9sEI/9//L9Be2Fo9rosN57r0P/2+r4fTIU+m+i435/D/pvquPvB+hPsWY6
5pf3/+Y67n8z6H8HHew/iPucok46xhP5S3xdx/uDftD/zsoe3EcZd9FRz7Ff
T1tzvs64X0nuRp6K/eNrw/k8ngmb2+rYn7AfKnrQvmjsx5Q3ddz/OL8F9NIx
vs+FrXrrXrm/udpHx98TsP+29KN9fvAv2IHxGo39ZuuoQ/wLEP/qAWo+nDez
3ua4L+wLe0fH+wrEr89AHeptkyn0f5B6H/cruwe/Gp9ZQ+l/ItZ3cmU8dyFe
9e/r+HsD1sv7gPnr1gn6/yHzswrvDx7O9T/Cfm70UPnFfdsRTx361QGcN+O8
dOjPmxEvN2/O9wL3Z/qRjE8u8lM8ihyP+7akj1l/39bj+38M620p1jf5hOvV
IN6l/jrqNfRodQDjdw7n29GBqt4Q747j6e8D2H9+Av2bhvpJ/Yz53YP7rcCJ
rA8N4m09ifWxE+9fD+X8DxHP9Mk63h9g/ZAw1t961EvPcOZjM74Pbk/TUS/Q
/7JnKH+7Qv9nMp4ToHf9Ziv/XaD/c9T+xHljbyT9c8D91Zwo+vMWfv9zjtah
P3hg/zXMY/2l4/vmwALat7CL8PyFnM+0O/R/Ef3dg/ma4lgP9ni/IJ7siX4d
n6D2M/qzeyL9uYb8tS5hPLsgHiVLVb1hvyxbznhmYj94r2R9dMDzpqt0PB+j
XstWq/qC3qxdy/h/6Qj9X0f/Xd6C/qdwv1ggXhfXq/XAGzeo/YXz2fhNzE9v
5LvbZo5noh4qtzCeZrh/zUhn/dxEfYZmMJ4+qEe7TLU/wTXbyfehrzu+YzwO
4bw2/Xu133B/7LCT/oagXmtzFKNf5O7mfvfG+pF7uf519H+XXFXfqIcn+5iP
K+jv+T8yPlHo/zE/8fmv8Pus60Hm4yjuO5vzmY9a/B5ReFj157HQ/yMqHhj3
KFD9CO8bFXK+t/H7xcmjqt/hPLLimMon9NrnOPf79k+g/yeYX3+Ml5+kP9PA
604zvwk4L/uXKj3B/a1lGfkSfv+5fJbxLMTvUWm/q/lxfxN0jvnwxPeDzQXG
NwjfN1UXlf02VS8587LqT0OEJ18lH+srbH+d/WBOf+G7N8h1zsI5N1l/l0YL
R9xS+rpF2PEPPh8Crrut5i8U3l/D+M6tF466y3qNqxQedI/v2z4Rfnaf/hYf
Ej78UPX/MuHYR4xPHeYb9pjjNbXC2nru9643hIsaOL/TH8KJT7h/qh8Iez5T
8bsrbNyo6v+x8OnnnD/1qnDyC/a3G3jeV8P3IzTC5jr6+zvsq9DT3iqjWy85
pZXx+aRJxgOM9LxPrRC2MtazX+uEr7bVK/0T3vIa2b5VOLidHustNpH5bdtz
POmpjFeb6/n71QHhrI6cf+HPwmEWevajYuE+lnqeH34RvteZ83kiH7u76Pm9
clx4Vlc99aFU2Km7nr8PY756G/qXf0k4z1aP+ukNju7J9RzLhQfb6RGfzwuE
G3txfaNjwkd6096sucJxffXU163Cbv05nw1Y70D/260RLnak/ZcWCCc58X3X
OGEvZz3yVY56NnHR8/e+BOHSgcq+5cKr31X2pwiPHkL7or4T7vge/d2wV/i8
K+3p/qtw6jDm70P4G+jG9ddi/1i7c77JB4WvD2c8rZDP9P/Qn86YP2SEnr/P
FQn3/EjP318Qv9veen6vnBTO9mE99M8XDvdlPJr2CPcbrZ7/QfjBGD3Pr5eF
936i5/cd9uecsXw/+Tdh53Gc//lD4YZA9T7204HxKj6ol/lBrCf7M8JDg/Xs
fxeEmybq+XvzOeGCSYzf26in+M+ZnzftZT+4T6F9Zs0y3hqmZz/GfioJ53x/
dZXnl01nfvb0EPaOYP2l9hE2naVX5xvhstmM/wYr4bVz1fq9hP2+4PsB7whb
fMn1IwcLX4xW+/UN4Y3zmb8Y2D8+hvXl2124W6ye9zOnxf7KRYznD3nCGV+x
Xv9CfEMXkz9Cv7P7mvMPvSlck6j2T53wjiQ+36W9rDd9Ged/ZCbssELP30cQ
v9qVqh/phXNXcbwc+Y5cw/j01gq7fMP1G/H8k3X0L/2FcH4K49cJ4zGprAdL
9DvXjbRvJ/pd8yauV9hGuHAz41tvKpywVe1/c2GPbexPm/G80beqH2C+k5nM
71b0zxVZ3G/Gz4V9spV/sNdsB+39EfEr38l6nvqn8LpdrD9HxMN/D+v1MfTD
8gfWdyv063Iu7ZtxTzhtv6oPvB+Up/Zjg7DNAdbv8kfCVQfpz1Tsv8xDqv7u
QP9/pj+Da6D/v7Cequ9D/wvo/4u/of+FXG/gM+h/kcoX2LGY+fgU+6vu+Kv2
7j9B+6ah/qJO8X0zxGfQGa5fXw39L+XzVy5C/8sYb1vEI7ac8ZuE88KwCpVv
+K89x/oywXjRBfqzCJx4ifkZgXx5XlH9BucF42uqn8D+09fp3yb4m1zJ+XOw
nm8V62vUCuh/Ne2p/hr6/4eaf4dwyp+qXtCvA+4wX0uhF1Z/8f0iPH/1ntL/
NOj/AxVf6E9wrdLnJGHbOqWXqdD/x9zf3RKh//9T+tkW+v83493FHfr/VK1n
D/1/xvcdPKD/jfQnzAn630R/jnlB/5sZv29DoP8avm86EfqvY/0Ffgb9b2E+
ToyF/v+r/POF/hu18N8fjYf+G7dwv+M8GmfSgvpc4gL9N23h+6bQ/3bkME/o
f/sW3m/6Q/87tCCf1mCvThy/BHtNXud4zBTovyXnM1oE/bdq4fd5JPTfuoX3
C1HQ/24t1B+cR8535/wjtkH/3yCPQ78L7NHC+wuc/6zf5Pr9rkH/7Vr47yGg
h+n2tKcE+ymkTwu/T45C//upeOC8cLs/2RL7K/utFp4HcR4PH9DC82Aj9P/t
Fuol+t0DZ/p7CufdvS4t/Pe2eH7OoBbWi6Gf/B/kunPn
         "]]}}}, {{}, {{}, {}}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, DisplayFunction -> 
     Identity, AspectRatio -> NCache[
       Rational[1, 4], 0.25], Axes -> {False, False}, 
     AxesLabel -> {None, None}, 
     AxesOrigin -> {3.8882556*^9, 24355.550555555612`}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {
        Charting`DateTicksFunction[Automatic, DateTicksFormat -> {Automatic}], 
        Charting`DateTicksFunction[
        Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}}, 
     GridLines -> {Charting`ScaledTickValues[
        ((Transpose[{#, 
          Table[
           Directive[
            GrayLevel[0.4, 0.5], 
            AbsoluteThickness[1], 
            AbsoluteDashing[{1, 2}]], {
            Length[#]}]}]& )[
         Part[
          Select[
           Charting`DateTicksFunction[
           Automatic, DateTicksFormat -> {Automatic}][
            SlotSequence[1]], And[
            FreeQ[#, 
             Alternatives["", 
              Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
          1]]& )[
         SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
     Method -> {
      "NoShowPlotTheme" -> "Detailed", "AxisPadding" -> Scaled[0.02], 
       "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.647624, 0.37816, 0.614037], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.571589, 0.586483, 0.], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.915, 0.3325, 0.2125], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
          AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
       "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
       Scaled[0.05], "AllowMicroRanges" -> {True, False}, 
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       TemplateBox[{"\"BTC-EUR, coinbase\""}, "RowDefault"], TraditionalForm],
      PlotRange -> {{3.8882556*^9, 3.8908404*^9}, {24355.550555555612`, 
      28050.09}}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.2]}}, Ticks -> {{}, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"Time\"", "\"avg\"", "\"max\"", "\"min\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm], ",", 
               TagBox[#4, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.890858546201932*^9},
 CellLabel->"Out[129]=",
 CellID->2079181603,ExpressionUUID->"c36e0f1d-c8c9-4f66-9f93-be312fb33c68"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Volume data", "Subsubsection",
 CellChangeTimes->{{3.833104754140896*^9, 3.833104757258219*^9}, {
  3.8331052261504383`*^9, 3.833105226816271*^9}},
 CellID->220148026,ExpressionUUID->"ec7445ae-40e0-40d3-86f1-a3555f7c59cc"],

Cell[CellGroupData[{

Cell["\<\
Here we extract the non-time columns (corresponding to exchanges) in the \
tabular volume data obtained above and plot the corresponding time series:\
\>", "Text",
 CellChangeTimes->{{3.833104759688319*^9, 3.833104810787183*^9}, {
  3.8331048744526777`*^9, 3.833104896754148*^9}, {3.833104940210567*^9, 
  3.833104956602195*^9}},
 CellID->2061032848,ExpressionUUID->"66e35c93-07a8-4c3b-b3d3-0566994a220b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DateListPlot", "[", 
  RowBox[{
   RowBox[{"Association", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"#", "->", 
       RowBox[{"Normal", "[", 
        RowBox[{
         RowBox[{"dsBTCVolumeData", "[", 
          RowBox[{"All", ",", 
           RowBox[{"{", 
            RowBox[{"\"\<DateObject\>\"", ",", "#"}], "}"}]}], "]"}], "[", 
         "Values", "]"}], "]"}]}], "&"}], "/@", 
     RowBox[{"Take", "[", 
      RowBox[{
       RowBox[{"Normal", "[", 
        RowBox[{"Keys", "[", 
         RowBox[{
         "dsBTCVolumeData", "\[LeftDoubleBracket]", "1", 
          "\[RightDoubleBracket]"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", 
         RowBox[{"-", "1"}]}], "}"}]}], "]"}]}], "]"}], ",", 
   RowBox[{"PlotRange", "->", "All"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", 
    RowBox[{"1", "/", "4"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
   RowBox[{"PlotLabel", "->", 
    RowBox[{"Row", "[", 
     RowBox[{"{", "\"\<BTC volume\>\"", "}"}], "]"}]}], ",", 
   RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8331044547078037`*^9, 3.833104527257929*^9}, {
   3.833104561797495*^9, 3.833104705169992*^9}, 3.833104749959674*^9, {
   3.833104817021659*^9, 3.833104863180373*^9}, {3.833108667671238*^9, 
   3.833108701713148*^9}, {3.833120821011113*^9, 3.833120827703806*^9}, {
   3.833120920893124*^9, 3.8331209248654003`*^9}},
 CellLabel->"In[130]:=",
 CellID->867850226,ExpressionUUID->"f1738f7d-b27d-49a2-a309-f8eb1d31039b"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, {}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQQctj/eOK609UizD7zmAORbpAP59Zp+ljMWnAfx
MyYC+R4FButudzwA8WfsBvJLa1p/TxK6BeKfeArkf1ZKyt21+iqI/4P/5xvH
Z5oH23/ePgTia1gB+Sy8S3yDVA6D+BEpQL5JT2EJ190LIH5HH5B/03/P+2/d
p0H8HTuA/OV7ipm3e18E8V88AvI/L26Wkam+AuJL8P564yjInq0bXnkJxPcw
B/JrMhtucfnsBvErEoH8GysXyP0y3gXir+gG8veJy+1lgfjnxlYgPyX86cKf
z06C+BwPgPyK3057YnLPgv3P9fuNY+pHGavnkkfA/jcB8tdOF1909Po2sP/j
gPypIrUVq2XWgf3fAeQf+2m1K/fHdrD/NwH5HxMWvFc7cg7s/7tA/q+/oXp+
xmD3RrD/eeMoJDnxYJcF2L4OQyD/+TS9l4tyToD9Hw3kX8iL/TzR7zLY/61A
/qOsdU925G0F+38DkP9i3s+j9mE7wP6/BeTr2Sy9x2J6Cux/lr9vHC/fnHPt
0JYTDgDDX9pd
         "]]}}}, {{}, {{}, {}}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, DisplayFunction -> 
     Identity, AspectRatio -> NCache[
       Rational[1, 4], 0.25], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {3.8882448*^9, 0}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {
        Charting`DateTicksFunction[Automatic, DateTicksFormat -> {Automatic}], 
        Charting`DateTicksFunction[
        Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}}, 
     GridLines -> {Charting`ScaledTickValues[
        ((Transpose[{#, 
          Table[
           Directive[
            GrayLevel[0.4, 0.5], 
            AbsoluteThickness[1], 
            AbsoluteDashing[{1, 2}]], {
            Length[#]}]}]& )[
         Part[
          Select[
           Charting`DateTicksFunction[
           Automatic, DateTicksFormat -> {Automatic}][
            SlotSequence[1]], And[
            FreeQ[#, 
             Alternatives["", 
              Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
          1]]& )[
         SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
     Method -> {
      "NoShowPlotTheme" -> "Detailed", "AxisPadding" -> Scaled[0.02], 
       "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.647624, 0.37816, 0.614037], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.571589, 0.586483, 0.], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.915, 0.3325, 0.2125], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
          AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
       "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
       Scaled[0.05], "AllowMicroRanges" -> {True, False}, 
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       TemplateBox[{"\"BTC volume\""}, "RowDefault"], TraditionalForm], 
     PlotRange -> {{3.8882448*^9, 3.8907504*^9}, {0, 33862.8650133317}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.2]}}, Ticks -> {{}, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"Time\"", "\"\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.8908585463201017`*^9},
 CellLabel->"Out[130]=",
 CellID->951297637,ExpressionUUID->"972d4567-662a-49de-81ca-62a8900798b5"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["References", "Section",
 CellChangeTimes->{{3.8328473724088707`*^9, 3.832847373376753*^9}},
 CellID->249817958,ExpressionUUID->"5a42660e-f031-4454-95cf-41dfc718cbfc"],

Cell["[DBO1] https://data.bitcoinity.org.", "Text",
 CellChangeTimes->{{3.833099659551116*^9, 3.833099713124411*^9}, 
   3.833101455127782*^9},
 CellID->359890221,ExpressionUUID->"bd819cb5-2961-441e-974f-c61705e5952e"],

Cell[TextData[{
 "[WK1] Wikipedia entry, ",
 ButtonBox["Cryptocurrency",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://en.wikipedia.org/wiki/Cryptocurrency"], None},
  ButtonNote->"https://en.wikipedia.org/wiki/Cryptocurrency"],
 "."
}], "Text",
 CellChangeTimes->{{3.833099740698612*^9, 3.833099769929324*^9}},
 CellID->1360994395,ExpressionUUID->"9b9ba125-9dac-4ab0-b1bf-dba4a49e1d78"],

Cell[TextData[{
 "[YF1] Yahoo! Finance, ",
 ButtonBox["Cryptocurrencies",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://finance.yahoo.com/cryptocurrencies"], None},
  ButtonNote->"https://finance.yahoo.com/cryptocurrencies"],
 "."
}], "Text",
 CellChangeTimes->{{3.8328473750671043`*^9, 3.832847377583312*^9}, {
  3.832847414695397*^9, 3.832847478171085*^9}},
 CellID->1384472568,ExpressionUUID->"3d1d0293-9fb0-497a-adac-43bf2d3010f7"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Related Guides", "TutorialMoreAboutSection",
 CellChangeTimes->{{3.843042384656711*^9, 3.843042386024461*^9}},
 CellID->1466865277,ExpressionUUID->"b99b5ced-c4cb-4ec3-8ea7-f8c1f05ecdfb"],

Cell["XXXX", "TutorialMoreAbout",
 CellID->492442979,ExpressionUUID->"f6313308-08ca-46a7-a85f-3cb77e78e876"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Related Tech Notes", "RelatedTutorialsSection",
 CellID->87172515,ExpressionUUID->"4f8d9882-d436-4299-8639-e6cd8694c43e"],

Cell["Cryptocurrencies data explorations", "RelatedTutorials",
 CellChangeTimes->{3.890858786420815*^9},
 CellID->524612351,ExpressionUUID->"4f615c67-b4ff-43f3-8cf3-623dd28434d8"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Metadata", "MetadataSection",
 CellID->1739412322,ExpressionUUID->"0c375b4d-ad6d-410d-96f5-1d55ae795380"],

Cell[TextData[{
 "New in: ",
 Cell["1.0.1", "HistoryData",
  CellTags->"New",ExpressionUUID->"b12c97cc-9f61-49c7-8286-b84da0cb4f43"],
 " | Modified in: ",
 Cell[" ", "HistoryData",
  CellTags->"Modified",ExpressionUUID->"672cc66e-b62c-4dae-831a-89b65b054858"],
 " | Obsolete in: ",
 Cell[" ", "HistoryData",
  CellTags->"Obsolete",ExpressionUUID->
  "f7495d26-ece3-4ef0-ba45-685839531c6d"]
}], "History",
 CellChangeTimes->{{3.890858431075316*^9, 3.8908584363511953`*^9}},
 CellID->608009243,ExpressionUUID->"bc98bc9b-a8ab-4bd7-8729-2dd8bf62e48a"],

Cell[CellGroupData[{

Cell["Categorization", "CategorizationSection",
 CellID->1084154675,ExpressionUUID->"1372ad14-99f6-444f-8958-49c51be7972f"],

Cell["Tech Note", "Categorization",
 CellLabel->"Entity Type",
 CellID->2136361577,ExpressionUUID->"6314a90d-516e-445d-b182-e520f39f20d6"],

Cell["AntonAntonov/CryptocurrencyData", "Categorization",
 CellLabel->"Paclet Name",
 CellID->2049930446,ExpressionUUID->"252af714-e2d7-4066-8ed1-322a39fd1671"],

Cell["AntonAntonov`CryptocurrencyData`", "Categorization",
 CellLabel->"Context",
 CellID->1100857101,ExpressionUUID->"8b2c3d46-3da2-4e82-9156-7fbd634070af"],

Cell["\<\
AntonAntonov/CryptocurrencyData/tutorial/Crypto-\
currenciesdataacquisitionwithvisualization\
\>", "Categorization",
 CellLabel->"URI",
 CellID->1533677602,ExpressionUUID->"dd679f92-f717-4b41-977f-1f197ff58092"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Keywords", "KeywordsSection",
 CellID->273241873,ExpressionUUID->"01e1f4c8-c396-4343-b640-c9509680eb80"],

Cell["Cryptocurrency, Ingestion", "Keywords",
 CellChangeTimes->{{3.890858825723175*^9, 3.890858829903392*^9}},
 CellID->1056122225,ExpressionUUID->"85f9e912-62d4-4cd2-9801-7282086f0fa3"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1177, 1080},
WindowMargins->{{1045, Automatic}, {Automatic, 73}},
TaggingRules-><|"Paclet" -> "AntonAntonov/CryptocurrencyData"|>,
FrontEndVersion->"13.2 for Mac OS X ARM (64-bit) (January 30, 2023)",
StyleDefinitions->FrontEnd`FileName[{"Wolfram"}, "TechNotePageStylesExt.nb", 
  CharacterEncoding -> "UTF-8"],
ExpressionUUID->"c1f3e5ca-8e23-4f66-ba4b-42091e17966f"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 146, 1, 114, "Title",ExpressionUUID->"136e45c5-6bad-40e6-8a67-21df6668c7b5",
 CellID->1314978730],
Cell[CellGroupData[{
Cell[751, 27, 226, 3, 45, "Section",ExpressionUUID->"ee7766aa-34d4-488f-a1c0-03333f87b794",
 CellID->1623692738],
Cell[980, 32, 716, 11, 63, "Text",ExpressionUUID->"6061885c-6fa4-41c7-b118-7f61299bd763",
 CellID->1329145137],
Cell[1699, 45, 632, 10, 82, "Text",ExpressionUUID->"264924c2-f72c-4679-8a78-b70625356b93",
 CellID->817421465],
Cell[2334, 57, 330, 6, 25, "Text",ExpressionUUID->"b493740e-f3d8-4256-9ad7-0a89be186115",
 CellID->949672396],
Cell[2667, 65, 469, 9, 44, "Text",ExpressionUUID->"e814f3ad-a61f-469a-afba-24b37164777d",
 CellID->1045495068],
Cell[CellGroupData[{
Cell[3161, 78, 244, 3, 41, "MathCaption",ExpressionUUID->"9e3d0a9a-377e-446c-8877-d15965462ce5",
 CellID->2128220291],
Cell[3408, 83, 293, 6, 27, "Input",ExpressionUUID->"9c0e7f00-9de2-45fe-8205-c74ca64e06bd",
 CellID->510806405]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[3750, 95, 326, 4, 45, "Section",ExpressionUUID->"c50a4f36-345c-49d9-b2dd-f6ab4971b35a",
 CellID->924408122],
Cell[CellGroupData[{
Cell[4101, 103, 359, 4, 42, "Subsection",ExpressionUUID->"3d227464-fdd9-4b01-93f7-14e8cb011c66",
 CellID->1630604056],
Cell[4463, 109, 240, 4, 25, "Text",ExpressionUUID->"4c052a63-f099-4190-bd6b-07d3003fdc66",
 CellID->1523549825],
Cell[CellGroupData[{
Cell[4728, 117, 207, 2, 25, "Text",ExpressionUUID->"146b697d-9853-4a63-97f1-930af9cbacef",
 CellID->1854385594],
Cell[CellGroupData[{
Cell[4960, 123, 514, 12, 66, "Input",ExpressionUUID->"a7af4569-c6a2-495f-b78d-44ac39a9a074",
 CellID->228509447],
Cell[5477, 137, 225, 5, 26, "Output",ExpressionUUID->"5119257a-c5cd-412e-a433-1ff3bdb7bbae",
 CellID->484941240]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[5751, 148, 228, 3, 25, "Text",ExpressionUUID->"3088ca8d-a4e3-4814-b27b-e710b4b806a0",
 CellID->857514893],
Cell[CellGroupData[{
Cell[6004, 155, 950, 20, 104, "Input",ExpressionUUID->"5955b557-e0ea-4114-833b-418d2b5cb2e3",
 CellID->490051634],
Cell[6957, 177, 610, 12, 84, "Output",ExpressionUUID->"7bac9465-e049-46a2-bf32-475681b4d31d",
 CellID->706980315],
Cell[7570, 191, 170, 3, 26, "Output",ExpressionUUID->"7605b349-7d3b-4d4c-a2c3-e05fbf309cab",
 CellID->191135354]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[7789, 200, 170, 2, 25, "Text",ExpressionUUID->"f7e43289-c1d3-4761-a83d-71bf6bfc41fe",
 CellID->698026393],
Cell[CellGroupData[{
Cell[7984, 206, 689, 14, 47, "Input",ExpressionUUID->"3b2995e5-8789-48f5-9d25-f23e389ba4b8",
 CellID->26423590],
Cell[8676, 222, 218, 5, 26, "Output",ExpressionUUID->"7ecf3eed-1d07-49fc-bfa5-550a28283dd9",
 CellID->1923842413]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[8943, 233, 175, 2, 25, "Text",ExpressionUUID->"283d5646-31d0-4660-926f-8a3f625a38d8",
 CellID->1719645848],
Cell[CellGroupData[{
Cell[9143, 239, 742, 16, 47, "Input",ExpressionUUID->"bd96c46d-8514-428c-b224-12944cbe7208",
 CellID->1252846010],
Cell[9888, 257, 168026, 3205, 620, "Output",ExpressionUUID->"32ea6b06-b684-4553-b9e6-c8a1e0f00b63",
 CellID->702946947]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[177963, 3468, 204, 2, 25, "Text",ExpressionUUID->"43f3c9bf-94ad-463f-af1c-f411b135ecda",
 CellID->505731235],
Cell[CellGroupData[{
Cell[178192, 3474, 533, 12, 47, "Input",ExpressionUUID->"2b4c7cc2-985d-4573-b125-54a65c6d4ec5",
 CellID->84591819],
Cell[178728, 3488, 748, 13, 46, "Output",ExpressionUUID->"e4175ae7-f672-4013-8918-5a7ef13ec1a5",
 CellID->1121796082]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[179537, 3508, 182, 2, 42, "Subsection",ExpressionUUID->"ad3d87fc-92f7-4ea2-b4cf-7df310b02254",
 CellID->100527619],
Cell[CellGroupData[{
Cell[179744, 3514, 290, 5, 25, "Text",ExpressionUUID->"083b9cca-e15a-4625-884f-3234bc5df9b0",
 CellID->1645545991],
Cell[CellGroupData[{
Cell[180059, 3523, 2298, 48, 351, "Input",ExpressionUUID->"9e831947-b7a8-4fbe-8c78-6d0137ac30d8",
 CellID->1397064671],
Cell[182360, 3573, 226, 5, 26, "Output",ExpressionUUID->"647363ae-f8b1-460a-b3d5-b4b968e7109e",
 CellID->720447816]
}, Open  ]]
}, Open  ]],
Cell[182613, 3582, 394, 8, 44, "Text",ExpressionUUID->"dec47120-0ccf-4b9e-b30c-81c05c663a25",
 CellID->2027212846],
Cell[CellGroupData[{
Cell[183032, 3594, 209, 2, 25, "Text",ExpressionUUID->"cb555081-4731-4a92-b34a-f04e839536b1",
 CellID->1538243067],
Cell[CellGroupData[{
Cell[183266, 3600, 446, 7, 27, "Input",ExpressionUUID->"2f9169f8-a757-4706-995f-af25e7233772",
 CellID->1843084483],
Cell[183715, 3609, 2946, 81, 160, "Output",ExpressionUUID->"2b87e7d7-5603-4292-b0b6-cbc47030e0bf",
 CellID->1053641726]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[186710, 3696, 204, 2, 25, "Text",ExpressionUUID->"efc35e5d-83c6-483f-a146-22ddaad7f592",
 CellID->1416781453],
Cell[CellGroupData[{
Cell[186939, 3702, 623, 14, 47, "Input",ExpressionUUID->"f27292ae-35a2-4da9-b7c0-f55f081a6b98",
 CellID->547202635],
Cell[187565, 3718, 57537, 1077, 262, "Output",ExpressionUUID->"c358d0f3-5903-498f-b1ba-bf14aa6d907e",
 CellID->406335720]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[245151, 4801, 255, 5, 25, "Text",ExpressionUUID->"62ea23fd-8c10-4ada-be10-c7737923c4a7",
 CellID->1309709991],
Cell[CellGroupData[{
Cell[245431, 4810, 1217, 29, 142, "Input",ExpressionUUID->"d53abdfe-00e7-439a-9cc6-fe673c951157",
 CellID->588436987],
Cell[246651, 4841, 227, 5, 26, "Output",ExpressionUUID->"6310dd45-9651-4df2-857f-6b6793cd8f88",
 CellID->1352809056]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[246939, 4853, 169, 2, 42, "Subsection",ExpressionUUID->"08ae5493-e708-4d11-99a0-310f15719b8c",
 CellID->698246074],
Cell[CellGroupData[{
Cell[247133, 4859, 321, 8, 25, "Text",ExpressionUUID->"a7810da6-7e67-4c14-98bd-3a392cda41e8",
 CellID->1571118510],
Cell[CellGroupData[{
Cell[247479, 4871, 533, 11, 47, "Input",ExpressionUUID->"3d580f54-e74c-48de-80f8-14db39f6b461",
 CellID->329874058],
Cell[248015, 4884, 19138, 561, 1583, "Output",ExpressionUUID->"80850e81-13f6-4076-8414-a76d157cf8d6",
 CellID->1252433403]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[267214, 5452, 169, 2, 42, "Subsection",ExpressionUUID->"d16ae009-a782-4d07-b855-107ca27ee45e",
 CellID->1537999899],
Cell[CellGroupData[{
Cell[267408, 5458, 408, 7, 25, "Text",ExpressionUUID->"a1f149a4-95a1-4e81-ba24-4976b148fb36",
 CellID->2051127201],
Cell[CellGroupData[{
Cell[267841, 5469, 2512, 58, 313, "Input",ExpressionUUID->"274f52bb-0b0f-4b6c-917c-622ab5eb32c2",
 CellID->1887365563],
Cell[270356, 5529, 349163, 7373, 1233, "Output",ExpressionUUID->"7d9c801c-20dc-43cc-9be6-bd0511cc6f70",
 CellID->13496327]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[619568, 12908, 299, 6, 25, "Text",ExpressionUUID->"6926151f-b664-4af2-ac14-8775e014f988",
 CellID->472067504],
Cell[CellGroupData[{
Cell[619892, 12918, 2157, 49, 294, "Input",ExpressionUUID->"4fa8a4c3-f5de-4413-9b70-5ecdc0a6ee4f",
 CellID->1233947710],
Cell[622052, 12969, 188872, 4455, 940, "Output",ExpressionUUID->"737a7057-e98b-482f-9444-fddcebdb8a27",
 CellID->1346984954]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[810997, 17432, 234, 3, 45, "Section",ExpressionUUID->"256d61a5-fb09-4dc6-b313-0678359e2b05",
 CellID->709582891],
Cell[811234, 17437, 409, 10, 25, "Text",ExpressionUUID->"4a1a6cfb-cf88-4068-88a7-470522a2ff19",
 CellID->982957246],
Cell[CellGroupData[{
Cell[811668, 17451, 173, 2, 42, "Subsection",ExpressionUUID->"11e23c77-795d-4004-8edf-1021616593ba",
 CellID->2118220798],
Cell[811844, 17455, 302, 6, 25, "Text",ExpressionUUID->"5a1d782f-fae6-4436-a08a-855fca45fe75",
 CellID->2100535667],
Cell[CellGroupData[{
Cell[812171, 17465, 235, 4, 25, "Text",ExpressionUUID->"e44db1d9-53fa-4570-81a3-054f7fc2548a",
 CellID->1219282236],
Cell[812409, 17471, 303, 7, 58, "Program",ExpressionUUID->"008239f8-af87-4f91-8ec3-26267554c263",
 CellID->1187580778]
}, Open  ]],
Cell[CellGroupData[{
Cell[812749, 17483, 179, 2, 43, "Subsubsection",ExpressionUUID->"79be6e80-bc7c-4f8d-8981-1e24b8c6c0dd",
 CellID->957120628],
Cell[812931, 17487, 1342, 24, 104, "Input",ExpressionUUID->"4b854713-9c7b-4e1a-b0d0-b4008434d234",
 CellID->1673878766],
Cell[814276, 17513, 1494, 26, 161, "Input",ExpressionUUID->"b2178cb1-1aba-4d39-a7ec-3781e6e6d37a",
 CellID->844644462],
Cell[815773, 17541, 583, 13, 27, "Input",ExpressionUUID->"b321554e-ae50-430e-83f1-7c17a2d4dc2b",
 CellID->1072566164],
Cell[816359, 17556, 415, 10, 27, "Input",ExpressionUUID->"4cc492a1-a734-40df-a667-02ec39e0b1a5",
 CellID->641785430],
Cell[816777, 17568, 1123, 21, 104, "Input",ExpressionUUID->"0a8dca84-13a0-485d-84f9-fba58579da7f",
 CellID->1824846776]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[817949, 17595, 281, 4, 42, "Subsection",ExpressionUUID->"6dd403f1-4914-4709-a433-33e72edaeaba",
 CellID->1985801425],
Cell[CellGroupData[{
Cell[818255, 17603, 254, 5, 25, "Text",ExpressionUUID->"60998898-d82c-474c-bf72-127f36ed41aa",
 CellID->1321191948],
Cell[CellGroupData[{
Cell[818534, 17612, 520, 11, 85, "Input",ExpressionUUID->"39dd952f-2e8e-4123-b77f-1276c49dcd31",
 CellID->292160056],
Cell[819057, 17625, 922, 20, 103, "Output",ExpressionUUID->"0a9a643b-2443-4ca8-931a-f82b9e9d65bf",
 CellID->3515204]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[820028, 17651, 241, 4, 25, "Text",ExpressionUUID->"ce4f13f1-f9dd-4747-87ba-3d35e308da5e",
 CellID->1186444150],
Cell[820272, 17657, 626, 14, 47, "Input",ExpressionUUID->"94624c74-b7a0-461e-9e9a-2b3b714eb91a",
 CellID->1181166655]
}, Open  ]],
Cell[820913, 17674, 358, 8, 25, "Text",ExpressionUUID->"77ef9473-c62b-40f3-aeca-20da148301d0",
 CellID->529137717],
Cell[821274, 17684, 601, 11, 63, "Text",ExpressionUUID->"6e801b1f-54b4-4d42-9d99-bb3fdc88ab21",
 CellID->487827392],
Cell[CellGroupData[{
Cell[821900, 17699, 313, 4, 43, "Subsubsection",ExpressionUUID->"15d34ce1-95aa-4655-9f48-c07151b34d1f",
 CellID->1969896745],
Cell[CellGroupData[{
Cell[822238, 17707, 317, 6, 25, "Text",ExpressionUUID->"dd25997a-f505-440b-b8f2-61ea34723fd5",
 CellID->299207416],
Cell[CellGroupData[{
Cell[822580, 17717, 1902, 38, 142, "Input",ExpressionUUID->"c0fed93a-b4fb-4842-9b40-bd02efd25bc3",
 CellID->1519823085],
Cell[824485, 17757, 281453, 5011, 620, "Output",ExpressionUUID->"418bc317-c967-48c1-966e-6d384a4c9feb",
 CellID->1097975159]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1105987, 22774, 176, 2, 25, "Text",ExpressionUUID->"d7296905-7908-427b-9703-9ac388a75ba8",
 CellID->1496092177],
Cell[CellGroupData[{
Cell[1106188, 22780, 303, 6, 27, "Input",ExpressionUUID->"035899ee-f043-4ac0-ac75-951e867a6f25",
 CellID->2082679763],
Cell[1106494, 22788, 10595, 283, 339, "Output",ExpressionUUID->"8c0f045a-007b-4a90-b628-0e7919591230",
 CellID->341518642]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1117150, 23078, 180, 2, 43, "Subsubsection",ExpressionUUID->"dda96302-35b9-419e-8490-54fae9cb0acf",
 CellID->1762814288],
Cell[CellGroupData[{
Cell[1117355, 23084, 369, 7, 25, "Text",ExpressionUUID->"dedd2245-5822-41f1-8f9f-c1f5809c05cd",
 CellID->935344404],
Cell[CellGroupData[{
Cell[1117749, 23095, 629, 14, 85, "Input",ExpressionUUID->"dda70e13-e450-4d80-bbfd-4d1f1ac6bb34",
 CellID->753101988],
Cell[1118381, 23111, 314, 4, 22, "Print",ExpressionUUID->"472b70f2-05c2-4449-b791-dc8428eb5ae7",
 CellID->1827511310]
}, Open  ]],
Cell[CellGroupData[{
Cell[1118732, 23120, 630, 14, 85, "Input",ExpressionUUID->"eb174d1e-5c39-4559-8094-d2b29cb2ff88",
 CellID->116496898],
Cell[1119365, 23136, 61388, 1157, 620, "Output",ExpressionUUID->"be8bad32-7c64-4e8b-b155-c3a77a34f7e5",
 CellID->1671467776]
}, Open  ]],
Cell[CellGroupData[{
Cell[1180790, 24298, 1846, 38, 142, "Input",ExpressionUUID->"5f155342-ea9f-4057-ad17-1d34d72ea500",
 CellID->1605762269],
Cell[1182639, 24338, 89390, 1711, 620, "Output",ExpressionUUID->"29173184-b1a8-44cb-8c56-c47d28c236d8",
 CellID->1125324825]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1272078, 26055, 224, 3, 25, "Text",ExpressionUUID->"0f5088ae-18e8-4463-9471-9076af7ce3bd",
 CellID->619463234],
Cell[CellGroupData[{
Cell[1272327, 26062, 303, 6, 27, "Input",ExpressionUUID->"f8a0d069-c268-481e-a220-18dd3d018ee2",
 CellID->317853182],
Cell[1272633, 26070, 8576, 225, 357, "Output",ExpressionUUID->"ed05f6a6-5a0c-4231-a5b3-0964b1c894f6",
 CellID->445854646]
}, Open  ]],
Cell[CellGroupData[{
Cell[1281246, 26300, 746, 17, 66, "Input",ExpressionUUID->"5205d424-4dc6-43da-8cd8-6018c5c3a513",
 CellID->1366599785],
Cell[1281995, 26319, 10918, 335, 470, "Output",ExpressionUUID->"62b66441-9add-43dc-9a20-eb99118b3649",
 CellID->908590939]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1292986, 26662, 169, 2, 42, "Subsection",ExpressionUUID->"e045c062-4822-4d30-8ac6-fd34f5c5f478",
 CellID->1104981830],
Cell[CellGroupData[{
Cell[1293180, 26668, 177, 2, 43, "Subsubsection",ExpressionUUID->"b755f914-e6a1-4dc5-abad-c7b8e1196039",
 CellID->2138521201],
Cell[CellGroupData[{
Cell[1293382, 26674, 334, 6, 44, "Text",ExpressionUUID->"b7d0aa66-29dc-488e-9b1d-a47e3c048ee7",
 CellID->1839509015],
Cell[CellGroupData[{
Cell[1293741, 26684, 1594, 38, 104, "Input",ExpressionUUID->"e0ce5a36-12a8-474e-8a83-ed0b23884b70",
 CellID->1453432893],
Cell[1295338, 26724, 38283, 727, 214, "Output",ExpressionUUID->"c36e0f1d-c8c9-4f66-9f93-be312fb33c68",
 CellID->2079181603]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1333682, 27458, 228, 3, 43, "Subsubsection",ExpressionUUID->"ec7445ae-40e0-40d3-86f1-a3555f7c59cc",
 CellID->220148026],
Cell[CellGroupData[{
Cell[1333935, 27465, 415, 7, 44, "Text",ExpressionUUID->"66e35c93-07a8-4c3b-b3d3-0566994a220b",
 CellID->2061032848],
Cell[CellGroupData[{
Cell[1334375, 27476, 1617, 39, 104, "Input",ExpressionUUID->"f1738f7d-b27d-49a2-a309-f8eb1d31039b",
 CellID->867850226],
Cell[1335995, 27517, 11214, 259, 212, "Output",ExpressionUUID->"972d4567-662a-49de-81ca-62a8900798b5",
 CellID->951297637]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1347294, 27785, 172, 2, 45, "Section",ExpressionUUID->"5a42660e-f031-4454-95cf-41dfc718cbfc",
 CellID->249817958],
Cell[1347469, 27789, 218, 3, 25, "Text",ExpressionUUID->"bd819cb5-2961-441e-974f-c61705e5952e",
 CellID->359890221],
Cell[1347690, 27794, 400, 10, 25, "Text",ExpressionUUID->"9b9ba125-9dac-4ab0-b1bf-dba4a49e1d78",
 CellID->1360994395],
Cell[1348093, 27806, 448, 11, 25, "Text",ExpressionUUID->"3d1d0293-9fb0-497a-adac-43bf2d3010f7",
 CellID->1384472568]
}, Open  ]],
Cell[CellGroupData[{
Cell[1348578, 27822, 192, 2, 74, "TutorialMoreAboutSection",ExpressionUUID->"b99b5ced-c4cb-4ec3-8ea7-f8c1f05ecdfb",
 CellID->1466865277],
Cell[1348773, 27826, 108, 1, 24, "TutorialMoreAbout",ExpressionUUID->"f6313308-08ca-46a7-a85f-3cb77e78e876",
 CellID->492442979]
}, Open  ]],
Cell[CellGroupData[{
Cell[1348918, 27832, 127, 1, 74, "RelatedTutorialsSection",ExpressionUUID->"4f8d9882-d436-4299-8639-e6cd8694c43e",
 CellID->87172515],
Cell[1349048, 27835, 179, 2, 24, "RelatedTutorials",ExpressionUUID->"4f615c67-b4ff-43f3-8cf3-623dd28434d8",
 CellID->524612351]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1349276, 27843, 111, 1, 72, "MetadataSection",ExpressionUUID->"0c375b4d-ad6d-410d-96f5-1d55ae795380",
 CellID->1739412322],
Cell[1349390, 27846, 547, 13, 26, "History",ExpressionUUID->"bc98bc9b-a8ab-4bd7-8729-2dd8bf62e48a",
 CellID->608009243],
Cell[CellGroupData[{
Cell[1349962, 27863, 123, 1, 21, "CategorizationSection",ExpressionUUID->"1372ad14-99f6-444f-8958-49c51be7972f",
 CellID->1084154675],
Cell[1350088, 27866, 138, 2, 34, "Categorization",ExpressionUUID->"6314a90d-516e-445d-b182-e520f39f20d6",
 CellID->2136361577],
Cell[1350229, 27870, 160, 2, 34, "Categorization",ExpressionUUID->"252af714-e2d7-4066-8ed1-322a39fd1671",
 CellID->2049930446],
Cell[1350392, 27874, 157, 2, 34, "Categorization",ExpressionUUID->"8b2c3d46-3da2-4e82-9156-7fbd634070af",
 CellID->1100857101],
Cell[1350552, 27878, 221, 5, 34, "Categorization",ExpressionUUID->"dd679f92-f717-4b41-977f-1f197ff58092",
 CellID->1533677602]
}, Open  ]],
Cell[CellGroupData[{
Cell[1350810, 27888, 110, 1, 31, "KeywordsSection",ExpressionUUID->"01e1f4c8-c396-4343-b640-c9509680eb80",
 CellID->273241873],
Cell[1350923, 27891, 187, 2, 20, "Keywords",ExpressionUUID->"85f9e912-62d4-4cd2-9801-7282086f0fa3",
 CellID->1056122225]
}, Open  ]]
}, Open  ]]
}
]
*)

